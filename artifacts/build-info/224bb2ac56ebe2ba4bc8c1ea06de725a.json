{"id":"224bb2ac56ebe2ba4bc8c1ea06de725a","_format":"hh-sol-build-info-1","solcVersion":"0.8.16","solcLongVersion":"0.8.16+commit.07a7930e","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/FathomVault.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\npragma solidity ^0.8.16;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\nimport {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"./Interfaces/IVault.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"./VaultStorage.sol\";\nimport \"./Interfaces/IVaultEvents.sol\";\nimport \"./Interfaces/IAccountant.sol\";\nimport \"./Interfaces/IStrategy.sol\";\nimport \"./Interfaces/IDepositLimitModule.sol\";\nimport \"./Interfaces/IWithdrawLimitModule.sol\";\nimport \"./Interfaces/IFactory.sol\";\nimport \"./Interfaces/IStrategyManager.sol\";\n\n/**\n@title Yearn V3 Vault\n@notice The Yearn VaultV3 is designed as a non-opinionated system to distribute funds of \ndepositors for a specific `asset` into different opportunities (aka Strategies)\nand manage accounting in a robust way.\n*/\n\n// Solidity version of the Vyper contract\ncontract FathomVault is IERC20, IERC20Metadata, AccessControl, IVault, ReentrancyGuard, VaultStorage, IVaultEvents {\n    // solhint-disable not-rely-on-time\n    // solhint-disable function-max-lines\n    // solhint-disable code-complexity\n    // solhint-disable var-name-mixedcase\n\n    using Math for uint256;\n\n    error InvalidAssetDecimals();\n    error ProfitUnlockTimeTooLong();\n    error ERC20InsufficientAllowance();\n    error InsufficientFunds();\n    error ZeroAddress();\n    error ERC20PermitExpired();\n    error ERC20PermitInvalidSignature();\n    error InsufficientShares();\n    error InactiveStrategy();\n    error StrategyIsShutdown();\n    error ExceedDepositLimit();\n    error ZeroValue();\n    error MaxLoss();\n    error InsufficientAssets();\n    error TooMuchLoss();\n    error InvalidAsset();\n    error StrategyAlreadyActive();\n    error StrategyHasDebt();\n    error DebtDidntChange();\n    error StrategyHasUnrealisedLosses();\n    error DebtHigherThanMaxDebt();\n    error UsingModule();\n    error UsingDepositLimit();\n    error CallerIsNotTheFutureRoleManager();\n    error StrategyDebtIsLessThanAssetsNeeded();\n\n    // ERC20 - name of the vault's token\n    string public override name;\n    // ERC20 - symbol of the vault's token\n    string public override symbol;\n\n    // IMMUTABLE\n    // Address of the underlying token used by the vault\n    IERC20 public immutable ASSET;\n    // Token decimals\n    uint256 public immutable DECIMALS;\n    // Factory address\n    address public immutable FACTORY;\n    uint256 public immutable ONE_YEAR = 31556952;\n\n    // Constructor\n    constructor(\n        IERC20 _asset,\n        string memory _name,\n        string memory _symbol,\n        address _roleManager,\n        uint256 _profitMaxUnlockTime,\n        address _strategyManagerAddress\n    ) {\n        ASSET = _asset;\n        DECIMALS = IERC20Metadata(address(_asset)).decimals();\n        if (DECIMALS >= 256) {\n            revert InvalidAssetDecimals();\n        }\n\n        FACTORY = msg.sender;\n        // Must be less than one year for report cycles\n        if (_profitMaxUnlockTime > 31556952) {\n            revert ProfitUnlockTimeTooLong();\n        }\n\n        profitMaxUnlockTime = _profitMaxUnlockTime;\n\n        name = _name;\n        symbol = _symbol;\n        roleManager = _roleManager;\n\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                DOMAIN_TYPE_HASH,\n                keccak256(bytes(_name)), // \"Yearn Vault\" in the example\n                keccak256(bytes(API_VERSION)), // API_VERSION in the example\n                block.chainid, // Current chain ID\n                address(this) // Address of the contract\n            )\n        );\n\n        strategyManager = _strategyManagerAddress;\n    }\n\n    // SHARE MANAGEMENT\n    // ERC20\n    function _spendAllowance(address owner, address spender, uint256 amount) internal {\n        // Unlimited approval does nothing (saves an SSTORE)\n        uint256 currentAllowance = _allowance[owner][spender];\n        if (currentAllowance < amount) {\n            revert ERC20InsufficientAllowance();\n        }\n        _approve(owner, spender, currentAllowance - amount);\n    }\n\n    function _transfer(address sender, address receiver, uint256 amount) internal {\n        uint256 currentBalance = _balanceOf[sender];\n        if (currentBalance < amount) {\n            revert InsufficientFunds();\n        }\n        if (sender == address(0) || receiver == address(0)) {\n            revert ZeroAddress();\n        }\n\n        _balanceOf[sender] = currentBalance - amount;\n        uint256 receiverBalance = _balanceOf[receiver];\n        _balanceOf[receiver] = receiverBalance + amount;\n        emit Transfer(sender, receiver, amount);\n    }\n\n    function _transferFrom(address sender, address receiver, uint256 amount) internal returns (bool) {\n        _spendAllowance(sender, msg.sender, amount);\n        _transfer(sender, receiver, amount);\n        return true;\n    }\n\n    function _approve(address owner, address spender, uint256 amount) internal returns (bool) {\n        if (owner == address(0) || spender == address(0)) {\n            revert ZeroAddress();\n        }\n        _allowance[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n        return true;\n    }\n\n    function _increaseAllowance(address owner, address spender, uint256 amount) internal returns (bool) {\n        uint256 newAllowance = _allowance[owner][spender] + amount;\n        _approve(owner, spender, newAllowance);\n        return true;\n    }\n\n    function _decreaseAllowance(address owner, address spender, uint256 amount) internal returns (bool) {\n        uint256 newAllowance = _allowance[owner][spender] - amount;\n        _approve(owner, spender, newAllowance);\n        return true;\n    }\n\n    function _permit(\n        address owner, \n        address spender, \n        uint256 amount, \n        uint256 deadline, \n        uint8 v, \n        bytes32 r, \n        bytes32 s\n    ) internal returns (bool) {\n        if (owner == address(0)) {\n            revert ZeroAddress();\n        }\n        if (deadline < block.timestamp) {\n            revert ERC20PermitExpired();\n        }\n        uint256 nonce = nonces[owner];\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPE_HASH, owner, spender, amount, nonce, deadline));\n\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                \"\\x19\\x01\",\n                DOMAIN_SEPARATOR,\n                structHash\n            )\n        );\n\n        address recoveredAddress = ecrecover(digest, v, r, s);\n        if (recoveredAddress == address(0) || recoveredAddress != owner) {\n            revert ERC20PermitInvalidSignature();\n        }\n        \n        // Set the allowance to the specified amount\n        _approve(owner, spender, amount);\n\n        // Increase nonce for the owner\n        nonces[owner]++;\n\n        emit Approval(owner, spender, amount);\n        return true;\n    }\n\n    function _burnShares(uint256 shares, address owner) internal {\n        if (_balanceOf[owner] < shares) {\n            revert InsufficientShares();\n        }\n        _balanceOf[owner] -= shares;\n        totalSupplyAmount -= shares;\n        emit Transfer(owner, address(0), shares);\n    }\n\n    // Returns the amount of shares that have been unlocked.\n    // To avoid sudden pricePerShare spikes, profits must be processed \n    // through an unlocking period. The mechanism involves shares to be \n    // minted to the vault which are unlocked gradually over time. Shares \n    // that have been locked are gradually unlocked over profitMaxUnlockTime.\n    function _unlockedShares() internal view returns (uint256) {\n        uint256 _fullProfitUnlockDate = fullProfitUnlockDate;\n        uint256 currUnlockedShares = 0;\n        if (_fullProfitUnlockDate > block.timestamp) {\n            // If we have not fully unlocked, we need to calculate how much has been.\n            currUnlockedShares = profitUnlockingRate * (block.timestamp - lastProfitUpdate) / MAX_BPS_EXTENDED;\n        } else if (_fullProfitUnlockDate != 0) {\n            // All shares have been unlocked\n            currUnlockedShares = _balanceOf[address(this)];\n        }\n        return currUnlockedShares;\n    }\n    \n    // Need to account for the shares issued to the vault that have unlocked.\n    function _totalSupply() internal view returns (uint256) {\n        return totalSupplyAmount - _unlockedShares();\n    }\n\n    // Burns shares that have been unlocked since last update. \n    // In case the full unlocking period has passed, it stops the unlocking.\n    function _burnUnlockedShares() internal {\n        // Get the amount of shares that have unlocked\n        uint256 currUnlockedShares = _unlockedShares();\n        // IF 0 there's nothing to do.\n        if (currUnlockedShares == 0) return;\n        \n        // Only do an SSTORE if necessary\n        if (fullProfitUnlockDate > block.timestamp) {\n            lastProfitUpdate = block.timestamp;\n        }\n        \n        // Burn the shares unlocked.\n        _burnShares(currUnlockedShares, address(this));\n    }\n\n    // Total amount of assets that are in the vault and in the strategies.\n    function _totalAssets() internal view returns (uint256) {\n        return totalIdleAmount + totalDebtAmount;\n    }\n\n    // assets = shares * (total_assets / total_supply) --- (== price_per_share * shares)\n    function _convertToAssets(uint256 shares, Rounding rounding) internal view returns (uint256) {\n        if (shares == type(uint256).max || shares == 0) {\n            return shares;\n        }\n\n        uint256 currentTotalSupply = _totalSupply();\n        // if total_supply is 0, price_per_share is 1\n        if (currentTotalSupply == 0) {\n            return shares;\n        }\n\n        uint256 numerator = shares * _totalAssets();\n        uint256 amount = numerator / currentTotalSupply;\n        if (rounding == Rounding.ROUND_UP && numerator % currentTotalSupply != 0) {\n            amount += 1;\n        }\n\n        return amount;\n    }\n\n    // shares = amount * (total_supply / total_assets) --- (== amount / price_per_share)\n    function _convertToShares(uint256 assets, Rounding rounding) internal view returns (uint256) {\n        if (assets == type(uint256).max || assets == 0) {\n            return assets;\n        }\n\n        uint256 currentTotalSupply = _totalSupply();\n        uint256 currentTotalAssets = _totalAssets();\n        \n        if (currentTotalAssets == 0) {\n            // if total_assets and total_supply is 0, price_per_share is 1\n            if (currentTotalSupply == 0) {\n                return assets;\n            } else {\n                // Else if total_supply > 0 price_per_share is 0\n                return 0;\n            }\n        }\n\n        uint256 numerator = assets * currentTotalSupply;\n        uint256 shares = numerator / currentTotalAssets;\n        if (rounding == Rounding.ROUND_UP && numerator % currentTotalAssets != 0) {\n            shares += 1;\n        }\n\n        return shares;\n    }\n\n    // Used only to approve tokens that are not the type managed by this Vault.\n    // Used to handle non-compliant tokens like USDT\n    function _erc20SafeApprove(address token, address spender, uint256 amount) internal {\n        if (token == address(0) || spender == address(0)) {\n            revert ZeroAddress();\n        }\n        require(IERC20(token).approve(spender, amount), \"approval failed\");\n    }\n\n    // Used only to transfer tokens that are not the type managed by this Vault.\n    // Used to handle non-compliant tokens like USDT\n    function _erc20SafeTransferFrom(address token, address sender, address receiver, uint256 amount) internal {\n        if (token == address(0) || sender == address(0) || receiver == address(0)) {\n            revert ZeroAddress();\n        }\n        require(IERC20(token).transferFrom(sender, receiver, amount), \"transfer failed\");\n    }\n\n    // Used only to send tokens that are not the type managed by this Vault.\n    // Used to handle non-compliant tokens like USDT\n    function _erc20SafeTransfer(address token, address receiver, uint256 amount) internal {\n        if (token == address(0) || receiver == address(0)) {\n            revert ZeroAddress();\n        }\n        require(IERC20(token).transfer(receiver, amount), \"transfer failed\");\n    }\n\n    function _issueShares(uint256 shares, address recipient) internal {\n        if (recipient == address(0)) {\n            revert ZeroAddress();\n        }\n        _balanceOf[recipient] += shares;\n        totalSupplyAmount += shares;\n        emit Transfer(address(0), recipient, shares);\n    }\n\n    // Issues shares that are worth 'amount' in the underlying token (asset).\n    // WARNING: this takes into account that any new assets have been summed \n    // to total_assets (otherwise pps will go down).\n    function _issueSharesForAmount(uint256 amount, address recipient) internal returns (uint256) {\n        if (recipient == address(0)) {\n            revert ZeroAddress();\n        }\n        uint256 currentTotalSupply = _totalSupply();\n        uint256 currentTotalAssets = _totalAssets();\n        uint256 newShares = 0;\n\n        // If no supply PPS = 1.\n        if (currentTotalSupply == 0) {\n            newShares = amount;\n        } else if (currentTotalAssets > amount) {\n            newShares = amount * currentTotalSupply / (currentTotalAssets - amount);\n        } else {\n            // If total_supply > 0 but amount = totalAssets we want to revert because\n            // after first deposit, getting here would mean that the rest of the shares\n            // would be diluted to a price_per_share of 0. Issuing shares would then mean\n            // either the new depositor or the previous depositors will loose money.\n            revert(\"amount too high\");\n        }\n\n        // We don't make the function revert\n        if (newShares == 0) {\n            return 0;\n        }\n\n        _issueShares(newShares, recipient);\n        return newShares;\n    }\n\n\n    // ERC4626\n    function _maxDeposit(address receiver) internal view returns (uint256) {\n        if (receiver == address(this) || receiver == address(0)) {\n            return 0;\n        }\n\n        // If there is a deposit limit module set use that.\n        address currentDepositLimitModule = depositLimitModule;\n        if (currentDepositLimitModule != address(0)) {\n            // Use the deposit limit module logic\n            return IDepositLimitModule(currentDepositLimitModule).availableDepositLimit(receiver);\n        }\n\n        // Else use the standard flow.\n        uint256 currentTotalAssets = _totalAssets();\n        uint256 currentDepositLimit = depositLimit;\n        if (currentTotalAssets >= currentDepositLimit) {\n            return 0;\n        }\n\n        return currentDepositLimit - currentTotalAssets;\n    }\n\n    // @dev Returns the max amount of `asset` an `owner` can withdraw.\n\n    // This will do a full simulation of the withdraw in order to determine\n    // how much is currently liquid and if the `max_loss` would allow for the \n    // tx to not revert.\n\n    // This will track any expected loss to check if the tx will revert, but\n    // not account for it in the amount returned since it is unrealised and \n    // therefore will not be accounted for in the conversion rates.\n\n    // i.e. If we have 100 debt and 10 of unrealised loss, the max we can get\n    // out is 90, but a user of the vault will need to call withdraw with 100\n    // in order to get the full 90 out.\n    function _maxWithdraw(address owner, uint256 _maxLoss, address[] memory _strategies)\n        internal\n        returns (uint256)\n    {\n        // Get the max amount for the owner if fully liquid.\n        uint256 maxAssets = _convertToAssets(_balanceOf[owner], Rounding.ROUND_DOWN);\n\n        // If there is a withdraw limit module use that.\n        if (withdrawLimitModule != address(0)) {\n            uint256 moduleLimit = IWithdrawLimitModule(withdrawLimitModule).availableWithdrawLimit(owner, _maxLoss, _strategies);\n            if (moduleLimit < maxAssets) {\n                maxAssets = moduleLimit;\n            }\n            return maxAssets;\n        }\n\n        // See if we have enough idle to service the withdraw.\n        uint256 currentIdle = totalIdleAmount;\n        if (maxAssets > currentIdle) {\n            // Track how much we can pull.\n            uint256 have = currentIdle;\n            uint256 loss = 0;\n            \n            // Cache the default queue.\n            // If a custom queue was passed, and we don't force the default queue.\n            // Use the custom queue.\n            address[] memory currentStrategies = _strategies.length != 0 && !useDefaultQueue ? _strategies : defaultQueue;\n\n            for (uint256 i = 0; i < currentStrategies.length; i++) {\n                address strategy = currentStrategies[i];\n                // Can't use an invalid strategy.\n                if (strategies[strategy].activation == 0) {\n                    revert InactiveStrategy();\n                }\n\n                // Get the maximum amount the vault would withdraw from the strategy.\n                uint256 toWithdraw = Math.min(\n                    maxAssets - have, // What we still need for the full withdraw\n                    strategies[strategy].currentDebt // The current debt the strategy has.\n                    );\n\n                // Get any unrealised loss for the strategy.\n                uint256 unrealisedLoss = _assessShareOfUnrealisedLosses(strategy, toWithdraw);\n\n                // See if any limit is enforced by the strategy.\n                uint256 strategyLimit = IStrategy(strategy).convertToAssets(\n                    IStrategy(strategy).maxRedeem(address(this))\n                );\n\n                // Adjust accordingly if there is a max withdraw limit.\n                if (strategyLimit < toWithdraw - unrealisedLoss) {\n                    // lower unrealised loss to the proportional to the limit.\n                    unrealisedLoss = (unrealisedLoss * strategyLimit) / toWithdraw;\n                    // Still count the unrealised loss as withdrawable.\n                    toWithdraw = strategyLimit + unrealisedLoss;\n                }\n\n                // If 0 move on to the next strategy.\n                if (toWithdraw == 0) {\n                    continue;\n                }\n\n                // If there would be a loss with a non-maximum `max_loss` value.\n                if (unrealisedLoss > 0 && _maxLoss < MAX_BPS) {\n                    // Check if the loss is greater than the allowed range.\n                    if (loss + unrealisedLoss > (have + toWithdraw) * _maxLoss / MAX_BPS) {\n                        // If so use the amounts up till now.\n                        break;\n                    }\n                }\n\n                // Add to what we can pull.\n                have += toWithdraw;\n\n                // If we have all we need break.\n                if (have >= maxAssets) {\n                    break;\n                }\n\n                // Add any unrealised loss to the total\n                loss += unrealisedLoss;\n            }\n\n            // Update the max after going through the queue.\n            // In case we broke early or exhausted the queue.\n            maxAssets = have;\n        }\n\n        return maxAssets;\n    }\n\n    // Used for `deposit` calls to transfer the amount of `asset` to the vault, \n    // issue the corresponding shares to the `recipient` and update all needed \n    // vault accounting.\n    function _deposit(address sender, address recipient, uint256 assets) internal returns (uint256) {\n        if (shutdown == true) {\n            revert StrategyIsShutdown();\n        }\n        if (assets > _maxDeposit(recipient)) {\n            revert ExceedDepositLimit();\n        }\n\n        // Transfer the tokens to the vault first.\n        ASSET.transferFrom(msg.sender, address(this), assets);\n        // Record the change in total assets.\n        totalIdleAmount += assets;\n\n        // Issue the corresponding shares for assets.\n        uint256 shares = _issueSharesForAmount(assets, recipient);\n        if (shares < 0) {\n            revert ZeroValue();\n        }\n\n        emit Deposit(sender, recipient, assets, shares);\n        return shares;\n    }\n\n    // Used for `mint` calls to issue the corresponding shares to the `recipient`,\n    // transfer the amount of `asset` to the vault, and update all needed vault \n    // accounting.\n    function _mint(address sender, address recipient, uint256 shares) internal returns (uint256) {\n        if (shutdown == true) {\n            revert StrategyIsShutdown();\n        }\n        // Get corresponding amount of assets.\n        uint256 assets = _convertToAssets(shares, Rounding.ROUND_UP);\n\n        if (assets < 0) {\n            revert ZeroValue();\n        }\n        if (assets > _maxDeposit(recipient)) {\n            revert ExceedDepositLimit();\n        }\n\n        // Transfer the tokens to the vault first.\n        ASSET.transferFrom(msg.sender, address(this), assets);\n        // Record the change in total assets.\n        totalIdleAmount += assets;\n\n        // Issue the corresponding shares for assets.\n        _issueShares(shares, recipient); // Assuming _issueShares is defined elsewhere\n\n        emit Deposit(sender, recipient, assets, shares);\n        return assets;\n    }\n\n    // Returns the share of losses that a user would take if withdrawing from this strategy\n    // e.g. if the strategy has unrealised losses for 10% of its current debt and the user \n    // wants to withdraw 1000 tokens, the losses that he will take are 100 token\n    function _assessShareOfUnrealisedLosses(address strategy, uint256 assetsNeeded) internal view returns (uint256) {\n        // Minimum of how much debt the debt should be worth.\n        uint256 strategyCurrentDebt = strategies[strategy].currentDebt;\n        // The actual amount that the debt is currently worth.\n        uint256 vaultShares = IStrategy(strategy).balanceOf(address(this));\n        uint256 strategyAssets = IStrategy(strategy).convertToAssets(vaultShares);\n\n        // If no losses, return 0\n        if (strategyAssets >= strategyCurrentDebt || strategyCurrentDebt == 0) {\n            return 0;\n        }\n\n        // Users will withdraw assets_to_withdraw divided by loss ratio (strategy_assets / strategy_current_debt - 1),\n        // but will only receive assets_to_withdraw.\n        // NOTE: If there are unrealised losses, the user will take his share.\n        uint256 numerator = assetsNeeded * strategyAssets;\n        uint256 lossesUserShare = assetsNeeded - numerator / strategyCurrentDebt;\n\n        // Always round up.\n        if (numerator % strategyCurrentDebt != 0) {\n            lossesUserShare += 1;\n        }\n\n        return lossesUserShare;\n    }\n\n    // This takes the amount denominated in asset and performs a {redeem}\n    // with the corresponding amount of shares.\n    // We use {redeem} to natively take on losses without additional non-4626 standard parameters.\n    function _withdrawFromStrategy(address strategy, uint256 assetsToWithdraw) internal {\n        // Need to get shares since we use redeem to be able to take on losses.\n        uint256 sharesToRedeem = Math.min(\n            IStrategy(strategy).previewWithdraw(assetsToWithdraw), // Use previewWithdraw since it should round up.\n            IStrategy(strategy).balanceOf(address(this)) // And check against our actual balance.\n        );\n\n        // Redeem the shares.\n        IStrategy(strategy).redeem(sharesToRedeem, address(this), address(this));\n    }\n\n    // This will attempt to free up the full amount of assets equivalent to\n    // `shares_to_burn` and transfer them to the `receiver`. If the vault does\n    // not have enough idle funds it will go through any strategies provided by\n    // either the withdrawer or the queue_manager to free up enough funds to \n    // service the request.\n\n    // The vault will attempt to account for any unrealized losses taken on from\n    // strategies since their respective last reports.\n\n    // Any losses realized during the withdraw from a strategy will be passed on\n    // to the user that is redeeming their vault shares.\n    function _redeem(\n        address sender,\n        address receiver,\n        address owner,\n        uint256 assets,\n        uint256 sharesToBurn,\n        uint256 maxLoss,\n        address[] memory _strategies\n    ) internal returns (uint256) {\n        _validateRedeem(receiver, owner, sharesToBurn, maxLoss);\n        _handleAllowance(owner, sender, sharesToBurn);\n        (uint256 requestedAssets, uint256 currTotalIdle) = _withdrawAssets(assets, _strategies);\n        _finalizeRedeem(receiver, owner, sharesToBurn, assets, requestedAssets, currTotalIdle, maxLoss);\n        \n        emit Withdraw(sender, receiver, owner, requestedAssets, sharesToBurn);\n        return requestedAssets;\n    }\n\n    // Validates the state and inputs for the redeem operation.\n    function _validateRedeem(\n        address receiver,\n        address owner,\n        uint256 sharesToBurn,\n        uint256 maxLoss\n    ) internal view {\n        if (receiver == address(0)) {\n            revert ZeroAddress();\n        }\n        if (maxLoss > MAX_BPS) {\n            revert MaxLoss();\n        }\n        if (sharesToBurn <= 0) {\n            revert ZeroValue();\n        }\n        if (_balanceOf[owner] < sharesToBurn) {\n            revert InsufficientShares();\n        }\n    }\n\n    // Handles the allowance check and spending.\n    function _handleAllowance(address owner, address sender, uint256 sharesToBurn) internal {\n        if (sender != owner) {\n            _spendAllowance(owner, sender, sharesToBurn);\n        }\n    }\n\n    // Withdraws assets from strategies as needed and handles unrealized losses.\n    function _withdrawAssets(uint256 assets, address[] memory _strategies) internal returns (uint256, uint256) {\n        // Initialize the state struct\n        WithdrawalState memory state = WithdrawalState({\n            requestedAssets: assets,\n            currTotalIdle: totalIdleAmount,\n            currTotalDebt: totalDebtAmount,\n            assetsNeeded: 0,\n            previousBalance: ASSET.balanceOf(address(this)),\n            unrealisedLossesShare: 0\n        });\n\n        // If there are not enough assets in the Vault contract, we try to free\n        // funds from strategies.\n        if (state.requestedAssets > state.currTotalIdle) {\n            // Cache the default queue.\n            address[] memory currentStrategies = _strategies.length != 0 && !useDefaultQueue ? _strategies : defaultQueue;\n\n            // Withdraw from strategies only what idle doesn't cover.\n            // `assetsNeeded` is the total amount we need to fill the request.\n            state.assetsNeeded = state.requestedAssets - state.currTotalIdle;\n\n            // Assuming _strategies is an array of addresses representing the strategies\n            for (uint i = 0; i < currentStrategies.length; i++) {\n                address strategy = currentStrategies[i];\n                \n                // Make sure we have a valid strategy.\n                if (strategies[strategy].activation == 0) {\n                    revert InactiveStrategy();\n                }\n\n                // How much should the strategy have.\n                uint256 currentDebt = strategies[strategy].currentDebt;\n\n                // What is the max amount to withdraw from this strategy.\n                uint256 assetsToWithdraw = Math.min(state.assetsNeeded, currentDebt);\n\n                // Cache max_withdraw now for use if unrealized loss > 0\n                // Use maxRedeem and convert since we use redeem.\n                uint256 currMaxWithdraw = IStrategy(strategy).convertToAssets(\n                    IStrategy(strategy).maxRedeem(address(this))\n                );\n\n                // CHECK FOR UNREALIZED LOSSES\n                // If unrealised losses > 0, then the user will take the proportional share \n                // and realize it (required to avoid users withdrawing from lossy strategies).\n                // NOTE: strategies need to manage the fact that realising part of the loss can \n                // mean the realisation of 100% of the loss!! (i.e. if for withdrawing 10% of the\n                // strategy it needs to unwind the whole position, generated losses might be bigger)\n                uint256 unrealisedLossesShare = _assessShareOfUnrealisedLosses(strategy, assetsToWithdraw);\n                if (unrealisedLossesShare > 0) {\n                    // If max withdraw is limiting the amount to pull, we need to adjust the portion of \n                    // the unrealized loss the user should take.\n                    if (currMaxWithdraw < assetsToWithdraw - unrealisedLossesShare) {\n                        // How much would we want to withdraw\n                        uint256 wanted = assetsToWithdraw - unrealisedLossesShare;\n                        // Get the proportion of unrealised comparing what we want vs. what we can get\n                        unrealisedLossesShare = unrealisedLossesShare * currMaxWithdraw / wanted;\n                        // Adjust assetsToWithdraw so all future calculations work correctly\n                        assetsToWithdraw = currMaxWithdraw + unrealisedLossesShare;\n                    }\n                    \n                    // User now \"needs\" less assets to be unlocked (as he took some as losses)\n                    assetsToWithdraw -= unrealisedLossesShare;\n                    state.requestedAssets -= unrealisedLossesShare;\n                    // NOTE: done here instead of waiting for regular update of these values \n                    // because it's a rare case (so we can save minor amounts of gas)\n                    state.assetsNeeded -= unrealisedLossesShare;\n                    state.currTotalDebt -= unrealisedLossesShare;\n\n                    // If max withdraw is 0 and unrealised loss is still > 0 then the strategy likely\n                    // realized a 100% loss and we will need to realize that loss before moving on.\n                    if (currMaxWithdraw == 0 && unrealisedLossesShare > 0) {\n                        // Adjust the strategy debt accordingly.\n                        uint256 newDebt = currentDebt - unrealisedLossesShare;\n\n                        // Update strategies storage\n                        strategies[strategy].currentDebt = newDebt;\n\n                        // Log the debt update\n                        emit DebtUpdated(strategy, currentDebt, newDebt);\n                    }\n                }\n\n                // Adjust based on the max withdraw of the strategy.\n                assetsToWithdraw = Math.min(assetsToWithdraw, currMaxWithdraw);\n\n                // Can't withdraw 0.\n                if (assetsToWithdraw == 0) {\n                    continue;\n                }\n\n                // WITHDRAW FROM STRATEGY\n                _withdrawFromStrategy(strategy, assetsToWithdraw);\n                uint256 postBalance = ASSET.balanceOf(address(this));\n                \n                // Always check withdrawn against the real amounts.\n                uint256 withdrawn = postBalance - state.previousBalance;\n                uint256 loss = 0;\n                // Check if we redeemed too much.\n                if (withdrawn > assetsToWithdraw) {\n                    // Make sure we don't underflow in debt updates.\n                    if (withdrawn > currentDebt) {\n                        // Can't withdraw more than our debt.\n                        assetsToWithdraw = currentDebt;\n                    } else {\n                        assetsToWithdraw += withdrawn - assetsToWithdraw;\n                    }\n                // If we have not received what we expected, we consider the difference a loss.\n                } else if (withdrawn < assetsToWithdraw) {\n                    loss = assetsToWithdraw - withdrawn;\n                }\n\n                // NOTE: strategy's debt decreases by the full amount but the total idle increases \n                // by the actual amount only (as the difference is considered lost).\n                state.currTotalIdle += assetsToWithdraw - loss;\n                state.requestedAssets -= loss;\n                state.currTotalDebt -= assetsToWithdraw;\n\n                // Vault will reduce debt because the unrealised loss has been taken by user\n                uint256 _newDebt = currentDebt - (assetsToWithdraw + unrealisedLossesShare);\n\n                // Update strategies storage\n                strategies[strategy].currentDebt = _newDebt;\n                // Log the debt update\n                emit DebtUpdated(strategy, currentDebt, _newDebt);\n\n                // Break if we have enough total idle to serve initial request.\n                if (state.requestedAssets <= state.currTotalIdle) {\n                    break;\n                }\n\n                // We update the previous_balance variable here to save gas in next iteration.\n                state.previousBalance = postBalance;\n\n                // Reduce what we still need. Safe to use assets_to_withdraw \n                // here since it has been checked against requested_assets\n                state.assetsNeeded -= assetsToWithdraw;\n            }\n\n            // If we exhaust the queue and still have insufficient total idle, revert.\n            if (state.currTotalIdle < state.requestedAssets) {\n                revert InsufficientAssets();\n            }\n\n            // Commit memory to storage.\n            totalDebtAmount = state.currTotalDebt;\n        }\n\n        return (state.requestedAssets, state.currTotalIdle);\n    }\n\n    // Finalizes the redeem operation by burning shares and transferring assets.\n    function _finalizeRedeem(\n        address receiver,\n        address owner,\n        uint256 sharesToBurn,\n        uint256 assets,\n        uint256 requestedAssets,\n        uint256 currTotalIdle,\n        uint256 maxLoss\n    ) internal {\n        // Check if there is a loss and a non-default value was set.\n        if (assets > requestedAssets && maxLoss < MAX_BPS) {\n            // Assure the loss is within the allowed range.\n            if (assets - requestedAssets > assets * maxLoss / MAX_BPS) {\n                revert TooMuchLoss();\n            }\n        }\n\n        // First burn the corresponding shares from the redeemer.\n        _burnShares(sharesToBurn, owner);\n        // Commit memory to storage.\n        totalIdleAmount = currTotalIdle - requestedAssets;\n        // Transfer the requested amount to the receiver.\n        _erc20SafeTransfer(address(ASSET), receiver, requestedAssets);\n    }\n\n    // STRATEGY MANAGEMENT\n    function _addStrategy(address newStrategy) internal {\n        // Delegate call to StrategyManager\n        IStrategyManager(strategyManager).addStrategy(newStrategy);\n    }\n\n    function _revokeStrategy(address strategy, bool force) internal {\n        // Delegate call to StrategyManager\n        IStrategyManager(strategyManager).revokeStrategy(strategy, force);\n    }\n\n    // DEBT MANAGEMENT\n    // The vault will re-balance the debt vs target debt. Target debt must be\n    // smaller or equal to strategy's max_debt. This function will compare the \n    // current debt with the target debt and will take funds or deposit new \n    // funds to the strategy. \n\n    // The strategy can require a maximum amount of funds that it wants to receive\n    // to invest. The strategy can also reject freeing funds if they are locked.\n    function _updateDebt(address strategy, uint256 targetDebt) internal returns (uint256) {\n        // How much we want the strategy to have.\n        uint256 newDebt = targetDebt;\n        // How much the strategy currently has.\n        uint256 currentDebt = strategies[strategy].currentDebt;\n\n        // If the vault is shutdown we can only pull funds.\n        if (shutdown == true) {\n            newDebt = 0;\n        }\n\n        if (newDebt == currentDebt) {\n            revert DebtDidntChange();\n        }\n\n        if (currentDebt > newDebt) {\n            // Reduce debt\n            uint256 assetsToWithdraw = currentDebt - newDebt;\n\n            // Respect minimum total idle in vault\n            if (totalIdleAmount + assetsToWithdraw < minimumTotalIdle) {\n                assetsToWithdraw = minimumTotalIdle - totalIdleAmount;\n                // Cant withdraw more than the strategy has.\n                if (assetsToWithdraw > currentDebt) {\n                    assetsToWithdraw = currentDebt;\n                }\n            }\n\n            // Check how much we are able to withdraw.\n            // Use maxRedeem and convert since we use redeem.\n            uint256 withdrawable = IStrategy(strategy).convertToAssets(IStrategy(strategy).maxRedeem(address(this)));\n\n            if (withdrawable <= 0) {\n                revert ZeroValue();\n            }\n\n            // If insufficient withdrawable, withdraw what we can.\n            if (withdrawable < assetsToWithdraw) {\n                assetsToWithdraw = withdrawable;\n            }\n\n            // If there are unrealised losses we don't let the vault reduce its debt until there is a new report\n            uint256 unrealisedLossesShare = _assessShareOfUnrealisedLosses(strategy, assetsToWithdraw);\n            if (unrealisedLossesShare != 0) {\n                revert StrategyHasUnrealisedLosses();\n            }\n\n            // Always check the actual amount withdrawn.\n            uint256 preBalance = ASSET.balanceOf(address(this));\n            _withdrawFromStrategy(strategy, assetsToWithdraw);\n            uint256 postBalance = ASSET.balanceOf(address(this));\n\n            // making sure we are changing idle according to the real result no matter what. \n            // We pull funds with {redeem} so there can be losses or rounding differences.\n            uint256 withdrawn = Math.min(postBalance - preBalance, currentDebt);\n\n            // If we got too much make sure not to increase PPS.\n            if (withdrawn > assetsToWithdraw) {\n                assetsToWithdraw = withdrawn;\n            }\n\n            // Update storage.\n            totalIdleAmount += withdrawn; // actual amount we got.\n            // Amount we tried to withdraw in case of losses\n            totalDebtAmount -= assetsToWithdraw;\n\n            newDebt = currentDebt - assetsToWithdraw;\n        } else {\n            // We are increasing the strategies debt\n\n            // Revert if target_debt cannot be achieved due to configured max_debt for given strategy\n            if (newDebt > strategies[strategy].maxDebt) {\n                revert DebtHigherThanMaxDebt();\n            }\n\n            // Vault is increasing debt with the strategy by sending more funds.\n            uint256 currentMaxDeposit = IStrategy(strategy).maxDeposit(address(this));\n            if (currentMaxDeposit <= 0) {\n                revert ZeroValue();\n            }\n\n            // Deposit the difference between desired and current.\n            uint256 assetsToDeposit = newDebt - currentDebt;\n            if (assetsToDeposit > currentMaxDeposit) {\n                // Deposit as much as possible.\n                assetsToDeposit = currentMaxDeposit;\n            }\n\n            if (totalIdleAmount <= minimumTotalIdle) {\n                revert InsufficientFunds();\n            }\n            uint256 availableIdle = totalIdleAmount - minimumTotalIdle;\n\n            // If insufficient funds to deposit, transfer only what is free.\n            if (assetsToDeposit > availableIdle) {\n                assetsToDeposit = availableIdle;\n            }\n\n            // Can't Deposit 0.\n            if (assetsToDeposit > 0) {\n                // Approve the strategy to pull only what we are giving it.\n                _erc20SafeApprove(address(ASSET), strategy, assetsToDeposit);\n\n                // Always update based on actual amounts deposited.\n                uint256 preBalance = ASSET.balanceOf(address(this));\n                IStrategy(strategy).deposit(assetsToDeposit, address(this));\n                uint256 postBalance = ASSET.balanceOf(address(this));\n\n                // Make sure our approval is always back to 0.\n                _erc20SafeApprove(address(ASSET), strategy, 0);\n\n                // Making sure we are changing according to the real result no \n                // matter what. This will spend more gas but makes it more robust.\n                assetsToDeposit = preBalance - postBalance;\n\n                // Update storage.\n                totalIdleAmount -= assetsToDeposit;\n                totalDebtAmount += assetsToDeposit;\n\n                newDebt = currentDebt + assetsToDeposit;\n            }\n        }\n\n        // Commit memory to storage.\n        strategies[strategy].currentDebt = newDebt;\n\n        emit DebtUpdated(strategy, currentDebt, newDebt);\n        return newDebt;\n    }\n\n    // ACCOUNTING MANAGEMENT\n    // Processing a report means comparing the debt that the strategy has taken \n    // with the current amount of funds it is reporting. If the strategy owes \n    // less than it currently has, it means it has had a profit, else (assets < debt) \n    // it has had a loss.\n\n    // Different strategies might choose different reporting strategies: pessimistic, \n    // only realised P&L, ... The best way to report depends on the strategy.\n\n    // The profit will be distributed following a smooth curve over the vaults \n    // profit_max_unlock_time seconds. Losses will be taken immediately, first from the \n    // profit buffer (avoiding an impact in pps), then will reduce pps.\n\n    // Any applicable fees are charged and distributed during the report as well\n    // to the specified recipients.\n    function _processReport(address strategy) internal returns (uint256, uint256) {\n        // Make sure we have a valid strategy.\n        if (strategies[strategy].activation == 0) {\n            revert InactiveStrategy();\n        }\n\n        // Burn shares that have been unlocked since the last update\n        _burnUnlockedShares();\n\n        (uint256 gain, uint256 loss) = _assessProfitAndLoss(strategy);\n\n        FeeAssessment memory fees = _assessFees(strategy, gain, loss);\n\n        ShareManagement memory shares = _calculateShareManagement(loss, fees.totalFees, fees.protocolFees);\n\n        (uint256 previouslyLockedShares, uint256 newlyLockedShares) = _handleShareBurnsAndIssues(shares, fees, gain, loss, strategy);\n\n        _manageUnlockingOfShares(previouslyLockedShares, newlyLockedShares);\n\n        // Record the report of profit timestamp.\n        strategies[strategy].lastReport = block.timestamp;\n\n        // We have to recalculate the fees paid for cases with an overall loss.\n        emit StrategyReported(\n            strategy,\n            gain,\n            loss,\n            strategies[strategy].currentDebt,\n            _convertToAssets(shares.protocolFeesShares, Rounding.ROUND_DOWN),\n            _convertToAssets(shares.protocolFeesShares + shares.accountantFeesShares, Rounding.ROUND_DOWN),\n            fees.totalRefunds\n        );\n\n        return (gain, loss);\n    }\n\n    // Assess the profit and loss of a strategy.\n    function _assessProfitAndLoss(address strategy) internal view returns (uint256 gain, uint256 loss) {\n        // Vault assesses profits using 4626 compliant interface.\n        // NOTE: It is important that a strategies `convertToAssets` implementation\n        // cannot be manipulated or else the vault could report incorrect gains/losses.\n        uint256 strategyShares = IStrategy(strategy).balanceOf(address(this));\n        // How much the vaults position is worth.\n        uint256 currentTotalAssets = IStrategy(strategy).convertToAssets(strategyShares);\n        // How much the vault had deposited to the strategy.\n        uint256 currentDebt = strategies[strategy].currentDebt;\n\n        uint256 _gain = 0;\n        uint256 _loss = 0;\n\n        // Compare reported assets vs. the current debt.\n        if (currentTotalAssets > currentDebt) {\n            // We have a gain.\n            _gain = currentTotalAssets - currentDebt;\n        } else {\n            // We have a loss.\n            _loss = currentDebt - currentTotalAssets;\n        }\n\n        return (_gain, _loss);\n    }\n\n    // Calculate and distribute any fees and refunds from the strategy's performance.\n    function _assessFees(address strategy, uint256 gain, uint256 loss) internal returns (FeeAssessment memory) {\n        FeeAssessment memory fees;\n\n        // If accountant is not set, fees and refunds remain unchanged.\n        if (accountant != address(0)) {\n            (fees.totalFees, fees.totalRefunds) = IAccountant(accountant).report(strategy, gain, loss);\n\n            // Protocol fees will be 0 if accountant fees are 0.\n            if (fees.totalFees > 0) {\n                uint16 protocolFeeBps;\n                // Get the config for this vault.\n                (protocolFeeBps, fees.protocolFeeRecipient) = IFactory(FACTORY).protocolFeeConfig();\n                \n                if (protocolFeeBps > 0) {\n                    // Protocol fees are a percent of the fees the accountant is charging.\n                    fees.protocolFees = fees.totalFees * uint256(protocolFeeBps) / MAX_BPS;\n                }\n            }\n        }\n\n        return fees;\n    }\n\n    // Calculate share management based on gains, losses, and fees.\n    function _calculateShareManagement(uint256 loss, uint256 totalFees, uint256 protocolFees) internal view returns (ShareManagement memory) {\n        // `shares_to_burn` is derived from amounts that would reduce the vaults PPS.\n        // NOTE: this needs to be done before any pps changes\n        ShareManagement memory shares;\n\n        // Only need to burn shares if there is a loss or fees.\n        if (loss + totalFees > 0) {\n            // The amount of shares we will want to burn to offset losses and fees.\n            shares.sharesToBurn += _convertToShares(loss + totalFees, Rounding.ROUND_UP);\n\n            // Vault calculates the amount of shares to mint as fees before changing totalAssets / totalSupply.\n            if (totalFees > 0) {\n                // Accountant fees are total fees - protocol fees.\n                shares.accountantFeesShares = _convertToShares(totalFees - protocolFees, Rounding.ROUND_DOWN);\n                if (protocolFees > 0) {\n                    shares.protocolFeesShares = _convertToShares(protocolFees, Rounding.ROUND_DOWN);\n                }\n            }\n        }\n\n        return shares;\n    }\n\n    // Handle the burning and issuing of shares based on the strategy's report.\n    function _handleShareBurnsAndIssues(\n        ShareManagement memory shares, \n        FeeAssessment memory fees, \n        uint256 gain, \n        uint256 loss, \n        address strategy\n    ) internal returns (uint256 previouslyLockedShares, uint256 newlyLockedShares) {\n        // Shares to lock is any amounts that would otherwise increase the vaults PPS.\n        uint256 _newlyLockedShares;\n        if (fees.totalRefunds > 0) {\n            // Make sure we have enough approval and enough asset to pull.\n            fees.totalRefunds = Math.min(fees.totalRefunds, Math.min(ASSET.balanceOf(accountant), ASSET.allowance(accountant, address(this))));\n            // Transfer the refunded amount of asset to the vault.\n            _erc20SafeTransferFrom(address(ASSET), accountant, address(this), fees.totalRefunds);\n            // Update storage to increase total assets.\n            totalIdleAmount += fees.totalRefunds;\n        }\n\n        // Record any reported gains.\n        if (gain > 0) {\n            // NOTE: this will increase total_assets\n            strategies[strategy].currentDebt += gain;\n            totalDebtAmount += gain;\n        }\n\n        // Mint anything we are locking to the vault.\n        if (gain + fees.totalRefunds > 0 && profitMaxUnlockTime != 0) {\n            _newlyLockedShares = _issueSharesForAmount(gain + fees.totalRefunds, address(this));\n        }\n\n        // Strategy is reporting a loss\n        if (loss > 0) {\n            strategies[strategy].currentDebt -= loss;\n            totalDebtAmount -= loss;\n        }\n\n        // NOTE: should be precise (no new unlocked shares due to above's burn of shares)\n        // newly_locked_shares have already been minted / transferred to the vault, so they need to be subtracted\n        // no risk of underflow because they have just been minted.\n        uint256 _previouslyLockedShares = _balanceOf[address(this)] - _newlyLockedShares;\n\n        // Now that pps has updated, we can burn the shares we intended to burn as a result of losses/fees.\n        // NOTE: If a value reduction (losses / fees) has occurred, prioritize burning locked profit to avoid\n        // negative impact on price per share. Price per share is reduced only if losses exceed locked value.\n        if (shares.sharesToBurn > 0) {\n            // Cant burn more than the vault owns.\n            shares.sharesToBurn = Math.min(shares.sharesToBurn, _previouslyLockedShares + _newlyLockedShares);\n            _burnShares(shares.sharesToBurn, address(this));\n\n            // We burn first the newly locked shares, then the previously locked shares.\n            uint256 sharesNotToLock = Math.min(shares.sharesToBurn, _newlyLockedShares);\n            // Reduce the amounts to lock by how much we burned\n            _newlyLockedShares -= sharesNotToLock;\n            _previouslyLockedShares -= (shares.sharesToBurn - sharesNotToLock);\n        }\n\n        // Issue shares for fees that were calculated above if applicable.\n        if (shares.accountantFeesShares > 0) {\n            _issueShares(shares.accountantFeesShares, accountant);\n        }\n\n        if (shares.protocolFeesShares > 0) {\n            _issueShares(shares.protocolFeesShares, fees.protocolFeeRecipient);\n        }\n\n        return (_previouslyLockedShares, _newlyLockedShares);\n    }\n\n    // Manage the unlocking of shares over time based on the vault's configuration.\n    function _manageUnlockingOfShares(uint256 previouslyLockedShares, uint256 newlyLockedShares) internal {\n        // Update unlocking rate and time to fully unlocked.\n        uint256 totalLockedShares = previouslyLockedShares + newlyLockedShares;\n        if (totalLockedShares > 0) {\n            uint256 previouslyLockedTime = 0;\n            // Check if we need to account for shares still unlocking.\n            if (fullProfitUnlockDate > block.timestamp) {\n                // There will only be previously locked shares if time remains.\n                // We calculate this here since it will not occur every time we lock shares.\n                previouslyLockedTime = previouslyLockedShares * (fullProfitUnlockDate - block.timestamp);\n            }\n\n            // newProfitLockingPeriod is a weighted average between the remaining time of the previously locked shares and the profitMaxUnlockTime\n            uint256 newProfitLockingPeriod = (previouslyLockedTime + newlyLockedShares * profitMaxUnlockTime) / totalLockedShares;\n            // Calculate how many shares unlock per second.\n            profitUnlockingRate = totalLockedShares * MAX_BPS_EXTENDED / newProfitLockingPeriod;\n            // Calculate how long until the full amount of shares is unlocked.\n            fullProfitUnlockDate = block.timestamp + newProfitLockingPeriod;\n            // Update the last profitable report timestamp.\n            lastProfitUpdate = block.timestamp;\n        } else {\n            // NOTE: only setting this to 0 will turn in the desired effect, no need \n            // to update last_profit_update or full_profit_unlock_date\n            profitUnlockingRate = 0;\n        }\n    }\n\n    // SETTERS\n    // @notice Set the new accountant address.\n    // @param new_accountant The new accountant address.\n    function setAccountant(address newAccountant) external override onlyRole(ACCOUNTANT_MANAGER) {\n        accountant = newAccountant;\n        emit UpdateAccountant(newAccountant);\n    }\n\n    // @notice Set the new default queue array.\n    // @dev Will check each strategy to make sure it is active.\n    // @param new_default_queue The new default queue array.\n    function setDefaultQueue(address[] calldata newDefaultQueue) external override onlyRole(QUEUE_MANAGER) {\n        // Make sure every strategy in the new queue is active.\n        for (uint i = 0; i < newDefaultQueue.length; i++) {\n            address strategy = newDefaultQueue[i];\n            if (strategies[strategy].activation == 0) {\n                revert InactiveStrategy();\n            }\n        }\n        // Save the new queue.\n        defaultQueue = newDefaultQueue;\n        emit UpdateDefaultQueue(newDefaultQueue);\n    }\n\n    // @notice Set a new value for `use_default_queue`.\n    // @dev If set `True` the default queue will always be\n    //  used no matter whats passed in.\n    // @param use_default_queue new value.\n    function setUseDefaultQueue(bool _useDefaultQueue) external override onlyRole(QUEUE_MANAGER) {\n        useDefaultQueue = _useDefaultQueue;\n        emit UpdateUseDefaultQueue(_useDefaultQueue);\n    }\n\n    // @notice Set the new deposit limit.\n    // @dev Can not be changed if a deposit_limit_module\n    //  is set or if shutdown.\n    // @param deposit_limit The new deposit limit.\n    function setDepositLimit(uint256 _depositLimit) external override onlyRole(DEPOSIT_LIMIT_MANAGER) {\n        if (shutdown == true) {\n            revert StrategyIsShutdown();\n        }\n        if (depositLimitModule != address(0)) {\n            revert UsingModule();\n        }\n        depositLimit = _depositLimit;\n        emit UpdateDepositLimit(_depositLimit);\n    }\n\n    // @notice Set a contract to handle the deposit limit.\n    // @dev The default `deposit_limit` will need to be set to\n    //  max uint256 since the module will override it.\n    // @param deposit_limit_module Address of the module.\n    function setDepositLimitModule(address _depositLimitModule) external override onlyRole(DEPOSIT_LIMIT_MANAGER) {\n        if (shutdown == true) {\n            revert StrategyIsShutdown();\n        }\n        if (depositLimit != type(uint256).max) {\n            revert UsingDepositLimit();\n        }\n        depositLimitModule = _depositLimitModule;\n        emit UpdateDepositLimitModule(_depositLimitModule);\n    }\n\n    // @notice Set a contract to handle the withdraw limit.\n    // @dev This will override the default `max_withdraw`.\n    // @param withdraw_limit_module Address of the module.\n    function setWithdrawLimitModule(address _withdrawLimitModule) external override onlyRole(WITHDRAW_LIMIT_MANAGER) {\n        withdrawLimitModule = _withdrawLimitModule;\n        emit UpdateWithdrawLimitModule(_withdrawLimitModule);\n    }\n\n    // @notice Set the new minimum total idle.\n    // @param minimum_total_idle The new minimum total idle.\n    function setMinimumTotalIdle(uint256 _minimumTotalIdle) external override onlyRole(MINIMUM_IDLE_MANAGER) {\n        minimumTotalIdle = _minimumTotalIdle;\n        emit UpdateMinimumTotalIdle(_minimumTotalIdle);\n    }\n\n    // @notice Set the new profit max unlock time.\n    // @dev The time is denominated in seconds and must be less than 1 year.\n    //  We only need to update locking period if setting to 0,\n    //  since the current period will use the old rate and on the next\n    //  report it will be reset with the new unlocking time.\n    \n    //  Setting to 0 will cause any currently locked profit to instantly\n    //  unlock and an immediate increase in the vaults Price Per Share.\n\n    // @param new_profit_max_unlock_time The new profit max unlock time.\n    function setProfitMaxUnlockTime(uint256 _newProfitMaxUnlockTime) external override onlyRole(PROFIT_UNLOCK_MANAGER) {\n        // Must be less than one year for report cycles\n        if (_newProfitMaxUnlockTime > ONE_YEAR) {\n            revert ProfitUnlockTimeTooLong();\n        }\n\n        // If setting to 0 we need to reset any locked values.\n        if (_newProfitMaxUnlockTime == 0) {\n            // Burn any shares the vault still has.\n            _burnShares(_balanceOf[address(this)], address(this));\n            // Reset unlocking variables to 0.\n            profitUnlockingRate = 0;\n            fullProfitUnlockDate = 0;\n        }\n        profitMaxUnlockTime = _newProfitMaxUnlockTime;\n        emit UpdateProfitMaxUnlockTime(_newProfitMaxUnlockTime);\n    }\n\n    // ROLE MANAGEMENT\n\n    // @notice Add a new role to an address.\n    // @dev This will add a new role to the account\n    //  without effecting any of the previously held roles.\n    // @param account The account to add a role to.\n    // @param role The new role to add to account.\n    function addRole(address account, bytes32 role) public override onlyRole(ROLE_MANAGER) {\n        _grantRole(role, account);\n        emit RoleSet(account, role);\n    }\n\n    // @notice Remove a single role from an account.\n    // @dev This will leave all other roles for the \n    //  account unchanged.\n    // @param account The account to remove a Role from.\n    // @param role The Role to remove.\n    function removeRole(address account, bytes32 role) external override onlyRole(ROLE_MANAGER) {\n        _revokeRole(role, account);\n        emit RoleSet(account, role);\n    }\n\n    // @notice Set a role to be open.\n    // @param role The role to set.\n    function setOpenRole(bytes32 role) external override onlyRole(ROLE_MANAGER) {\n        openRoles[role] = true;\n        emit RoleStatusChanged(role, RoleStatusChange.OPENED);\n    }\n\n    // @notice Close a opened role.\n    // @param role The role to close.\n    function closeOpenRole(bytes32 role) external override onlyRole(ROLE_MANAGER) {\n        openRoles[role] = false;\n        emit RoleStatusChanged(role, RoleStatusChange.CLOSED);\n    }\n\n    // @notice Step 1 of 2 in order to transfer the \n    //    role manager to a new address. This will set\n    //    the future_role_manager. Which will then need\n    //    to be accepted by the new manager.\n    // @param role_manager The new role manager address.\n    function transferRoleManager(address newRoleManager) external override onlyRole(ROLE_MANAGER) {\n        futureRoleManager = newRoleManager;\n    }\n\n    // @notice Accept the role manager transfer.\n    function acceptRoleManager() external override {\n        if (msg.sender != futureRoleManager) {\n            revert CallerIsNotTheFutureRoleManager();\n        }\n        roleManager = msg.sender;\n        futureRoleManager = address(0);\n        emit UpdateRoleManager(msg.sender);\n    }\n\n    // VAULT STATUS VIEWS\n\n    // @notice Get the amount of shares that have been unlocked.\n    // @return The amount of shares that are have been unlocked.\n    function unlockedShares() external view override returns (uint256) {\n        return _unlockedShares();\n    }\n\n    // @notice Get the price per share (pps) of the vault.\n    // @dev This value offers limited precision. Integrations that require \n    //    exact precision should use convertToAssets or convertToShares instead.\n    // @return The price per share.\n    function pricePerShare() external view override returns (uint256) {\n        return _convertToAssets(10**DECIMALS, Rounding.ROUND_DOWN);\n    }\n\n    // REPORTING MANAGEMENT\n    \n    // @notice Process the report of a strategy.\n    // @param strategy The strategy to process the report for.\n    // @return The gain and loss of the strategy.\n    function processReport(address strategy) external override onlyRole(REPORTING_MANAGER) nonReentrant returns (uint256, uint256) {\n        return _processReport(strategy);\n    }\n\n    // @notice Used for governance to buy bad debt from the vault.\n    // @dev This should only ever be used in an emergency in place\n    //  of force revoking a strategy in order to not report a loss.\n    //  It allows the DEBT_PURCHASER role to buy the strategies debt\n    //  for an equal amount of `asset`. \n\n    // @param strategy The strategy to buy the debt for\n    // @param amount The amount of debt to buy from the vault.\n    function buyDebt(address strategy, uint256 amount) external override onlyRole(DEBT_PURCHASER) nonReentrant {\n        if (strategies[strategy].activation == 0) {\n            revert InactiveStrategy();\n        }\n\n        // Cache the current debt.\n        uint256 currentDebt = strategies[strategy].currentDebt;\n\n        if (currentDebt <= 0 || amount <= 0) {\n            revert ZeroValue();\n        }\n\n        if (amount > currentDebt) {\n            amount = currentDebt;\n        }\n\n        // We get the proportion of the debt that is being bought and\n        // transfer the equivalent shares. We assume this is being used\n        // due to strategy issues so won't rely on its conversion rates.\n        uint256 shares = IERC20(strategy).balanceOf(address(this)) * amount / currentDebt;\n\n        if (shares <= 0) {\n            revert ZeroValue();\n        }\n\n        _erc20SafeTransferFrom(address(ASSET), msg.sender, address(this), amount);\n\n        // Lower strategy debt\n        strategies[strategy].currentDebt -= amount;\n        // lower total debt\n        totalDebtAmount -= amount;\n        // Increase total idle\n        totalIdleAmount += amount;\n\n        // Log debt change\n        emit DebtUpdated(strategy, currentDebt, currentDebt - amount);\n\n        // Transfer the strategies shares out\n        _erc20SafeTransfer(strategy, msg.sender, shares);\n\n        // Log the debt purchase\n        emit DebtPurchased(strategy, amount);\n    }\n\n    // STRATEGY MANAGEMENT\n\n    // @notice Add a new strategy.\n    // @param new_strategy The new strategy to add.\n    function addStrategy(address newStrategy) external override onlyRole(ADD_STRATEGY_MANAGER) {\n        _addStrategy(newStrategy);\n    }\n\n    // @notice Revoke a strategy.\n    // @param strategy The strategy to revoke.\n    function revokeStrategy(address strategy) external override onlyRole(REVOKE_STRATEGY_MANAGER) {\n        _revokeStrategy(strategy, false);\n    }\n\n    // @notice Force revoke a strategy.\n    // @dev The vault will remove the strategy and write off any debt left \n    //    in it as a loss. This function is a dangerous function as it can force a \n    //    strategy to take a loss. All possible assets should be removed from the \n    //    strategy first via update_debt. If a strategy is removed erroneously it \n    //    can be re-added and the loss will be credited as profit. Fees will apply.\n    // @param strategy The strategy to force revoke.\n    function forceRevokeStrategy(address strategy) external override onlyRole(FORCE_REVOKE_MANAGER) {\n        _revokeStrategy(strategy, true);\n    }\n\n    // DEBT MANAGEMENT\n\n    // @notice Update the max debt for a strategy.\n    // @param strategy The strategy to update the max debt for.\n    // @param new_max_debt The new max debt for the strategy.\n    function updateMaxDebtForStrategy(address strategy, uint256 newMaxDebt) external override onlyRole(MAX_DEBT_MANAGER) {\n        if (strategies[strategy].activation == 0) {\n            revert InactiveStrategy();\n        }\n        strategies[strategy].maxDebt = newMaxDebt;\n        emit UpdatedMaxDebtForStrategy(msg.sender, strategy, newMaxDebt);\n    }\n\n    // @notice Update the debt for a strategy.\n    // @param strategy The strategy to update the debt for.\n    // @param target_debt The target debt for the strategy.\n    // @return The amount of debt added or removed.\n    function updateDebt(address strategy, uint256 targetDebt) external override onlyRole(DEBT_MANAGER) nonReentrant returns (uint256) {\n        return _updateDebt(strategy, targetDebt);\n    }\n\n    // EMERGENCY MANAGEMENT\n\n    // @notice Shutdown the vault.\n    function shutdownVault() external override onlyRole(EMERGENCY_MANAGER) {\n        if (shutdown == true) {\n            revert InactiveStrategy();\n        }\n\n        // Shutdown the vault.\n        shutdown = true;\n\n        // Set deposit limit to 0.\n        if (depositLimitModule != address(0)) {\n            depositLimitModule = address(0);\n            emit UpdateDepositLimitModule(address(0));\n        }\n\n        depositLimit = 0;\n        emit UpdateDepositLimit(0);\n\n        addRole(msg.sender, DEBT_MANAGER);\n        emit Shutdown();\n    }\n\n    // ## SHARE MANAGEMENT ##\n    // ## ERC20 + ERC4626 ##\n\n    // @notice Deposit assets into the vault.\n    // @param assets The amount of assets to deposit.\n    // @param receiver The address to receive the shares.\n    // @return The amount of shares minted.\n    function deposit(uint256 assets, address receiver) external override nonReentrant returns (uint256) {\n        return _deposit(msg.sender, receiver, assets);\n    }\n\n    // @notice Mint shares for the receiver.\n    // @param shares The amount of shares to mint.\n    // @param receiver The address to receive the shares.\n    // @return The amount of assets deposited.\n    function mint(uint256 shares, address receiver) external override nonReentrant returns (uint256) {\n        return _mint(msg.sender, receiver, shares);\n    }\n\n    // @notice Withdraw an amount of asset to `receiver` burning `owner`s shares.\n    // @dev The default behavior is to not allow any loss.\n    // @param assets The amount of asset to withdraw.\n    // @param receiver The address to receive the assets.\n    // @param owner The address who's shares are being burnt.\n    // @param max_loss Optional amount of acceptable loss in Basis Points.\n    // @param strategies Optional array of strategies to withdraw from.\n    // @return The amount of shares actually burnt.\n    function withdraw(\n        uint256 assets,\n        address receiver,\n        address owner,\n        uint256 maxLoss,\n        address[] memory _strategies\n    ) external override nonReentrant returns (uint256) {\n        uint256 shares = _convertToShares(assets, Rounding.ROUND_UP);\n        _redeem(msg.sender, receiver, owner, assets, shares, maxLoss, _strategies);\n        return shares;\n    }\n\n    // @notice Redeems an amount of shares of `owners` shares sending funds to `receiver`.\n    // @dev The default behavior is to allow losses to be realized.\n    // @param shares The amount of shares to burn.\n    // @param receiver The address to receive the assets.\n    // @param owner The address who's shares are being burnt.\n    // @param max_loss Optional amount of acceptable loss in Basis Points.\n    // @param strategies Optional array of strategies to withdraw from.\n    // @return The amount of assets actually withdrawn.\n    function redeem(\n        uint256 shares,\n        address receiver,\n        address owner,\n        uint256 maxLoss,\n        address[] memory _strategies\n    ) external override nonReentrant returns (uint256) {\n        uint256 assets = _convertToAssets(shares, Rounding.ROUND_DOWN);\n        // Always return the actual amount of assets withdrawn.\n        return _redeem(msg.sender, receiver, owner, assets, shares, maxLoss, _strategies);\n    }\n\n    // @notice Approve an address to spend the vault's shares.\n    // @param spender The address to approve.\n    // @param amount The amount of shares to approve.\n    // @return True if the approval was successful.\n    function approve(address spender, uint256 amount) external override returns (bool) {\n        return _approve(msg.sender, spender, amount);\n    }\n\n    // @notice Transfer shares to a receiver.\n    // @param receiver The address to transfer shares to.\n    // @param amount The amount of shares to transfer.\n    // @return True if the transfer was successful.\n    function transfer(address receiver, uint256 amount) external override returns (bool) {\n        if (receiver == address(this) || receiver == address(0)) {\n            revert ZeroAddress();\n        }\n        _transfer(msg.sender, receiver, amount);\n        return true;\n    }\n\n    // @notice Transfer shares from a sender to a receiver.\n    // @param sender The address to transfer shares from.\n    // @param receiver The address to transfer shares to.\n    // @param amount The amount of shares to transfer.\n    // @return True if the transfer was successful.\n    function transferFrom(address sender, address receiver, uint256 amount) external override returns (bool) {\n        if (receiver == address(this) || receiver == address(0)) {\n            revert ZeroAddress();\n        }\n        return _transferFrom(sender, receiver, amount);\n    }\n\n    // ## ERC20+4626 compatibility\n\n    // @notice Increase the allowance for a spender.\n    // @param spender The address to increase the allowance for.\n    // @param amount The amount to increase the allowance by.\n    // @return True if the increase was successful.\n    function increaseAllowance(address spender, uint256 amount) external override returns (bool) {\n        return _increaseAllowance(msg.sender, spender, amount);\n    }\n\n    // @notice Decrease the allowance for a spender.\n    // @param spender The address to decrease the allowance for.\n    // @param amount The amount to decrease the allowance by.\n    // @return True if the decrease was successful.\n    function decreaseAllowance(address spender, uint256 amount) external override returns (bool) {\n        return _decreaseAllowance(msg.sender, spender, amount);\n    }\n\n    // @notice Approve an address to spend the vault's shares.\n    // @param owner The address to approve.\n    // @param spender The address to approve.\n    // @param amount The amount of shares to approve.\n    // @param deadline The deadline for the permit.\n    // @param v The v component of the signature.\n    // @param r The r component of the signature.\n    // @param s The s component of the signature.\n    // @return True if the approval was successful.\n    function permit(\n        address owner,\n        address spender,\n        uint256 amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external override returns (bool) {\n        return _permit(owner, spender, amount, deadline, v, r, s);\n    }\n\n    // @notice Get the balance of a user.\n    // @param addr The address to get the balance of.\n    // @return The balance of the user.\n    function balanceOf(address addr) external view override returns (uint256) {\n        if(addr == address(this)) {\n            return _balanceOf[addr] - _unlockedShares();\n        }\n        return _balanceOf[addr];\n    }\n\n    // @notice Get the total supply of shares.\n    // @return The total supply of shares.\n    function totalSupply() external view override(IERC20, IVault) returns (uint256) {\n        return _totalSupply();\n    }\n\n    // @notice Get the address of the asset.\n    // @return The address of the asset.\n    function asset() external view override returns (address) {\n        return address(ASSET);\n    }\n\n    // @notice Get the number of decimals of the asset/share.\n    // @return The number of decimals of the asset/share.\n    function decimals() external view override returns (uint8) {\n        return uint8(DECIMALS);\n    }\n\n    // @notice Get the total assets held by the vault.\n    // @return The total assets held by the vault.\n    function totalAssets() external view override returns (uint256) {\n        return _totalAssets();\n    }\n\n    // @notice Convert an amount of assets to shares.\n    // @param assets The amount of assets to convert.\n    // @return The amount of shares.\n    function convertToShares(uint256 assets) external view override returns (uint256) {\n        return _convertToShares(assets, Rounding.ROUND_DOWN);\n    }\n\n    // @notice Preview the amount of shares that would be minted for a deposit.\n    // @param assets The amount of assets to deposit.\n    // @return The amount of shares that would be minted.\n    function previewDeposit(uint256 assets) external view override returns (uint256) {\n        return _convertToShares(assets, Rounding.ROUND_DOWN);\n    }\n\n    // @notice Preview the amount of assets that would be deposited for a mint.\n    // @param shares The amount of shares to mint.\n    // @return The amount of assets that would be deposited.\n    function previewMint(uint256 shares) external view override returns (uint256) {\n        return _convertToAssets(shares, Rounding.ROUND_UP);\n    }\n\n    // @notice Convert an amount of shares to assets.\n    // @param shares The amount of shares to convert.\n    // @return The amount of assets.\n    function convertToAssets(uint256 shares) external view override returns (uint256) {\n        return _convertToAssets(shares, Rounding.ROUND_DOWN);\n    }\n\n    // @notice Get the maximum amount of assets that can be deposited.\n    // @param receiver The address that will receive the shares.\n    // @return The maximum amount of assets that can be deposited.\n    function maxDeposit(address receiver) external view override returns (uint256) {\n        return _maxDeposit(receiver);\n    }\n\n    // @notice Get the maximum amount of shares that can be minted.\n    // @param receiver The address that will receive the shares.\n    // @return The maximum amount of shares that can be minted.\n    function maxMint(address receiver) external view override returns (uint256) {\n        uint256 maxDepositAmount = _maxDeposit(receiver);\n        return _convertToShares(maxDepositAmount, Rounding.ROUND_DOWN);\n    }\n\n    // @notice Get the maximum amount of assets that can be withdrawn.\n    // @dev Complies to normal 4626 interface and takes custom params.\n    // @param owner The address that owns the shares.\n    // @param max_loss Custom max_loss if any.\n    // @param strategies Custom strategies queue if any.\n    // @return The maximum amount of assets that can be withdrawn.\n    function maxWithdraw(address owner, uint256 maxLoss, address[] memory _strategies) external override returns (uint256) {\n        return _maxWithdraw(owner, maxLoss, _strategies);\n    }\n\n    // @notice Get the maximum amount of shares that can be redeemed.\n    // @dev Complies to normal 4626 interface and takes custom params.\n    // @param owner The address that owns the shares.\n    // @param max_loss Custom max_loss if any.\n    // @param strategies Custom strategies queue if any.\n    // @return The maximum amount of shares that can be redeemed.\n    function maxRedeem(address owner, uint256 maxLoss, address[] memory _strategies) external override returns (uint256) {\n        uint256 maxWithdrawAmount = _maxWithdraw(owner, maxLoss, _strategies);\n        uint256 sharesEquivalent = _convertToShares(maxWithdrawAmount, Rounding.ROUND_UP);\n        return Math.min(sharesEquivalent, _balanceOf[owner]);\n    }\n\n    // @notice Preview the amount of shares that would be redeemed for a withdraw.\n    // @param assets The amount of assets to withdraw.\n    // @return The amount of shares that would be redeemed.\n    function previewWithdraw(uint256 assets) external view override returns (uint256) {\n        return _convertToShares(assets, Rounding.ROUND_UP);\n    }\n\n    // @notice Preview the amount of assets that would be withdrawn for a redeem.\n    // @param shares The amount of shares to redeem.\n    // @return The amount of assets that would be withdrawn.\n    function previewRedeem(uint256 shares) external view override returns (uint256) {\n        return _convertToAssets(shares, Rounding.ROUND_DOWN);\n    }\n\n    // @notice Assess the share of unrealised losses that a strategy has.\n    // @param strategy The address of the strategy.\n    // @param assets_needed The amount of assets needed to be withdrawn.\n    // @return The share of unrealised losses that the strategy has.\n    function assessShareOfUnrealisedLosses(address strategy, uint256 assetsNeeded) external view override returns (uint256) {\n        // Assuming strategies mapping and _assess_share_of_unrealised_losses are defined\n        if (strategies[strategy].currentDebt < assetsNeeded) {\n            revert StrategyDebtIsLessThanAssetsNeeded();\n        }\n        return _assessShareOfUnrealisedLosses(strategy, assetsNeeded);\n    }\n\n    function allowance(address owner, address spender) external view override returns (uint256) {\n        return _allowance[owner][spender];\n    }\n\n    // # eip-1344\n\n    // EIP-712 domain separator\n    function domainSeparator() internal view returns (bytes32) {\n        return keccak256(abi.encode(\n            DOMAIN_TYPE_HASH,\n            keccak256(\"Yearn Vault\"),\n            keccak256(bytes(API_VERSION)),\n            block.chainid,\n            address(this)\n        ));\n    }\n}"},"contracts/Interfaces/IAccountant.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.16;\n\ninterface IAccountant {\n    function report(address strategy, uint256 gain, uint256 loss) external returns (uint256, uint256);\n}"},"contracts/Interfaces/IDepositLimitModule.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.16;\n\ninterface IDepositLimitModule {\n    function availableDepositLimit(address receiver) external view returns (uint256);\n}"},"contracts/Interfaces/IERC4626.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC4626.sol)\n\npragma solidity ^0.8.16;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\n\n/**\n * @dev Interface of the ERC4626 \"Tokenized Vault Standard\", as defined in\n * https://eips.ethereum.org/EIPS/eip-4626[ERC-4626].\n *\n * _Available since v4.7._\n */\ninterface IERC4626 is IERC20, IERC20Metadata {\n    // solhint-disable ordering\n    // solhint-disable max-line-length\n    event Deposit(address indexed sender, address indexed owner, uint256 assets, uint256 shares);\n\n    event Withdraw(\n        address indexed sender,\n        address indexed receiver,\n        address indexed owner,\n        uint256 assets,\n        uint256 shares\n    );\n\n    /**\n     * @dev Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing.\n     *\n     * - MUST be an ERC-20 token contract.\n     * - MUST NOT revert.\n     */\n    function asset() external view returns (address assetTokenAddress);\n\n    /**\n     * @dev Returns the total amount of the underlying asset that is “managed” by Vault.\n     *\n     * - SHOULD include any compounding that occurs from yield.\n     * - MUST be inclusive of any fees that are charged against assets in the Vault.\n     * - MUST NOT revert.\n     */\n    function totalAssets() external view returns (uint256 totalManagedAssets);\n\n    /**\n     * @dev Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal\n     * scenario where all the conditions are met.\n     *\n     * - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n     * - MUST NOT show any variations depending on the caller.\n     * - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n     * - MUST NOT revert.\n     *\n     * NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n     * “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n     * from.\n     */\n    function convertToShares(uint256 assets) external view returns (uint256 shares);\n\n    /**\n     * @dev Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal\n     * scenario where all the conditions are met.\n     *\n     * - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n     * - MUST NOT show any variations depending on the caller.\n     * - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n     * - MUST NOT revert.\n     *\n     * NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n     * “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n     * from.\n     */\n    function convertToAssets(uint256 shares) external view returns (uint256 assets);\n\n    /**\n     * @dev Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver,\n     * through a deposit call.\n     *\n     * - MUST return a limited value if receiver is subject to some deposit limit.\n     * - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited.\n     * - MUST NOT revert.\n     */\n    function maxDeposit(address receiver) external view returns (uint256 maxAssets);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given\n     * current on-chain conditions.\n     *\n     * - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit\n     *   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called\n     *   in the same transaction.\n     * - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the\n     *   deposit would be accepted, regardless if the user has enough tokens approved, etc.\n     * - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by depositing.\n     */\n    function previewDeposit(uint256 assets) external view returns (uint256 shares);\n\n    /**\n     * @dev Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens.\n     *\n     * - MUST emit the Deposit event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n     *   deposit execution, and are accounted for during deposit.\n     * - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not\n     *   approving enough underlying tokens to the Vault contract, etc).\n     *\n     * NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token.\n     */\n    function deposit(uint256 assets, address receiver) external returns (uint256 shares);\n\n    /**\n     * @dev Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call.\n     * - MUST return a limited value if receiver is subject to some mint limit.\n     * - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted.\n     * - MUST NOT revert.\n     */\n    function maxMint(address receiver) external view returns (uint256 maxShares);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given\n     * current on-chain conditions.\n     *\n     * - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call\n     *   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the\n     *   same transaction.\n     * - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint\n     *   would be accepted, regardless if the user has enough tokens approved, etc.\n     * - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by minting.\n     */\n    function previewMint(uint256 shares) external view returns (uint256 assets);\n\n    /**\n     * @dev Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens.\n     *\n     * - MUST emit the Deposit event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint\n     *   execution, and are accounted for during mint.\n     * - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not\n     *   approving enough underlying tokens to the Vault contract, etc).\n     *\n     * NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token.\n     */\n    function mint(uint256 shares, address receiver) external returns (uint256 assets);\n\n    /**\n     * @dev Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the\n     * Vault, through a withdraw call.\n     *\n     * - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n     * - MUST NOT revert.\n     */\n    function maxWithdraw(address owner, uint256 maxLoss, address[] memory strategies) external returns (uint256 maxAssets);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block,\n     * given current on-chain conditions.\n     *\n     * - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw\n     *   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if\n     *   called\n     *   in the same transaction.\n     * - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though\n     *   the withdrawal would be accepted, regardless if the user has enough shares, etc.\n     * - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by depositing.\n     */\n    function previewWithdraw(uint256 assets) external view returns (uint256 shares);\n\n    /**\n     * @dev Burns shares from owner and sends exactly assets of underlying tokens to receiver.\n     *\n     * - MUST emit the Withdraw event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n     *   withdraw execution, and are accounted for during withdraw.\n     * - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner\n     *   not having enough shares, etc).\n     *\n     * Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n     * Those methods should be performed separately.\n     */\n    function withdraw(uint256 assets, address receiver, address owner, uint256 maxLoss, address[] memory strategies) external returns (uint256 shares);\n\n    /**\n     * @dev Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault,\n     * through a redeem call.\n     *\n     * - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n     * - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock.\n     * - MUST NOT revert.\n     */\n    function maxRedeem(address owner, uint256 maxLoss, address[] memory strategies) external returns (uint256 maxShares);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block,\n     * given current on-chain conditions.\n     *\n     * - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call\n     *   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the\n     *   same transaction.\n     * - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the\n     *   redemption would be accepted, regardless if the user has enough shares, etc.\n     * - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by redeeming.\n     */\n    function previewRedeem(uint256 shares) external view returns (uint256 assets);\n\n    /**\n     * @dev Burns exactly shares from owner and sends assets of underlying tokens to receiver.\n     *\n     * - MUST emit the Withdraw event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n     *   redeem execution, and are accounted for during redeem.\n     * - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner\n     *   not having enough shares, etc).\n     *\n     * NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n     * Those methods should be performed separately.\n     */\n    function redeem(uint256 shares, address receiver, address owner, uint256 maxLoss, address[] memory strategies) external returns (uint256 assets);\n}"},"contracts/Interfaces/IFactory.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.16;\n\ninterface IFactory {\n    function protocolFeeConfig() external view returns (uint16, address);\n}"},"contracts/Interfaces/ISharesManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.16;\n\nimport \"../VaultStructs.sol\";\n\ninterface ISharesManager {\n    // solhint-disable max-line-length\n    // solhint-disable ordering\n\n    function spendAllowance(address owner, address spender, uint256 amount) external;\n    function transfer(address sender, address receiver, uint256 amount) external;\n    function transferFrom(address sender, address receiver, uint256 amount) external returns (bool);\n    function approve(address owner, address spender, uint256 amount) external returns (bool);\n    function increaseAllowance(address owner, address spender, uint256 amount) external returns (bool);\n    function decreaseAllowance(address owner, address spender, uint256 amount) external returns (bool);\n    function permit(address owner, address spender, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s) external returns (bool);\n    function burnShares(uint256 shares, address owner) external;\n    function unlockedShares() external view returns (uint256);\n    function totalSupply() external view returns (uint256);\n    function burnUnlockedShares() external;\n    function totalAssets() external view returns (uint256);\n    function convertToAssets(uint256 shares, Rounding rounding) external view returns (uint256);\n    function convertToShares(uint256 assets, Rounding rounding) external view returns (uint256);\n    function erc20SafeApprove(address token, address spender, uint256 amount) external;\n    function erc20SafeTransferFrom(address token, address sender, address receiver, uint256 amount) external;\n    function erc20SafeTransfer(address token, address receiver, uint256 amount) external;\n    function issueShares(uint256 shares, address recipient) external;\n    function issueSharesForAmount(uint256 amount, address recipient) external returns (uint256);\n    function maxDeposit(address receiver) external view returns (uint256);\n    function maxWithdraw(address owner, uint256 _maxLoss, address[] memory _strategies) external returns (uint256);\n    function deposit(address sender, address recipient, uint256 assets) external returns (uint256);\n    function mint(address sender, address recipient, uint256 shares) external returns (uint256);\n    function assessShareOfUnrealisedLosses(address strategy, uint256 assetsNeeded) external view returns (uint256);\n    function withdrawFromStrategy(address strategy, uint256 assetsToWithdraw) external;\n    function redeem(address sender, address receiver, address owner, uint256 assets, uint256 sharesToBurn, uint256 maxLoss, address[] memory _strategies) external returns (uint256);\n    function validateRedeem(address receiver, address owner, uint256 sharesToBurn, uint256 maxLoss) external view;\n    function handleAllowance(address owner, address sender, uint256 sharesToBurn) external;\n    function withdrawAssets(uint256 assets, address[] memory _strategies) external returns (uint256, uint256);\n    function finalizeRedeem(address receiver, address owner, uint256 sharesToBurn, uint256 assets, uint256 requestedAssets, uint256 currTotalIdle, uint256 maxLoss) external;\n\n\n}"},"contracts/Interfaces/IStrategy.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.16;\n\ninterface IStrategy {\n    function redeem(uint256 shares, address receiver, address owner) external returns (uint256);\n    function deposit(uint256 assets, address receiver) external returns (uint256);\n    function asset() external view returns (address);\n    function balanceOf(address owner) external view returns (uint256);\n    function maxDeposit(address receiver) external view returns (uint256);\n    function totalAssets() external view returns (uint256);\n    function convertToAssets(uint256 shares) external view returns (uint256);\n    function convertToShares(uint256 assets) external view returns (uint256);\n    function previewWithdraw(uint256 assets) external view returns (uint256);\n    function maxRedeem(address owner) external view returns (uint256);\n}"},"contracts/Interfaces/IStrategyManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.16;\n\ninterface IStrategyManager {\n    function addStrategy(address newStrategy) external;\n    function revokeStrategy(address strategy, bool force) external;\n}"},"contracts/Interfaces/IVault.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.16;\n\nimport {IERC4626} from \"./IERC4626.sol\";\nimport \"../VaultStructs.sol\";\n\ninterface IVault is IERC4626 {\n    function setAccountant(address newAccountant) external;\n\n    function setDefaultQueue(address[] memory newDefaultQueue) external;\n\n    function setUseDefaultQueue(bool) external;\n\n    function setDepositLimit(uint256 depositLimit) external;\n\n    function setDepositLimitModule(\n        address newDepositLimitModule\n    ) external;\n\n    function setWithdrawLimitModule(\n        address newWithdrawLimitModule\n    ) external;\n\n    function setMinimumTotalIdle(uint256 minimumTotalIdle) external;\n\n    function setProfitMaxUnlockTime(\n        uint256 newProfitMaxUnlockTime\n    ) external;\n\n    function addRole(address account, bytes32 role) external;\n\n    function removeRole(address account, bytes32 role) external;\n\n    function setOpenRole(bytes32 role) external;\n\n    function closeOpenRole(bytes32 role) external;\n\n    function transferRoleManager(address roleManager) external;\n\n    function acceptRoleManager() external;\n\n    function processReport(\n        address strategy\n    ) external returns (uint256, uint256);\n\n    function buyDebt(address strategy, uint256 amount) external;\n\n    function addStrategy(address newStrategy) external;\n\n    function revokeStrategy(address strategy) external;\n\n    function forceRevokeStrategy(address strategy) external;\n\n    function updateMaxDebtForStrategy(\n        address strategy,\n        uint256 newMaxDebt\n    ) external;\n\n    function updateDebt(\n        address strategy,\n        uint256 targetDebt\n    ) external returns (uint256);\n\n    function shutdownVault() external;\n\n    //// NON-STANDARD ERC-4626 FUNCTIONS \\\\\\\\\n\n    function withdraw(\n        uint256 assets,\n        address receiver,\n        address owner,\n        uint256 maxLoss,\n        address[] memory strategies\n    ) external returns (uint256);\n\n    function redeem(\n        uint256 shares,\n        address receiver,\n        address owner,\n        uint256 maxLoss,\n        address[] memory strategies\n    ) external returns (uint256);\n\n    //// NON-STANDARD ERC-20 FUNCTIONS \\\\\\\\\n\n    function increaseAllowance(\n        address spender,\n        uint256 amount\n    ) external returns (bool);\n\n    function decreaseAllowance(\n        address spender,\n        uint256 amount\n    ) external returns (bool);\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external returns (bool);\n\n    function maxWithdraw(\n        address owner,\n        uint256 maxLoss,\n        address[] memory strategies\n    ) external returns (uint256);\n\n    function maxRedeem(\n        address owner,\n        uint256 maxLoss,\n        address[] memory strategies\n    ) external returns (uint256);\n\n    function unlockedShares() external view returns (uint256);\n\n    function pricePerShare() external view returns (uint256);\n\n    function totalSupply() external view returns (uint256);\n\n    function assessShareOfUnrealisedLosses(\n        address strategy,\n        uint256 assetsNeeded\n    ) external view returns (uint256);\n}"},"contracts/Interfaces/IVaultEvents.sol":{"content":"// SPDX-License-Identifier: AGPL 3.0\n// Copyright Fathom 2023\n\npragma solidity ^0.8.16;\n\nimport \"../VaultStructs.sol\";\n\ninterface IVaultEvents {\n    // STRATEGY EVENTS\n    event StrategyChanged(address indexed strategy, StrategyChangeType changeType);\n    event StrategyReported(\n        address indexed strategy,\n        uint256 gain,\n        uint256 loss,\n        uint256 currentDebt,\n        uint256 protocolFees,\n        uint256 totalFees,\n        uint256 totalRefunds\n    );\n    // DEBT MANAGEMENT EVENTS\n    event DebtUpdated(\n        address indexed strategy,\n        uint256 currentDebt,\n        uint256 newDebt\n    );\n    // ROLE UPDATES\n    event RoleSet(address indexed account, bytes32 role);\n    event RoleStatusChanged(bytes32 indexed role, RoleStatusChange indexed status);\n    event UpdateRoleManager(address indexed roleManager);\n\n    event UpdateAccountant(address indexed accountant);\n    event UpdateDefaultQueue(address[] newDefaultQueue);\n    event UpdateUseDefaultQueue(bool useDefaultQueue);\n    event UpdatedMaxDebtForStrategy(\n        address indexed sender,\n        address indexed strategy,\n        uint256 newDebt\n    );\n    event UpdateDepositLimit(uint256 depositLimit);\n    event UpdateMinimumTotalIdle(uint256 minimumTotalIdle);\n    event UpdateProfitMaxUnlockTime(uint256 profitMaxUnlockTime);\n    event DebtPurchased(address indexed strategy, uint256 amount);\n    event Shutdown();\n\n    // STORAGE MANAGEMENT EVENTS\n    event UpdateDepositLimitModule(address indexed depositLimitModule);\n    event UpdateWithdrawLimitModule(address indexed withdrawLimitModule);\n}"},"contracts/Interfaces/IWithdrawLimitModule.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.16;\n\ninterface IWithdrawLimitModule {\n    function availableWithdrawLimit(address owner, uint256 maxLoss, address[] calldata strategies) external returns (uint256);\n}"},"contracts/StrategyManager.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\npragma solidity ^0.8.16;\n\nimport \"./VaultStorage.sol\";\nimport \"./Interfaces/IVaultEvents.sol\";\nimport \"./Interfaces/IStrategyManager.sol\";\nimport \"./Interfaces/IStrategy.sol\";\n\n/**\n@title STRATEGY MANAGEMENT\n*/\n\ncontract StrategyManager is VaultStorage, IVaultEvents, IStrategyManager {\n    // solhint-disable not-rely-on-time\n    // solhint-disable var-name-mixedcase\n\n    error ZeroAddress();\n    error InactiveStrategy();\n    error InvalidAsset();\n    error StrategyAlreadyActive();\n    error StrategyHasDebt();\n\n    // IMMUTABLE\n    // Address of the underlying token used by the vault\n    IERC20 public immutable ASSET;\n\n    constructor(\n        IERC20 _asset\n    ) {\n        ASSET = _asset;\n    }\n\n\n    function addStrategy(address newStrategy) external override {\n        if (newStrategy == address(0) || newStrategy == address(this)) {\n            revert ZeroAddress();\n        }\n        if (IStrategy(newStrategy).asset() != address(ASSET)) {\n            revert InvalidAsset();\n        }\n        if (strategies[newStrategy].activation != 0) {\n            revert StrategyAlreadyActive();\n        }\n\n        // Add the new strategy to the mapping.\n        strategies[newStrategy] = StrategyParams({\n            activation: block.timestamp,\n            lastReport: block.timestamp,\n            currentDebt: 0,\n            maxDebt: 0\n        });\n\n        // If the default queue has space, add the strategy.\n        uint256 defaultQueueLength = defaultQueue.length;\n        if (defaultQueueLength < MAX_QUEUE) {\n            defaultQueue[defaultQueueLength++] = newStrategy;\n        }\n        \n        emit StrategyChanged(newStrategy, StrategyChangeType.ADDED);\n    }\n\n    function revokeStrategy(address strategy, bool force) external override {\n        if (strategies[strategy].activation == 0) {\n            revert InactiveStrategy();\n        }\n        \n        // If force revoking a strategy, it will cause a loss.\n        uint256 loss = 0;\n        if (strategies[strategy].currentDebt != 0 && !force) {\n            revert StrategyHasDebt();\n        }\n\n        // Vault realizes the full loss of outstanding debt.\n        loss = strategies[strategy].currentDebt;\n        // Adjust total vault debt.\n        totalDebtAmount -= loss;\n        \n        emit StrategyReported(strategy, 0, loss, 0, 0, 0, 0);\n\n        // Set strategy params all back to 0 (WARNING: it can be re-added).\n        strategies[strategy] = StrategyParams({\n            activation: 0,\n            lastReport: 0,\n            currentDebt: 0,\n            maxDebt: 0\n        });\n\n        // Remove strategy if it is in the default queue.\n        address[] memory newQueue;\n        if (defaultQueue.length > 0) {\n            for (uint i = 0; i < defaultQueue.length; i++) {\n                address _strategy = defaultQueue[i];\n                // Add all strategies to the new queue besides the one revoked.\n                if (_strategy != strategy) {\n                    newQueue[i] = _strategy;\n                }\n            }\n        }\n\n        // Set the default queue to our updated queue.\n        defaultQueue = newQueue;\n\n        emit StrategyChanged(strategy, StrategyChangeType.REVOKED);\n    }\n}\n    "},"contracts/VaultStorage.sol":{"content":"// SPDX-License-Identifier: AGPL 3.0\n// Copyright Fathom 2023\n\npragma solidity ^0.8.16;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./VaultStructs.sol\";\n\ncontract VaultStorage {\n    // CONSTANTS\n    // The max length the withdrawal queue can be.\n    uint256 public constant MAX_QUEUE = 10;\n    // 100% in Basis Points.\n    uint256 public constant MAX_BPS = 10000;\n    // Extended for profit locking calculations.\n    uint256 public constant MAX_BPS_EXTENDED = 1000000000000;\n    // The version of this vault.\n    string public constant API_VERSION = \"1.0.0\";\n\n    address internal strategyManager;\n\n    // STORAGE\n    // HashMap that records all the strategies that are allowed to receive assets from the vault.\n    mapping(address => StrategyParams) public strategies;\n\n    // The current default withdrawal queue.\n    address[] public defaultQueue;\n\n    // Should the vault use the default_queue regardless whats passed in.\n    bool public useDefaultQueue;\n\n    // ERC20 - amount of shares per account\n    mapping(address => uint256) internal _balanceOf;\n    // ERC20 - owner -> (spender -> amount)\n    mapping(address => mapping(address => uint256)) internal _allowance;\n\n    // Total amount of shares that are currently minted including those locked.\n    // NOTE: To get the ERC20 compliant version use totalSupply().\n    uint256 public totalSupplyAmount;\n\n    // Total amount of assets that has been deposited in strategies.\n    uint256 public totalDebtAmount;\n    // Current assets held in the vault contract. Replacing balanceOf(this) to avoid price_per_share manipulation.\n    uint256 public totalIdleAmount;\n    // Minimum amount of assets that should be kept in the vault contract to allow for fast, cheap redeems.\n    uint256 public minimumTotalIdle;\n    // Maximum amount of tokens that the vault can accept. If totalAssets > deposit_limit, deposits will revert.\n    uint256 public depositLimit;\n    // Contract that charges fees and can give refunds.\n    address public accountant;\n    // Contract to control the deposit limit.\n    address public depositLimitModule;\n    // Contract to control the withdraw limit.\n    address public withdrawLimitModule;\n\n    // HashMap mapping addresses to their roles\n    mapping(address => bytes32) public roles;\n    // HashMap mapping roles to their permissioned state. If false, the role is not open to the public.\n    mapping(bytes32 => bool) public openRoles;\n\n    // Address that can add and remove roles to addresses.\n    address public roleManager;\n    // Temporary variable to store the address of the next role_manager until the role is accepted.\n    address public futureRoleManager;\n\n    // State of the vault - if set to true, only withdrawals will be available. It can't be reverted.\n    bool public shutdown;\n    // The amount of time profits will unlock over.\n    uint256 public profitMaxUnlockTime;\n    // The timestamp of when the current unlocking period ends.\n    uint256 public fullProfitUnlockDate;\n    // The per second rate at which profit will unlock.\n    uint256 public profitUnlockingRate;\n    // Last timestamp of the most recent profitable report.\n    uint256 public lastProfitUpdate;\n\n    // EIP-2612 permit() nonces and typehashes\n    mapping(address => uint256) public nonces;\n    bytes32 public constant DOMAIN_TYPE_HASH = keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n    bytes32 public DOMAIN_SEPARATOR;\n    bytes32 public constant PERMIT_TYPE_HASH = keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    // Roles\n    bytes32 public constant ACCOUNTANT_MANAGER = keccak256(\"ACCOUNTANT_MANAGER\");\n    bytes32 public constant QUEUE_MANAGER = keccak256(\"QUEUE_MANAGER\");\n    bytes32 public constant DEPOSIT_LIMIT_MANAGER = keccak256(\"DEPOSIT_LIMIT_MANAGER\");\n    bytes32 public constant WITHDRAW_LIMIT_MANAGER = keccak256(\"WITHDRAW_LIMIT_MANAGER\");\n    bytes32 public constant MINIMUM_IDLE_MANAGER = keccak256(\"MINIMUM_IDLE_MANAGER\");\n    bytes32 public constant PROFIT_UNLOCK_MANAGER = keccak256(\"PROFIT_UNLOCK_MANAGER\");\n    bytes32 public constant ROLE_MANAGER = keccak256(\"ROLE_MANAGER\");\n    bytes32 public constant REPORTING_MANAGER = keccak256(\"REPORTING_MANAGER\");\n    bytes32 public constant DEBT_PURCHASER = keccak256(\"DEBT_PURCHASER\");\n    bytes32 public constant ADD_STRATEGY_MANAGER = keccak256(\"ADD_STRATEGY_MANAGER\");\n    bytes32 public constant REVOKE_STRATEGY_MANAGER = keccak256(\"REVOKE_STRATEGY_MANAGER\");\n    bytes32 public constant FORCE_REVOKE_MANAGER = keccak256(\"FORCE_REVOKE_MANAGER\");\n    bytes32 public constant MAX_DEBT_MANAGER = keccak256(\"MAX_DEBT_MANAGER\");\n    bytes32 public constant DEBT_MANAGER = keccak256(\"DEBT_MANAGER\");\n    bytes32 public constant EMERGENCY_MANAGER = keccak256(\"EMERGENCY_MANAGER\");         \n}"},"contracts/VaultStructs.sol":{"content":"// SPDX-License-Identifier: AGPL 3.0\n// Copyright Fathom 2023\n\npragma solidity ^0.8.16;\n\nstruct StrategyParams {\n    uint256 activation;\n    uint256 lastReport;\n    uint256 currentDebt;\n    uint256 maxDebt;\n}\n\nstruct FeeAssessment {\n    uint256 totalFees;\n    uint256 totalRefunds;\n    uint256 protocolFees;\n    address protocolFeeRecipient;\n}\n\nstruct ShareManagement {\n    uint256 sharesToBurn;\n    uint256 accountantFeesShares;\n    uint256 protocolFeesShares;\n}\n\nstruct WithdrawalState {\n    uint256 requestedAssets;\n    uint256 currTotalIdle;\n    uint256 currTotalDebt;\n    uint256 assetsNeeded;\n    uint256 previousBalance;\n    uint256 unrealisedLossesShare;\n}\n\n// ENUMS\nenum StrategyChangeType {\n    ADDED, // Corresponds to the strategy being added.\n    REVOKED // Corresponds to the strategy being revoked.\n}\n\nenum RoleStatusChange {\n    OPENED, // Corresponds to a role being opened.\n    CLOSED // Corresponds to a role being closed.\n}\n\nenum Rounding {\n    ROUND_DOWN, // Corresponds to rounding down to the nearest whole number.\n    ROUND_UP // Corresponds to rounding up to the nearest whole number.\n}"}},"settings":{"optimizer":{"enabled":true,"runs":10,"details":{"yul":false}},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[315],"Context":[578],"ERC165":[831],"IAccessControl":[388],"IERC165":[843],"Math":[1709],"SignedMath":[1814],"Strings":[807]},"id":316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":389,"src":"133:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":579,"src":"164:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../utils/Strings.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":808,"src":"195:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":832,"src":"226:43:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Context","nameLocations":["1967:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":578,"src":"1967:7:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"1967:7:0"},{"baseName":{"id":9,"name":"IAccessControl","nameLocations":["1976:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":388,"src":"1976:14:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1976:14:0"},{"baseName":{"id":11,"name":"ERC165","nameLocations":["1992:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":831,"src":"1992:6:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1992:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"271:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":315,"linearizedBaseContracts":[315,831,843,388,578],"name":"AccessControl","nameLocation":"1950:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":19,"members":[{"constant":false,"id":16,"mutability":"mutable","name":"members","nameLocation":"2056:7:0","nodeType":"VariableDeclaration","scope":19,"src":"2031:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":15,"keyType":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"2039:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2031:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":14,"name":"bool","nodeType":"ElementaryTypeName","src":"2050:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"adminRole","nameLocation":"2081:9:0","nodeType":"VariableDeclaration","scope":19,"src":"2073:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2073:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2012:8:0","nodeType":"StructDefinition","scope":315,"src":"2005:92:0","visibility":"public"},{"constant":false,"id":24,"mutability":"mutable","name":"_roles","nameLocation":"2140:6:0","nodeType":"VariableDeclaration","scope":315,"src":"2103:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":23,"keyType":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2103:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueType":{"id":22,"nodeType":"UserDefinedTypeName","pathNode":{"id":21,"name":"RoleData","nameLocations":["2122:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":19,"src":"2122:8:0"},"referencedDeclaration":19,"src":"2122:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":27,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2177:18:0","nodeType":"VariableDeclaration","scope":315,"src":"2153:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":26,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2198:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":37,"nodeType":"Block","src":"2621:44:0","statements":[{"expression":{"arguments":[{"id":33,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2642:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":32,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":92,"src":"2631:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2631:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"2631:16:0"},{"id":36,"nodeType":"PlaceholderStatement","src":"2657:1:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"2209:375:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":38,"name":"onlyRole","nameLocation":"2598:8:0","nodeType":"ModifierDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"role","nameLocation":"2615:4:0","nodeType":"VariableDeclaration","scope":38,"src":"2607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2606:14:0"},"src":"2589:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[830],"body":{"id":59,"nodeType":"Block","src":"2823:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2840:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":49,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2860:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}],"id":48,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2855:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$388","typeString":"type(contract IAccessControl)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2876:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2855:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2840:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":55,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2915:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":53,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2891:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$315_$","typeString":"type(contract super AccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2897:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":830,"src":"2891:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2891:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2840:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":46,"id":58,"nodeType":"Return","src":"2833:94:0"}]},"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"2671:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":60,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2741:17:0","nodeType":"FunctionDefinition","overrides":{"id":43,"nodeType":"OverrideSpecifier","overrides":[],"src":"2799:8:0"},"parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"interfaceId","nameLocation":"2766:11:0","nodeType":"VariableDeclaration","scope":60,"src":"2759:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":40,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2759:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2758:20:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60,"src":"2817:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"2817:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2816:6:0"},"scope":315,"src":"2732:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[355],"body":{"id":78,"nodeType":"Block","src":"3113:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":71,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3130:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":73,"indexExpression":{"id":72,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"3137:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3143:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"3130:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":76,"indexExpression":{"id":75,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"3151:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":70,"id":77,"nodeType":"Return","src":"3123:36:0"}]},"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"2940:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":79,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3030:7:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"3089:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"role","nameLocation":"3046:4:0","nodeType":"VariableDeclaration","scope":79,"src":"3038:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3038:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"account","nameLocation":"3060:7:0","nodeType":"VariableDeclaration","scope":79,"src":"3052:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"3052:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3037:31:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"3107:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":68,"name":"bool","nodeType":"ElementaryTypeName","src":"3107:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3106:6:0"},"scope":315,"src":"3021:145:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":91,"nodeType":"Block","src":"3516:47:0","statements":[{"expression":{"arguments":[{"id":86,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"3537:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":87,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"3543:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3543:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":85,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":131,"src":"3526:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3526:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":90,"nodeType":"ExpressionStatement","src":"3526:30:0"}]},"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"3172:283:0","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":92,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3469:10:0","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"role","nameLocation":"3488:4:0","nodeType":"VariableDeclaration","scope":92,"src":"3480:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":81,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3480:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3479:14:0"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[],"src":"3516:0:0"},"scope":315,"src":"3460:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":130,"nodeType":"Block","src":"3917:406:0","statements":[{"condition":{"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3931:23:0","subExpression":{"arguments":[{"id":101,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"3940:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":102,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3946:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3932:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3932:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":129,"nodeType":"IfStatement","src":"3927:390:0","trueBody":{"id":128,"nodeType":"Block","src":"3956:361:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4064:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":113,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"4135:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":111,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"4115:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$807_$","typeString":"type(library Strings)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4123:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":781,"src":"4115:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4115:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4169:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":120,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"4242:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4234:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"4234:7:0","typeDescriptions":{}}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4234:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4249:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":116,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"4214:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$807_$","typeString":"type(library Strings)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4222:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":761,"src":"4214:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":108,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4022:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4026:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"4022:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4022:252:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3994:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":106,"name":"string","nodeType":"ElementaryTypeName","src":"3994:6:0","typeDescriptions":{}}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3994:298:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":105,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3970:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3970:336:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"3970:336:0"}]}}]},"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"3569:270:0","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":131,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3853:10:0","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"role","nameLocation":"3872:4:0","nodeType":"VariableDeclaration","scope":131,"src":"3864:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3864:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"account","nameLocation":"3886:7:0","nodeType":"VariableDeclaration","scope":131,"src":"3878:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"3878:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3863:31:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"3917:0:0"},"scope":315,"src":"3844:479:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[363],"body":{"id":145,"nodeType":"Block","src":"4587:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":140,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"4604:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":142,"indexExpression":{"id":141,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4611:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4604:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4617:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"4604:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":139,"id":144,"nodeType":"Return","src":"4597:29:0"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"4329:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":146,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4513:12:0","nodeType":"FunctionDefinition","overrides":{"id":136,"nodeType":"OverrideSpecifier","overrides":[],"src":"4560:8:0"},"parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"role","nameLocation":"4534:4:0","nodeType":"VariableDeclaration","scope":146,"src":"4526:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4526:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4525:14:0"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":146,"src":"4578:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4578:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4577:9:0"},"scope":315,"src":"4504:129:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[371],"body":{"id":165,"nodeType":"Block","src":"5032:42:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5053:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"5059:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5042:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5042:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":164,"nodeType":"ExpressionStatement","src":"5042:25:0"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"4639:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5025:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5012:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5012:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["5003:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5003:8:0"},"nodeType":"ModifierInvocation","src":"5003:28:0"}],"name":"grantRole","nameLocation":"4938:9:0","nodeType":"FunctionDefinition","overrides":{"id":153,"nodeType":"OverrideSpecifier","overrides":[],"src":"4994:8:0"},"parameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"role","nameLocation":"4956:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4948:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4948:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"account","nameLocation":"4970:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4962:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"4962:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4947:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"5032:0:0"},"scope":315,"src":"4929:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[379],"body":{"id":185,"nodeType":"Block","src":"5458:43:0","statements":[{"expression":{"arguments":[{"id":181,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5480:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":182,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5486:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":180,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"5468:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5468:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":184,"nodeType":"ExpressionStatement","src":"5468:26:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"5080:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":186,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":176,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5451:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":175,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5438:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5438:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":178,"kind":"modifierInvocation","modifierName":{"id":174,"name":"onlyRole","nameLocations":["5429:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5429:8:0"},"nodeType":"ModifierInvocation","src":"5429:28:0"}],"name":"revokeRole","nameLocation":"5363:10:0","nodeType":"FunctionDefinition","overrides":{"id":173,"nodeType":"OverrideSpecifier","overrides":[],"src":"5420:8:0"},"parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5382:4:0","nodeType":"VariableDeclaration","scope":186,"src":"5374:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5374:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"account","nameLocation":"5396:7:0","nodeType":"VariableDeclaration","scope":186,"src":"5388:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5373:31:0"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"5458:0:0"},"scope":315,"src":"5354:147:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[387],"body":{"id":208,"nodeType":"Block","src":"6115:137:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":196,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":197,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"6144:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6144:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6133:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6158:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":195,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6125:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6125:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"6125:83:0"},{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"6231:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6237:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"6219:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6219:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"6219:26:0"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"5507:526:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":209,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6047:12:0","nodeType":"FunctionDefinition","overrides":{"id":193,"nodeType":"OverrideSpecifier","overrides":[],"src":"6106:8:0"},"parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"role","nameLocation":"6068:4:0","nodeType":"VariableDeclaration","scope":209,"src":"6060:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6060:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"account","nameLocation":"6082:7:0","nodeType":"VariableDeclaration","scope":209,"src":"6074:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"6074:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6059:31:0"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"6115:0:0"},"scope":315,"src":"6038:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":222,"nodeType":"Block","src":"7005:42:0","statements":[{"expression":{"arguments":[{"id":218,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"7026:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":219,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7032:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"7015:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7015:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":221,"nodeType":"ExpressionStatement","src":"7015:25:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"6258:674:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":223,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"6946:10:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6965:4:0","nodeType":"VariableDeclaration","scope":223,"src":"6957:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6957:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"account","nameLocation":"6979:7:0","nodeType":"VariableDeclaration","scope":223,"src":"6971:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6971:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6956:31:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"7005:0:0"},"scope":315,"src":"6937:110:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":250,"nodeType":"Block","src":"7245:174:0","statements":[{"assignments":[232],"declarations":[{"constant":false,"id":232,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7263:17:0","nodeType":"VariableDeclaration","scope":250,"src":"7255:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7255:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":236,"initialValue":{"arguments":[{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7296:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":233,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"7283:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7283:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7255:46:0"},{"expression":{"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":237,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7311:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":239,"indexExpression":{"id":238,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7318:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7311:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7324:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"7311:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":241,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7336:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7311:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":243,"nodeType":"ExpressionStatement","src":"7311:34:0"},{"eventCall":{"arguments":[{"id":245,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7377:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":246,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7383:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":247,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7402:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":244,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"7360:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7360:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":249,"nodeType":"EmitStatement","src":"7355:57:0"}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"7053:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":251,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7181:13:0","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"role","nameLocation":"7203:4:0","nodeType":"VariableDeclaration","scope":251,"src":"7195:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7195:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"adminRole","nameLocation":"7217:9:0","nodeType":"VariableDeclaration","scope":251,"src":"7209:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7209:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7194:33:0"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"7245:0:0"},"scope":315,"src":"7172:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":282,"nodeType":"Block","src":"7655:165:0","statements":[{"condition":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7669:23:0","subExpression":{"arguments":[{"id":260,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7678:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":261,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7684:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":259,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7670:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7670:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":281,"nodeType":"IfStatement","src":"7665:149:0","trueBody":{"id":280,"nodeType":"Block","src":"7694:120:0","statements":[{"expression":{"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":264,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7708:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":266,"indexExpression":{"id":265,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7715:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7708:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7721:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7708:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":269,"indexExpression":{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7729:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7708:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7740:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7708:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":272,"nodeType":"ExpressionStatement","src":"7708:36:0"},{"eventCall":{"arguments":[{"id":274,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7775:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7781:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":276,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"7790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":273,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"7763:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":279,"nodeType":"EmitStatement","src":"7758:45:0"}]}}]},"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"7425:157:0","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":283,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7596:10:0","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"role","nameLocation":"7615:4:0","nodeType":"VariableDeclaration","scope":283,"src":"7607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"account","nameLocation":"7629:7:0","nodeType":"VariableDeclaration","scope":283,"src":"7621:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"7621:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7606:31:0"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"7655:0:0"},"scope":315,"src":"7587:233:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":313,"nodeType":"Block","src":"8060:165:0","statements":[{"condition":{"arguments":[{"id":292,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8082:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":293,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8088:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":291,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"8074:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8074:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":312,"nodeType":"IfStatement","src":"8070:149:0","trueBody":{"id":311,"nodeType":"Block","src":"8098:121:0","statements":[{"expression":{"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":295,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"8112:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":297,"indexExpression":{"id":296,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8119:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8112:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8125:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"8112:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":300,"indexExpression":{"id":299,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8112:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8144:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8112:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":303,"nodeType":"ExpressionStatement","src":"8112:37:0"},{"eventCall":{"arguments":[{"id":305,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8180:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":306,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8186:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":307,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"8195:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8195:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":304,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"8168:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8168:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"EmitStatement","src":"8163:45:0"}]}}]},"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"7826:160:0","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":314,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"8000:11:0","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"role","nameLocation":"8020:4:0","nodeType":"VariableDeclaration","scope":314,"src":"8012:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8012:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"account","nameLocation":"8034:7:0","nodeType":"VariableDeclaration","scope":314,"src":"8026:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"8026:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8011:31:0"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"8060:0:0"},"scope":315,"src":"7991:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":316,"src":"1932:6295:0","usedErrors":[]}],"src":"108:8120:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[388]},"id":389,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":317,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"119:89:1","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":388,"linearizedBaseContracts":[388],"name":"IAccessControl","nameLocation":"219:14:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"240:292:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":327,"name":"RoleAdminChanged","nameLocation":"543:16:1","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"576:4:1","nodeType":"VariableDeclaration","scope":327,"src":"560:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"560:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"598:17:1","nodeType":"VariableDeclaration","scope":327,"src":"582:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"582:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"633:12:1","nodeType":"VariableDeclaration","scope":327,"src":"617:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:87:1"},"src":"537:110:1"},{"anonymous":false,"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"653:212:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":336,"name":"RoleGranted","nameLocation":"876:11:1","nodeType":"EventDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"904:4:1","nodeType":"VariableDeclaration","scope":336,"src":"888:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"926:7:1","nodeType":"VariableDeclaration","scope":336,"src":"910:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"951:6:1","nodeType":"VariableDeclaration","scope":336,"src":"935:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:71:1"},"src":"870:89:1"},{"anonymous":false,"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"965:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":345,"name":"RoleRevoked","nameLocation":"1251:11:1","nodeType":"EventDefinition","parameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1279:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1263:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":341,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1301:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1285:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":343,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1326:6:1","nodeType":"VariableDeclaration","scope":345,"src":"1310:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:71:1"},"src":"1245:89:1"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1340:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":355,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1430:7:1","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"1446:4:1","nodeType":"VariableDeclaration","scope":355,"src":"1438:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1438:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"account","nameLocation":"1460:7:1","nodeType":"VariableDeclaration","scope":355,"src":"1452:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:31:1"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":355,"src":"1492:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":352,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1491:6:1"},"scope":388,"src":"1421:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"1504:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":363,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1702:12:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"role","nameLocation":"1723:4:1","nodeType":"VariableDeclaration","scope":363,"src":"1715:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":357,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1715:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1714:14:1"},"returnParameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"1752:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1751:9:1"},"scope":388,"src":"1693:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"1767:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":371,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2020:9:1","nodeType":"FunctionDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"role","nameLocation":"2038:4:1","nodeType":"VariableDeclaration","scope":371,"src":"2030:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2030:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"account","nameLocation":"2052:7:1","nodeType":"VariableDeclaration","scope":371,"src":"2044:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2029:31:1"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"2069:0:1"},"scope":388,"src":"2011:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"2076:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":379,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2313:10:1","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"role","nameLocation":"2332:4:1","nodeType":"VariableDeclaration","scope":379,"src":"2324:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"account","nameLocation":"2346:7:1","nodeType":"VariableDeclaration","scope":379,"src":"2338:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:31:1"},"returnParameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"2363:0:1"},"scope":388,"src":"2304:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"2370:480:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":387,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2864:12:1","nodeType":"FunctionDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"role","nameLocation":"2885:4:1","nodeType":"VariableDeclaration","scope":387,"src":"2877:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2877:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":384,"mutability":"mutable","name":"account","nameLocation":"2899:7:1","nodeType":"VariableDeclaration","scope":387,"src":"2891:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2876:31:1"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[],"src":"2916:0:1"},"scope":388,"src":"2855:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":389,"src":"209:2710:1","usedErrors":[]}],"src":"94:2826:1"},"id":1},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[453]},"id":454,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":390,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:2"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"137:750:2","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":453,"linearizedBaseContracts":[453],"name":"ReentrancyGuard","nameLocation":"906:15:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":394,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:2","nodeType":"VariableDeclaration","scope":453,"src":"1676:41:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":392,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":397,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:2","nodeType":"VariableDeclaration","scope":453,"src":"1723:37:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":395,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":399,"mutability":"mutable","name":"_status","nameLocation":"1783:7:2","nodeType":"VariableDeclaration","scope":453,"src":"1767:23:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":406,"nodeType":"Block","src":"1811:39:2","statements":[{"expression":{"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":402,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"1821:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":403,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"1831:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":405,"nodeType":"ExpressionStatement","src":"1821:22:2"}]},"id":407,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[],"src":"1808:2:2"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[],"src":"1811:0:2"},"scope":453,"src":"1797:53:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":417,"nodeType":"Block","src":"2251:79:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":410,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"2261:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"ExpressionStatement","src":"2261:21:2"},{"id":413,"nodeType":"PlaceholderStatement","src":"2292:1:2"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":414,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"2303:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":416,"nodeType":"ExpressionStatement","src":"2303:20:2"}]},"documentation":{"id":408,"nodeType":"StructuredDocumentation","src":"1856:366:2","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":418,"name":"nonReentrant","nameLocation":"2236:12:2","nodeType":"ModifierDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[],"src":"2248:2:2"},"src":"2227:103:2","virtual":false,"visibility":"internal"},{"body":{"id":432,"nodeType":"Block","src":"2375:248:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":422,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"2468:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":423,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"2479:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":421,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":427,"nodeType":"ExpressionStatement","src":"2460:63:2"},{"expression":{"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":428,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"2598:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":429,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"2608:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":431,"nodeType":"ExpressionStatement","src":"2598:18:2"}]},"id":433,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:2","nodeType":"FunctionDefinition","parameters":{"id":419,"nodeType":"ParameterList","parameters":[],"src":"2364:2:2"},"returnParameters":{"id":420,"nodeType":"ParameterList","parameters":[],"src":"2375:0:2"},"scope":453,"src":"2336:287:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":440,"nodeType":"Block","src":"2667:171:2","statements":[{"expression":{"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":436,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"2809:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":437,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2819:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":439,"nodeType":"ExpressionStatement","src":"2809:22:2"}]},"id":441,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:2","nodeType":"FunctionDefinition","parameters":{"id":434,"nodeType":"ParameterList","parameters":[],"src":"2656:2:2"},"returnParameters":{"id":435,"nodeType":"ParameterList","parameters":[],"src":"2667:0:2"},"scope":453,"src":"2629:209:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":451,"nodeType":"Block","src":"3081:43:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":447,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"3098:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":448,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"3109:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":446,"id":450,"nodeType":"Return","src":"3091:26:2"}]},"documentation":{"id":442,"nodeType":"StructuredDocumentation","src":"2844:168:2","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":452,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:2","nodeType":"FunctionDefinition","parameters":{"id":443,"nodeType":"ParameterList","parameters":[],"src":"3049:2:2"},"returnParameters":{"id":446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":452,"src":"3075:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":444,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:2"},"scope":453,"src":"3017:107:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":454,"src":"888:2238:2","usedErrors":[]}],"src":"112:3015:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[531]},"id":532,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":455,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":456,"nodeType":"StructuredDocumentation","src":"131:70:3","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":531,"linearizedBaseContracts":[531],"name":"IERC20","nameLocation":"212:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"225:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":465,"name":"Transfer","nameLocation":"394:8:3","nodeType":"EventDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:3","nodeType":"VariableDeclaration","scope":465,"src":"403:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":461,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:3","nodeType":"VariableDeclaration","scope":465,"src":"425:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":463,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:3","nodeType":"VariableDeclaration","scope":465,"src":"445:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:3"},"src":"388:72:3"},{"anonymous":false,"documentation":{"id":466,"nodeType":"StructuredDocumentation","src":"466:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":474,"name":"Approval","nameLocation":"625:8:3","nodeType":"EventDefinition","parameters":{"id":473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:3","nodeType":"VariableDeclaration","scope":474,"src":"634:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":470,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:3","nodeType":"VariableDeclaration","scope":474,"src":"657:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":472,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:3","nodeType":"VariableDeclaration","scope":474,"src":"682:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":471,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:3"},"src":"619:78:3"},{"documentation":{"id":475,"nodeType":"StructuredDocumentation","src":"703:66:3","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":480,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:3","nodeType":"FunctionDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[],"src":"794:2:3"},"returnParameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":480,"src":"820:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":477,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:3"},"scope":531,"src":"774:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"835:72:3","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":488,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:3","nodeType":"FunctionDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"account","nameLocation":"939:7:3","nodeType":"VariableDeclaration","scope":488,"src":"931:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:3"},"returnParameters":{"id":487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":488,"src":"971:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":485,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:3"},"scope":531,"src":"912:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"986:202:3","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":498,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:3","nodeType":"FunctionDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"to","nameLocation":"1219:2:3","nodeType":"VariableDeclaration","scope":498,"src":"1211:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":490,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":493,"mutability":"mutable","name":"amount","nameLocation":"1231:6:3","nodeType":"VariableDeclaration","scope":498,"src":"1223:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":492,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:3"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":498,"src":"1257:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":495,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:3"},"scope":531,"src":"1193:70:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"1269:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":508,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:3","nodeType":"FunctionDefinition","parameters":{"id":504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":501,"mutability":"mutable","name":"owner","nameLocation":"1565:5:3","nodeType":"VariableDeclaration","scope":508,"src":"1557:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":503,"mutability":"mutable","name":"spender","nameLocation":"1580:7:3","nodeType":"VariableDeclaration","scope":508,"src":"1572:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:3"},"returnParameters":{"id":507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":508,"src":"1612:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":505,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:3"},"scope":531,"src":"1538:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"1627:642:3","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":518,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:3","nodeType":"FunctionDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"mutability":"mutable","name":"spender","nameLocation":"2299:7:3","nodeType":"VariableDeclaration","scope":518,"src":"2291:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":513,"mutability":"mutable","name":"amount","nameLocation":"2316:6:3","nodeType":"VariableDeclaration","scope":518,"src":"2308:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":512,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:3"},"returnParameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":518,"src":"2342:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":515,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:3"},"scope":531,"src":"2274:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":519,"nodeType":"StructuredDocumentation","src":"2354:287:3","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":530,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:3","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":521,"mutability":"mutable","name":"from","nameLocation":"2676:4:3","nodeType":"VariableDeclaration","scope":530,"src":"2668:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":520,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":523,"mutability":"mutable","name":"to","nameLocation":"2690:2:3","nodeType":"VariableDeclaration","scope":530,"src":"2682:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"amount","nameLocation":"2702:6:3","nodeType":"VariableDeclaration","scope":530,"src":"2694:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":524,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:3"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":530,"src":"2728:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":527,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:3"},"scope":531,"src":"2646:88:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":532,"src":"202:2534:3","usedErrors":[]}],"src":"106:2631:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[531],"IERC20Metadata":[556]},"id":557,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":533,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":534,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":557,"sourceUnit":532,"src":"135:23:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":536,"name":"IERC20","nameLocations":["305:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":531,"src":"305:6:4"},"id":537,"nodeType":"InheritanceSpecifier","src":"305:6:4"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":535,"nodeType":"StructuredDocumentation","src":"160:116:4","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":556,"linearizedBaseContracts":[556,531],"name":"IERC20Metadata","nameLocation":"287:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":538,"nodeType":"StructuredDocumentation","src":"318:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":543,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:4","nodeType":"FunctionDefinition","parameters":{"id":539,"nodeType":"ParameterList","parameters":[],"src":"390:2:4"},"returnParameters":{"id":542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":543,"src":"416:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":540,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:4"},"scope":556,"src":"377:54:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":544,"nodeType":"StructuredDocumentation","src":"437:56:4","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":549,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:4","nodeType":"FunctionDefinition","parameters":{"id":545,"nodeType":"ParameterList","parameters":[],"src":"513:2:4"},"returnParameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":549,"src":"539:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":546,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:4"},"scope":556,"src":"498:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":550,"nodeType":"StructuredDocumentation","src":"560:65:4","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":555,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:4","nodeType":"FunctionDefinition","parameters":{"id":551,"nodeType":"ParameterList","parameters":[],"src":"647:2:4"},"returnParameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":555,"src":"673:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":552,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:4"},"scope":556,"src":"630:50:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":557,"src":"277:405:4","usedErrors":[]}],"src":"110:573:4"},"id":4},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[578]},"id":579,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":558,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:5"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":559,"nodeType":"StructuredDocumentation","src":"111:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":578,"linearizedBaseContracts":[578],"name":"Context","nameLocation":"626:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":567,"nodeType":"Block","src":"702:34:5","statements":[{"expression":{"expression":{"id":564,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:5","memberName":"sender","nodeType":"MemberAccess","src":"719:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":563,"id":566,"nodeType":"Return","src":"712:17:5"}]},"id":568,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:5","nodeType":"FunctionDefinition","parameters":{"id":560,"nodeType":"ParameterList","parameters":[],"src":"659:2:5"},"returnParameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":568,"src":"693:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:5"},"scope":578,"src":"640:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":576,"nodeType":"Block","src":"809:32:5","statements":[{"expression":{"expression":{"id":573,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:5","memberName":"data","nodeType":"MemberAccess","src":"826:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":572,"id":575,"nodeType":"Return","src":"819:15:5"}]},"id":577,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:5","nodeType":"FunctionDefinition","parameters":{"id":569,"nodeType":"ParameterList","parameters":[],"src":"759:2:5"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":577,"src":"793:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":570,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:5"},"scope":578,"src":"742:99:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":579,"src":"608:235:5","usedErrors":[]}],"src":"86:758:5"},"id":5},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[1709],"SignedMath":[1814],"Strings":[807]},"id":808,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":580,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:6"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":581,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":808,"sourceUnit":1710,"src":"126:25:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":582,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":808,"sourceUnit":1815,"src":"152:31:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":583,"nodeType":"StructuredDocumentation","src":"185:34:6","text":" @dev String operations."},"fullyImplemented":true,"id":807,"linearizedBaseContracts":[807],"name":"Strings","nameLocation":"228:7:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":586,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:6","nodeType":"VariableDeclaration","scope":807,"src":"242:54:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":584,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:6","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":589,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:6","nodeType":"VariableDeclaration","scope":807,"src":"302:43:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":587,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:6","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":636,"nodeType":"Block","src":"518:625:6","statements":[{"id":635,"nodeType":"UncheckedBlock","src":"528:609:6","statements":[{"assignments":[598],"declarations":[{"constant":false,"id":598,"mutability":"mutable","name":"length","nameLocation":"560:6:6","nodeType":"VariableDeclaration","scope":635,"src":"552:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":597,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":605,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"580:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":599,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"569:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1709_$","typeString":"type(library Math)"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:6","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":1546,"src":"569:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:6"},{"assignments":[607],"declarations":[{"constant":false,"id":607,"mutability":"mutable","name":"buffer","nameLocation":"618:6:6","nodeType":"VariableDeclaration","scope":635,"src":"604:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":606,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":612,"initialValue":{"arguments":[{"id":610,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"638:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":608,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:6"},{"assignments":[614],"declarations":[{"constant":false,"id":614,"mutability":"mutable","name":"ptr","nameLocation":"667:3:6","nodeType":"VariableDeclaration","scope":635,"src":"659:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":613,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":615,"nodeType":"VariableDeclarationStatement","src":"659:11:6"},{"AST":{"nodeType":"YulBlock","src":"740:67:6","statements":[{"nodeType":"YulAssignment","src":"758:35:6","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:6","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:6"},"nodeType":"YulFunctionCall","src":"777:15:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:6"},"nodeType":"YulFunctionCall","src":"765:28:6"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:6"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":607,"isOffset":false,"isSlot":false,"src":"769:6:6","valueSize":1},{"declaration":598,"isOffset":false,"isSlot":false,"src":"785:6:6","valueSize":1},{"declaration":614,"isOffset":false,"isSlot":false,"src":"758:3:6","valueSize":1}],"id":616,"nodeType":"InlineAssembly","src":"731:76:6"},{"body":{"id":631,"nodeType":"Block","src":"833:267:6","statements":[{"expression":{"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:6","subExpression":{"id":618,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"851:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":620,"nodeType":"ExpressionStatement","src":"851:5:6"},{"AST":{"nodeType":"YulBlock","src":"934:84:6","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:6"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:6","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:6"},"nodeType":"YulFunctionCall","src":"974:14:6"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:6"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:6"},"nodeType":"YulFunctionCall","src":"969:30:6"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:6"},"nodeType":"YulFunctionCall","src":"956:44:6"},"nodeType":"YulExpressionStatement","src":"956:44:6"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":586,"isOffset":false,"isSlot":false,"src":"990:8:6","valueSize":1},{"declaration":614,"isOffset":false,"isSlot":false,"src":"964:3:6","valueSize":1},{"declaration":592,"isOffset":false,"isSlot":false,"src":"978:5:6","valueSize":1}],"id":621,"nodeType":"InlineAssembly","src":"925:93:6"},{"expression":{"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"1035:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":625,"nodeType":"ExpressionStatement","src":"1035:11:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"1068:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":630,"nodeType":"IfStatement","src":"1064:21:6","trueBody":{"id":629,"nodeType":"Break","src":"1080:5:6"}}]},"condition":{"hexValue":"74727565","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":632,"nodeType":"WhileStatement","src":"820:280:6"},{"expression":{"id":633,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"1120:6:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":596,"id":634,"nodeType":"Return","src":"1113:13:6"}]}]},"documentation":{"id":590,"nodeType":"StructuredDocumentation","src":"352:90:6","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":637,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:6","nodeType":"FunctionDefinition","parameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"mutability":"mutable","name":"value","nameLocation":"473:5:6","nodeType":"VariableDeclaration","scope":637,"src":"465:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":591,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:6"},"returnParameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":637,"src":"503:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":594,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:6"},"scope":807,"src":"447:696:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":664,"nodeType":"Block","src":"1313:103:6","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"1354:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:6","trueExpression":{"hexValue":"2d","id":652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"1400:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":656,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"1385:10:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$1814_$","typeString":"type(library SignedMath)"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:6","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":1813,"src":"1385:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":655,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[637,665],"referencedDeclaration":637,"src":"1376:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":647,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:6","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":645,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:6","typeDescriptions":{}}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":644,"id":663,"nodeType":"Return","src":"1323:86:6"}]},"documentation":{"id":638,"nodeType":"StructuredDocumentation","src":"1149:89:6","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":665,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:6","nodeType":"FunctionDefinition","parameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":640,"mutability":"mutable","name":"value","nameLocation":"1268:5:6","nodeType":"VariableDeclaration","scope":665,"src":"1261:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":639,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:6"},"returnParameters":{"id":644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":665,"src":"1298:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":642,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:6"},"scope":807,"src":"1243:173:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":684,"nodeType":"Block","src":"1595:100:6","statements":[{"id":683,"nodeType":"UncheckedBlock","src":"1605:84:6","statements":[{"expression":{"arguments":[{"id":674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"1648:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"1667:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":675,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"1655:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1709_$","typeString":"type(library Math)"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:6","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":1669,"src":"1655:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":673,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[685,761,781],"referencedDeclaration":761,"src":"1636:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":672,"id":682,"nodeType":"Return","src":"1629:49:6"}]}]},"documentation":{"id":666,"nodeType":"StructuredDocumentation","src":"1422:94:6","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":685,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:6","nodeType":"FunctionDefinition","parameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"value","nameLocation":"1550:5:6","nodeType":"VariableDeclaration","scope":685,"src":"1542:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":667,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:6"},"returnParameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":685,"src":"1580:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":670,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:6"},"scope":807,"src":"1521:174:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":760,"nodeType":"Block","src":"1908:347:6","statements":[{"assignments":[696],"declarations":[{"constant":false,"id":696,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:6","nodeType":"VariableDeclaration","scope":760,"src":"1918:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":695,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":705,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":700,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"1954:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":697,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:6"},{"expression":{"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":706,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"1975:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":708,"indexExpression":{"hexValue":"30","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":711,"nodeType":"ExpressionStatement","src":"1975:15:6"},{"expression":{"id":716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":712,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"2000:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":714,"indexExpression":{"hexValue":"31","id":713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":717,"nodeType":"ExpressionStatement","src":"2000:15:6"},{"body":{"id":746,"nodeType":"Block","src":"2070:83:6","statements":[{"expression":{"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":732,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"2084:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":734,"indexExpression":{"id":733,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"2091:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":735,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"2096:8:6","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":739,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"2105:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:6","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":741,"nodeType":"ExpressionStatement","src":"2084:33:6"},{"expression":{"id":744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"2131:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":745,"nodeType":"ExpressionStatement","src":"2131:11:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":726,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"2058:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":747,"initializationExpression":{"assignments":[719],"declarations":[{"constant":false,"id":719,"mutability":"mutable","name":"i","nameLocation":"2038:1:6","nodeType":"VariableDeclaration","scope":747,"src":"2030:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":718,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":725,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":721,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"2046:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:6"},"loopExpression":{"expression":{"id":730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:6","subExpression":{"id":729,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"2067:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":731,"nodeType":"ExpressionStatement","src":"2065:3:6"},"nodeType":"ForStatement","src":"2025:128:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"2170:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":748,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":754,"nodeType":"ExpressionStatement","src":"2162:55:6"},{"expression":{"arguments":[{"id":757,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"2241:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":755,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:6","typeDescriptions":{}}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":694,"id":759,"nodeType":"Return","src":"2227:21:6"}]},"documentation":{"id":686,"nodeType":"StructuredDocumentation","src":"1701:112:6","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":761,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:6","nodeType":"FunctionDefinition","parameters":{"id":691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":688,"mutability":"mutable","name":"value","nameLocation":"1847:5:6","nodeType":"VariableDeclaration","scope":761,"src":"1839:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":687,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":690,"mutability":"mutable","name":"length","nameLocation":"1862:6:6","nodeType":"VariableDeclaration","scope":761,"src":"1854:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":689,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:6"},"returnParameters":{"id":694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":761,"src":"1893:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":692,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:6"},"scope":807,"src":"1818:437:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":780,"nodeType":"Block","src":"2480:76:6","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":774,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"2525:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":772,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:6","typeDescriptions":{}}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:6","typeDescriptions":{}}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":777,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"2533:15:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":769,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[685,761,781],"referencedDeclaration":761,"src":"2497:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":768,"id":779,"nodeType":"Return","src":"2490:59:6"}]},"documentation":{"id":762,"nodeType":"StructuredDocumentation","src":"2261:141:6","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":781,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:6","nodeType":"FunctionDefinition","parameters":{"id":765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":764,"mutability":"mutable","name":"addr","nameLocation":"2436:4:6","nodeType":"VariableDeclaration","scope":781,"src":"2428:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":763,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:6"},"returnParameters":{"id":768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":781,"src":"2465:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":766,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:6"},"scope":807,"src":"2407:149:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":805,"nodeType":"Block","src":"2711:66:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":794,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"2744:1:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":792,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:6","typeDescriptions":{}}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":791,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":800,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"2767:1:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":798,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:6","typeDescriptions":{}}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":797,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":790,"id":804,"nodeType":"Return","src":"2721:49:6"}]},"documentation":{"id":782,"nodeType":"StructuredDocumentation","src":"2562:66:6","text":" @dev Returns true if the two strings are equal."},"id":806,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:6","nodeType":"FunctionDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"mutability":"mutable","name":"a","nameLocation":"2662:1:6","nodeType":"VariableDeclaration","scope":806,"src":"2648:15:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":783,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"b","nameLocation":"2679:1:6","nodeType":"VariableDeclaration","scope":806,"src":"2665:15:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":785,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:6"},"returnParameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":806,"src":"2705:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":788,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:6"},"scope":807,"src":"2633:144:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":808,"src":"220:2559:6","usedErrors":[]}],"src":"101:2679:6"},"id":6},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[831],"IERC165":[843]},"id":832,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":809,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":810,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":832,"sourceUnit":844,"src":"124:23:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":812,"name":"IERC165","nameLocations":["754:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":843,"src":"754:7:7"},"id":813,"nodeType":"InheritanceSpecifier","src":"754:7:7"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":811,"nodeType":"StructuredDocumentation","src":"149:576:7","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":831,"linearizedBaseContracts":[831,843],"name":"ERC165","nameLocation":"744:6:7","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[842],"body":{"id":829,"nodeType":"Block","src":"920:64:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":822,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"937:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":824,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"957:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$843_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$843_$","typeString":"type(contract IERC165)"}],"id":823,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$843","typeString":"type(contract IERC165)"}},"id":826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:7","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":821,"id":828,"nodeType":"Return","src":"930:47:7"}]},"documentation":{"id":814,"nodeType":"StructuredDocumentation","src":"768:56:7","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":830,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:7","nodeType":"FunctionDefinition","overrides":{"id":818,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:7"},"parameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":816,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:7","nodeType":"VariableDeclaration","scope":830,"src":"856:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":815,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:7"},"returnParameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":830,"src":"914:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":819,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:7"},"scope":831,"src":"829:155:7","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":832,"src":"726:260:7","usedErrors":[]}],"src":"99:888:7"},"id":7},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[843]},"id":844,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":833,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":834,"nodeType":"StructuredDocumentation","src":"125:279:8","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":843,"linearizedBaseContracts":[843],"name":"IERC165","nameLocation":"415:7:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"429:340:8","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":842,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:8","nodeType":"FunctionDefinition","parameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:8","nodeType":"VariableDeclaration","scope":842,"src":"801:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":836,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:8"},"returnParameters":{"id":841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":842,"src":"844:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":839,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:8"},"scope":843,"src":"774:76:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":844,"src":"405:447:8","usedErrors":[]}],"src":"100:753:8"},"id":8},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[1709]},"id":1710,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":845,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":846,"nodeType":"StructuredDocumentation","src":"128:73:9","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1709,"linearizedBaseContracts":[1709],"name":"Math","nameLocation":"210:4:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":850,"members":[{"id":847,"name":"Down","nameLocation":"245:4:9","nodeType":"EnumValue","src":"245:4:9"},{"id":848,"name":"Up","nameLocation":"287:2:9","nodeType":"EnumValue","src":"287:2:9"},{"id":849,"name":"Zero","nameLocation":"318:4:9","nodeType":"EnumValue","src":"318:4:9"}],"name":"Rounding","nameLocation":"226:8:9","nodeType":"EnumDefinition","src":"221:122:9"},{"body":{"id":867,"nodeType":"Block","src":"480:37:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":860,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"497:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":861,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"501:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":864,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"509:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:9","trueExpression":{"id":863,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"505:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":859,"id":866,"nodeType":"Return","src":"490:20:9"}]},"documentation":{"id":851,"nodeType":"StructuredDocumentation","src":"349:59:9","text":" @dev Returns the largest of two numbers."},"id":868,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:9","nodeType":"FunctionDefinition","parameters":{"id":856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":853,"mutability":"mutable","name":"a","nameLocation":"434:1:9","nodeType":"VariableDeclaration","scope":868,"src":"426:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":852,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":855,"mutability":"mutable","name":"b","nameLocation":"445:1:9","nodeType":"VariableDeclaration","scope":868,"src":"437:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":854,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:9"},"returnParameters":{"id":859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":868,"src":"471:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":857,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:9"},"scope":1709,"src":"413:104:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":885,"nodeType":"Block","src":"655:37:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":878,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"672:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":879,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"676:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":882,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"684:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:9","trueExpression":{"id":881,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"680:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":877,"id":884,"nodeType":"Return","src":"665:20:9"}]},"documentation":{"id":869,"nodeType":"StructuredDocumentation","src":"523:60:9","text":" @dev Returns the smallest of two numbers."},"id":886,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:9","nodeType":"FunctionDefinition","parameters":{"id":874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":871,"mutability":"mutable","name":"a","nameLocation":"609:1:9","nodeType":"VariableDeclaration","scope":886,"src":"601:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":870,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":873,"mutability":"mutable","name":"b","nameLocation":"620:1:9","nodeType":"VariableDeclaration","scope":886,"src":"612:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":872,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:9"},"returnParameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":886,"src":"646:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":875,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:9"},"scope":1709,"src":"588:104:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":908,"nodeType":"Block","src":"876:82:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":896,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"931:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":897,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"935:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":899,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":900,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"941:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":901,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"945:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":903,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":895,"id":907,"nodeType":"Return","src":"923:28:9"}]},"documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"698:102:9","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":909,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:9","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"a","nameLocation":"830:1:9","nodeType":"VariableDeclaration","scope":909,"src":"822:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":888,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":891,"mutability":"mutable","name":"b","nameLocation":"841:1:9","nodeType":"VariableDeclaration","scope":909,"src":"833:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":890,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:9"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":909,"src":"867:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":893,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:9"},"scope":1709,"src":"805:153:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":933,"nodeType":"Block","src":"1228:123:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":919,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"1316:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":923,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"1330:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":926,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":927,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"1339:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:9","trueExpression":{"hexValue":"30","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":918,"id":932,"nodeType":"Return","src":"1309:35:9"}]},"documentation":{"id":910,"nodeType":"StructuredDocumentation","src":"964:188:9","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":934,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:9","nodeType":"FunctionDefinition","parameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":912,"mutability":"mutable","name":"a","nameLocation":"1182:1:9","nodeType":"VariableDeclaration","scope":934,"src":"1174:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":911,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":914,"mutability":"mutable","name":"b","nameLocation":"1193:1:9","nodeType":"VariableDeclaration","scope":934,"src":"1185:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":913,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:9"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":934,"src":"1219:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:9"},"scope":1709,"src":"1157:194:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1056,"nodeType":"Block","src":"1765:4115:9","statements":[{"id":1055,"nodeType":"UncheckedBlock","src":"1775:4099:9","statements":[{"assignments":[947],"declarations":[{"constant":false,"id":947,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:9","nodeType":"VariableDeclaration","scope":1055,"src":"2096:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":948,"nodeType":"VariableDeclarationStatement","src":"2096:13:9"},{"assignments":[950],"declarations":[{"constant":false,"id":950,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:9","nodeType":"VariableDeclaration","scope":1055,"src":"2168:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":949,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":951,"nodeType":"VariableDeclarationStatement","src":"2168:13:9"},{"AST":{"nodeType":"YulBlock","src":"2248:157:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:9","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:9"},"nodeType":"YulFunctionCall","src":"2289:6:9"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:9"},"nodeType":"YulFunctionCall","src":"2276:20:9"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:9","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:9"},"nodeType":"YulFunctionCall","src":"2322:9:9"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:9"}]},{"nodeType":"YulAssignment","src":"2348:43:9","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:9"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:9"},"nodeType":"YulFunctionCall","src":"2361:14:9"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:9"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:9"},"nodeType":"YulFunctionCall","src":"2377:13:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:9"},"nodeType":"YulFunctionCall","src":"2357:34:9"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:9"}]}]},"evmVersion":"london","externalReferences":[{"declaration":947,"isOffset":false,"isSlot":false,"src":"2313:5:9","valueSize":1},{"declaration":947,"isOffset":false,"isSlot":false,"src":"2369:5:9","valueSize":1},{"declaration":947,"isOffset":false,"isSlot":false,"src":"2384:5:9","valueSize":1},{"declaration":950,"isOffset":false,"isSlot":false,"src":"2348:5:9","valueSize":1},{"declaration":937,"isOffset":false,"isSlot":false,"src":"2283:1:9","valueSize":1},{"declaration":937,"isOffset":false,"isSlot":false,"src":"2326:1:9","valueSize":1},{"declaration":939,"isOffset":false,"isSlot":false,"src":"2286:1:9","valueSize":1},{"declaration":939,"isOffset":false,"isSlot":false,"src":"2329:1:9","valueSize":1}],"id":952,"nodeType":"InlineAssembly","src":"2239:166:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":953,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"2486:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":961,"nodeType":"IfStatement","src":"2482:368:9","trueBody":{"id":960,"nodeType":"Block","src":"2498:352:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":956,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"2816:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":957,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"2824:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":945,"id":959,"nodeType":"Return","src":"2809:26:9"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":963,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"2960:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":964,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"2974:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":962,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":968,"nodeType":"ExpressionStatement","src":"2952:53:9"},{"assignments":[970],"declarations":[{"constant":false,"id":970,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:9","nodeType":"VariableDeclaration","scope":1055,"src":"3261:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":969,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":971,"nodeType":"VariableDeclarationStatement","src":"3261:17:9"},{"AST":{"nodeType":"YulBlock","src":"3301:291:9","statements":[{"nodeType":"YulAssignment","src":"3370:38:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:9"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:9"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:9"},"nodeType":"YulFunctionCall","src":"3383:25:9"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:9"}]},{"nodeType":"YulAssignment","src":"3490:41:9","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:9"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:9"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:9"},"nodeType":"YulFunctionCall","src":"3510:20:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:9"},"nodeType":"YulFunctionCall","src":"3499:32:9"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:9"}]},{"nodeType":"YulAssignment","src":"3548:30:9","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:9"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:9"},"nodeType":"YulFunctionCall","src":"3557:21:9"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:9"}]}]},"evmVersion":"london","externalReferences":[{"declaration":941,"isOffset":false,"isSlot":false,"src":"3396:11:9","valueSize":1},{"declaration":947,"isOffset":false,"isSlot":false,"src":"3524:5:9","valueSize":1},{"declaration":947,"isOffset":false,"isSlot":false,"src":"3548:5:9","valueSize":1},{"declaration":947,"isOffset":false,"isSlot":false,"src":"3561:5:9","valueSize":1},{"declaration":950,"isOffset":false,"isSlot":false,"src":"3490:5:9","valueSize":1},{"declaration":950,"isOffset":false,"isSlot":false,"src":"3503:5:9","valueSize":1},{"declaration":970,"isOffset":false,"isSlot":false,"src":"3370:9:9","valueSize":1},{"declaration":970,"isOffset":false,"isSlot":false,"src":"3513:9:9","valueSize":1},{"declaration":970,"isOffset":false,"isSlot":false,"src":"3568:9:9","valueSize":1},{"declaration":937,"isOffset":false,"isSlot":false,"src":"3390:1:9","valueSize":1},{"declaration":939,"isOffset":false,"isSlot":false,"src":"3393:1:9","valueSize":1}],"id":972,"nodeType":"InlineAssembly","src":"3292:300:9"},{"assignments":[974],"declarations":[{"constant":false,"id":974,"mutability":"mutable","name":"twos","nameLocation":"3907:4:9","nodeType":"VariableDeclaration","scope":1055,"src":"3899:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":973,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":982,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":975,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"3914:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:9","subExpression":{"id":976,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"3930:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":980,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:9"},{"AST":{"nodeType":"YulBlock","src":"3969:362:9","statements":[{"nodeType":"YulAssignment","src":"4034:37:9","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:9"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:9"},"nodeType":"YulFunctionCall","src":"4049:22:9"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:9"}]},{"nodeType":"YulAssignment","src":"4138:25:9","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:9"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:9"},"nodeType":"YulFunctionCall","src":"4147:16:9"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:9"}]},{"nodeType":"YulAssignment","src":"4278:39:9","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:9","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:9"},"nodeType":"YulFunctionCall","src":"4294:12:9"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:9"},"nodeType":"YulFunctionCall","src":"4290:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:9"},"nodeType":"YulFunctionCall","src":"4286:31:9"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:9"}]}]},"evmVersion":"london","externalReferences":[{"declaration":941,"isOffset":false,"isSlot":false,"src":"4034:11:9","valueSize":1},{"declaration":941,"isOffset":false,"isSlot":false,"src":"4053:11:9","valueSize":1},{"declaration":947,"isOffset":false,"isSlot":false,"src":"4138:5:9","valueSize":1},{"declaration":947,"isOffset":false,"isSlot":false,"src":"4151:5:9","valueSize":1},{"declaration":974,"isOffset":false,"isSlot":false,"src":"4066:4:9","valueSize":1},{"declaration":974,"isOffset":false,"isSlot":false,"src":"4158:4:9","valueSize":1},{"declaration":974,"isOffset":false,"isSlot":false,"src":"4278:4:9","valueSize":1},{"declaration":974,"isOffset":false,"isSlot":false,"src":"4301:4:9","valueSize":1},{"declaration":974,"isOffset":false,"isSlot":false,"src":"4308:4:9","valueSize":1}],"id":983,"nodeType":"InlineAssembly","src":"3960:371:9"},{"expression":{"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":984,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"4397:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":985,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"4406:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":986,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"4414:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":989,"nodeType":"ExpressionStatement","src":"4397:21:9"},{"assignments":[991],"declarations":[{"constant":false,"id":991,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:9","nodeType":"VariableDeclaration","scope":1055,"src":"4736:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":990,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":998,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:9","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":993,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"4759:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":995,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:9"},{"expression":{"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":999,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"4992:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1001,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"5007:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1002,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"5021:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1006,"nodeType":"ExpressionStatement","src":"4992:36:9"},{"expression":{"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1007,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"5061:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1009,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"5076:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1010,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"5090:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1014,"nodeType":"ExpressionStatement","src":"5061:36:9"},{"expression":{"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1015,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"5131:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1017,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"5146:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1018,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"5160:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1022,"nodeType":"ExpressionStatement","src":"5131:36:9"},{"expression":{"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1023,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"5201:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1025,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"5216:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1026,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"5230:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1030,"nodeType":"ExpressionStatement","src":"5201:36:9"},{"expression":{"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1031,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"5271:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1033,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"5286:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1034,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"5300:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1038,"nodeType":"ExpressionStatement","src":"5271:36:9"},{"expression":{"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1039,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"5342:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1041,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"5357:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1042,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"5371:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1046,"nodeType":"ExpressionStatement","src":"5342:36:9"},{"expression":{"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1047,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"5812:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1048,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"5821:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1049,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"5829:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1052,"nodeType":"ExpressionStatement","src":"5812:24:9"},{"expression":{"id":1053,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"5857:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":945,"id":1054,"nodeType":"Return","src":"5850:13:9"}]}]},"documentation":{"id":935,"nodeType":"StructuredDocumentation","src":"1357:305:9","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1057,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:9","nodeType":"FunctionDefinition","parameters":{"id":942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":937,"mutability":"mutable","name":"x","nameLocation":"1691:1:9","nodeType":"VariableDeclaration","scope":1057,"src":"1683:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":936,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":939,"mutability":"mutable","name":"y","nameLocation":"1702:1:9","nodeType":"VariableDeclaration","scope":1057,"src":"1694:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":938,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":941,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:9","nodeType":"VariableDeclaration","scope":1057,"src":"1705:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":940,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:9"},"returnParameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"result","nameLocation":"1757:6:9","nodeType":"VariableDeclaration","scope":1057,"src":"1749:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":943,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:9"},"scope":1709,"src":"1667:4213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1100,"nodeType":"Block","src":"6122:189:9","statements":[{"assignments":[1073],"declarations":[{"constant":false,"id":1073,"mutability":"mutable","name":"result","nameLocation":"6140:6:9","nodeType":"VariableDeclaration","scope":1100,"src":"6132:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1072,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1079,"initialValue":{"arguments":[{"id":1075,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"6156:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1076,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"6159:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1077,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"6162:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1074,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1057,1101],"referencedDeclaration":1057,"src":"6149:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$850","typeString":"enum Math.Rounding"},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1080,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"6188:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$850","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1081,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"6200:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$850_$","typeString":"type(enum Math.Rounding)"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:9","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":848,"src":"6200:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$850","typeString":"enum Math.Rounding"}},"src":"6188:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1085,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"6222:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1086,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"6225:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1087,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"6228:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1084,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:9","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1097,"nodeType":"IfStatement","src":"6184:98:9","trueBody":{"id":1096,"nodeType":"Block","src":"6246:36:9","statements":[{"expression":{"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1092,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"6260:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1095,"nodeType":"ExpressionStatement","src":"6260:11:9"}]}},{"expression":{"id":1098,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"6298:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1071,"id":1099,"nodeType":"Return","src":"6291:13:9"}]},"documentation":{"id":1058,"nodeType":"StructuredDocumentation","src":"5886:121:9","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1101,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:9","nodeType":"FunctionDefinition","parameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1060,"mutability":"mutable","name":"x","nameLocation":"6036:1:9","nodeType":"VariableDeclaration","scope":1101,"src":"6028:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1059,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1062,"mutability":"mutable","name":"y","nameLocation":"6047:1:9","nodeType":"VariableDeclaration","scope":1101,"src":"6039:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1061,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:9","nodeType":"VariableDeclaration","scope":1101,"src":"6050:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1063,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:9","nodeType":"VariableDeclaration","scope":1101,"src":"6071:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$850","typeString":"enum Math.Rounding"},"typeName":{"id":1066,"nodeType":"UserDefinedTypeName","pathNode":{"id":1065,"name":"Rounding","nameLocations":["6071:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":850,"src":"6071:8:9"},"referencedDeclaration":850,"src":"6071:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$850","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:9"},"returnParameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1101,"src":"6113:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1069,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:9"},"scope":1709,"src":"6012:299:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1212,"nodeType":"Block","src":"6587:1585:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1109,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"6601:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1115,"nodeType":"IfStatement","src":"6597:45:9","trueBody":{"id":1114,"nodeType":"Block","src":"6609:33:9","statements":[{"expression":{"hexValue":"30","id":1112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1108,"id":1113,"nodeType":"Return","src":"6623:8:9"}]}},{"assignments":[1117],"declarations":[{"constant":false,"id":1117,"mutability":"mutable","name":"result","nameLocation":"7329:6:9","nodeType":"VariableDeclaration","scope":1212,"src":"7321:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1116,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1126,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1120,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"7349:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1119,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1381,1417],"referencedDeclaration":1381,"src":"7344:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1124,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:9"},{"id":1211,"nodeType":"UncheckedBlock","src":"7758:408:9","statements":[{"expression":{"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1127,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"7782:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1128,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"7792:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1129,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"7801:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1130,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"7805:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1133,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1137,"nodeType":"ExpressionStatement","src":"7782:35:9"},{"expression":{"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1138,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"7831:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1139,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"7841:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1140,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"7850:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1141,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"7854:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1144,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1148,"nodeType":"ExpressionStatement","src":"7831:35:9"},{"expression":{"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1149,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"7880:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1150,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"7890:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1151,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"7899:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1152,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"7903:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1155,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1159,"nodeType":"ExpressionStatement","src":"7880:35:9"},{"expression":{"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1160,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"7929:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1161,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"7939:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1162,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"7948:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1163,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"7952:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1166,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1170,"nodeType":"ExpressionStatement","src":"7929:35:9"},{"expression":{"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1171,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"7978:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1172,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"7988:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1173,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"7997:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1174,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"8001:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1177,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1181,"nodeType":"ExpressionStatement","src":"7978:35:9"},{"expression":{"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1182,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"8027:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1183,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"8037:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1184,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"8046:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1185,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"8050:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1188,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1192,"nodeType":"ExpressionStatement","src":"8027:35:9"},{"expression":{"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1193,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"8076:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1194,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"8086:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1195,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"8095:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1196,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"8099:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1199,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1203,"nodeType":"ExpressionStatement","src":"8076:35:9"},{"expression":{"arguments":[{"id":1205,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"8136:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1206,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"8144:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1207,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"8148:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1204,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"8132:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1108,"id":1210,"nodeType":"Return","src":"8125:30:9"}]}]},"documentation":{"id":1102,"nodeType":"StructuredDocumentation","src":"6317:208:9","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1213,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:9","nodeType":"FunctionDefinition","parameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"a","nameLocation":"6552:1:9","nodeType":"VariableDeclaration","scope":1213,"src":"6544:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1103,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:9"},"returnParameters":{"id":1108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1213,"src":"6578:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1106,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:9"},"scope":1709,"src":"6530:1642:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1248,"nodeType":"Block","src":"8348:161:9","statements":[{"id":1247,"nodeType":"UncheckedBlock","src":"8358:145:9","statements":[{"assignments":[1225],"declarations":[{"constant":false,"id":1225,"mutability":"mutable","name":"result","nameLocation":"8390:6:9","nodeType":"VariableDeclaration","scope":1247,"src":"8382:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1224,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1229,"initialValue":{"arguments":[{"id":1227,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"8404:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1226,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1213,1249],"referencedDeclaration":1213,"src":"8399:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1230,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"8427:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$850","typeString":"enum Math.Rounding"},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1231,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"8437:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$850","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1232,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"8449:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$850_$","typeString":"type(enum Math.Rounding)"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:9","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":848,"src":"8449:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$850","typeString":"enum Math.Rounding"}},"src":"8437:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1235,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"8464:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1236,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"8473:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1238,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"8482:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:9","trueExpression":{"hexValue":"31","id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1244,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1223,"id":1246,"nodeType":"Return","src":"8420:72:9"}]}]},"documentation":{"id":1214,"nodeType":"StructuredDocumentation","src":"8178:89:9","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1249,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:9","nodeType":"FunctionDefinition","parameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"mutability":"mutable","name":"a","nameLocation":"8294:1:9","nodeType":"VariableDeclaration","scope":1249,"src":"8286:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1215,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1219,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:9","nodeType":"VariableDeclaration","scope":1249,"src":"8297:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$850","typeString":"enum Math.Rounding"},"typeName":{"id":1218,"nodeType":"UserDefinedTypeName","pathNode":{"id":1217,"name":"Rounding","nameLocations":["8297:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":850,"src":"8297:8:9"},"referencedDeclaration":850,"src":"8297:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$850","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:9"},"returnParameters":{"id":1223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1249,"src":"8339:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1221,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:9"},"scope":1709,"src":"8272:237:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1380,"nodeType":"Block","src":"8694:922:9","statements":[{"assignments":[1258],"declarations":[{"constant":false,"id":1258,"mutability":"mutable","name":"result","nameLocation":"8712:6:9","nodeType":"VariableDeclaration","scope":1380,"src":"8704:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1257,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1260,"initialValue":{"hexValue":"30","id":1259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:9"},{"id":1377,"nodeType":"UncheckedBlock","src":"8732:855:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"8760:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1275,"nodeType":"IfStatement","src":"8756:99:9","trueBody":{"id":1274,"nodeType":"Block","src":"8778:77:9","statements":[{"expression":{"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"8796:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1269,"nodeType":"ExpressionStatement","src":"8796:13:9"},{"expression":{"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1270,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"8827:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1273,"nodeType":"ExpressionStatement","src":"8827:13:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"8872:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1290,"nodeType":"IfStatement","src":"8868:96:9","trueBody":{"id":1289,"nodeType":"Block","src":"8889:75:9","statements":[{"expression":{"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"8907:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1284,"nodeType":"ExpressionStatement","src":"8907:12:9"},{"expression":{"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1285,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"8937:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1288,"nodeType":"ExpressionStatement","src":"8937:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"8981:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1305,"nodeType":"IfStatement","src":"8977:96:9","trueBody":{"id":1304,"nodeType":"Block","src":"8998:75:9","statements":[{"expression":{"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"9016:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1299,"nodeType":"ExpressionStatement","src":"9016:12:9"},{"expression":{"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1300,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"9046:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1303,"nodeType":"ExpressionStatement","src":"9046:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"9090:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1320,"nodeType":"IfStatement","src":"9086:96:9","trueBody":{"id":1319,"nodeType":"Block","src":"9107:75:9","statements":[{"expression":{"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"9125:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1314,"nodeType":"ExpressionStatement","src":"9125:12:9"},{"expression":{"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1315,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"9155:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1318,"nodeType":"ExpressionStatement","src":"9155:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"9199:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1335,"nodeType":"IfStatement","src":"9195:93:9","trueBody":{"id":1334,"nodeType":"Block","src":"9215:73:9","statements":[{"expression":{"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"9233:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1329,"nodeType":"ExpressionStatement","src":"9233:11:9"},{"expression":{"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1330,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"9262:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1333,"nodeType":"ExpressionStatement","src":"9262:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"9305:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":1337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1350,"nodeType":"IfStatement","src":"9301:93:9","trueBody":{"id":1349,"nodeType":"Block","src":"9321:73:9","statements":[{"expression":{"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"9339:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1344,"nodeType":"ExpressionStatement","src":"9339:11:9"},{"expression":{"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1345,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"9368:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1348,"nodeType":"ExpressionStatement","src":"9368:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"9411:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1365,"nodeType":"IfStatement","src":"9407:93:9","trueBody":{"id":1364,"nodeType":"Block","src":"9427:73:9","statements":[{"expression":{"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"9445:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1359,"nodeType":"ExpressionStatement","src":"9445:11:9"},{"expression":{"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1360,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"9474:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1363,"nodeType":"ExpressionStatement","src":"9474:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"9517:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1376,"nodeType":"IfStatement","src":"9513:64:9","trueBody":{"id":1375,"nodeType":"Block","src":"9533:44:9","statements":[{"expression":{"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1371,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"9551:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1374,"nodeType":"ExpressionStatement","src":"9551:11:9"}]}}]},{"expression":{"id":1378,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"9603:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1256,"id":1379,"nodeType":"Return","src":"9596:13:9"}]},"documentation":{"id":1250,"nodeType":"StructuredDocumentation","src":"8515:113:9","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1381,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:9","nodeType":"FunctionDefinition","parameters":{"id":1253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1252,"mutability":"mutable","name":"value","nameLocation":"8655:5:9","nodeType":"VariableDeclaration","scope":1381,"src":"8647:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1251,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:9"},"returnParameters":{"id":1256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1381,"src":"8685:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1254,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:9"},"scope":1709,"src":"8633:983:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1416,"nodeType":"Block","src":"9849:165:9","statements":[{"id":1415,"nodeType":"UncheckedBlock","src":"9859:149:9","statements":[{"assignments":[1393],"declarations":[{"constant":false,"id":1393,"mutability":"mutable","name":"result","nameLocation":"9891:6:9","nodeType":"VariableDeclaration","scope":1415,"src":"9883:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1392,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1397,"initialValue":{"arguments":[{"id":1395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"9905:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1394,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1381,1417],"referencedDeclaration":1381,"src":"9900:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1398,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"9932:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$850","typeString":"enum Math.Rounding"},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1399,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"9942:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$850","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1400,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"9954:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$850_$","typeString":"type(enum Math.Rounding)"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:9","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":848,"src":"9954:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$850","typeString":"enum Math.Rounding"}},"src":"9942:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1404,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"9974:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"9983:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:9","trueExpression":{"hexValue":"31","id":1409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1412,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1391,"id":1414,"nodeType":"Return","src":"9925:72:9"}]}]},"documentation":{"id":1382,"nodeType":"StructuredDocumentation","src":"9622:142:9","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1417,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:9","nodeType":"FunctionDefinition","parameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"value","nameLocation":"9791:5:9","nodeType":"VariableDeclaration","scope":1417,"src":"9783:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1387,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:9","nodeType":"VariableDeclaration","scope":1417,"src":"9798:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$850","typeString":"enum Math.Rounding"},"typeName":{"id":1386,"nodeType":"UserDefinedTypeName","pathNode":{"id":1385,"name":"Rounding","nameLocations":["9798:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":850,"src":"9798:8:9"},"referencedDeclaration":850,"src":"9798:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$850","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:9"},"returnParameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1417,"src":"9840:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1389,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:9"},"scope":1709,"src":"9769:245:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1545,"nodeType":"Block","src":"10201:854:9","statements":[{"assignments":[1426],"declarations":[{"constant":false,"id":1426,"mutability":"mutable","name":"result","nameLocation":"10219:6:9","nodeType":"VariableDeclaration","scope":1545,"src":"10211:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1425,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1428,"initialValue":{"hexValue":"30","id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:9"},{"id":1542,"nodeType":"UncheckedBlock","src":"10239:787:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"10267:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1445,"nodeType":"IfStatement","src":"10263:103:9","trueBody":{"id":1444,"nodeType":"Block","src":"10286:80:9","statements":[{"expression":{"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"10304:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1439,"nodeType":"ExpressionStatement","src":"10304:17:9"},{"expression":{"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1440,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"10339:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1443,"nodeType":"ExpressionStatement","src":"10339:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"10383:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1462,"nodeType":"IfStatement","src":"10379:103:9","trueBody":{"id":1461,"nodeType":"Block","src":"10402:80:9","statements":[{"expression":{"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"10420:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1456,"nodeType":"ExpressionStatement","src":"10420:17:9"},{"expression":{"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1457,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"10455:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1460,"nodeType":"ExpressionStatement","src":"10455:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"10499:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1479,"nodeType":"IfStatement","src":"10495:103:9","trueBody":{"id":1478,"nodeType":"Block","src":"10518:80:9","statements":[{"expression":{"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"10536:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1473,"nodeType":"ExpressionStatement","src":"10536:17:9"},{"expression":{"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1474,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"10571:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1477,"nodeType":"ExpressionStatement","src":"10571:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"10615:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1496,"nodeType":"IfStatement","src":"10611:100:9","trueBody":{"id":1495,"nodeType":"Block","src":"10633:78:9","statements":[{"expression":{"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"10651:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1490,"nodeType":"ExpressionStatement","src":"10651:16:9"},{"expression":{"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1491,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"10685:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1494,"nodeType":"ExpressionStatement","src":"10685:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"10728:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:9","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1513,"nodeType":"IfStatement","src":"10724:100:9","trueBody":{"id":1512,"nodeType":"Block","src":"10746:78:9","statements":[{"expression":{"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"10764:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:9","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1507,"nodeType":"ExpressionStatement","src":"10764:16:9"},{"expression":{"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1508,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"10798:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1511,"nodeType":"ExpressionStatement","src":"10798:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"10841:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:9","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1530,"nodeType":"IfStatement","src":"10837:100:9","trueBody":{"id":1529,"nodeType":"Block","src":"10859:78:9","statements":[{"expression":{"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"10877:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:9","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1524,"nodeType":"ExpressionStatement","src":"10877:16:9"},{"expression":{"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1525,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"10911:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1528,"nodeType":"ExpressionStatement","src":"10911:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"10954:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":1534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1541,"nodeType":"IfStatement","src":"10950:66:9","trueBody":{"id":1540,"nodeType":"Block","src":"10972:44:9","statements":[{"expression":{"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1536,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"10990:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1539,"nodeType":"ExpressionStatement","src":"10990:11:9"}]}}]},{"expression":{"id":1543,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"11042:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1424,"id":1544,"nodeType":"Return","src":"11035:13:9"}]},"documentation":{"id":1418,"nodeType":"StructuredDocumentation","src":"10020:114:9","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1546,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:9","nodeType":"FunctionDefinition","parameters":{"id":1421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1420,"mutability":"mutable","name":"value","nameLocation":"10162:5:9","nodeType":"VariableDeclaration","scope":1546,"src":"10154:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1419,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:9"},"returnParameters":{"id":1424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1546,"src":"10192:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1422,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:9"},"scope":1709,"src":"10139:916:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1581,"nodeType":"Block","src":"11290:167:9","statements":[{"id":1580,"nodeType":"UncheckedBlock","src":"11300:151:9","statements":[{"assignments":[1558],"declarations":[{"constant":false,"id":1558,"mutability":"mutable","name":"result","nameLocation":"11332:6:9","nodeType":"VariableDeclaration","scope":1580,"src":"11324:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1557,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1562,"initialValue":{"arguments":[{"id":1560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"11347:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1559,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[1546,1582],"referencedDeclaration":1546,"src":"11341:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1563,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"11374:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$850","typeString":"enum Math.Rounding"},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1564,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"11384:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$850","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1565,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"11396:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$850_$","typeString":"type(enum Math.Rounding)"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:9","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":848,"src":"11396:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$850","typeString":"enum Math.Rounding"}},"src":"11384:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1569,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"11417:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"11426:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:9","trueExpression":{"hexValue":"31","id":1574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1577,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1556,"id":1579,"nodeType":"Return","src":"11367:73:9"}]}]},"documentation":{"id":1547,"nodeType":"StructuredDocumentation","src":"11061:143:9","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1582,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:9","nodeType":"FunctionDefinition","parameters":{"id":1553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1549,"mutability":"mutable","name":"value","nameLocation":"11232:5:9","nodeType":"VariableDeclaration","scope":1582,"src":"11224:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1552,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:9","nodeType":"VariableDeclaration","scope":1582,"src":"11239:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$850","typeString":"enum Math.Rounding"},"typeName":{"id":1551,"nodeType":"UserDefinedTypeName","pathNode":{"id":1550,"name":"Rounding","nameLocations":["11239:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":850,"src":"11239:8:9"},"referencedDeclaration":850,"src":"11239:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$850","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:9"},"returnParameters":{"id":1556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1582,"src":"11281:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1554,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:9"},"scope":1709,"src":"11209:248:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1668,"nodeType":"Block","src":"11771:600:9","statements":[{"assignments":[1591],"declarations":[{"constant":false,"id":1591,"mutability":"mutable","name":"result","nameLocation":"11789:6:9","nodeType":"VariableDeclaration","scope":1668,"src":"11781:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1590,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1593,"initialValue":{"hexValue":"30","id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:9"},{"id":1665,"nodeType":"UncheckedBlock","src":"11809:533:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"11837:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1608,"nodeType":"IfStatement","src":"11833:98:9","trueBody":{"id":1607,"nodeType":"Block","src":"11855:76:9","statements":[{"expression":{"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"11873:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1602,"nodeType":"ExpressionStatement","src":"11873:13:9"},{"expression":{"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1603,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"11904:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1606,"nodeType":"ExpressionStatement","src":"11904:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"11948:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1623,"nodeType":"IfStatement","src":"11944:95:9","trueBody":{"id":1622,"nodeType":"Block","src":"11965:74:9","statements":[{"expression":{"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"11983:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1617,"nodeType":"ExpressionStatement","src":"11983:12:9"},{"expression":{"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1618,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"12013:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1621,"nodeType":"ExpressionStatement","src":"12013:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"12056:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1638,"nodeType":"IfStatement","src":"12052:95:9","trueBody":{"id":1637,"nodeType":"Block","src":"12073:74:9","statements":[{"expression":{"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"12091:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1632,"nodeType":"ExpressionStatement","src":"12091:12:9"},{"expression":{"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1633,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"12121:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1636,"nodeType":"ExpressionStatement","src":"12121:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"12164:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1653,"nodeType":"IfStatement","src":"12160:95:9","trueBody":{"id":1652,"nodeType":"Block","src":"12181:74:9","statements":[{"expression":{"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"12199:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1647,"nodeType":"ExpressionStatement","src":"12199:12:9"},{"expression":{"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1648,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"12229:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1651,"nodeType":"ExpressionStatement","src":"12229:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"12272:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1664,"nodeType":"IfStatement","src":"12268:64:9","trueBody":{"id":1663,"nodeType":"Block","src":"12288:44:9","statements":[{"expression":{"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1659,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"12306:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1662,"nodeType":"ExpressionStatement","src":"12306:11:9"}]}}]},{"expression":{"id":1666,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"12358:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1589,"id":1667,"nodeType":"Return","src":"12351:13:9"}]},"documentation":{"id":1583,"nodeType":"StructuredDocumentation","src":"11463:240:9","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":1669,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:9","nodeType":"FunctionDefinition","parameters":{"id":1586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"mutability":"mutable","name":"value","nameLocation":"11732:5:9","nodeType":"VariableDeclaration","scope":1669,"src":"11724:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1584,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:9"},"returnParameters":{"id":1589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1669,"src":"11762:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1587,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:9"},"scope":1709,"src":"11708:663:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1707,"nodeType":"Block","src":"12608:174:9","statements":[{"id":1706,"nodeType":"UncheckedBlock","src":"12618:158:9","statements":[{"assignments":[1681],"declarations":[{"constant":false,"id":1681,"mutability":"mutable","name":"result","nameLocation":"12650:6:9","nodeType":"VariableDeclaration","scope":1706,"src":"12642:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1685,"initialValue":{"arguments":[{"id":1683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"12666:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1682,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[1669,1708],"referencedDeclaration":1669,"src":"12659:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1686,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"12693:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$850","typeString":"enum Math.Rounding"},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1687,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"12703:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$850","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1688,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"12715:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$850_$","typeString":"type(enum Math.Rounding)"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:9","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":848,"src":"12715:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$850","typeString":"enum Math.Rounding"}},"src":"12703:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1692,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"12736:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":1693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:9","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1695,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"12751:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:9","trueExpression":{"hexValue":"31","id":1700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1703,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1679,"id":1705,"nodeType":"Return","src":"12686:79:9"}]}]},"documentation":{"id":1670,"nodeType":"StructuredDocumentation","src":"12377:144:9","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1708,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:9","nodeType":"FunctionDefinition","parameters":{"id":1676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"mutability":"mutable","name":"value","nameLocation":"12550:5:9","nodeType":"VariableDeclaration","scope":1708,"src":"12542:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1671,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1675,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:9","nodeType":"VariableDeclaration","scope":1708,"src":"12557:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$850","typeString":"enum Math.Rounding"},"typeName":{"id":1674,"nodeType":"UserDefinedTypeName","pathNode":{"id":1673,"name":"Rounding","nameLocations":["12557:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":850,"src":"12557:8:9"},"referencedDeclaration":850,"src":"12557:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$850","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:9"},"returnParameters":{"id":1679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1708,"src":"12599:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1677,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:9"},"scope":1709,"src":"12526:256:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1710,"src":"202:12582:9","usedErrors":[]}],"src":"103:12682:9"},"id":9},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[1814]},"id":1815,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1711,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":1712,"nodeType":"StructuredDocumentation","src":"134:80:10","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1814,"linearizedBaseContracts":[1814],"name":"SignedMath","nameLocation":"223:10:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1729,"nodeType":"Block","src":"375:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1722,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"392:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1723,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"396:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1726,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"404:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:10","trueExpression":{"id":1725,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"400:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1721,"id":1728,"nodeType":"Return","src":"385:20:10"}]},"documentation":{"id":1713,"nodeType":"StructuredDocumentation","src":"240:66:10","text":" @dev Returns the largest of two signed numbers."},"id":1730,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:10","nodeType":"FunctionDefinition","parameters":{"id":1718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"mutability":"mutable","name":"a","nameLocation":"331:1:10","nodeType":"VariableDeclaration","scope":1730,"src":"324:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1714,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1717,"mutability":"mutable","name":"b","nameLocation":"341:1:10","nodeType":"VariableDeclaration","scope":1730,"src":"334:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1716,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:10"},"returnParameters":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1730,"src":"367:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1719,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:10"},"scope":1814,"src":"311:101:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1747,"nodeType":"Block","src":"554:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1740,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"571:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1741,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"575:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1744,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"583:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:10","trueExpression":{"id":1743,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"579:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1739,"id":1746,"nodeType":"Return","src":"564:20:10"}]},"documentation":{"id":1731,"nodeType":"StructuredDocumentation","src":"418:67:10","text":" @dev Returns the smallest of two signed numbers."},"id":1748,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:10","nodeType":"FunctionDefinition","parameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1733,"mutability":"mutable","name":"a","nameLocation":"510:1:10","nodeType":"VariableDeclaration","scope":1748,"src":"503:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1732,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1735,"mutability":"mutable","name":"b","nameLocation":"520:1:10","nodeType":"VariableDeclaration","scope":1748,"src":"513:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1734,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:10"},"returnParameters":{"id":1739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1748,"src":"546:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1737,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:10"},"scope":1814,"src":"490:101:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1791,"nodeType":"Block","src":"796:162:10","statements":[{"assignments":[1759],"declarations":[{"constant":false,"id":1759,"mutability":"mutable","name":"x","nameLocation":"865:1:10","nodeType":"VariableDeclaration","scope":1791,"src":"858:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1758,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1772,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1760,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"870:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1761,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"874:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1763,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1764,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"881:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1765,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"885:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1767,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1770,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:10"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1773,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"910:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1778,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"930:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1776,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:10","typeDescriptions":{}}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1774,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:10","typeDescriptions":{}}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1783,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"944:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1784,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"948:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1786,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1788,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1757,"id":1790,"nodeType":"Return","src":"903:48:10"}]},"documentation":{"id":1749,"nodeType":"StructuredDocumentation","src":"597:126:10","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":1792,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:10","nodeType":"FunctionDefinition","parameters":{"id":1754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"mutability":"mutable","name":"a","nameLocation":"752:1:10","nodeType":"VariableDeclaration","scope":1792,"src":"745:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1750,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1753,"mutability":"mutable","name":"b","nameLocation":"762:1:10","nodeType":"VariableDeclaration","scope":1792,"src":"755:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1752,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:10"},"returnParameters":{"id":1757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1792,"src":"788:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1755,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:10"},"scope":1814,"src":"728:230:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1812,"nodeType":"Block","src":"1102:158:10","statements":[{"id":1811,"nodeType":"UncheckedBlock","src":"1112:142:10","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1802,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"1227:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":1803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:10","subExpression":{"id":1806,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"1241:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:10","trueExpression":{"id":1805,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"1236:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1800,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:10","typeDescriptions":{}}},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1799,"id":1810,"nodeType":"Return","src":"1212:31:10"}]}]},"documentation":{"id":1793,"nodeType":"StructuredDocumentation","src":"964:78:10","text":" @dev Returns the absolute unsigned value of a signed value."},"id":1813,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:10","nodeType":"FunctionDefinition","parameters":{"id":1796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1795,"mutability":"mutable","name":"n","nameLocation":"1067:1:10","nodeType":"VariableDeclaration","scope":1813,"src":"1060:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1794,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:10"},"returnParameters":{"id":1799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1813,"src":"1093:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1797,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:10"},"scope":1814,"src":"1047:213:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1815,"src":"215:1047:10","usedErrors":[]}],"src":"109:1154:10"},"id":10},"contracts/FathomVault.sol":{"ast":{"absolutePath":"contracts/FathomVault.sol","exportedSymbols":{"AccessControl":[315],"FathomVault":[6329],"FeeAssessment":[7743],"IAccountant":[6345],"IDepositLimitModule":[6355],"IERC20":[531],"IERC20Metadata":[556],"IERC4626":[6543],"IFactory":[6553],"IStrategy":[6929],"IStrategyManager":[6944],"IVault":[7192],"IVaultEvents":[7293],"IWithdrawLimitModule":[7308],"Math":[1709],"ReentrancyGuard":[453],"RoleStatusChange":[7769],"Rounding":[7772],"ShareManagement":[7750],"StrategyChangeType":[7766],"StrategyParams":[7734],"VaultStorage":[7723],"WithdrawalState":[7763]},"id":6330,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":1816,"literals":["solidity","^","0.8",".16"],"nodeType":"PragmaDirective","src":"39:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1817,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6330,"sourceUnit":532,"src":"65:56:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":1818,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6330,"sourceUnit":557,"src":"122:75:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"@openzeppelin/contracts/utils/math/Math.sol","id":1819,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6330,"sourceUnit":1710,"src":"198:53:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":1821,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6330,"sourceUnit":316,"src":"252:79:11","symbolAliases":[{"foreign":{"id":1820,"name":"AccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"260:13:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/Interfaces/IVault.sol","file":"./Interfaces/IVault.sol","id":1822,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6330,"sourceUnit":7193,"src":"332:33:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":1823,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6330,"sourceUnit":454,"src":"366:62:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/VaultStorage.sol","file":"./VaultStorage.sol","id":1824,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6330,"sourceUnit":7724,"src":"429:28:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Interfaces/IVaultEvents.sol","file":"./Interfaces/IVaultEvents.sol","id":1825,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6330,"sourceUnit":7294,"src":"458:39:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Interfaces/IAccountant.sol","file":"./Interfaces/IAccountant.sol","id":1826,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6330,"sourceUnit":6346,"src":"498:38:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Interfaces/IStrategy.sol","file":"./Interfaces/IStrategy.sol","id":1827,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6330,"sourceUnit":6930,"src":"537:36:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Interfaces/IDepositLimitModule.sol","file":"./Interfaces/IDepositLimitModule.sol","id":1828,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6330,"sourceUnit":6356,"src":"574:46:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Interfaces/IWithdrawLimitModule.sol","file":"./Interfaces/IWithdrawLimitModule.sol","id":1829,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6330,"sourceUnit":7309,"src":"621:47:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Interfaces/IFactory.sol","file":"./Interfaces/IFactory.sol","id":1830,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6330,"sourceUnit":6554,"src":"669:35:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Interfaces/IStrategyManager.sol","file":"./Interfaces/IStrategyManager.sol","id":1831,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6330,"sourceUnit":6945,"src":"705:43:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1833,"name":"IERC20","nameLocations":["1055:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":531,"src":"1055:6:11"},"id":1834,"nodeType":"InheritanceSpecifier","src":"1055:6:11"},{"baseName":{"id":1835,"name":"IERC20Metadata","nameLocations":["1063:14:11"],"nodeType":"IdentifierPath","referencedDeclaration":556,"src":"1063:14:11"},"id":1836,"nodeType":"InheritanceSpecifier","src":"1063:14:11"},{"baseName":{"id":1837,"name":"AccessControl","nameLocations":["1079:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"1079:13:11"},"id":1838,"nodeType":"InheritanceSpecifier","src":"1079:13:11"},{"baseName":{"id":1839,"name":"IVault","nameLocations":["1094:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":7192,"src":"1094:6:11"},"id":1840,"nodeType":"InheritanceSpecifier","src":"1094:6:11"},{"baseName":{"id":1841,"name":"ReentrancyGuard","nameLocations":["1102:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":453,"src":"1102:15:11"},"id":1842,"nodeType":"InheritanceSpecifier","src":"1102:15:11"},{"baseName":{"id":1843,"name":"VaultStorage","nameLocations":["1119:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":7723,"src":"1119:12:11"},"id":1844,"nodeType":"InheritanceSpecifier","src":"1119:12:11"},{"baseName":{"id":1845,"name":"IVaultEvents","nameLocations":["1133:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":7293,"src":"1133:12:11"},"id":1846,"nodeType":"InheritanceSpecifier","src":"1133:12:11"}],"canonicalName":"FathomVault","contractDependencies":[],"contractKind":"contract","documentation":{"id":1832,"nodeType":"StructuredDocumentation","src":"750:237:11","text":"@title Yearn V3 Vault\n@notice The Yearn VaultV3 is designed as a non-opinionated system to distribute funds of \ndepositors for a specific `asset` into different opportunities (aka Strategies)\nand manage accounting in a robust way."},"fullyImplemented":true,"id":6329,"linearizedBaseContracts":[6329,7293,7723,453,7192,6543,315,556,531,831,843,388,578],"name":"FathomVault","nameLocation":"1040:11:11","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1849,"libraryName":{"id":1847,"name":"Math","nameLocations":["1322:4:11"],"nodeType":"IdentifierPath","referencedDeclaration":1709,"src":"1322:4:11"},"nodeType":"UsingForDirective","src":"1316:23:11","typeName":{"id":1848,"name":"uint256","nodeType":"ElementaryTypeName","src":"1331:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"errorSelector":"e2364765","id":1851,"name":"InvalidAssetDecimals","nameLocation":"1351:20:11","nodeType":"ErrorDefinition","parameters":{"id":1850,"nodeType":"ParameterList","parameters":[],"src":"1371:2:11"},"src":"1345:29:11"},{"errorSelector":"fdfbb0b7","id":1853,"name":"ProfitUnlockTimeTooLong","nameLocation":"1385:23:11","nodeType":"ErrorDefinition","parameters":{"id":1852,"nodeType":"ParameterList","parameters":[],"src":"1408:2:11"},"src":"1379:32:11"},{"errorSelector":"2fc50d60","id":1855,"name":"ERC20InsufficientAllowance","nameLocation":"1422:26:11","nodeType":"ErrorDefinition","parameters":{"id":1854,"nodeType":"ParameterList","parameters":[],"src":"1448:2:11"},"src":"1416:35:11"},{"errorSelector":"356680b7","id":1857,"name":"InsufficientFunds","nameLocation":"1462:17:11","nodeType":"ErrorDefinition","parameters":{"id":1856,"nodeType":"ParameterList","parameters":[],"src":"1479:2:11"},"src":"1456:26:11"},{"errorSelector":"d92e233d","id":1859,"name":"ZeroAddress","nameLocation":"1493:11:11","nodeType":"ErrorDefinition","parameters":{"id":1858,"nodeType":"ParameterList","parameters":[],"src":"1504:2:11"},"src":"1487:20:11"},{"errorSelector":"c77deac2","id":1861,"name":"ERC20PermitExpired","nameLocation":"1518:18:11","nodeType":"ErrorDefinition","parameters":{"id":1860,"nodeType":"ParameterList","parameters":[],"src":"1536:2:11"},"src":"1512:27:11"},{"errorSelector":"822a64c8","id":1863,"name":"ERC20PermitInvalidSignature","nameLocation":"1550:27:11","nodeType":"ErrorDefinition","parameters":{"id":1862,"nodeType":"ParameterList","parameters":[],"src":"1577:2:11"},"src":"1544:36:11"},{"errorSelector":"39996567","id":1865,"name":"InsufficientShares","nameLocation":"1591:18:11","nodeType":"ErrorDefinition","parameters":{"id":1864,"nodeType":"ParameterList","parameters":[],"src":"1609:2:11"},"src":"1585:27:11"},{"errorSelector":"c6378420","id":1867,"name":"InactiveStrategy","nameLocation":"1623:16:11","nodeType":"ErrorDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[],"src":"1639:2:11"},"src":"1617:25:11"},{"errorSelector":"0f3c3867","id":1869,"name":"StrategyIsShutdown","nameLocation":"1653:18:11","nodeType":"ErrorDefinition","parameters":{"id":1868,"nodeType":"ParameterList","parameters":[],"src":"1671:2:11"},"src":"1647:27:11"},{"errorSelector":"25d16c51","id":1871,"name":"ExceedDepositLimit","nameLocation":"1685:18:11","nodeType":"ErrorDefinition","parameters":{"id":1870,"nodeType":"ParameterList","parameters":[],"src":"1703:2:11"},"src":"1679:27:11"},{"errorSelector":"7c946ed7","id":1873,"name":"ZeroValue","nameLocation":"1717:9:11","nodeType":"ErrorDefinition","parameters":{"id":1872,"nodeType":"ParameterList","parameters":[],"src":"1726:2:11"},"src":"1711:18:11"},{"errorSelector":"d3f68508","id":1875,"name":"MaxLoss","nameLocation":"1740:7:11","nodeType":"ErrorDefinition","parameters":{"id":1874,"nodeType":"ParameterList","parameters":[],"src":"1747:2:11"},"src":"1734:16:11"},{"errorSelector":"96d80433","id":1877,"name":"InsufficientAssets","nameLocation":"1761:18:11","nodeType":"ErrorDefinition","parameters":{"id":1876,"nodeType":"ParameterList","parameters":[],"src":"1779:2:11"},"src":"1755:27:11"},{"errorSelector":"0fecbc72","id":1879,"name":"TooMuchLoss","nameLocation":"1793:11:11","nodeType":"ErrorDefinition","parameters":{"id":1878,"nodeType":"ParameterList","parameters":[],"src":"1804:2:11"},"src":"1787:20:11"},{"errorSelector":"c891add2","id":1881,"name":"InvalidAsset","nameLocation":"1818:12:11","nodeType":"ErrorDefinition","parameters":{"id":1880,"nodeType":"ParameterList","parameters":[],"src":"1830:2:11"},"src":"1812:21:11"},{"errorSelector":"c976754d","id":1883,"name":"StrategyAlreadyActive","nameLocation":"1844:21:11","nodeType":"ErrorDefinition","parameters":{"id":1882,"nodeType":"ParameterList","parameters":[],"src":"1865:2:11"},"src":"1838:30:11"},{"errorSelector":"d518e0bc","id":1885,"name":"StrategyHasDebt","nameLocation":"1879:15:11","nodeType":"ErrorDefinition","parameters":{"id":1884,"nodeType":"ParameterList","parameters":[],"src":"1894:2:11"},"src":"1873:24:11"},{"errorSelector":"84df06b0","id":1887,"name":"DebtDidntChange","nameLocation":"1908:15:11","nodeType":"ErrorDefinition","parameters":{"id":1886,"nodeType":"ParameterList","parameters":[],"src":"1923:2:11"},"src":"1902:24:11"},{"errorSelector":"e5627f74","id":1889,"name":"StrategyHasUnrealisedLosses","nameLocation":"1937:27:11","nodeType":"ErrorDefinition","parameters":{"id":1888,"nodeType":"ParameterList","parameters":[],"src":"1964:2:11"},"src":"1931:36:11"},{"errorSelector":"d49d8c23","id":1891,"name":"DebtHigherThanMaxDebt","nameLocation":"1978:21:11","nodeType":"ErrorDefinition","parameters":{"id":1890,"nodeType":"ParameterList","parameters":[],"src":"1999:2:11"},"src":"1972:30:11"},{"errorSelector":"c9733222","id":1893,"name":"UsingModule","nameLocation":"2013:11:11","nodeType":"ErrorDefinition","parameters":{"id":1892,"nodeType":"ParameterList","parameters":[],"src":"2024:2:11"},"src":"2007:20:11"},{"errorSelector":"9c82830a","id":1895,"name":"UsingDepositLimit","nameLocation":"2038:17:11","nodeType":"ErrorDefinition","parameters":{"id":1894,"nodeType":"ParameterList","parameters":[],"src":"2055:2:11"},"src":"2032:26:11"},{"errorSelector":"967642d9","id":1897,"name":"CallerIsNotTheFutureRoleManager","nameLocation":"2069:31:11","nodeType":"ErrorDefinition","parameters":{"id":1896,"nodeType":"ParameterList","parameters":[],"src":"2100:2:11"},"src":"2063:40:11"},{"errorSelector":"37deae07","id":1899,"name":"StrategyDebtIsLessThanAssetsNeeded","nameLocation":"2114:34:11","nodeType":"ErrorDefinition","parameters":{"id":1898,"nodeType":"ParameterList","parameters":[],"src":"2148:2:11"},"src":"2108:43:11"},{"baseFunctions":[543],"constant":false,"functionSelector":"06fdde03","id":1902,"mutability":"mutable","name":"name","nameLocation":"2221:4:11","nodeType":"VariableDeclaration","overrides":{"id":1901,"nodeType":"OverrideSpecifier","overrides":[],"src":"2212:8:11"},"scope":6329,"src":"2198:27:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1900,"name":"string","nodeType":"ElementaryTypeName","src":"2198:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"baseFunctions":[549],"constant":false,"functionSelector":"95d89b41","id":1905,"mutability":"mutable","name":"symbol","nameLocation":"2297:6:11","nodeType":"VariableDeclaration","overrides":{"id":1904,"nodeType":"OverrideSpecifier","overrides":[],"src":"2288:8:11"},"scope":6329,"src":"2274:29:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1903,"name":"string","nodeType":"ElementaryTypeName","src":"2274:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"4800d97f","id":1908,"mutability":"immutable","name":"ASSET","nameLocation":"2408:5:11","nodeType":"VariableDeclaration","scope":6329,"src":"2384:29:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"},"typeName":{"id":1907,"nodeType":"UserDefinedTypeName","pathNode":{"id":1906,"name":"IERC20","nameLocations":["2384:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":531,"src":"2384:6:11"},"referencedDeclaration":531,"src":"2384:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"2e0f2625","id":1910,"mutability":"immutable","name":"DECIMALS","nameLocation":"2466:8:11","nodeType":"VariableDeclaration","scope":6329,"src":"2441:33:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1909,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"2dd31000","id":1912,"mutability":"immutable","name":"FACTORY","nameLocation":"2528:7:11","nodeType":"VariableDeclaration","scope":6329,"src":"2503:32:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1911,"name":"address","nodeType":"ElementaryTypeName","src":"2503:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"16d3bfbb","id":1915,"mutability":"immutable","name":"ONE_YEAR","nameLocation":"2566:8:11","nodeType":"VariableDeclaration","scope":6329,"src":"2541:44:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1913,"name":"uint256","nodeType":"ElementaryTypeName","src":"2541:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3331353536393532","id":1914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2577:8:11","typeDescriptions":{"typeIdentifier":"t_rational_31556952_by_1","typeString":"int_const 31556952"},"value":"31556952"},"visibility":"public"},{"body":{"id":2014,"nodeType":"Block","src":"2821:938:11","statements":[{"expression":{"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1931,"name":"ASSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"2831:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1932,"name":"_asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"2839:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}},"src":"2831:14:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}},"id":1934,"nodeType":"ExpressionStatement","src":"2831:14:11"},{"expression":{"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1935,"name":"DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"2855:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"arguments":[{"id":1939,"name":"_asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"2889:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}],"id":1938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2881:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1937,"name":"address","nodeType":"ElementaryTypeName","src":"2881:7:11","typeDescriptions":{}}},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1936,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"2866:14:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$556_$","typeString":"type(contract IERC20Metadata)"}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2866:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$556","typeString":"contract IERC20Metadata"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2898:8:11","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":555,"src":"2866:40:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2866:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2855:53:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1945,"nodeType":"ExpressionStatement","src":"2855:53:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1946,"name":"DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"2922:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"323536","id":1947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2934:3:11","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"2922:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1953,"nodeType":"IfStatement","src":"2918:75:11","trueBody":{"id":1952,"nodeType":"Block","src":"2939:54:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1949,"name":"InvalidAssetDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"2960:20:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2960:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1951,"nodeType":"RevertStatement","src":"2953:29:11"}]}},{"expression":{"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1954,"name":"FACTORY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"3003:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1955,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3013:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3017:6:11","memberName":"sender","nodeType":"MemberAccess","src":"3013:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3003:20:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1958,"nodeType":"ExpressionStatement","src":"3003:20:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1959,"name":"_profitMaxUnlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"3093:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331353536393532","id":1960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3116:8:11","typeDescriptions":{"typeIdentifier":"t_rational_31556952_by_1","typeString":"int_const 31556952"},"value":"31556952"},"src":"3093:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1966,"nodeType":"IfStatement","src":"3089:94:11","trueBody":{"id":1965,"nodeType":"Block","src":"3126:57:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1962,"name":"ProfitUnlockTimeTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"3147:23:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3147:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1964,"nodeType":"RevertStatement","src":"3140:32:11"}]}},{"expression":{"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1967,"name":"profitMaxUnlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7625,"src":"3193:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1968,"name":"_profitMaxUnlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"3215:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3193:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1970,"nodeType":"ExpressionStatement","src":"3193:42:11"},{"expression":{"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1971,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"3246:4:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1972,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"3253:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3246:12:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1974,"nodeType":"ExpressionStatement","src":"3246:12:11"},{"expression":{"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1975,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"3268:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1976,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"3277:7:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3268:16:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1978,"nodeType":"ExpressionStatement","src":"3268:16:11"},{"expression":{"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1979,"name":"roleManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"3294:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1980,"name":"_roleManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"3308:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3294:26:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1982,"nodeType":"ExpressionStatement","src":"3294:26:11"},{"expression":{"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1983,"name":"DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7642,"src":"3331:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":1987,"name":"DOMAIN_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7640,"src":"3401:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":1991,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"3451:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3445:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1989,"name":"bytes","nodeType":"ElementaryTypeName","src":"3445:5:11","typeDescriptions":{}}},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3445:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1988,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3435:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3435:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":1997,"name":"API_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7571,"src":"3524:11:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3518:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1995,"name":"bytes","nodeType":"ElementaryTypeName","src":"3518:5:11","typeDescriptions":{}}},"id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3518:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1994,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3508:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3508:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2000,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3585:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3591:7:11","memberName":"chainid","nodeType":"MemberAccess","src":"3585:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2004,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3644:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":2003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3636:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2002,"name":"address","nodeType":"ElementaryTypeName","src":"3636:7:11","typeDescriptions":{}}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3636:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1985,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3373:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3377:6:11","memberName":"encode","nodeType":"MemberAccess","src":"3373:10:11","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3373:317:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1984,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3350:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3350:350:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3331:369:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2009,"nodeType":"ExpressionStatement","src":"3331:369:11"},{"expression":{"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2010,"name":"strategyManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7573,"src":"3711:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2011,"name":"_strategyManagerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"3729:23:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3711:41:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2013,"nodeType":"ExpressionStatement","src":"3711:41:11"}]},"id":2015,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1918,"mutability":"mutable","name":"_asset","nameLocation":"2639:6:11","nodeType":"VariableDeclaration","scope":2015,"src":"2632:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"},"typeName":{"id":1917,"nodeType":"UserDefinedTypeName","pathNode":{"id":1916,"name":"IERC20","nameLocations":["2632:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":531,"src":"2632:6:11"},"referencedDeclaration":531,"src":"2632:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1920,"mutability":"mutable","name":"_name","nameLocation":"2669:5:11","nodeType":"VariableDeclaration","scope":2015,"src":"2655:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1919,"name":"string","nodeType":"ElementaryTypeName","src":"2655:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1922,"mutability":"mutable","name":"_symbol","nameLocation":"2698:7:11","nodeType":"VariableDeclaration","scope":2015,"src":"2684:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1921,"name":"string","nodeType":"ElementaryTypeName","src":"2684:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1924,"mutability":"mutable","name":"_roleManager","nameLocation":"2723:12:11","nodeType":"VariableDeclaration","scope":2015,"src":"2715:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1923,"name":"address","nodeType":"ElementaryTypeName","src":"2715:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1926,"mutability":"mutable","name":"_profitMaxUnlockTime","nameLocation":"2753:20:11","nodeType":"VariableDeclaration","scope":2015,"src":"2745:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1925,"name":"uint256","nodeType":"ElementaryTypeName","src":"2745:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1928,"mutability":"mutable","name":"_strategyManagerAddress","nameLocation":"2791:23:11","nodeType":"VariableDeclaration","scope":2015,"src":"2783:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1927,"name":"address","nodeType":"ElementaryTypeName","src":"2783:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2622:198:11"},"returnParameters":{"id":1930,"nodeType":"ParameterList","parameters":[],"src":"2821:0:11"},"scope":6329,"src":"2611:1148:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2048,"nodeType":"Block","src":"3884:292:11","statements":[{"assignments":[2025],"declarations":[{"constant":false,"id":2025,"mutability":"mutable","name":"currentAllowance","nameLocation":"3963:16:11","nodeType":"VariableDeclaration","scope":2048,"src":"3955:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2024,"name":"uint256","nodeType":"ElementaryTypeName","src":"3955:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2031,"initialValue":{"baseExpression":{"baseExpression":{"id":2026,"name":"_allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"3982:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2028,"indexExpression":{"id":2027,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"3993:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3982:17:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2030,"indexExpression":{"id":2029,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"4000:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3982:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3955:53:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2032,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"4022:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2033,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"4041:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4022:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2039,"nodeType":"IfStatement","src":"4018:91:11","trueBody":{"id":2038,"nodeType":"Block","src":"4049:60:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2035,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"4070:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4070:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2037,"nodeType":"RevertStatement","src":"4063:35:11"}]}},{"expression":{"arguments":[{"id":2041,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"4127:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2042,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"4134:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2043,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"4143:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2044,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"4162:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4143:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2040,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"4118:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4118:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2047,"nodeType":"ExpressionStatement","src":"4118:51:11"}]},"id":2049,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"3811:15:11","nodeType":"FunctionDefinition","parameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2017,"mutability":"mutable","name":"owner","nameLocation":"3835:5:11","nodeType":"VariableDeclaration","scope":2049,"src":"3827:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2016,"name":"address","nodeType":"ElementaryTypeName","src":"3827:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2019,"mutability":"mutable","name":"spender","nameLocation":"3850:7:11","nodeType":"VariableDeclaration","scope":2049,"src":"3842:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2018,"name":"address","nodeType":"ElementaryTypeName","src":"3842:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2021,"mutability":"mutable","name":"amount","nameLocation":"3867:6:11","nodeType":"VariableDeclaration","scope":2049,"src":"3859:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2020,"name":"uint256","nodeType":"ElementaryTypeName","src":"3859:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3826:48:11"},"returnParameters":{"id":2023,"nodeType":"ParameterList","parameters":[],"src":"3884:0:11"},"scope":6329,"src":"3802:374:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2118,"nodeType":"Block","src":"4260:472:11","statements":[{"assignments":[2059],"declarations":[{"constant":false,"id":2059,"mutability":"mutable","name":"currentBalance","nameLocation":"4278:14:11","nodeType":"VariableDeclaration","scope":2118,"src":"4270:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2058,"name":"uint256","nodeType":"ElementaryTypeName","src":"4270:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2063,"initialValue":{"baseExpression":{"id":2060,"name":"_balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"4295:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2062,"indexExpression":{"id":2061,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"4306:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4295:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4270:43:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2064,"name":"currentBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"4327:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2065,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"4344:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4327:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2071,"nodeType":"IfStatement","src":"4323:80:11","trueBody":{"id":2070,"nodeType":"Block","src":"4352:51:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2067,"name":"InsufficientFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"4373:17:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4373:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2069,"nodeType":"RevertStatement","src":"4366:26:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2072,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"4416:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4434:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4426:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2073,"name":"address","nodeType":"ElementaryTypeName","src":"4426:7:11","typeDescriptions":{}}},"id":2076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4426:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4416:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2078,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"4440:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4460:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4452:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2079,"name":"address","nodeType":"ElementaryTypeName","src":"4452:7:11","typeDescriptions":{}}},"id":2082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4452:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4440:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4416:46:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2089,"nodeType":"IfStatement","src":"4412:97:11","trueBody":{"id":2088,"nodeType":"Block","src":"4464:45:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2085,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"4485:11:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4485:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2087,"nodeType":"RevertStatement","src":"4478:20:11"}]}},{"expression":{"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2090,"name":"_balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"4519:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2092,"indexExpression":{"id":2091,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"4530:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4519:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2093,"name":"currentBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"4540:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2094,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"4557:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4540:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4519:44:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2097,"nodeType":"ExpressionStatement","src":"4519:44:11"},{"assignments":[2099],"declarations":[{"constant":false,"id":2099,"mutability":"mutable","name":"receiverBalance","nameLocation":"4581:15:11","nodeType":"VariableDeclaration","scope":2118,"src":"4573:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2098,"name":"uint256","nodeType":"ElementaryTypeName","src":"4573:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2103,"initialValue":{"baseExpression":{"id":2100,"name":"_balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"4599:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2102,"indexExpression":{"id":2101,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"4610:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4599:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4573:46:11"},{"expression":{"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2104,"name":"_balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"4629:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2106,"indexExpression":{"id":2105,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"4640:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4629:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2107,"name":"receiverBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"4652:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2108,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"4670:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4652:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4629:47:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2111,"nodeType":"ExpressionStatement","src":"4629:47:11"},{"eventCall":{"arguments":[{"id":2113,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"4700:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2114,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"4708:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2115,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"4718:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2112,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"4691:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4691:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2117,"nodeType":"EmitStatement","src":"4686:39:11"}]},"id":2119,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"4191:9:11","nodeType":"FunctionDefinition","parameters":{"id":2056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2051,"mutability":"mutable","name":"sender","nameLocation":"4209:6:11","nodeType":"VariableDeclaration","scope":2119,"src":"4201:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2050,"name":"address","nodeType":"ElementaryTypeName","src":"4201:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2053,"mutability":"mutable","name":"receiver","nameLocation":"4225:8:11","nodeType":"VariableDeclaration","scope":2119,"src":"4217:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2052,"name":"address","nodeType":"ElementaryTypeName","src":"4217:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2055,"mutability":"mutable","name":"amount","nameLocation":"4243:6:11","nodeType":"VariableDeclaration","scope":2119,"src":"4235:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2054,"name":"uint256","nodeType":"ElementaryTypeName","src":"4235:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4200:50:11"},"returnParameters":{"id":2057,"nodeType":"ParameterList","parameters":[],"src":"4260:0:11"},"scope":6329,"src":"4182:550:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2145,"nodeType":"Block","src":"4835:126:11","statements":[{"expression":{"arguments":[{"id":2131,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"4861:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2132,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4869:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4873:6:11","memberName":"sender","nodeType":"MemberAccess","src":"4869:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2134,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"4881:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2130,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"4845:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4845:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2136,"nodeType":"ExpressionStatement","src":"4845:43:11"},{"expression":{"arguments":[{"id":2138,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"4908:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2139,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"4916:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2140,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"4926:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2137,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"4898:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4898:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2142,"nodeType":"ExpressionStatement","src":"4898:35:11"},{"expression":{"hexValue":"74727565","id":2143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4950:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2129,"id":2144,"nodeType":"Return","src":"4943:11:11"}]},"id":2146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferFrom","nameLocation":"4747:13:11","nodeType":"FunctionDefinition","parameters":{"id":2126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2121,"mutability":"mutable","name":"sender","nameLocation":"4769:6:11","nodeType":"VariableDeclaration","scope":2146,"src":"4761:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2120,"name":"address","nodeType":"ElementaryTypeName","src":"4761:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2123,"mutability":"mutable","name":"receiver","nameLocation":"4785:8:11","nodeType":"VariableDeclaration","scope":2146,"src":"4777:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2122,"name":"address","nodeType":"ElementaryTypeName","src":"4777:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2125,"mutability":"mutable","name":"amount","nameLocation":"4803:6:11","nodeType":"VariableDeclaration","scope":2146,"src":"4795:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2124,"name":"uint256","nodeType":"ElementaryTypeName","src":"4795:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4760:50:11"},"returnParameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2146,"src":"4829:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2127,"name":"bool","nodeType":"ElementaryTypeName","src":"4829:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4828:6:11"},"scope":6329,"src":"4738:223:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2191,"nodeType":"Block","src":"5057:224:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2157,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"5071:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5088:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5080:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2158,"name":"address","nodeType":"ElementaryTypeName","src":"5080:7:11","typeDescriptions":{}}},"id":2161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5071:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2163,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"5094:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5113:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5105:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2164,"name":"address","nodeType":"ElementaryTypeName","src":"5105:7:11","typeDescriptions":{}}},"id":2167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5105:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5094:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5071:44:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2174,"nodeType":"IfStatement","src":"5067:95:11","trueBody":{"id":2173,"nodeType":"Block","src":"5117:45:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2170,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"5138:11:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5138:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2172,"nodeType":"RevertStatement","src":"5131:20:11"}]}},{"expression":{"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2175,"name":"_allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"5171:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2178,"indexExpression":{"id":2176,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"5182:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5171:17:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2179,"indexExpression":{"id":2177,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"5189:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5171:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2180,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"5200:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5171:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2182,"nodeType":"ExpressionStatement","src":"5171:35:11"},{"eventCall":{"arguments":[{"id":2184,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"5230:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2185,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"5237:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2186,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"5246:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2183,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"5221:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5221:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2188,"nodeType":"EmitStatement","src":"5216:37:11"},{"expression":{"hexValue":"74727565","id":2189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5270:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2156,"id":2190,"nodeType":"Return","src":"5263:11:11"}]},"id":2192,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"4976:8:11","nodeType":"FunctionDefinition","parameters":{"id":2153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2148,"mutability":"mutable","name":"owner","nameLocation":"4993:5:11","nodeType":"VariableDeclaration","scope":2192,"src":"4985:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2147,"name":"address","nodeType":"ElementaryTypeName","src":"4985:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2150,"mutability":"mutable","name":"spender","nameLocation":"5008:7:11","nodeType":"VariableDeclaration","scope":2192,"src":"5000:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2149,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2152,"mutability":"mutable","name":"amount","nameLocation":"5025:6:11","nodeType":"VariableDeclaration","scope":2192,"src":"5017:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2151,"name":"uint256","nodeType":"ElementaryTypeName","src":"5017:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4984:48:11"},"returnParameters":{"id":2156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2192,"src":"5051:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2154,"name":"bool","nodeType":"ElementaryTypeName","src":"5051:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5050:6:11"},"scope":6329,"src":"4967:314:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2221,"nodeType":"Block","src":"5387:144:11","statements":[{"assignments":[2204],"declarations":[{"constant":false,"id":2204,"mutability":"mutable","name":"newAllowance","nameLocation":"5405:12:11","nodeType":"VariableDeclaration","scope":2221,"src":"5397:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2203,"name":"uint256","nodeType":"ElementaryTypeName","src":"5397:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2212,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":2205,"name":"_allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"5420:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2207,"indexExpression":{"id":2206,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"5431:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5420:17:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2209,"indexExpression":{"id":2208,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"5438:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5420:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2210,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"5449:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5420:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5397:58:11"},{"expression":{"arguments":[{"id":2214,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"5474:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2215,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"5481:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2216,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"5490:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2213,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"5465:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5465:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2218,"nodeType":"ExpressionStatement","src":"5465:38:11"},{"expression":{"hexValue":"74727565","id":2219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5520:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2202,"id":2220,"nodeType":"Return","src":"5513:11:11"}]},"id":2222,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseAllowance","nameLocation":"5296:18:11","nodeType":"FunctionDefinition","parameters":{"id":2199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2194,"mutability":"mutable","name":"owner","nameLocation":"5323:5:11","nodeType":"VariableDeclaration","scope":2222,"src":"5315:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2193,"name":"address","nodeType":"ElementaryTypeName","src":"5315:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2196,"mutability":"mutable","name":"spender","nameLocation":"5338:7:11","nodeType":"VariableDeclaration","scope":2222,"src":"5330:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2195,"name":"address","nodeType":"ElementaryTypeName","src":"5330:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2198,"mutability":"mutable","name":"amount","nameLocation":"5355:6:11","nodeType":"VariableDeclaration","scope":2222,"src":"5347:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2197,"name":"uint256","nodeType":"ElementaryTypeName","src":"5347:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5314:48:11"},"returnParameters":{"id":2202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2222,"src":"5381:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2200,"name":"bool","nodeType":"ElementaryTypeName","src":"5381:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5380:6:11"},"scope":6329,"src":"5287:244:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2251,"nodeType":"Block","src":"5637:144:11","statements":[{"assignments":[2234],"declarations":[{"constant":false,"id":2234,"mutability":"mutable","name":"newAllowance","nameLocation":"5655:12:11","nodeType":"VariableDeclaration","scope":2251,"src":"5647:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2233,"name":"uint256","nodeType":"ElementaryTypeName","src":"5647:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2242,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":2235,"name":"_allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"5670:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2237,"indexExpression":{"id":2236,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"5681:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5670:17:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2239,"indexExpression":{"id":2238,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"5688:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5670:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2240,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"5699:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5670:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5647:58:11"},{"expression":{"arguments":[{"id":2244,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"5724:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2245,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"5731:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2246,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"5740:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2243,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"5715:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5715:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2248,"nodeType":"ExpressionStatement","src":"5715:38:11"},{"expression":{"hexValue":"74727565","id":2249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5770:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2232,"id":2250,"nodeType":"Return","src":"5763:11:11"}]},"id":2252,"implemented":true,"kind":"function","modifiers":[],"name":"_decreaseAllowance","nameLocation":"5546:18:11","nodeType":"FunctionDefinition","parameters":{"id":2229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2224,"mutability":"mutable","name":"owner","nameLocation":"5573:5:11","nodeType":"VariableDeclaration","scope":2252,"src":"5565:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2223,"name":"address","nodeType":"ElementaryTypeName","src":"5565:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2226,"mutability":"mutable","name":"spender","nameLocation":"5588:7:11","nodeType":"VariableDeclaration","scope":2252,"src":"5580:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2225,"name":"address","nodeType":"ElementaryTypeName","src":"5580:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2228,"mutability":"mutable","name":"amount","nameLocation":"5605:6:11","nodeType":"VariableDeclaration","scope":2252,"src":"5597:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2227,"name":"uint256","nodeType":"ElementaryTypeName","src":"5597:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5564:48:11"},"returnParameters":{"id":2232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2252,"src":"5631:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2230,"name":"bool","nodeType":"ElementaryTypeName","src":"5631:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5630:6:11"},"scope":6329,"src":"5537:244:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2365,"nodeType":"Block","src":"5993:949:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2271,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"6007:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6024:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6016:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2272,"name":"address","nodeType":"ElementaryTypeName","src":"6016:7:11","typeDescriptions":{}}},"id":2275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6016:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6007:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2281,"nodeType":"IfStatement","src":"6003:70:11","trueBody":{"id":2280,"nodeType":"Block","src":"6028:45:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2277,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"6049:11:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6049:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2279,"nodeType":"RevertStatement","src":"6042:20:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2282,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"6086:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2283,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6097:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6103:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"6097:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6086:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2290,"nodeType":"IfStatement","src":"6082:84:11","trueBody":{"id":2289,"nodeType":"Block","src":"6114:52:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2286,"name":"ERC20PermitExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"6135:18:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6135:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2288,"nodeType":"RevertStatement","src":"6128:27:11"}]}},{"assignments":[2292],"declarations":[{"constant":false,"id":2292,"mutability":"mutable","name":"nonce","nameLocation":"6183:5:11","nodeType":"VariableDeclaration","scope":2365,"src":"6175:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2291,"name":"uint256","nodeType":"ElementaryTypeName","src":"6175:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2296,"initialValue":{"baseExpression":{"id":2293,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"6191:6:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2295,"indexExpression":{"id":2294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"6198:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6191:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6175:29:11"},{"assignments":[2298],"declarations":[{"constant":false,"id":2298,"mutability":"mutable","name":"structHash","nameLocation":"6223:10:11","nodeType":"VariableDeclaration","scope":2365,"src":"6215:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6215:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2310,"initialValue":{"arguments":[{"arguments":[{"id":2302,"name":"PERMIT_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7647,"src":"6257:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2303,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"6275:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2304,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"6282:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2305,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"6291:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2306,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"6299:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2307,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"6306:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2300,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6246:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6250:6:11","memberName":"encode","nodeType":"MemberAccess","src":"6246:10:11","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6246:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2299,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6236:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6236:80:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6215:101:11"},{"assignments":[2312],"declarations":[{"constant":false,"id":2312,"mutability":"mutable","name":"digest","nameLocation":"6335:6:11","nodeType":"VariableDeclaration","scope":2365,"src":"6327:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6327:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2321,"initialValue":{"arguments":[{"arguments":[{"hexValue":"1901","id":2316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6401:10:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":2317,"name":"DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7642,"src":"6429:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2318,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"6463:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2314,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6367:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6371:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"6367:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6367:120:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2313,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6344:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6344:153:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6327:170:11"},{"assignments":[2323],"declarations":[{"constant":false,"id":2323,"mutability":"mutable","name":"recoveredAddress","nameLocation":"6516:16:11","nodeType":"VariableDeclaration","scope":2365,"src":"6508:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2322,"name":"address","nodeType":"ElementaryTypeName","src":"6508:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2330,"initialValue":{"arguments":[{"id":2325,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"6545:6:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2326,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"6553:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2327,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"6556:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2328,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"6559:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2324,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6535:9:11","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6535:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6508:53:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2331,"name":"recoveredAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"6575:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6603:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6595:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2332,"name":"address","nodeType":"ElementaryTypeName","src":"6595:7:11","typeDescriptions":{}}},"id":2335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6595:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6575:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2337,"name":"recoveredAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"6609:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2338,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"6629:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6609:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6575:59:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2345,"nodeType":"IfStatement","src":"6571:126:11","trueBody":{"id":2344,"nodeType":"Block","src":"6636:61:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2341,"name":"ERC20PermitInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"6657:27:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6657:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2343,"nodeType":"RevertStatement","src":"6650:36:11"}]}},{"expression":{"arguments":[{"id":2347,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"6777:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2348,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"6784:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2349,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"6793:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2346,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"6768:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6768:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2351,"nodeType":"ExpressionStatement","src":"6768:32:11"},{"expression":{"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6851:15:11","subExpression":{"baseExpression":{"id":2352,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"6851:6:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2354,"indexExpression":{"id":2353,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"6858:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6851:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2356,"nodeType":"ExpressionStatement","src":"6851:15:11"},{"eventCall":{"arguments":[{"id":2358,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"6891:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2359,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"6898:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2360,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"6907:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2357,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"6882:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6882:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2362,"nodeType":"EmitStatement","src":"6877:37:11"},{"expression":{"hexValue":"74727565","id":2363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6931:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2270,"id":2364,"nodeType":"Return","src":"6924:11:11"}]},"id":2366,"implemented":true,"kind":"function","modifiers":[],"name":"_permit","nameLocation":"5796:7:11","nodeType":"FunctionDefinition","parameters":{"id":2267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2254,"mutability":"mutable","name":"owner","nameLocation":"5821:5:11","nodeType":"VariableDeclaration","scope":2366,"src":"5813:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2253,"name":"address","nodeType":"ElementaryTypeName","src":"5813:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2256,"mutability":"mutable","name":"spender","nameLocation":"5845:7:11","nodeType":"VariableDeclaration","scope":2366,"src":"5837:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2255,"name":"address","nodeType":"ElementaryTypeName","src":"5837:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2258,"mutability":"mutable","name":"amount","nameLocation":"5871:6:11","nodeType":"VariableDeclaration","scope":2366,"src":"5863:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2257,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2260,"mutability":"mutable","name":"deadline","nameLocation":"5896:8:11","nodeType":"VariableDeclaration","scope":2366,"src":"5888:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2259,"name":"uint256","nodeType":"ElementaryTypeName","src":"5888:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2262,"mutability":"mutable","name":"v","nameLocation":"5921:1:11","nodeType":"VariableDeclaration","scope":2366,"src":"5915:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2261,"name":"uint8","nodeType":"ElementaryTypeName","src":"5915:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2264,"mutability":"mutable","name":"r","nameLocation":"5941:1:11","nodeType":"VariableDeclaration","scope":2366,"src":"5933:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5933:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2266,"mutability":"mutable","name":"s","nameLocation":"5961:1:11","nodeType":"VariableDeclaration","scope":2366,"src":"5953:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2265,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5953:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5803:165:11"},"returnParameters":{"id":2270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2366,"src":"5987:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2268,"name":"bool","nodeType":"ElementaryTypeName","src":"5987:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5986:6:11"},"scope":6329,"src":"5787:1155:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2402,"nodeType":"Block","src":"7009:224:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2373,"name":"_balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"7023:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2375,"indexExpression":{"id":2374,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"7034:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7023:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2376,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"7043:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7023:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2382,"nodeType":"IfStatement","src":"7019:84:11","trueBody":{"id":2381,"nodeType":"Block","src":"7051:52:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2378,"name":"InsufficientShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"7072:18:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7072:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2380,"nodeType":"RevertStatement","src":"7065:27:11"}]}},{"expression":{"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2383,"name":"_balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"7112:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2385,"indexExpression":{"id":2384,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"7123:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7112:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2386,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"7133:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7112:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2388,"nodeType":"ExpressionStatement","src":"7112:27:11"},{"expression":{"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2389,"name":"totalSupplyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"7149:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2390,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"7170:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7149:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2392,"nodeType":"ExpressionStatement","src":"7149:27:11"},{"eventCall":{"arguments":[{"id":2394,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"7200:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7215:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7207:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2395,"name":"address","nodeType":"ElementaryTypeName","src":"7207:7:11","typeDescriptions":{}}},"id":2398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7207:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2399,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"7219:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2393,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"7191:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2401,"nodeType":"EmitStatement","src":"7186:40:11"}]},"id":2403,"implemented":true,"kind":"function","modifiers":[],"name":"_burnShares","nameLocation":"6957:11:11","nodeType":"FunctionDefinition","parameters":{"id":2371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2368,"mutability":"mutable","name":"shares","nameLocation":"6977:6:11","nodeType":"VariableDeclaration","scope":2403,"src":"6969:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2367,"name":"uint256","nodeType":"ElementaryTypeName","src":"6969:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2370,"mutability":"mutable","name":"owner","nameLocation":"6993:5:11","nodeType":"VariableDeclaration","scope":2403,"src":"6985:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2369,"name":"address","nodeType":"ElementaryTypeName","src":"6985:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6968:31:11"},"returnParameters":{"id":2372,"nodeType":"ParameterList","parameters":[],"src":"7009:0:11"},"scope":6329,"src":"6948:285:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2450,"nodeType":"Block","src":"7657:561:11","statements":[{"assignments":[2409],"declarations":[{"constant":false,"id":2409,"mutability":"mutable","name":"_fullProfitUnlockDate","nameLocation":"7675:21:11","nodeType":"VariableDeclaration","scope":2450,"src":"7667:29:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2408,"name":"uint256","nodeType":"ElementaryTypeName","src":"7667:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2411,"initialValue":{"id":2410,"name":"fullProfitUnlockDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"7699:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7667:52:11"},{"assignments":[2413],"declarations":[{"constant":false,"id":2413,"mutability":"mutable","name":"currUnlockedShares","nameLocation":"7737:18:11","nodeType":"VariableDeclaration","scope":2450,"src":"7729:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2412,"name":"uint256","nodeType":"ElementaryTypeName","src":"7729:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2415,"initialValue":{"hexValue":"30","id":2414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7758:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7729:30:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2416,"name":"_fullProfitUnlockDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"7773:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":2417,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7797:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7803:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"7797:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7773:39:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2433,"name":"_fullProfitUnlockDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"8033:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8058:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8033:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2446,"nodeType":"IfStatement","src":"8029:148:11","trueBody":{"id":2445,"nodeType":"Block","src":"8061:116:11","statements":[{"expression":{"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2436,"name":"currUnlockedShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"8120:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2437,"name":"_balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"8141:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2442,"indexExpression":{"arguments":[{"id":2440,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8160:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":2439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8152:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2438,"name":"address","nodeType":"ElementaryTypeName","src":"8152:7:11","typeDescriptions":{}}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8152:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8141:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8120:46:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2444,"nodeType":"ExpressionStatement","src":"8120:46:11"}]}},"id":2447,"nodeType":"IfStatement","src":"7769:408:11","trueBody":{"id":2432,"nodeType":"Block","src":"7814:209:11","statements":[{"expression":{"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2420,"name":"currUnlockedShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"7914:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2421,"name":"profitUnlockingRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"7935:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2422,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7958:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7964:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"7958:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2424,"name":"lastProfitUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7631,"src":"7976:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7958:34:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2426,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7957:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7935:58:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2428,"name":"MAX_BPS_EXTENDED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"7996:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7935:77:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7914:98:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2431,"nodeType":"ExpressionStatement","src":"7914:98:11"}]}},{"expression":{"id":2448,"name":"currUnlockedShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"8193:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2407,"id":2449,"nodeType":"Return","src":"8186:25:11"}]},"id":2451,"implemented":true,"kind":"function","modifiers":[],"name":"_unlockedShares","nameLocation":"7607:15:11","nodeType":"FunctionDefinition","parameters":{"id":2404,"nodeType":"ParameterList","parameters":[],"src":"7622:2:11"},"returnParameters":{"id":2407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2451,"src":"7648:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2405,"name":"uint256","nodeType":"ElementaryTypeName","src":"7648:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7647:9:11"},"scope":6329,"src":"7598:620:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2461,"nodeType":"Block","src":"8362:61:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2456,"name":"totalSupplyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"8379:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2457,"name":"_unlockedShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"8399:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8379:37:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2455,"id":2460,"nodeType":"Return","src":"8372:44:11"}]},"id":2462,"implemented":true,"kind":"function","modifiers":[],"name":"_totalSupply","nameLocation":"8315:12:11","nodeType":"FunctionDefinition","parameters":{"id":2452,"nodeType":"ParameterList","parameters":[],"src":"8327:2:11"},"returnParameters":{"id":2455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2462,"src":"8353:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2453,"name":"uint256","nodeType":"ElementaryTypeName","src":"8353:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8352:9:11"},"scope":6329,"src":"8306:117:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2494,"nodeType":"Block","src":"8610:467:11","statements":[{"assignments":[2466],"declarations":[{"constant":false,"id":2466,"mutability":"mutable","name":"currUnlockedShares","nameLocation":"8683:18:11","nodeType":"VariableDeclaration","scope":2494,"src":"8675:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2465,"name":"uint256","nodeType":"ElementaryTypeName","src":"8675:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2469,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2467,"name":"_unlockedShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"8704:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8704:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8675:46:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2470,"name":"currUnlockedShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"8774:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8796:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8774:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2474,"nodeType":"IfStatement","src":"8770:36:11","trueBody":{"functionReturnParameters":2464,"id":2473,"nodeType":"Return","src":"8799:7:11"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2475,"name":"fullProfitUnlockDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"8870:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":2476,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8893:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8899:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"8893:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8870:38:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2485,"nodeType":"IfStatement","src":"8866:103:11","trueBody":{"id":2484,"nodeType":"Block","src":"8910:59:11","statements":[{"expression":{"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2479,"name":"lastProfitUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7631,"src":"8924:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2480,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8943:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8949:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"8943:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8924:34:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2483,"nodeType":"ExpressionStatement","src":"8924:34:11"}]}},{"expression":{"arguments":[{"id":2487,"name":"currUnlockedShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"9036:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2490,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9064:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":2489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9056:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2488,"name":"address","nodeType":"ElementaryTypeName","src":"9056:7:11","typeDescriptions":{}}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9056:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2486,"name":"_burnShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"9024:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9024:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2493,"nodeType":"ExpressionStatement","src":"9024:46:11"}]},"id":2495,"implemented":true,"kind":"function","modifiers":[],"name":"_burnUnlockedShares","nameLocation":"8579:19:11","nodeType":"FunctionDefinition","parameters":{"id":2463,"nodeType":"ParameterList","parameters":[],"src":"8598:2:11"},"returnParameters":{"id":2464,"nodeType":"ParameterList","parameters":[],"src":"8610:0:11"},"scope":6329,"src":"8570:507:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2504,"nodeType":"Block","src":"9214:57:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2500,"name":"totalIdleAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7599,"src":"9231:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2501,"name":"totalDebtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"9249:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9231:33:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2499,"id":2503,"nodeType":"Return","src":"9224:40:11"}]},"id":2505,"implemented":true,"kind":"function","modifiers":[],"name":"_totalAssets","nameLocation":"9167:12:11","nodeType":"FunctionDefinition","parameters":{"id":2496,"nodeType":"ParameterList","parameters":[],"src":"9179:2:11"},"returnParameters":{"id":2499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2505,"src":"9205:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2497,"name":"uint256","nodeType":"ElementaryTypeName","src":"9205:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9204:9:11"},"scope":6329,"src":"9158:113:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2573,"nodeType":"Block","src":"9459:540:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2515,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"9473:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9488:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2517,"name":"uint256","nodeType":"ElementaryTypeName","src":"9488:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2516,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9483:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9483:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9497:3:11","memberName":"max","nodeType":"MemberAccess","src":"9483:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9473:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2522,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"9504:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9504:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9473:42:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2529,"nodeType":"IfStatement","src":"9469:86:11","trueBody":{"id":2528,"nodeType":"Block","src":"9517:38:11","statements":[{"expression":{"id":2526,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"9538:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2514,"id":2527,"nodeType":"Return","src":"9531:13:11"}]}},{"assignments":[2531],"declarations":[{"constant":false,"id":2531,"mutability":"mutable","name":"currentTotalSupply","nameLocation":"9573:18:11","nodeType":"VariableDeclaration","scope":2573,"src":"9565:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2530,"name":"uint256","nodeType":"ElementaryTypeName","src":"9565:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2534,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2532,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"9594:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9594:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9565:43:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2535,"name":"currentTotalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"9676:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9698:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9676:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2541,"nodeType":"IfStatement","src":"9672:67:11","trueBody":{"id":2540,"nodeType":"Block","src":"9701:38:11","statements":[{"expression":{"id":2538,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"9722:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2514,"id":2539,"nodeType":"Return","src":"9715:13:11"}]}},{"assignments":[2543],"declarations":[{"constant":false,"id":2543,"mutability":"mutable","name":"numerator","nameLocation":"9757:9:11","nodeType":"VariableDeclaration","scope":2573,"src":"9749:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2542,"name":"uint256","nodeType":"ElementaryTypeName","src":"9749:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2548,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2544,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"9769:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2545,"name":"_totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"9778:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9778:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9769:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9749:43:11"},{"assignments":[2550],"declarations":[{"constant":false,"id":2550,"mutability":"mutable","name":"amount","nameLocation":"9810:6:11","nodeType":"VariableDeclaration","scope":2573,"src":"9802:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2549,"name":"uint256","nodeType":"ElementaryTypeName","src":"9802:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2554,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2551,"name":"numerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"9819:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2552,"name":"currentTotalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"9831:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9819:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9802:47:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2555,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"9863:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2556,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"9875:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$7772_$","typeString":"type(enum Rounding)"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9884:8:11","memberName":"ROUND_UP","nodeType":"MemberAccess","referencedDeclaration":7771,"src":"9875:17:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}},"src":"9863:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2559,"name":"numerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"9896:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2560,"name":"currentTotalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"9908:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9896:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9896:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9863:68:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2570,"nodeType":"IfStatement","src":"9859:110:11","trueBody":{"id":2569,"nodeType":"Block","src":"9933:36:11","statements":[{"expression":{"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2565,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"9947:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9947:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2568,"nodeType":"ExpressionStatement","src":"9947:11:11"}]}},{"expression":{"id":2571,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"9986:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2514,"id":2572,"nodeType":"Return","src":"9979:13:11"}]},"id":2574,"implemented":true,"kind":"function","modifiers":[],"name":"_convertToAssets","nameLocation":"9375:16:11","nodeType":"FunctionDefinition","parameters":{"id":2511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2507,"mutability":"mutable","name":"shares","nameLocation":"9400:6:11","nodeType":"VariableDeclaration","scope":2574,"src":"9392:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2506,"name":"uint256","nodeType":"ElementaryTypeName","src":"9392:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2510,"mutability":"mutable","name":"rounding","nameLocation":"9417:8:11","nodeType":"VariableDeclaration","scope":2574,"src":"9408:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"},"typeName":{"id":2509,"nodeType":"UserDefinedTypeName","pathNode":{"id":2508,"name":"Rounding","nameLocations":["9408:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":7772,"src":"9408:8:11"},"referencedDeclaration":7772,"src":"9408:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}},"visibility":"internal"}],"src":"9391:35:11"},"returnParameters":{"id":2514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2574,"src":"9450:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2512,"name":"uint256","nodeType":"ElementaryTypeName","src":"9450:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9449:9:11"},"scope":6329,"src":"9366:633:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2654,"nodeType":"Block","src":"10187:800:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2584,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"10201:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10216:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2586,"name":"uint256","nodeType":"ElementaryTypeName","src":"10216:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2585,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10211:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10211:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10225:3:11","memberName":"max","nodeType":"MemberAccess","src":"10211:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2591,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"10232:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10232:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:42:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2598,"nodeType":"IfStatement","src":"10197:86:11","trueBody":{"id":2597,"nodeType":"Block","src":"10245:38:11","statements":[{"expression":{"id":2595,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"10266:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2583,"id":2596,"nodeType":"Return","src":"10259:13:11"}]}},{"assignments":[2600],"declarations":[{"constant":false,"id":2600,"mutability":"mutable","name":"currentTotalSupply","nameLocation":"10301:18:11","nodeType":"VariableDeclaration","scope":2654,"src":"10293:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2599,"name":"uint256","nodeType":"ElementaryTypeName","src":"10293:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2603,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2601,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"10322:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10322:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10293:43:11"},{"assignments":[2605],"declarations":[{"constant":false,"id":2605,"mutability":"mutable","name":"currentTotalAssets","nameLocation":"10354:18:11","nodeType":"VariableDeclaration","scope":2654,"src":"10346:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2604,"name":"uint256","nodeType":"ElementaryTypeName","src":"10346:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2608,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2606,"name":"_totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"10375:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10375:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10346:43:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2609,"name":"currentTotalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"10412:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10434:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10412:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2623,"nodeType":"IfStatement","src":"10408:315:11","trueBody":{"id":2622,"nodeType":"Block","src":"10437:286:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2612,"name":"currentTotalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"10530:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10552:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10530:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2620,"nodeType":"Block","src":"10607:106:11","statements":[{"expression":{"hexValue":"30","id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10697:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2583,"id":2619,"nodeType":"Return","src":"10690:8:11"}]},"id":2621,"nodeType":"IfStatement","src":"10526:187:11","trueBody":{"id":2617,"nodeType":"Block","src":"10555:46:11","statements":[{"expression":{"id":2615,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"10580:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2583,"id":2616,"nodeType":"Return","src":"10573:13:11"}]}}]}},{"assignments":[2625],"declarations":[{"constant":false,"id":2625,"mutability":"mutable","name":"numerator","nameLocation":"10741:9:11","nodeType":"VariableDeclaration","scope":2654,"src":"10733:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2624,"name":"uint256","nodeType":"ElementaryTypeName","src":"10733:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2629,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2626,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"10753:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2627,"name":"currentTotalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"10762:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10753:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10733:47:11"},{"assignments":[2631],"declarations":[{"constant":false,"id":2631,"mutability":"mutable","name":"shares","nameLocation":"10798:6:11","nodeType":"VariableDeclaration","scope":2654,"src":"10790:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2630,"name":"uint256","nodeType":"ElementaryTypeName","src":"10790:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2635,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2632,"name":"numerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"10807:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2633,"name":"currentTotalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"10819:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10807:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10790:47:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2636,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"10851:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2637,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"10863:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$7772_$","typeString":"type(enum Rounding)"}},"id":2638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10872:8:11","memberName":"ROUND_UP","nodeType":"MemberAccess","referencedDeclaration":7771,"src":"10863:17:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}},"src":"10851:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2640,"name":"numerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"10884:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2641,"name":"currentTotalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"10896:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10884:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10918:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10884:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10851:68:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2651,"nodeType":"IfStatement","src":"10847:110:11","trueBody":{"id":2650,"nodeType":"Block","src":"10921:36:11","statements":[{"expression":{"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2646,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"10935:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10945:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10935:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2649,"nodeType":"ExpressionStatement","src":"10935:11:11"}]}},{"expression":{"id":2652,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"10974:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2583,"id":2653,"nodeType":"Return","src":"10967:13:11"}]},"id":2655,"implemented":true,"kind":"function","modifiers":[],"name":"_convertToShares","nameLocation":"10103:16:11","nodeType":"FunctionDefinition","parameters":{"id":2580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2576,"mutability":"mutable","name":"assets","nameLocation":"10128:6:11","nodeType":"VariableDeclaration","scope":2655,"src":"10120:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2575,"name":"uint256","nodeType":"ElementaryTypeName","src":"10120:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2579,"mutability":"mutable","name":"rounding","nameLocation":"10145:8:11","nodeType":"VariableDeclaration","scope":2655,"src":"10136:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"},"typeName":{"id":2578,"nodeType":"UserDefinedTypeName","pathNode":{"id":2577,"name":"Rounding","nameLocations":["10136:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":7772,"src":"10136:8:11"},"referencedDeclaration":7772,"src":"10136:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}},"visibility":"internal"}],"src":"10119:35:11"},"returnParameters":{"id":2583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2655,"src":"10178:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2581,"name":"uint256","nodeType":"ElementaryTypeName","src":"10178:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10177:9:11"},"scope":6329,"src":"10094:893:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2693,"nodeType":"Block","src":"11210:187:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2664,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"11224:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11241:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11233:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2665,"name":"address","nodeType":"ElementaryTypeName","src":"11233:7:11","typeDescriptions":{}}},"id":2668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11233:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11224:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2670,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"11247:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11266:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11258:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2671,"name":"address","nodeType":"ElementaryTypeName","src":"11258:7:11","typeDescriptions":{}}},"id":2674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11258:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11247:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11224:44:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2681,"nodeType":"IfStatement","src":"11220:95:11","trueBody":{"id":2680,"nodeType":"Block","src":"11270:45:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2677,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"11291:11:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11291:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2679,"nodeType":"RevertStatement","src":"11284:20:11"}]}},{"expression":{"arguments":[{"arguments":[{"id":2687,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"11354:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2688,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"11363:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2684,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"11339:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2683,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"11332:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$531_$","typeString":"type(contract IERC20)"}},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11332:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11346:7:11","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":518,"src":"11332:21:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11332:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"617070726f76616c206661696c6564","id":2690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11372:17:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_dc5bf56f7778a980bf68a168744f15fc09ca522217760da56d44aee44af65dd8","typeString":"literal_string \"approval failed\""},"value":"approval failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dc5bf56f7778a980bf68a168744f15fc09ca522217760da56d44aee44af65dd8","typeString":"literal_string \"approval failed\""}],"id":2682,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11324:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11324:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2692,"nodeType":"ExpressionStatement","src":"11324:66:11"}]},"id":2694,"implemented":true,"kind":"function","modifiers":[],"name":"_erc20SafeApprove","nameLocation":"11135:17:11","nodeType":"FunctionDefinition","parameters":{"id":2662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2657,"mutability":"mutable","name":"token","nameLocation":"11161:5:11","nodeType":"VariableDeclaration","scope":2694,"src":"11153:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2656,"name":"address","nodeType":"ElementaryTypeName","src":"11153:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2659,"mutability":"mutable","name":"spender","nameLocation":"11176:7:11","nodeType":"VariableDeclaration","scope":2694,"src":"11168:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2658,"name":"address","nodeType":"ElementaryTypeName","src":"11168:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2661,"mutability":"mutable","name":"amount","nameLocation":"11193:6:11","nodeType":"VariableDeclaration","scope":2694,"src":"11185:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2660,"name":"uint256","nodeType":"ElementaryTypeName","src":"11185:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11152:48:11"},"returnParameters":{"id":2663,"nodeType":"ParameterList","parameters":[],"src":"11210:0:11"},"scope":6329,"src":"11126:271:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2742,"nodeType":"Block","src":"11643:226:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2705,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"11657:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11674:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11666:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2706,"name":"address","nodeType":"ElementaryTypeName","src":"11666:7:11","typeDescriptions":{}}},"id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11666:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11657:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2711,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"11680:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11698:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11690:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2712,"name":"address","nodeType":"ElementaryTypeName","src":"11690:7:11","typeDescriptions":{}}},"id":2715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11690:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11680:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11657:43:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2718,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"11704:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11724:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11716:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2719,"name":"address","nodeType":"ElementaryTypeName","src":"11716:7:11","typeDescriptions":{}}},"id":2722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11716:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11704:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11657:69:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2729,"nodeType":"IfStatement","src":"11653:120:11","trueBody":{"id":2728,"nodeType":"Block","src":"11728:45:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2725,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"11749:11:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11749:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2727,"nodeType":"RevertStatement","src":"11742:20:11"}]}},{"expression":{"arguments":[{"arguments":[{"id":2735,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"11817:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2736,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"11825:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2737,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"11835:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2732,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"11797:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2731,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"11790:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$531_$","typeString":"type(contract IERC20)"}},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11790:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11804:12:11","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":530,"src":"11790:26:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11790:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7472616e73666572206661696c6564","id":2739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11844:17:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b","typeString":"literal_string \"transfer failed\""},"value":"transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b","typeString":"literal_string \"transfer failed\""}],"id":2730,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11782:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11782:80:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2741,"nodeType":"ExpressionStatement","src":"11782:80:11"}]},"id":2743,"implemented":true,"kind":"function","modifiers":[],"name":"_erc20SafeTransferFrom","nameLocation":"11546:22:11","nodeType":"FunctionDefinition","parameters":{"id":2703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2696,"mutability":"mutable","name":"token","nameLocation":"11577:5:11","nodeType":"VariableDeclaration","scope":2743,"src":"11569:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2695,"name":"address","nodeType":"ElementaryTypeName","src":"11569:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2698,"mutability":"mutable","name":"sender","nameLocation":"11592:6:11","nodeType":"VariableDeclaration","scope":2743,"src":"11584:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2697,"name":"address","nodeType":"ElementaryTypeName","src":"11584:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2700,"mutability":"mutable","name":"receiver","nameLocation":"11608:8:11","nodeType":"VariableDeclaration","scope":2743,"src":"11600:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2699,"name":"address","nodeType":"ElementaryTypeName","src":"11600:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2702,"mutability":"mutable","name":"amount","nameLocation":"11626:6:11","nodeType":"VariableDeclaration","scope":2743,"src":"11618:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2701,"name":"uint256","nodeType":"ElementaryTypeName","src":"11618:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11568:65:11"},"returnParameters":{"id":2704,"nodeType":"ParameterList","parameters":[],"src":"11643:0:11"},"scope":6329,"src":"11537:332:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2781,"nodeType":"Block","src":"12091:190:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2752,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"12105:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12122:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12114:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2753,"name":"address","nodeType":"ElementaryTypeName","src":"12114:7:11","typeDescriptions":{}}},"id":2756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12114:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12105:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2758,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"12128:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12148:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12140:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2759,"name":"address","nodeType":"ElementaryTypeName","src":"12140:7:11","typeDescriptions":{}}},"id":2762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12140:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12128:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12105:45:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2769,"nodeType":"IfStatement","src":"12101:96:11","trueBody":{"id":2768,"nodeType":"Block","src":"12152:45:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2765,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"12173:11:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12173:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2767,"nodeType":"RevertStatement","src":"12166:20:11"}]}},{"expression":{"arguments":[{"arguments":[{"id":2775,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"12237:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2776,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"12247:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2772,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"12221:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2771,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"12214:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$531_$","typeString":"type(contract IERC20)"}},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12214:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12228:8:11","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":498,"src":"12214:22:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12214:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7472616e73666572206661696c6564","id":2778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12256:17:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b","typeString":"literal_string \"transfer failed\""},"value":"transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b","typeString":"literal_string \"transfer failed\""}],"id":2770,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12206:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12206:68:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2780,"nodeType":"ExpressionStatement","src":"12206:68:11"}]},"id":2782,"implemented":true,"kind":"function","modifiers":[],"name":"_erc20SafeTransfer","nameLocation":"12014:18:11","nodeType":"FunctionDefinition","parameters":{"id":2750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2745,"mutability":"mutable","name":"token","nameLocation":"12041:5:11","nodeType":"VariableDeclaration","scope":2782,"src":"12033:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2744,"name":"address","nodeType":"ElementaryTypeName","src":"12033:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2747,"mutability":"mutable","name":"receiver","nameLocation":"12056:8:11","nodeType":"VariableDeclaration","scope":2782,"src":"12048:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2746,"name":"address","nodeType":"ElementaryTypeName","src":"12048:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2749,"mutability":"mutable","name":"amount","nameLocation":"12074:6:11","nodeType":"VariableDeclaration","scope":2782,"src":"12066:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2748,"name":"uint256","nodeType":"ElementaryTypeName","src":"12066:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12032:49:11"},"returnParameters":{"id":2751,"nodeType":"ParameterList","parameters":[],"src":"12091:0:11"},"scope":6329,"src":"12005:276:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2819,"nodeType":"Block","src":"12353:222:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2789,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"12367:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12380:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2790,"name":"address","nodeType":"ElementaryTypeName","src":"12380:7:11","typeDescriptions":{}}},"id":2793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12380:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12367:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2799,"nodeType":"IfStatement","src":"12363:74:11","trueBody":{"id":2798,"nodeType":"Block","src":"12392:45:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2795,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"12413:11:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12413:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2797,"nodeType":"RevertStatement","src":"12406:20:11"}]}},{"expression":{"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2800,"name":"_balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"12446:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2802,"indexExpression":{"id":2801,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"12457:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12446:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2803,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"12471:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12446:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2805,"nodeType":"ExpressionStatement","src":"12446:31:11"},{"expression":{"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2806,"name":"totalSupplyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"12487:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2807,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"12508:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12487:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2809,"nodeType":"ExpressionStatement","src":"12487:27:11"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12546:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12538:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2811,"name":"address","nodeType":"ElementaryTypeName","src":"12538:7:11","typeDescriptions":{}}},"id":2814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12538:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2815,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"12550:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2816,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"12561:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2810,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"12529:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12529:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2818,"nodeType":"EmitStatement","src":"12524:44:11"}]},"id":2820,"implemented":true,"kind":"function","modifiers":[],"name":"_issueShares","nameLocation":"12296:12:11","nodeType":"FunctionDefinition","parameters":{"id":2787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2784,"mutability":"mutable","name":"shares","nameLocation":"12317:6:11","nodeType":"VariableDeclaration","scope":2820,"src":"12309:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2783,"name":"uint256","nodeType":"ElementaryTypeName","src":"12309:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2786,"mutability":"mutable","name":"recipient","nameLocation":"12333:9:11","nodeType":"VariableDeclaration","scope":2820,"src":"12325:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2785,"name":"address","nodeType":"ElementaryTypeName","src":"12325:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12308:35:11"},"returnParameters":{"id":2788,"nodeType":"ParameterList","parameters":[],"src":"12353:0:11"},"scope":6329,"src":"12287:288:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2898,"nodeType":"Block","src":"12883:1061:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2829,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"12897:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12918:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12910:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2830,"name":"address","nodeType":"ElementaryTypeName","src":"12910:7:11","typeDescriptions":{}}},"id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12910:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12897:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2839,"nodeType":"IfStatement","src":"12893:74:11","trueBody":{"id":2838,"nodeType":"Block","src":"12922:45:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2835,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"12943:11:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12943:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2837,"nodeType":"RevertStatement","src":"12936:20:11"}]}},{"assignments":[2841],"declarations":[{"constant":false,"id":2841,"mutability":"mutable","name":"currentTotalSupply","nameLocation":"12984:18:11","nodeType":"VariableDeclaration","scope":2898,"src":"12976:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2840,"name":"uint256","nodeType":"ElementaryTypeName","src":"12976:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2844,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2842,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"13005:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13005:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12976:43:11"},{"assignments":[2846],"declarations":[{"constant":false,"id":2846,"mutability":"mutable","name":"currentTotalAssets","nameLocation":"13037:18:11","nodeType":"VariableDeclaration","scope":2898,"src":"13029:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2845,"name":"uint256","nodeType":"ElementaryTypeName","src":"13029:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2849,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2847,"name":"_totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"13058:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13058:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13029:43:11"},{"assignments":[2851],"declarations":[{"constant":false,"id":2851,"mutability":"mutable","name":"newShares","nameLocation":"13090:9:11","nodeType":"VariableDeclaration","scope":2898,"src":"13082:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2850,"name":"uint256","nodeType":"ElementaryTypeName","src":"13082:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2853,"initialValue":{"hexValue":"30","id":2852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13102:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13082:21:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2854,"name":"currentTotalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"13151:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13173:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13151:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2862,"name":"currentTotalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"13229:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2863,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"13250:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13229:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2881,"nodeType":"Block","src":"13360:399:11","statements":[{"expression":{"arguments":[{"hexValue":"616d6f756e7420746f6f2068696768","id":2878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13730:17:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92","typeString":"literal_string \"amount too high\""},"value":"amount too high"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92","typeString":"literal_string \"amount too high\""}],"id":2877,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"13723:6:11","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13723:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2880,"nodeType":"ExpressionStatement","src":"13723:25:11"}]},"id":2882,"nodeType":"IfStatement","src":"13225:534:11","trueBody":{"id":2876,"nodeType":"Block","src":"13258:96:11","statements":[{"expression":{"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2865,"name":"newShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"13272:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2866,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"13284:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2867,"name":"currentTotalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"13293:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13284:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2869,"name":"currentTotalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"13315:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2870,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"13336:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13315:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2872,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13314:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13284:59:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13272:71:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2875,"nodeType":"ExpressionStatement","src":"13272:71:11"}]}},"id":2883,"nodeType":"IfStatement","src":"13147:612:11","trueBody":{"id":2861,"nodeType":"Block","src":"13176:43:11","statements":[{"expression":{"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2857,"name":"newShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"13190:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2858,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"13202:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13190:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2860,"nodeType":"ExpressionStatement","src":"13190:18:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2884,"name":"newShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"13818:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13831:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13818:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2890,"nodeType":"IfStatement","src":"13814:53:11","trueBody":{"id":2889,"nodeType":"Block","src":"13834:33:11","statements":[{"expression":{"hexValue":"30","id":2887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13855:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2828,"id":2888,"nodeType":"Return","src":"13848:8:11"}]}},{"expression":{"arguments":[{"id":2892,"name":"newShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"13890:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2893,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"13901:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2891,"name":"_issueShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"13877:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13877:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2895,"nodeType":"ExpressionStatement","src":"13877:34:11"},{"expression":{"id":2896,"name":"newShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"13928:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2828,"id":2897,"nodeType":"Return","src":"13921:16:11"}]},"id":2899,"implemented":true,"kind":"function","modifiers":[],"name":"_issueSharesForAmount","nameLocation":"12799:21:11","nodeType":"FunctionDefinition","parameters":{"id":2825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2822,"mutability":"mutable","name":"amount","nameLocation":"12829:6:11","nodeType":"VariableDeclaration","scope":2899,"src":"12821:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2821,"name":"uint256","nodeType":"ElementaryTypeName","src":"12821:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2824,"mutability":"mutable","name":"recipient","nameLocation":"12845:9:11","nodeType":"VariableDeclaration","scope":2899,"src":"12837:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2823,"name":"address","nodeType":"ElementaryTypeName","src":"12837:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12820:35:11"},"returnParameters":{"id":2828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2899,"src":"12874:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2826,"name":"uint256","nodeType":"ElementaryTypeName","src":"12874:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12873:9:11"},"scope":6329,"src":"12790:1154:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2962,"nodeType":"Block","src":"14037:737:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2906,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"14051:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":2909,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"14071:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":2908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14063:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2907,"name":"address","nodeType":"ElementaryTypeName","src":"14063:7:11","typeDescriptions":{}}},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14063:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14051:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2912,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"14080:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14100:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14092:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2913,"name":"address","nodeType":"ElementaryTypeName","src":"14092:7:11","typeDescriptions":{}}},"id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14092:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14080:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14051:51:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2922,"nodeType":"IfStatement","src":"14047:90:11","trueBody":{"id":2921,"nodeType":"Block","src":"14104:33:11","statements":[{"expression":{"hexValue":"30","id":2919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14125:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2905,"id":2920,"nodeType":"Return","src":"14118:8:11"}]}},{"assignments":[2924],"declarations":[{"constant":false,"id":2924,"mutability":"mutable","name":"currentDepositLimitModule","nameLocation":"14215:25:11","nodeType":"VariableDeclaration","scope":2962,"src":"14207:33:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2923,"name":"address","nodeType":"ElementaryTypeName","src":"14207:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2926,"initialValue":{"id":2925,"name":"depositLimitModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7607,"src":"14243:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14207:54:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2927,"name":"currentDepositLimitModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"14275:25:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14312:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14304:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2928,"name":"address","nodeType":"ElementaryTypeName","src":"14304:7:11","typeDescriptions":{}}},"id":2931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14304:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14275:39:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2941,"nodeType":"IfStatement","src":"14271:205:11","trueBody":{"id":2940,"nodeType":"Block","src":"14316:160:11","statements":[{"expression":{"arguments":[{"id":2937,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"14456:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2934,"name":"currentDepositLimitModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"14407:25:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2933,"name":"IDepositLimitModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6355,"src":"14387:19:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDepositLimitModule_$6355_$","typeString":"type(contract IDepositLimitModule)"}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14387:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IDepositLimitModule_$6355","typeString":"contract IDepositLimitModule"}},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14434:21:11","memberName":"availableDepositLimit","nodeType":"MemberAccess","referencedDeclaration":6354,"src":"14387:68:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14387:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2905,"id":2939,"nodeType":"Return","src":"14380:85:11"}]}},{"assignments":[2943],"declarations":[{"constant":false,"id":2943,"mutability":"mutable","name":"currentTotalAssets","nameLocation":"14533:18:11","nodeType":"VariableDeclaration","scope":2962,"src":"14525:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2942,"name":"uint256","nodeType":"ElementaryTypeName","src":"14525:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2946,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2944,"name":"_totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"14554:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14554:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14525:43:11"},{"assignments":[2948],"declarations":[{"constant":false,"id":2948,"mutability":"mutable","name":"currentDepositLimit","nameLocation":"14586:19:11","nodeType":"VariableDeclaration","scope":2962,"src":"14578:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2947,"name":"uint256","nodeType":"ElementaryTypeName","src":"14578:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2950,"initialValue":{"id":2949,"name":"depositLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7603,"src":"14608:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14578:42:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2951,"name":"currentTotalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"14634:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2952,"name":"currentDepositLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"14656:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14634:41:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2957,"nodeType":"IfStatement","src":"14630:80:11","trueBody":{"id":2956,"nodeType":"Block","src":"14677:33:11","statements":[{"expression":{"hexValue":"30","id":2954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14698:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2905,"id":2955,"nodeType":"Return","src":"14691:8:11"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2958,"name":"currentDepositLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"14727:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2959,"name":"currentTotalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"14749:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14727:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2905,"id":2961,"nodeType":"Return","src":"14720:47:11"}]},"id":2963,"implemented":true,"kind":"function","modifiers":[],"name":"_maxDeposit","nameLocation":"13975:11:11","nodeType":"FunctionDefinition","parameters":{"id":2902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2901,"mutability":"mutable","name":"receiver","nameLocation":"13995:8:11","nodeType":"VariableDeclaration","scope":2963,"src":"13987:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2900,"name":"address","nodeType":"ElementaryTypeName","src":"13987:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13986:18:11"},"returnParameters":{"id":2905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2963,"src":"14028:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2903,"name":"uint256","nodeType":"ElementaryTypeName","src":"14028:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14027:9:11"},"scope":6329,"src":"13966:808:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3187,"nodeType":"Block","src":"15584:3670:11","statements":[{"assignments":[2976],"declarations":[{"constant":false,"id":2976,"mutability":"mutable","name":"maxAssets","nameLocation":"15663:9:11","nodeType":"VariableDeclaration","scope":3187,"src":"15655:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2975,"name":"uint256","nodeType":"ElementaryTypeName","src":"15655:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2984,"initialValue":{"arguments":[{"baseExpression":{"id":2978,"name":"_balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"15692:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2980,"indexExpression":{"id":2979,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"15703:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15692:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2981,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"15711:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$7772_$","typeString":"type(enum Rounding)"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15720:10:11","memberName":"ROUND_DOWN","nodeType":"MemberAccess","referencedDeclaration":7770,"src":"15711:19:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}],"id":2977,"name":"_convertToAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"15675:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$7772_$returns$_t_uint256_$","typeString":"function (uint256,enum Rounding) view returns (uint256)"}},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15675:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15655:76:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2985,"name":"withdrawLimitModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"15803:19:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15834:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15826:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2986,"name":"address","nodeType":"ElementaryTypeName","src":"15826:7:11","typeDescriptions":{}}},"id":2989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15826:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15803:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3014,"nodeType":"IfStatement","src":"15799:308:11","trueBody":{"id":3013,"nodeType":"Block","src":"15838:269:11","statements":[{"assignments":[2992],"declarations":[{"constant":false,"id":2992,"mutability":"mutable","name":"moduleLimit","nameLocation":"15860:11:11","nodeType":"VariableDeclaration","scope":3013,"src":"15852:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2991,"name":"uint256","nodeType":"ElementaryTypeName","src":"15852:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3001,"initialValue":{"arguments":[{"id":2997,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"15939:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2998,"name":"_maxLoss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"15946:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2999,"name":"_strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"15956:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"expression":{"arguments":[{"id":2994,"name":"withdrawLimitModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"15895:19:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2993,"name":"IWithdrawLimitModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7308,"src":"15874:20:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWithdrawLimitModule_$7308_$","typeString":"type(contract IWithdrawLimitModule)"}},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15874:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWithdrawLimitModule_$7308","typeString":"contract IWithdrawLimitModule"}},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15916:22:11","memberName":"availableWithdrawLimit","nodeType":"MemberAccess","referencedDeclaration":7307,"src":"15874:64:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256,address[] memory) external returns (uint256)"}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15874:94:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15852:116:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3002,"name":"moduleLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"15986:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3003,"name":"maxAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"16000:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15986:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3010,"nodeType":"IfStatement","src":"15982:85:11","trueBody":{"id":3009,"nodeType":"Block","src":"16011:56:11","statements":[{"expression":{"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3005,"name":"maxAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"16029:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3006,"name":"moduleLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"16041:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16029:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3008,"nodeType":"ExpressionStatement","src":"16029:23:11"}]}},{"expression":{"id":3011,"name":"maxAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"16087:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2974,"id":3012,"nodeType":"Return","src":"16080:16:11"}]}},{"assignments":[3016],"declarations":[{"constant":false,"id":3016,"mutability":"mutable","name":"currentIdle","nameLocation":"16188:11:11","nodeType":"VariableDeclaration","scope":3187,"src":"16180:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3015,"name":"uint256","nodeType":"ElementaryTypeName","src":"16180:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3018,"initialValue":{"id":3017,"name":"totalIdleAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7599,"src":"16202:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16180:37:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3019,"name":"maxAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"16231:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3020,"name":"currentIdle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"16243:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16231:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3184,"nodeType":"IfStatement","src":"16227:2994:11","trueBody":{"id":3183,"nodeType":"Block","src":"16256:2965:11","statements":[{"assignments":[3023],"declarations":[{"constant":false,"id":3023,"mutability":"mutable","name":"have","nameLocation":"16321:4:11","nodeType":"VariableDeclaration","scope":3183,"src":"16313:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3022,"name":"uint256","nodeType":"ElementaryTypeName","src":"16313:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3025,"initialValue":{"id":3024,"name":"currentIdle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"16328:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16313:26:11"},{"assignments":[3027],"declarations":[{"constant":false,"id":3027,"mutability":"mutable","name":"loss","nameLocation":"16361:4:11","nodeType":"VariableDeclaration","scope":3183,"src":"16353:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3026,"name":"uint256","nodeType":"ElementaryTypeName","src":"16353:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3029,"initialValue":{"hexValue":"30","id":3028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16368:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16353:16:11"},{"assignments":[3034],"declarations":[{"constant":false,"id":3034,"mutability":"mutable","name":"currentStrategies","nameLocation":"16573:17:11","nodeType":"VariableDeclaration","scope":3183,"src":"16556:34:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3032,"name":"address","nodeType":"ElementaryTypeName","src":"16556:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3033,"nodeType":"ArrayTypeName","src":"16556:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3045,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3035,"name":"_strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"16593:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16605:6:11","memberName":"length","nodeType":"MemberAccess","src":"16593:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16615:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16593:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16620:16:11","subExpression":{"id":3039,"name":"useDefaultQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7583,"src":"16621:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16593:43:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3043,"name":"defaultQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"16653:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"16593:72:11","trueExpression":{"id":3042,"name":"_strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"16639:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"16556:109:11"},{"body":{"id":3177,"nodeType":"Block","src":"16735:2322:11","statements":[{"assignments":[3058],"declarations":[{"constant":false,"id":3058,"mutability":"mutable","name":"strategy","nameLocation":"16761:8:11","nodeType":"VariableDeclaration","scope":3177,"src":"16753:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3057,"name":"address","nodeType":"ElementaryTypeName","src":"16753:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3062,"initialValue":{"baseExpression":{"id":3059,"name":"currentStrategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"16772:17:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3061,"indexExpression":{"id":3060,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"16790:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16772:20:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16753:39:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3063,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"16864:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":3065,"indexExpression":{"id":3064,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"16875:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16864:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":3066,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16885:10:11","memberName":"activation","nodeType":"MemberAccess","referencedDeclaration":7727,"src":"16864:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16899:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16864:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3073,"nodeType":"IfStatement","src":"16860:108:11","trueBody":{"id":3072,"nodeType":"Block","src":"16902:66:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3069,"name":"InactiveStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"16931:16:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16931:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3071,"nodeType":"RevertStatement","src":"16924:25:11"}]}},{"assignments":[3075],"declarations":[{"constant":false,"id":3075,"mutability":"mutable","name":"toWithdraw","nameLocation":"17080:10:11","nodeType":"VariableDeclaration","scope":3177,"src":"17072:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3074,"name":"uint256","nodeType":"ElementaryTypeName","src":"17072:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3086,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3078,"name":"maxAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"17123:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3079,"name":"have","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"17135:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17123:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":3081,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"17205:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":3083,"indexExpression":{"id":3082,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"17216:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17205:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":3084,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17226:11:11","memberName":"currentDebt","nodeType":"MemberAccess","referencedDeclaration":7731,"src":"17205:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3076,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"17093:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1709_$","typeString":"type(library Math)"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17098:3:11","memberName":"min","nodeType":"MemberAccess","referencedDeclaration":886,"src":"17093:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17093:204:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17072:225:11"},{"assignments":[3088],"declarations":[{"constant":false,"id":3088,"mutability":"mutable","name":"unrealisedLoss","nameLocation":"17385:14:11","nodeType":"VariableDeclaration","scope":3177,"src":"17377:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3087,"name":"uint256","nodeType":"ElementaryTypeName","src":"17377:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3093,"initialValue":{"arguments":[{"id":3090,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"17433:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3091,"name":"toWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"17443:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3089,"name":"_assessShareOfUnrealisedLosses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"17402:30:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17402:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17377:77:11"},{"assignments":[3095],"declarations":[{"constant":false,"id":3095,"mutability":"mutable","name":"strategyLimit","nameLocation":"17546:13:11","nodeType":"VariableDeclaration","scope":3177,"src":"17538:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3094,"name":"uint256","nodeType":"ElementaryTypeName","src":"17538:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3110,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3106,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"17657:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":3105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17649:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3104,"name":"address","nodeType":"ElementaryTypeName","src":"17649:7:11","typeDescriptions":{}}},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17649:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3101,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"17629:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3100,"name":"IStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"17619:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStrategy_$6929_$","typeString":"type(contract IStrategy)"}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17619:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$6929","typeString":"contract IStrategy"}},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17639:9:11","memberName":"maxRedeem","nodeType":"MemberAccess","referencedDeclaration":6928,"src":"17619:29:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17619:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3097,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"17572:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3096,"name":"IStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"17562:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStrategy_$6929_$","typeString":"type(contract IStrategy)"}},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17562:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$6929","typeString":"contract IStrategy"}},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17582:15:11","memberName":"convertToAssets","nodeType":"MemberAccess","referencedDeclaration":6907,"src":"17562:35:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17562:119:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17538:143:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3111,"name":"strategyLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"17776:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3112,"name":"toWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"17792:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3113,"name":"unrealisedLoss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"17805:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17792:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17776:43:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3132,"nodeType":"IfStatement","src":"17772:368:11","trueBody":{"id":3131,"nodeType":"Block","src":"17821:319:11","statements":[{"expression":{"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3116,"name":"unrealisedLoss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"17922:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3117,"name":"unrealisedLoss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"17940:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3118,"name":"strategyLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"17957:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17940:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3120,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17939:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3121,"name":"toWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"17974:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17939:45:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17922:62:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3124,"nodeType":"ExpressionStatement","src":"17922:62:11"},{"expression":{"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3125,"name":"toWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"18078:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3126,"name":"strategyLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"18091:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3127,"name":"unrealisedLoss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"18107:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18091:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18078:43:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3130,"nodeType":"ExpressionStatement","src":"18078:43:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3133,"name":"toWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"18216:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18230:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18216:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3138,"nodeType":"IfStatement","src":"18212:70:11","trueBody":{"id":3137,"nodeType":"Block","src":"18233:49:11","statements":[{"id":3136,"nodeType":"Continue","src":"18255:8:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3139,"name":"unrealisedLoss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"18385:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18402:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18385:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3142,"name":"_maxLoss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"18407:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3143,"name":"MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"18418:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18407:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18385:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3162,"nodeType":"IfStatement","src":"18381:348:11","trueBody":{"id":3161,"nodeType":"Block","src":"18427:302:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3146,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"18529:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3147,"name":"unrealisedLoss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"18536:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18529:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3149,"name":"have","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"18554:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3150,"name":"toWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"18561:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18554:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3152,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18553:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3153,"name":"_maxLoss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"18575:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18553:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3155,"name":"MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"18586:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18553:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18529:64:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3160,"nodeType":"IfStatement","src":"18525:186:11","trueBody":{"id":3159,"nodeType":"Block","src":"18595:116:11","statements":[{"id":3158,"nodeType":"Break","src":"18683:5:11"}]}}]}},{"expression":{"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3163,"name":"have","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"18791:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3164,"name":"toWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"18799:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18791:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3166,"nodeType":"ExpressionStatement","src":"18791:18:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3167,"name":"have","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"18881:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3168,"name":"maxAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"18889:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18881:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3172,"nodeType":"IfStatement","src":"18877:69:11","trueBody":{"id":3171,"nodeType":"Block","src":"18900:46:11","statements":[{"id":3170,"nodeType":"Break","src":"18922:5:11"}]}},{"expression":{"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3173,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"19020:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3174,"name":"unrealisedLoss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"19028:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19020:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3176,"nodeType":"ExpressionStatement","src":"19020:22:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3050,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"16700:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3051,"name":"currentStrategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"16704:17:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16722:6:11","memberName":"length","nodeType":"MemberAccess","src":"16704:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16700:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3178,"initializationExpression":{"assignments":[3047],"declarations":[{"constant":false,"id":3047,"mutability":"mutable","name":"i","nameLocation":"16693:1:11","nodeType":"VariableDeclaration","scope":3178,"src":"16685:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3046,"name":"uint256","nodeType":"ElementaryTypeName","src":"16685:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3049,"initialValue":{"hexValue":"30","id":3048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16697:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16685:13:11"},"loopExpression":{"expression":{"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16730:3:11","subExpression":{"id":3054,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"16730:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3056,"nodeType":"ExpressionStatement","src":"16730:3:11"},"nodeType":"ForStatement","src":"16680:2377:11"},{"expression":{"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3179,"name":"maxAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"19194:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3180,"name":"have","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"19206:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19194:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3182,"nodeType":"ExpressionStatement","src":"19194:16:11"}]}},{"expression":{"id":3185,"name":"maxAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"19238:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2974,"id":3186,"nodeType":"Return","src":"19231:16:11"}]},"id":3188,"implemented":true,"kind":"function","modifiers":[],"name":"_maxWithdraw","nameLocation":"15461:12:11","nodeType":"FunctionDefinition","parameters":{"id":2971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2965,"mutability":"mutable","name":"owner","nameLocation":"15482:5:11","nodeType":"VariableDeclaration","scope":3188,"src":"15474:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2964,"name":"address","nodeType":"ElementaryTypeName","src":"15474:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2967,"mutability":"mutable","name":"_maxLoss","nameLocation":"15497:8:11","nodeType":"VariableDeclaration","scope":3188,"src":"15489:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2966,"name":"uint256","nodeType":"ElementaryTypeName","src":"15489:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2970,"mutability":"mutable","name":"_strategies","nameLocation":"15524:11:11","nodeType":"VariableDeclaration","scope":3188,"src":"15507:28:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2968,"name":"address","nodeType":"ElementaryTypeName","src":"15507:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2969,"nodeType":"ArrayTypeName","src":"15507:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"15473:63:11"},"returnParameters":{"id":2974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3188,"src":"15571:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2972,"name":"uint256","nodeType":"ElementaryTypeName","src":"15571:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15570:9:11"},"scope":6329,"src":"15452:3802:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3257,"nodeType":"Block","src":"19542:655:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3199,"name":"shutdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"19556:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":3200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19568:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"19556:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3206,"nodeType":"IfStatement","src":"19552:74:11","trueBody":{"id":3205,"nodeType":"Block","src":"19574:52:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3202,"name":"StrategyIsShutdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"19595:18:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19595:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3204,"nodeType":"RevertStatement","src":"19588:27:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3207,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"19639:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"id":3209,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"19660:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3208,"name":"_maxDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"19648:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19648:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19639:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3216,"nodeType":"IfStatement","src":"19635:89:11","trueBody":{"id":3215,"nodeType":"Block","src":"19672:52:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3212,"name":"ExceedDepositLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"19693:18:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19693:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3214,"nodeType":"RevertStatement","src":"19686:27:11"}]}},{"expression":{"arguments":[{"expression":{"id":3220,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19804:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19808:6:11","memberName":"sender","nodeType":"MemberAccess","src":"19804:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3224,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"19824:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":3223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19816:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3222,"name":"address","nodeType":"ElementaryTypeName","src":"19816:7:11","typeDescriptions":{}}},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19816:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3226,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"19831:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3217,"name":"ASSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"19785:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19791:12:11","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":530,"src":"19785:18:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19785:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3228,"nodeType":"ExpressionStatement","src":"19785:53:11"},{"expression":{"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3229,"name":"totalIdleAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7599,"src":"19894:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3230,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"19913:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19894:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3232,"nodeType":"ExpressionStatement","src":"19894:25:11"},{"assignments":[3234],"declarations":[{"constant":false,"id":3234,"mutability":"mutable","name":"shares","nameLocation":"19992:6:11","nodeType":"VariableDeclaration","scope":3257,"src":"19984:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3233,"name":"uint256","nodeType":"ElementaryTypeName","src":"19984:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3239,"initialValue":{"arguments":[{"id":3236,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"20023:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3237,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"20031:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3235,"name":"_issueSharesForAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"20001:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) returns (uint256)"}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20001:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19984:57:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3240,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"20055:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20064:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20055:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3247,"nodeType":"IfStatement","src":"20051:59:11","trueBody":{"id":3246,"nodeType":"Block","src":"20067:43:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3243,"name":"ZeroValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"20088:9:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20088:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3245,"nodeType":"RevertStatement","src":"20081:18:11"}]}},{"eventCall":{"arguments":[{"id":3249,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"20133:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3250,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"20141:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3251,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"20152:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3252,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"20160:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3248,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"20125:7:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20125:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3254,"nodeType":"EmitStatement","src":"20120:47:11"},{"expression":{"id":3255,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"20184:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3198,"id":3256,"nodeType":"Return","src":"20177:13:11"}]},"id":3258,"implemented":true,"kind":"function","modifiers":[],"name":"_deposit","nameLocation":"19455:8:11","nodeType":"FunctionDefinition","parameters":{"id":3195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3190,"mutability":"mutable","name":"sender","nameLocation":"19472:6:11","nodeType":"VariableDeclaration","scope":3258,"src":"19464:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3189,"name":"address","nodeType":"ElementaryTypeName","src":"19464:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3192,"mutability":"mutable","name":"recipient","nameLocation":"19488:9:11","nodeType":"VariableDeclaration","scope":3258,"src":"19480:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3191,"name":"address","nodeType":"ElementaryTypeName","src":"19480:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3194,"mutability":"mutable","name":"assets","nameLocation":"19507:6:11","nodeType":"VariableDeclaration","scope":3258,"src":"19499:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3193,"name":"uint256","nodeType":"ElementaryTypeName","src":"19499:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19463:51:11"},"returnParameters":{"id":3198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3258,"src":"19533:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3196,"name":"uint256","nodeType":"ElementaryTypeName","src":"19533:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19532:9:11"},"scope":6329,"src":"19446:751:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3333,"nodeType":"Block","src":"20479:793:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3269,"name":"shutdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"20493:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":3270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20505:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"20493:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3276,"nodeType":"IfStatement","src":"20489:74:11","trueBody":{"id":3275,"nodeType":"Block","src":"20511:52:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3272,"name":"StrategyIsShutdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"20532:18:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20532:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3274,"nodeType":"RevertStatement","src":"20525:27:11"}]}},{"assignments":[3278],"declarations":[{"constant":false,"id":3278,"mutability":"mutable","name":"assets","nameLocation":"20627:6:11","nodeType":"VariableDeclaration","scope":3333,"src":"20619:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3277,"name":"uint256","nodeType":"ElementaryTypeName","src":"20619:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3284,"initialValue":{"arguments":[{"id":3280,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"20653:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3281,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"20661:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$7772_$","typeString":"type(enum Rounding)"}},"id":3282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20670:8:11","memberName":"ROUND_UP","nodeType":"MemberAccess","referencedDeclaration":7771,"src":"20661:17:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}],"id":3279,"name":"_convertToAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"20636:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$7772_$returns$_t_uint256_$","typeString":"function (uint256,enum Rounding) view returns (uint256)"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20636:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20619:60:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3285,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"20694:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20703:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20694:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3292,"nodeType":"IfStatement","src":"20690:59:11","trueBody":{"id":3291,"nodeType":"Block","src":"20706:43:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3288,"name":"ZeroValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"20727:9:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20727:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3290,"nodeType":"RevertStatement","src":"20720:18:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3293,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"20762:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"id":3295,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"20783:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3294,"name":"_maxDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"20771:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20771:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20762:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3302,"nodeType":"IfStatement","src":"20758:89:11","trueBody":{"id":3301,"nodeType":"Block","src":"20795:52:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3298,"name":"ExceedDepositLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"20816:18:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20816:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3300,"nodeType":"RevertStatement","src":"20809:27:11"}]}},{"expression":{"arguments":[{"expression":{"id":3306,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20927:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20931:6:11","memberName":"sender","nodeType":"MemberAccess","src":"20927:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3310,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"20947:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":3309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20939:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3308,"name":"address","nodeType":"ElementaryTypeName","src":"20939:7:11","typeDescriptions":{}}},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20939:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3312,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"20954:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3303,"name":"ASSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"20908:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20914:12:11","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":530,"src":"20908:18:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20908:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3314,"nodeType":"ExpressionStatement","src":"20908:53:11"},{"expression":{"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3315,"name":"totalIdleAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7599,"src":"21017:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3316,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"21036:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21017:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3318,"nodeType":"ExpressionStatement","src":"21017:25:11"},{"expression":{"arguments":[{"id":3320,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"21120:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3321,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"21128:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3319,"name":"_issueShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"21107:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21107:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3323,"nodeType":"ExpressionStatement","src":"21107:31:11"},{"eventCall":{"arguments":[{"id":3325,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"21208:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3326,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"21216:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3327,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"21227:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3328,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"21235:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3324,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"21200:7:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21200:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3330,"nodeType":"EmitStatement","src":"21195:47:11"},{"expression":{"id":3331,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"21259:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3268,"id":3332,"nodeType":"Return","src":"21252:13:11"}]},"id":3334,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"20395:5:11","nodeType":"FunctionDefinition","parameters":{"id":3265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3260,"mutability":"mutable","name":"sender","nameLocation":"20409:6:11","nodeType":"VariableDeclaration","scope":3334,"src":"20401:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3259,"name":"address","nodeType":"ElementaryTypeName","src":"20401:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3262,"mutability":"mutable","name":"recipient","nameLocation":"20425:9:11","nodeType":"VariableDeclaration","scope":3334,"src":"20417:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3261,"name":"address","nodeType":"ElementaryTypeName","src":"20417:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3264,"mutability":"mutable","name":"shares","nameLocation":"20444:6:11","nodeType":"VariableDeclaration","scope":3334,"src":"20436:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3263,"name":"uint256","nodeType":"ElementaryTypeName","src":"20436:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20400:51:11"},"returnParameters":{"id":3268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3334,"src":"20470:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3266,"name":"uint256","nodeType":"ElementaryTypeName","src":"20470:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20469:9:11"},"scope":6329,"src":"20386:886:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3409,"nodeType":"Block","src":"21655:1062:11","statements":[{"assignments":[3344],"declarations":[{"constant":false,"id":3344,"mutability":"mutable","name":"strategyCurrentDebt","nameLocation":"21735:19:11","nodeType":"VariableDeclaration","scope":3409,"src":"21727:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3343,"name":"uint256","nodeType":"ElementaryTypeName","src":"21727:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3349,"initialValue":{"expression":{"baseExpression":{"id":3345,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"21757:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":3347,"indexExpression":{"id":3346,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"21768:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21757:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":3348,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21778:11:11","memberName":"currentDebt","nodeType":"MemberAccess","referencedDeclaration":7731,"src":"21757:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21727:62:11"},{"assignments":[3351],"declarations":[{"constant":false,"id":3351,"mutability":"mutable","name":"vaultShares","nameLocation":"21870:11:11","nodeType":"VariableDeclaration","scope":3409,"src":"21862:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3350,"name":"uint256","nodeType":"ElementaryTypeName","src":"21862:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3361,"initialValue":{"arguments":[{"arguments":[{"id":3358,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"21922:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":3357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21914:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3356,"name":"address","nodeType":"ElementaryTypeName","src":"21914:7:11","typeDescriptions":{}}},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21914:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3353,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"21894:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3352,"name":"IStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"21884:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStrategy_$6929_$","typeString":"type(contract IStrategy)"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21884:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$6929","typeString":"contract IStrategy"}},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21904:9:11","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":6888,"src":"21884:29:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21884:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21862:66:11"},{"assignments":[3363],"declarations":[{"constant":false,"id":3363,"mutability":"mutable","name":"strategyAssets","nameLocation":"21946:14:11","nodeType":"VariableDeclaration","scope":3409,"src":"21938:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3362,"name":"uint256","nodeType":"ElementaryTypeName","src":"21938:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3370,"initialValue":{"arguments":[{"id":3368,"name":"vaultShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"21999:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3365,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"21973:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3364,"name":"IStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"21963:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStrategy_$6929_$","typeString":"type(contract IStrategy)"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21963:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$6929","typeString":"contract IStrategy"}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21983:15:11","memberName":"convertToAssets","nodeType":"MemberAccess","referencedDeclaration":6907,"src":"21963:35:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21963:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21938:73:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3371,"name":"strategyAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"22060:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3372,"name":"strategyCurrentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"22078:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22060:37:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3374,"name":"strategyCurrentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"22101:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22124:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22101:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22060:65:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3381,"nodeType":"IfStatement","src":"22056:104:11","trueBody":{"id":3380,"nodeType":"Block","src":"22127:33:11","statements":[{"expression":{"hexValue":"30","id":3378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22148:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3342,"id":3379,"nodeType":"Return","src":"22141:8:11"}]}},{"assignments":[3383],"declarations":[{"constant":false,"id":3383,"mutability":"mutable","name":"numerator","nameLocation":"22429:9:11","nodeType":"VariableDeclaration","scope":3409,"src":"22421:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3382,"name":"uint256","nodeType":"ElementaryTypeName","src":"22421:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3387,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3384,"name":"assetsNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"22441:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3385,"name":"strategyAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"22456:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22441:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22421:49:11"},{"assignments":[3389],"declarations":[{"constant":false,"id":3389,"mutability":"mutable","name":"lossesUserShare","nameLocation":"22488:15:11","nodeType":"VariableDeclaration","scope":3409,"src":"22480:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3388,"name":"uint256","nodeType":"ElementaryTypeName","src":"22480:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3395,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3390,"name":"assetsNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"22506:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3391,"name":"numerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"22521:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3392,"name":"strategyCurrentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"22533:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22521:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22506:46:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22480:72:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3396,"name":"numerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"22595:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3397,"name":"strategyCurrentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"22607:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22595:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22630:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22595:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3406,"nodeType":"IfStatement","src":"22591:87:11","trueBody":{"id":3405,"nodeType":"Block","src":"22633:45:11","statements":[{"expression":{"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3401,"name":"lossesUserShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"22647:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22666:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22647:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3404,"nodeType":"ExpressionStatement","src":"22647:20:11"}]}},{"expression":{"id":3407,"name":"lossesUserShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"22695:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3342,"id":3408,"nodeType":"Return","src":"22688:22:11"}]},"id":3410,"implemented":true,"kind":"function","modifiers":[],"name":"_assessShareOfUnrealisedLosses","nameLocation":"21552:30:11","nodeType":"FunctionDefinition","parameters":{"id":3339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3336,"mutability":"mutable","name":"strategy","nameLocation":"21591:8:11","nodeType":"VariableDeclaration","scope":3410,"src":"21583:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3335,"name":"address","nodeType":"ElementaryTypeName","src":"21583:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3338,"mutability":"mutable","name":"assetsNeeded","nameLocation":"21609:12:11","nodeType":"VariableDeclaration","scope":3410,"src":"21601:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3337,"name":"uint256","nodeType":"ElementaryTypeName","src":"21601:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21582:40:11"},"returnParameters":{"id":3342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3410,"src":"21646:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3340,"name":"uint256","nodeType":"ElementaryTypeName","src":"21646:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21645:9:11"},"scope":6329,"src":"21543:1174:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3453,"nodeType":"Block","src":"23028:468:11","statements":[{"assignments":[3418],"declarations":[{"constant":false,"id":3418,"mutability":"mutable","name":"sharesToRedeem","nameLocation":"23126:14:11","nodeType":"VariableDeclaration","scope":3453,"src":"23118:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3417,"name":"uint256","nodeType":"ElementaryTypeName","src":"23118:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3437,"initialValue":{"arguments":[{"arguments":[{"id":3425,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"23201:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3422,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"23175:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3421,"name":"IStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"23165:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStrategy_$6929_$","typeString":"type(contract IStrategy)"}},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23165:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$6929","typeString":"contract IStrategy"}},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23185:15:11","memberName":"previewWithdraw","nodeType":"MemberAccess","referencedDeclaration":6921,"src":"23165:35:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23165:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"id":3433,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"23319:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":3432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23311:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3431,"name":"address","nodeType":"ElementaryTypeName","src":"23311:7:11","typeDescriptions":{}}},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23311:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3428,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"23291:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3427,"name":"IStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"23281:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStrategy_$6929_$","typeString":"type(contract IStrategy)"}},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23281:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$6929","typeString":"contract IStrategy"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23301:9:11","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":6888,"src":"23281:29:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23281:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3419,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"23143:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1709_$","typeString":"type(library Math)"}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23148:3:11","memberName":"min","nodeType":"MemberAccess","referencedDeclaration":886,"src":"23143:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23143:233:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23118:258:11"},{"expression":{"arguments":[{"id":3442,"name":"sharesToRedeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"23444:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3445,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"23468:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":3444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23460:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3443,"name":"address","nodeType":"ElementaryTypeName","src":"23460:7:11","typeDescriptions":{}}},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23460:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3449,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"23483:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":3448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23475:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3447,"name":"address","nodeType":"ElementaryTypeName","src":"23475:7:11","typeDescriptions":{}}},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23475:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3439,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"23427:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3438,"name":"IStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"23417:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStrategy_$6929_$","typeString":"type(contract IStrategy)"}},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23417:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$6929","typeString":"contract IStrategy"}},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23437:6:11","memberName":"redeem","nodeType":"MemberAccess","referencedDeclaration":6867,"src":"23417:26:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address,address) external returns (uint256)"}},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23417:72:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3452,"nodeType":"ExpressionStatement","src":"23417:72:11"}]},"id":3454,"implemented":true,"kind":"function","modifiers":[],"name":"_withdrawFromStrategy","nameLocation":"22953:21:11","nodeType":"FunctionDefinition","parameters":{"id":3415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3412,"mutability":"mutable","name":"strategy","nameLocation":"22983:8:11","nodeType":"VariableDeclaration","scope":3454,"src":"22975:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3411,"name":"address","nodeType":"ElementaryTypeName","src":"22975:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3414,"mutability":"mutable","name":"assetsToWithdraw","nameLocation":"23001:16:11","nodeType":"VariableDeclaration","scope":3454,"src":"22993:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3413,"name":"uint256","nodeType":"ElementaryTypeName","src":"22993:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22974:44:11"},"returnParameters":{"id":3416,"nodeType":"ParameterList","parameters":[],"src":"23028:0:11"},"scope":6329,"src":"22944:552:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3516,"nodeType":"Block","src":"24359:449:11","statements":[{"expression":{"arguments":[{"id":3475,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"24385:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3476,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"24395:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3477,"name":"sharesToBurn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"24402:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3478,"name":"maxLoss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"24416:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3474,"name":"_validateRedeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"24369:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256) view"}},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24369:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3480,"nodeType":"ExpressionStatement","src":"24369:55:11"},{"expression":{"arguments":[{"id":3482,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"24451:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3483,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"24458:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3484,"name":"sharesToBurn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"24466:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3481,"name":"_handleAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"24434:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24434:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3486,"nodeType":"ExpressionStatement","src":"24434:45:11"},{"assignments":[3488,3490],"declarations":[{"constant":false,"id":3488,"mutability":"mutable","name":"requestedAssets","nameLocation":"24498:15:11","nodeType":"VariableDeclaration","scope":3516,"src":"24490:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3487,"name":"uint256","nodeType":"ElementaryTypeName","src":"24490:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3490,"mutability":"mutable","name":"currTotalIdle","nameLocation":"24523:13:11","nodeType":"VariableDeclaration","scope":3516,"src":"24515:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3489,"name":"uint256","nodeType":"ElementaryTypeName","src":"24515:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3495,"initialValue":{"arguments":[{"id":3492,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"24556:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3493,"name":"_strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"24564:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":3491,"name":"_withdrawAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"24540:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,address[] memory) returns (uint256,uint256)"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24540:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"24489:87:11"},{"expression":{"arguments":[{"id":3497,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"24602:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3498,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"24612:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3499,"name":"sharesToBurn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"24619:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3500,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"24633:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3501,"name":"requestedAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"24641:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3502,"name":"currTotalIdle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"24658:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3503,"name":"maxLoss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"24673:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3496,"name":"_finalizeRedeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"24586:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256,uint256,uint256,uint256)"}},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24586:95:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3505,"nodeType":"ExpressionStatement","src":"24586:95:11"},{"eventCall":{"arguments":[{"id":3507,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"24714:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3508,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"24722:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3509,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"24732:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3510,"name":"requestedAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"24739:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3511,"name":"sharesToBurn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"24756:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3506,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6386,"src":"24705:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24705:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3513,"nodeType":"EmitStatement","src":"24700:69:11"},{"expression":{"id":3514,"name":"requestedAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"24786:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3473,"id":3515,"nodeType":"Return","src":"24779:22:11"}]},"id":3517,"implemented":true,"kind":"function","modifiers":[],"name":"_redeem","nameLocation":"24128:7:11","nodeType":"FunctionDefinition","parameters":{"id":3470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3456,"mutability":"mutable","name":"sender","nameLocation":"24153:6:11","nodeType":"VariableDeclaration","scope":3517,"src":"24145:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3455,"name":"address","nodeType":"ElementaryTypeName","src":"24145:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3458,"mutability":"mutable","name":"receiver","nameLocation":"24177:8:11","nodeType":"VariableDeclaration","scope":3517,"src":"24169:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3457,"name":"address","nodeType":"ElementaryTypeName","src":"24169:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3460,"mutability":"mutable","name":"owner","nameLocation":"24203:5:11","nodeType":"VariableDeclaration","scope":3517,"src":"24195:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3459,"name":"address","nodeType":"ElementaryTypeName","src":"24195:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3462,"mutability":"mutable","name":"assets","nameLocation":"24226:6:11","nodeType":"VariableDeclaration","scope":3517,"src":"24218:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3461,"name":"uint256","nodeType":"ElementaryTypeName","src":"24218:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3464,"mutability":"mutable","name":"sharesToBurn","nameLocation":"24250:12:11","nodeType":"VariableDeclaration","scope":3517,"src":"24242:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3463,"name":"uint256","nodeType":"ElementaryTypeName","src":"24242:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3466,"mutability":"mutable","name":"maxLoss","nameLocation":"24280:7:11","nodeType":"VariableDeclaration","scope":3517,"src":"24272:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3465,"name":"uint256","nodeType":"ElementaryTypeName","src":"24272:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3469,"mutability":"mutable","name":"_strategies","nameLocation":"24314:11:11","nodeType":"VariableDeclaration","scope":3517,"src":"24297:28:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3467,"name":"address","nodeType":"ElementaryTypeName","src":"24297:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3468,"nodeType":"ArrayTypeName","src":"24297:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"24135:196:11"},"returnParameters":{"id":3473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3517,"src":"24350:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3471,"name":"uint256","nodeType":"ElementaryTypeName","src":"24350:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24349:9:11"},"scope":6329,"src":"24119:689:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3565,"nodeType":"Block","src":"25027:336:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3528,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"25041:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25061:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25053:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3529,"name":"address","nodeType":"ElementaryTypeName","src":"25053:7:11","typeDescriptions":{}}},"id":3532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25053:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"25041:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3538,"nodeType":"IfStatement","src":"25037:73:11","trueBody":{"id":3537,"nodeType":"Block","src":"25065:45:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3534,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"25086:11:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25086:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3536,"nodeType":"RevertStatement","src":"25079:20:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3539,"name":"maxLoss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"25123:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3540,"name":"MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"25133:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25123:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3546,"nodeType":"IfStatement","src":"25119:64:11","trueBody":{"id":3545,"nodeType":"Block","src":"25142:41:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3542,"name":"MaxLoss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"25163:7:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25163:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3544,"nodeType":"RevertStatement","src":"25156:16:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3547,"name":"sharesToBurn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"25196:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":3548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25212:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"25196:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3554,"nodeType":"IfStatement","src":"25192:66:11","trueBody":{"id":3553,"nodeType":"Block","src":"25215:43:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3550,"name":"ZeroValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"25236:9:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25236:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3552,"nodeType":"RevertStatement","src":"25229:18:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3555,"name":"_balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"25271:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3557,"indexExpression":{"id":3556,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"25282:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25271:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3558,"name":"sharesToBurn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"25291:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25271:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3564,"nodeType":"IfStatement","src":"25267:90:11","trueBody":{"id":3563,"nodeType":"Block","src":"25305:52:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3560,"name":"InsufficientShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"25326:18:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25326:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3562,"nodeType":"RevertStatement","src":"25319:27:11"}]}}]},"id":3566,"implemented":true,"kind":"function","modifiers":[],"name":"_validateRedeem","nameLocation":"24887:15:11","nodeType":"FunctionDefinition","parameters":{"id":3526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3519,"mutability":"mutable","name":"receiver","nameLocation":"24920:8:11","nodeType":"VariableDeclaration","scope":3566,"src":"24912:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3518,"name":"address","nodeType":"ElementaryTypeName","src":"24912:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3521,"mutability":"mutable","name":"owner","nameLocation":"24946:5:11","nodeType":"VariableDeclaration","scope":3566,"src":"24938:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3520,"name":"address","nodeType":"ElementaryTypeName","src":"24938:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3523,"mutability":"mutable","name":"sharesToBurn","nameLocation":"24969:12:11","nodeType":"VariableDeclaration","scope":3566,"src":"24961:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3522,"name":"uint256","nodeType":"ElementaryTypeName","src":"24961:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3525,"mutability":"mutable","name":"maxLoss","nameLocation":"24999:7:11","nodeType":"VariableDeclaration","scope":3566,"src":"24991:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3524,"name":"uint256","nodeType":"ElementaryTypeName","src":"24991:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24902:110:11"},"returnParameters":{"id":3527,"nodeType":"ParameterList","parameters":[],"src":"25027:0:11"},"scope":6329,"src":"24878:485:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3586,"nodeType":"Block","src":"25506:106:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3575,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"25520:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3576,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"25530:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"25520:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3585,"nodeType":"IfStatement","src":"25516:90:11","trueBody":{"id":3584,"nodeType":"Block","src":"25537:69:11","statements":[{"expression":{"arguments":[{"id":3579,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"25567:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3580,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"25574:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3581,"name":"sharesToBurn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3572,"src":"25582:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3578,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"25551:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25551:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3583,"nodeType":"ExpressionStatement","src":"25551:44:11"}]}}]},"id":3587,"implemented":true,"kind":"function","modifiers":[],"name":"_handleAllowance","nameLocation":"25427:16:11","nodeType":"FunctionDefinition","parameters":{"id":3573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3568,"mutability":"mutable","name":"owner","nameLocation":"25452:5:11","nodeType":"VariableDeclaration","scope":3587,"src":"25444:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3567,"name":"address","nodeType":"ElementaryTypeName","src":"25444:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3570,"mutability":"mutable","name":"sender","nameLocation":"25467:6:11","nodeType":"VariableDeclaration","scope":3587,"src":"25459:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3569,"name":"address","nodeType":"ElementaryTypeName","src":"25459:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3572,"mutability":"mutable","name":"sharesToBurn","nameLocation":"25483:12:11","nodeType":"VariableDeclaration","scope":3587,"src":"25475:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3571,"name":"uint256","nodeType":"ElementaryTypeName","src":"25475:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25443:53:11"},"returnParameters":{"id":3574,"nodeType":"ParameterList","parameters":[],"src":"25506:0:11"},"scope":6329,"src":"25418:194:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3957,"nodeType":"Block","src":"25806:7733:11","statements":[{"assignments":[3601],"declarations":[{"constant":false,"id":3601,"mutability":"mutable","name":"state","nameLocation":"25878:5:11","nodeType":"VariableDeclaration","scope":3957,"src":"25855:28:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalState_$7763_memory_ptr","typeString":"struct WithdrawalState"},"typeName":{"id":3600,"nodeType":"UserDefinedTypeName","pathNode":{"id":3599,"name":"WithdrawalState","nameLocations":["25855:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":7763,"src":"25855:15:11"},"referencedDeclaration":7763,"src":"25855:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalState_$7763_storage_ptr","typeString":"struct WithdrawalState"}},"visibility":"internal"}],"id":3616,"initialValue":{"arguments":[{"id":3603,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"25933:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3604,"name":"totalIdleAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7599,"src":"25968:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3605,"name":"totalDebtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"26012:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":3606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26055:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[{"arguments":[{"id":3611,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"26111:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":3610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26103:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3609,"name":"address","nodeType":"ElementaryTypeName","src":"26103:7:11","typeDescriptions":{}}},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26103:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3607,"name":"ASSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"26087:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26093:9:11","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":488,"src":"26087:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26087:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":3614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26154:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3602,"name":"WithdrawalState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7763,"src":"25886:15:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_WithdrawalState_$7763_storage_ptr_$","typeString":"type(struct WithdrawalState storage pointer)"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["25916:15:11","25953:13:11","25997:13:11","26041:12:11","26070:15:11","26131:21:11"],"names":["requestedAssets","currTotalIdle","currTotalDebt","assetsNeeded","previousBalance","unrealisedLossesShare"],"nodeType":"FunctionCall","src":"25886:280:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalState_$7763_memory_ptr","typeString":"struct WithdrawalState memory"}},"nodeType":"VariableDeclarationStatement","src":"25855:311:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3617,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"26295:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalState_$7763_memory_ptr","typeString":"struct WithdrawalState memory"}},"id":3618,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26301:15:11","memberName":"requestedAssets","nodeType":"MemberAccess","referencedDeclaration":7752,"src":"26295:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":3619,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"26319:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalState_$7763_memory_ptr","typeString":"struct WithdrawalState memory"}},"id":3620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26325:13:11","memberName":"currTotalIdle","nodeType":"MemberAccess","referencedDeclaration":7754,"src":"26319:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26295:43:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3950,"nodeType":"IfStatement","src":"26291:7180:11","trueBody":{"id":3949,"nodeType":"Block","src":"26340:7131:11","statements":[{"assignments":[3626],"declarations":[{"constant":false,"id":3626,"mutability":"mutable","name":"currentStrategies","nameLocation":"26411:17:11","nodeType":"VariableDeclaration","scope":3949,"src":"26394:34:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3624,"name":"address","nodeType":"ElementaryTypeName","src":"26394:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3625,"nodeType":"ArrayTypeName","src":"26394:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3637,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3627,"name":"_strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"26431:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26443:6:11","memberName":"length","nodeType":"MemberAccess","src":"26431:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26453:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26431:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"26458:16:11","subExpression":{"id":3631,"name":"useDefaultQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7583,"src":"26459:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26431:43:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3635,"name":"defaultQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"26491:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"26431:72:11","trueExpression":{"id":3634,"name":"_strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"26477:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"26394:109:11"},{"expression":{"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3638,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"26667:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalState_$7763_memory_ptr","typeString":"struct WithdrawalState memory"}},"id":3640,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"26673:12:11","memberName":"assetsNeeded","nodeType":"MemberAccess","referencedDeclaration":7758,"src":"26667:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3641,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"26688:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalState_$7763_memory_ptr","typeString":"struct WithdrawalState memory"}},"id":3642,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26694:15:11","memberName":"requestedAssets","nodeType":"MemberAccess","referencedDeclaration":7752,"src":"26688:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":3643,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"26712:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalState_$7763_memory_ptr","typeString":"struct WithdrawalState memory"}},"id":3644,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26718:13:11","memberName":"currTotalIdle","nodeType":"MemberAccess","referencedDeclaration":7754,"src":"26712:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26688:43:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26667:64:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3647,"nodeType":"ExpressionStatement","src":"26667:64:11"},{"body":{"id":3932,"nodeType":"Block","src":"26887:6271:11","statements":[{"assignments":[3660],"declarations":[{"constant":false,"id":3660,"mutability":"mutable","name":"strategy","nameLocation":"26913:8:11","nodeType":"VariableDeclaration","scope":3932,"src":"26905:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3659,"name":"address","nodeType":"ElementaryTypeName","src":"26905:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3664,"initialValue":{"baseExpression":{"id":3661,"name":"currentStrategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"26924:17:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3663,"indexExpression":{"id":3662,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"26942:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26924:20:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"26905:39:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3665,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"27038:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":3667,"indexExpression":{"id":3666,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"27049:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27038:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":3668,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27059:10:11","memberName":"activation","nodeType":"MemberAccess","referencedDeclaration":7727,"src":"27038:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27073:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"27038:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3675,"nodeType":"IfStatement","src":"27034:108:11","trueBody":{"id":3674,"nodeType":"Block","src":"27076:66:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3671,"name":"InactiveStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"27105:16:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27105:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3673,"nodeType":"RevertStatement","src":"27098:25:11"}]}},{"assignments":[3677],"declarations":[{"constant":false,"id":3677,"mutability":"mutable","name":"currentDebt","nameLocation":"27222:11:11","nodeType":"VariableDeclaration","scope":3932,"src":"27214:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3676,"name":"uint256","nodeType":"ElementaryTypeName","src":"27214:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3682,"initialValue":{"expression":{"baseExpression":{"id":3678,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"27236:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":3680,"indexExpression":{"id":3679,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"27247:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27236:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":3681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27257:11:11","memberName":"currentDebt","nodeType":"MemberAccess","referencedDeclaration":7731,"src":"27236:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27214:54:11"},{"assignments":[3684],"declarations":[{"constant":false,"id":3684,"mutability":"mutable","name":"assetsToWithdraw","nameLocation":"27369:16:11","nodeType":"VariableDeclaration","scope":3932,"src":"27361:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3683,"name":"uint256","nodeType":"ElementaryTypeName","src":"27361:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3691,"initialValue":{"arguments":[{"expression":{"id":3687,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"27397:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalState_$7763_memory_ptr","typeString":"struct WithdrawalState memory"}},"id":3688,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27403:12:11","memberName":"assetsNeeded","nodeType":"MemberAccess","referencedDeclaration":7758,"src":"27397:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3689,"name":"currentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"27417:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3685,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"27388:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1709_$","typeString":"type(library Math)"}},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27393:3:11","memberName":"min","nodeType":"MemberAccess","referencedDeclaration":886,"src":"27388:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27388:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27361:68:11"},{"assignments":[3693],"declarations":[{"constant":false,"id":3693,"mutability":"mutable","name":"currMaxWithdraw","nameLocation":"27595:15:11","nodeType":"VariableDeclaration","scope":3932,"src":"27587:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3692,"name":"uint256","nodeType":"ElementaryTypeName","src":"27587:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3708,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3704,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"27708:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":3703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27700:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3702,"name":"address","nodeType":"ElementaryTypeName","src":"27700:7:11","typeDescriptions":{}}},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27700:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3699,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"27680:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3698,"name":"IStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"27670:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStrategy_$6929_$","typeString":"type(contract IStrategy)"}},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27670:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$6929","typeString":"contract IStrategy"}},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27690:9:11","memberName":"maxRedeem","nodeType":"MemberAccess","referencedDeclaration":6928,"src":"27670:29:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27670:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3695,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"27623:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3694,"name":"IStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"27613:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStrategy_$6929_$","typeString":"type(contract IStrategy)"}},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27613:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$6929","typeString":"contract IStrategy"}},"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27633:15:11","memberName":"convertToAssets","nodeType":"MemberAccess","referencedDeclaration":6907,"src":"27613:35:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27613:119:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27587:145:11"},{"assignments":[3710],"declarations":[{"constant":false,"id":3710,"mutability":"mutable","name":"unrealisedLossesShare","nameLocation":"28290:21:11","nodeType":"VariableDeclaration","scope":3932,"src":"28282:29:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3709,"name":"uint256","nodeType":"ElementaryTypeName","src":"28282:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3715,"initialValue":{"arguments":[{"id":3712,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"28345:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3713,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"28355:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3711,"name":"_assessShareOfUnrealisedLosses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"28314:30:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28314:58:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28282:90:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3716,"name":"unrealisedLossesShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"28394:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28418:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"28394:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3797,"nodeType":"IfStatement","src":"28390:2099:11","trueBody":{"id":3796,"nodeType":"Block","src":"28421:2068:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3719,"name":"currMaxWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"28617:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3720,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"28635:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3721,"name":"unrealisedLossesShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"28654:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28635:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28617:58:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3745,"nodeType":"IfStatement","src":"28613:610:11","trueBody":{"id":3744,"nodeType":"Block","src":"28677:546:11","statements":[{"assignments":[3725],"declarations":[{"constant":false,"id":3725,"mutability":"mutable","name":"wanted","nameLocation":"28773:6:11","nodeType":"VariableDeclaration","scope":3744,"src":"28765:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3724,"name":"uint256","nodeType":"ElementaryTypeName","src":"28765:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3729,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3726,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"28782:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3727,"name":"unrealisedLossesShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"28801:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28782:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28765:57:11"},{"expression":{"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3730,"name":"unrealisedLossesShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"28951:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3731,"name":"unrealisedLossesShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"28975:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3732,"name":"currMaxWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"28999:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28975:39:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3734,"name":"wanted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"29017:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28975:48:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28951:72:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3737,"nodeType":"ExpressionStatement","src":"28951:72:11"},{"expression":{"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3738,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"29142:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3739,"name":"currMaxWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"29161:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3740,"name":"unrealisedLossesShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"29179:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29161:39:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29142:58:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3743,"nodeType":"ExpressionStatement","src":"29142:58:11"}]}},{"expression":{"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3746,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"29360:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3747,"name":"unrealisedLossesShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"29380:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29360:41:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3749,"nodeType":"ExpressionStatement","src":"29360:41:11"},{"expression":{"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3750,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"29423:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalState_$7763_memory_ptr","typeString":"struct WithdrawalState memory"}},"id":3752,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"29429:15:11","memberName":"requestedAssets","nodeType":"MemberAccess","referencedDeclaration":7752,"src":"29423:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3753,"name":"unrealisedLossesShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"29448:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29423:46:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3755,"nodeType":"ExpressionStatement","src":"29423:46:11"},{"expression":{"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3756,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"29671:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalState_$7763_memory_ptr","typeString":"struct WithdrawalState memory"}},"id":3758,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"29677:12:11","memberName":"assetsNeeded","nodeType":"MemberAccess","referencedDeclaration":7758,"src":"29671:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3759,"name":"unrealisedLossesShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"29693:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29671:43:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3761,"nodeType":"ExpressionStatement","src":"29671:43:11"},{"expression":{"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3762,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"29736:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalState_$7763_memory_ptr","typeString":"struct WithdrawalState memory"}},"id":3764,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"29742:13:11","memberName":"currTotalDebt","nodeType":"MemberAccess","referencedDeclaration":7756,"src":"29736:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3765,"name":"unrealisedLossesShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"29759:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29736:44:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3767,"nodeType":"ExpressionStatement","src":"29736:44:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3768,"name":"currMaxWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"30009:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30028:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"30009:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3771,"name":"unrealisedLossesShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"30033:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30057:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"30033:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30009:49:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3795,"nodeType":"IfStatement","src":"30005:466:11","trueBody":{"id":3794,"nodeType":"Block","src":"30060:411:11","statements":[{"assignments":[3776],"declarations":[{"constant":false,"id":3776,"mutability":"mutable","name":"newDebt","nameLocation":"30159:7:11","nodeType":"VariableDeclaration","scope":3794,"src":"30151:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3775,"name":"uint256","nodeType":"ElementaryTypeName","src":"30151:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3780,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3777,"name":"currentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"30169:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3778,"name":"unrealisedLossesShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"30183:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30169:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30151:53:11"},{"expression":{"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3781,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"30284:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":3783,"indexExpression":{"id":3782,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"30295:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30284:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":3784,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"30305:11:11","memberName":"currentDebt","nodeType":"MemberAccess","referencedDeclaration":7731,"src":"30284:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3785,"name":"newDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"30319:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30284:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3787,"nodeType":"ExpressionStatement","src":"30284:42:11"},{"eventCall":{"arguments":[{"id":3789,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"30417:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3790,"name":"currentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"30427:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3791,"name":"newDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"30440:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3788,"name":"DebtUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7226,"src":"30405:11:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30405:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3793,"nodeType":"EmitStatement","src":"30400:48:11"}]}}]}},{"expression":{"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3798,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"30576:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3801,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"30604:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3802,"name":"currMaxWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"30622:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3799,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"30595:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1709_$","typeString":"type(library Math)"}},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30600:3:11","memberName":"min","nodeType":"MemberAccess","referencedDeclaration":886,"src":"30595:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30595:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30576:62:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3805,"nodeType":"ExpressionStatement","src":"30576:62:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3806,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"30698:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30718:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"30698:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3811,"nodeType":"IfStatement","src":"30694:76:11","trueBody":{"id":3810,"nodeType":"Block","src":"30721:49:11","statements":[{"id":3809,"nodeType":"Continue","src":"30743:8:11"}]}},{"expression":{"arguments":[{"id":3813,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"30852:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3814,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"30862:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3812,"name":"_withdrawFromStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"30830:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30830:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3816,"nodeType":"ExpressionStatement","src":"30830:49:11"},{"assignments":[3818],"declarations":[{"constant":false,"id":3818,"mutability":"mutable","name":"postBalance","nameLocation":"30905:11:11","nodeType":"VariableDeclaration","scope":3932,"src":"30897:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3817,"name":"uint256","nodeType":"ElementaryTypeName","src":"30897:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3826,"initialValue":{"arguments":[{"arguments":[{"id":3823,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"30943:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":3822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30935:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3821,"name":"address","nodeType":"ElementaryTypeName","src":"30935:7:11","typeDescriptions":{}}},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30935:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3819,"name":"ASSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"30919:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30925:9:11","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":488,"src":"30919:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30919:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30897:52:11"},{"assignments":[3828],"declarations":[{"constant":false,"id":3828,"mutability":"mutable","name":"withdrawn","nameLocation":"31060:9:11","nodeType":"VariableDeclaration","scope":3932,"src":"31052:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3827,"name":"uint256","nodeType":"ElementaryTypeName","src":"31052:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3833,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3829,"name":"postBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"31072:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":3830,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"31086:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalState_$7763_memory_ptr","typeString":"struct WithdrawalState memory"}},"id":3831,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31092:15:11","memberName":"previousBalance","nodeType":"MemberAccess","referencedDeclaration":7760,"src":"31086:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31072:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31052:55:11"},{"assignments":[3835],"declarations":[{"constant":false,"id":3835,"mutability":"mutable","name":"loss","nameLocation":"31133:4:11","nodeType":"VariableDeclaration","scope":3932,"src":"31125:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3834,"name":"uint256","nodeType":"ElementaryTypeName","src":"31125:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3837,"initialValue":{"hexValue":"30","id":3836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31140:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"31125:16:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3838,"name":"withdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"31213:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3839,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"31225:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31213:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3858,"name":"withdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"31731:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3859,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"31743:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31731:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3868,"nodeType":"IfStatement","src":"31727:110:11","trueBody":{"id":3867,"nodeType":"Block","src":"31761:76:11","statements":[{"expression":{"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3861,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"31783:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3862,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"31790:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3863,"name":"withdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"31809:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31790:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31783:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3866,"nodeType":"ExpressionStatement","src":"31783:35:11"}]}},"id":3869,"nodeType":"IfStatement","src":"31209:628:11","trueBody":{"id":3857,"nodeType":"Block","src":"31243:478:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3841,"name":"withdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"31338:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3842,"name":"currentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"31350:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31338:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3855,"nodeType":"Block","src":"31510:97:11","statements":[{"expression":{"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3849,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"31536:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3850,"name":"withdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"31556:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3851,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"31568:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31556:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31536:48:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3854,"nodeType":"ExpressionStatement","src":"31536:48:11"}]},"id":3856,"nodeType":"IfStatement","src":"31334:273:11","trueBody":{"id":3848,"nodeType":"Block","src":"31363:141:11","statements":[{"expression":{"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3844,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"31451:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3845,"name":"currentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"31470:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31451:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3847,"nodeType":"ExpressionStatement","src":"31451:30:11"}]}}]}},{"expression":{"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3870,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"32040:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalState_$7763_memory_ptr","typeString":"struct WithdrawalState memory"}},"id":3872,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"32046:13:11","memberName":"currTotalIdle","nodeType":"MemberAccess","referencedDeclaration":7754,"src":"32040:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3873,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"32063:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3874,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"32082:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32063:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32040:46:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3877,"nodeType":"ExpressionStatement","src":"32040:46:11"},{"expression":{"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3878,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"32104:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalState_$7763_memory_ptr","typeString":"struct WithdrawalState memory"}},"id":3880,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"32110:15:11","memberName":"requestedAssets","nodeType":"MemberAccess","referencedDeclaration":7752,"src":"32104:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3881,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"32129:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32104:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3883,"nodeType":"ExpressionStatement","src":"32104:29:11"},{"expression":{"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3884,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"32151:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalState_$7763_memory_ptr","typeString":"struct WithdrawalState memory"}},"id":3886,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"32157:13:11","memberName":"currTotalDebt","nodeType":"MemberAccess","referencedDeclaration":7756,"src":"32151:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3887,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"32174:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32151:39:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3889,"nodeType":"ExpressionStatement","src":"32151:39:11"},{"assignments":[3891],"declarations":[{"constant":false,"id":3891,"mutability":"mutable","name":"_newDebt","nameLocation":"32310:8:11","nodeType":"VariableDeclaration","scope":3932,"src":"32302:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3890,"name":"uint256","nodeType":"ElementaryTypeName","src":"32302:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3898,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3892,"name":"currentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"32321:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3893,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"32336:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3894,"name":"unrealisedLossesShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"32355:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32336:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3896,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"32335:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32321:56:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"32302:75:11"},{"expression":{"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3899,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"32441:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":3901,"indexExpression":{"id":3900,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"32452:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"32441:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":3902,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"32462:11:11","memberName":"currentDebt","nodeType":"MemberAccess","referencedDeclaration":7731,"src":"32441:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3903,"name":"_newDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"32476:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32441:43:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3905,"nodeType":"ExpressionStatement","src":"32441:43:11"},{"eventCall":{"arguments":[{"id":3907,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"32558:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3908,"name":"currentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"32568:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3909,"name":"_newDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"32581:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3906,"name":"DebtUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7226,"src":"32546:11:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32546:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3911,"nodeType":"EmitStatement","src":"32541:49:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3912,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"32693:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalState_$7763_memory_ptr","typeString":"struct WithdrawalState memory"}},"id":3913,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"32699:15:11","memberName":"requestedAssets","nodeType":"MemberAccess","referencedDeclaration":7752,"src":"32693:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":3914,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"32718:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalState_$7763_memory_ptr","typeString":"struct WithdrawalState memory"}},"id":3915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"32724:13:11","memberName":"currTotalIdle","nodeType":"MemberAccess","referencedDeclaration":7754,"src":"32718:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32693:44:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3919,"nodeType":"IfStatement","src":"32689:96:11","trueBody":{"id":3918,"nodeType":"Block","src":"32739:46:11","statements":[{"id":3917,"nodeType":"Break","src":"32761:5:11"}]}},{"expression":{"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3920,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"32898:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalState_$7763_memory_ptr","typeString":"struct WithdrawalState memory"}},"id":3922,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"32904:15:11","memberName":"previousBalance","nodeType":"MemberAccess","referencedDeclaration":7760,"src":"32898:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3923,"name":"postBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"32922:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32898:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3925,"nodeType":"ExpressionStatement","src":"32898:35:11"},{"expression":{"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3926,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"33105:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalState_$7763_memory_ptr","typeString":"struct WithdrawalState memory"}},"id":3928,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"33111:12:11","memberName":"assetsNeeded","nodeType":"MemberAccess","referencedDeclaration":7758,"src":"33105:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3929,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"33127:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"33105:38:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3931,"nodeType":"ExpressionStatement","src":"33105:38:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3652,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"26852:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3653,"name":"currentStrategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"26856:17:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26874:6:11","memberName":"length","nodeType":"MemberAccess","src":"26856:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26852:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3933,"initializationExpression":{"assignments":[3649],"declarations":[{"constant":false,"id":3649,"mutability":"mutable","name":"i","nameLocation":"26845:1:11","nodeType":"VariableDeclaration","scope":3933,"src":"26840:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3648,"name":"uint","nodeType":"ElementaryTypeName","src":"26840:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3651,"initialValue":{"hexValue":"30","id":3650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26849:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26840:10:11"},"loopExpression":{"expression":{"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"26882:3:11","subExpression":{"id":3656,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"26882:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3658,"nodeType":"ExpressionStatement","src":"26882:3:11"},"nodeType":"ForStatement","src":"26835:6323:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3934,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"33263:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalState_$7763_memory_ptr","typeString":"struct WithdrawalState memory"}},"id":3935,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"33269:13:11","memberName":"currTotalIdle","nodeType":"MemberAccess","referencedDeclaration":7754,"src":"33263:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3936,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"33285:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalState_$7763_memory_ptr","typeString":"struct WithdrawalState memory"}},"id":3937,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"33291:15:11","memberName":"requestedAssets","nodeType":"MemberAccess","referencedDeclaration":7752,"src":"33285:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"33263:43:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3943,"nodeType":"IfStatement","src":"33259:109:11","trueBody":{"id":3942,"nodeType":"Block","src":"33308:60:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3939,"name":"InsufficientAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"33333:18:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33333:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3941,"nodeType":"RevertStatement","src":"33326:27:11"}]}},{"expression":{"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3944,"name":"totalDebtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"33423:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3945,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"33441:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalState_$7763_memory_ptr","typeString":"struct WithdrawalState memory"}},"id":3946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"33447:13:11","memberName":"currTotalDebt","nodeType":"MemberAccess","referencedDeclaration":7756,"src":"33441:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"33423:37:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3948,"nodeType":"ExpressionStatement","src":"33423:37:11"}]}},{"expression":{"components":[{"expression":{"id":3951,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"33489:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalState_$7763_memory_ptr","typeString":"struct WithdrawalState memory"}},"id":3952,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"33495:15:11","memberName":"requestedAssets","nodeType":"MemberAccess","referencedDeclaration":7752,"src":"33489:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3953,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"33512:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalState_$7763_memory_ptr","typeString":"struct WithdrawalState memory"}},"id":3954,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"33518:13:11","memberName":"currTotalIdle","nodeType":"MemberAccess","referencedDeclaration":7754,"src":"33512:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3955,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"33488:44:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":3598,"id":3956,"nodeType":"Return","src":"33481:51:11"}]},"id":3958,"implemented":true,"kind":"function","modifiers":[],"name":"_withdrawAssets","nameLocation":"25708:15:11","nodeType":"FunctionDefinition","parameters":{"id":3593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3589,"mutability":"mutable","name":"assets","nameLocation":"25732:6:11","nodeType":"VariableDeclaration","scope":3958,"src":"25724:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3588,"name":"uint256","nodeType":"ElementaryTypeName","src":"25724:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3592,"mutability":"mutable","name":"_strategies","nameLocation":"25757:11:11","nodeType":"VariableDeclaration","scope":3958,"src":"25740:28:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3590,"name":"address","nodeType":"ElementaryTypeName","src":"25740:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3591,"nodeType":"ArrayTypeName","src":"25740:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"25723:46:11"},"returnParameters":{"id":3598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3958,"src":"25788:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3594,"name":"uint256","nodeType":"ElementaryTypeName","src":"25788:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3958,"src":"25797:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3596,"name":"uint256","nodeType":"ElementaryTypeName","src":"25797:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25787:18:11"},"scope":6329,"src":"25699:7840:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4018,"nodeType":"Block","src":"33858:666:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3975,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"33941:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3976,"name":"requestedAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"33950:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"33941:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3978,"name":"maxLoss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3972,"src":"33969:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3979,"name":"MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"33979:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"33969:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"33941:45:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3997,"nodeType":"IfStatement","src":"33937:247:11","trueBody":{"id":3996,"nodeType":"Block","src":"33988:196:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3982,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"34066:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3983,"name":"requestedAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"34075:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34066:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3985,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"34093:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3986,"name":"maxLoss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3972,"src":"34102:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34093:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3988,"name":"MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"34112:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34093:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34066:53:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3995,"nodeType":"IfStatement","src":"34062:112:11","trueBody":{"id":3994,"nodeType":"Block","src":"34121:53:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3991,"name":"TooMuchLoss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"34146:11:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34146:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3993,"nodeType":"RevertStatement","src":"34139:20:11"}]}}]}},{"expression":{"arguments":[{"id":3999,"name":"sharesToBurn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"34272:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4000,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"34286:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3998,"name":"_burnShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"34260:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34260:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4002,"nodeType":"ExpressionStatement","src":"34260:32:11"},{"expression":{"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4003,"name":"totalIdleAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7599,"src":"34339:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4004,"name":"currTotalIdle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"34357:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4005,"name":"requestedAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"34373:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34357:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34339:49:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4008,"nodeType":"ExpressionStatement","src":"34339:49:11"},{"expression":{"arguments":[{"arguments":[{"id":4012,"name":"ASSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"34483:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}],"id":4011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34475:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4010,"name":"address","nodeType":"ElementaryTypeName","src":"34475:7:11","typeDescriptions":{}}},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34475:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4014,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"34491:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4015,"name":"requestedAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"34501:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4009,"name":"_erc20SafeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"34456:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34456:61:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4017,"nodeType":"ExpressionStatement","src":"34456:61:11"}]},"id":4019,"implemented":true,"kind":"function","modifiers":[],"name":"_finalizeRedeem","nameLocation":"33635:15:11","nodeType":"FunctionDefinition","parameters":{"id":3973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3960,"mutability":"mutable","name":"receiver","nameLocation":"33668:8:11","nodeType":"VariableDeclaration","scope":4019,"src":"33660:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3959,"name":"address","nodeType":"ElementaryTypeName","src":"33660:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3962,"mutability":"mutable","name":"owner","nameLocation":"33694:5:11","nodeType":"VariableDeclaration","scope":4019,"src":"33686:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3961,"name":"address","nodeType":"ElementaryTypeName","src":"33686:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3964,"mutability":"mutable","name":"sharesToBurn","nameLocation":"33717:12:11","nodeType":"VariableDeclaration","scope":4019,"src":"33709:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3963,"name":"uint256","nodeType":"ElementaryTypeName","src":"33709:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3966,"mutability":"mutable","name":"assets","nameLocation":"33747:6:11","nodeType":"VariableDeclaration","scope":4019,"src":"33739:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3965,"name":"uint256","nodeType":"ElementaryTypeName","src":"33739:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3968,"mutability":"mutable","name":"requestedAssets","nameLocation":"33771:15:11","nodeType":"VariableDeclaration","scope":4019,"src":"33763:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3967,"name":"uint256","nodeType":"ElementaryTypeName","src":"33763:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3970,"mutability":"mutable","name":"currTotalIdle","nameLocation":"33804:13:11","nodeType":"VariableDeclaration","scope":4019,"src":"33796:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3969,"name":"uint256","nodeType":"ElementaryTypeName","src":"33796:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3972,"mutability":"mutable","name":"maxLoss","nameLocation":"33835:7:11","nodeType":"VariableDeclaration","scope":4019,"src":"33827:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3971,"name":"uint256","nodeType":"ElementaryTypeName","src":"33827:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"33650:198:11"},"returnParameters":{"id":3974,"nodeType":"ParameterList","parameters":[],"src":"33858:0:11"},"scope":6329,"src":"33626:898:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4031,"nodeType":"Block","src":"34609:119:11","statements":[{"expression":{"arguments":[{"id":4028,"name":"newStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"34709:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4025,"name":"strategyManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7573,"src":"34680:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4024,"name":"IStrategyManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6944,"src":"34663:16:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStrategyManager_$6944_$","typeString":"type(contract IStrategyManager)"}},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34663:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStrategyManager_$6944","typeString":"contract IStrategyManager"}},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"34697:11:11","memberName":"addStrategy","nodeType":"MemberAccess","referencedDeclaration":6936,"src":"34663:45:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34663:58:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4030,"nodeType":"ExpressionStatement","src":"34663:58:11"}]},"id":4032,"implemented":true,"kind":"function","modifiers":[],"name":"_addStrategy","nameLocation":"34566:12:11","nodeType":"FunctionDefinition","parameters":{"id":4022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4021,"mutability":"mutable","name":"newStrategy","nameLocation":"34587:11:11","nodeType":"VariableDeclaration","scope":4032,"src":"34579:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4020,"name":"address","nodeType":"ElementaryTypeName","src":"34579:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"34578:21:11"},"returnParameters":{"id":4023,"nodeType":"ParameterList","parameters":[],"src":"34609:0:11"},"scope":6329,"src":"34557:171:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4047,"nodeType":"Block","src":"34798:126:11","statements":[{"expression":{"arguments":[{"id":4043,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"34901:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4044,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"34911:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[{"id":4040,"name":"strategyManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7573,"src":"34869:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4039,"name":"IStrategyManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6944,"src":"34852:16:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStrategyManager_$6944_$","typeString":"type(contract IStrategyManager)"}},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34852:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStrategyManager_$6944","typeString":"contract IStrategyManager"}},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"34886:14:11","memberName":"revokeStrategy","nodeType":"MemberAccess","referencedDeclaration":6943,"src":"34852:48:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool) external"}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34852:65:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4046,"nodeType":"ExpressionStatement","src":"34852:65:11"}]},"id":4048,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeStrategy","nameLocation":"34743:15:11","nodeType":"FunctionDefinition","parameters":{"id":4037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4034,"mutability":"mutable","name":"strategy","nameLocation":"34767:8:11","nodeType":"VariableDeclaration","scope":4048,"src":"34759:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4033,"name":"address","nodeType":"ElementaryTypeName","src":"34759:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4036,"mutability":"mutable","name":"force","nameLocation":"34782:5:11","nodeType":"VariableDeclaration","scope":4048,"src":"34777:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4035,"name":"bool","nodeType":"ElementaryTypeName","src":"34777:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34758:30:11"},"returnParameters":{"id":4038,"nodeType":"ParameterList","parameters":[],"src":"34798:0:11"},"scope":6329,"src":"34734:190:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4384,"nodeType":"Block","src":"35470:5228:11","statements":[{"assignments":[4058],"declarations":[{"constant":false,"id":4058,"mutability":"mutable","name":"newDebt","nameLocation":"35538:7:11","nodeType":"VariableDeclaration","scope":4384,"src":"35530:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4057,"name":"uint256","nodeType":"ElementaryTypeName","src":"35530:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4060,"initialValue":{"id":4059,"name":"targetDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4052,"src":"35548:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"35530:28:11"},{"assignments":[4062],"declarations":[{"constant":false,"id":4062,"mutability":"mutable","name":"currentDebt","nameLocation":"35624:11:11","nodeType":"VariableDeclaration","scope":4384,"src":"35616:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4061,"name":"uint256","nodeType":"ElementaryTypeName","src":"35616:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4067,"initialValue":{"expression":{"baseExpression":{"id":4063,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"35638:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":4065,"indexExpression":{"id":4064,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"35649:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"35638:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":4066,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"35659:11:11","memberName":"currentDebt","nodeType":"MemberAccess","referencedDeclaration":7731,"src":"35638:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"35616:54:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4068,"name":"shutdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"35745:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":4069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"35757:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"35745:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4076,"nodeType":"IfStatement","src":"35741:58:11","trueBody":{"id":4075,"nodeType":"Block","src":"35763:36:11","statements":[{"expression":{"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4071,"name":"newDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"35777:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35787:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"35777:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4074,"nodeType":"ExpressionStatement","src":"35777:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4077,"name":"newDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"35813:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4078,"name":"currentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"35824:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35813:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4084,"nodeType":"IfStatement","src":"35809:77:11","trueBody":{"id":4083,"nodeType":"Block","src":"35837:49:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4080,"name":"DebtDidntChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"35858:15:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35858:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4082,"nodeType":"RevertStatement","src":"35851:24:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4085,"name":"currentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"35900:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4086,"name":"newDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"35914:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35900:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4367,"nodeType":"Block","src":"38219:2300:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4224,"name":"newDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"38393:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"baseExpression":{"id":4225,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"38403:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":4227,"indexExpression":{"id":4226,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"38414:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"38403:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":4228,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"38424:7:11","memberName":"maxDebt","nodeType":"MemberAccess","referencedDeclaration":7733,"src":"38403:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"38393:38:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4234,"nodeType":"IfStatement","src":"38389:107:11","trueBody":{"id":4233,"nodeType":"Block","src":"38433:63:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4230,"name":"DebtHigherThanMaxDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"38458:21:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38458:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4232,"nodeType":"RevertStatement","src":"38451:30:11"}]}},{"assignments":[4236],"declarations":[{"constant":false,"id":4236,"mutability":"mutable","name":"currentMaxDeposit","nameLocation":"38599:17:11","nodeType":"VariableDeclaration","scope":4367,"src":"38591:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4235,"name":"uint256","nodeType":"ElementaryTypeName","src":"38591:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4246,"initialValue":{"arguments":[{"arguments":[{"id":4243,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"38658:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":4242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"38650:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4241,"name":"address","nodeType":"ElementaryTypeName","src":"38650:7:11","typeDescriptions":{}}},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38650:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4238,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"38629:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4237,"name":"IStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"38619:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStrategy_$6929_$","typeString":"type(contract IStrategy)"}},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38619:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$6929","typeString":"contract IStrategy"}},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"38639:10:11","memberName":"maxDeposit","nodeType":"MemberAccess","referencedDeclaration":6895,"src":"38619:30:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38619:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"38591:73:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4247,"name":"currentMaxDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"38682:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":4248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38703:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"38682:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4254,"nodeType":"IfStatement","src":"38678:79:11","trueBody":{"id":4253,"nodeType":"Block","src":"38706:51:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4250,"name":"ZeroValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"38731:9:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38731:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4252,"nodeType":"RevertStatement","src":"38724:18:11"}]}},{"assignments":[4256],"declarations":[{"constant":false,"id":4256,"mutability":"mutable","name":"assetsToDeposit","nameLocation":"38846:15:11","nodeType":"VariableDeclaration","scope":4367,"src":"38838:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4255,"name":"uint256","nodeType":"ElementaryTypeName","src":"38838:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4260,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4257,"name":"newDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"38864:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4258,"name":"currentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"38874:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"38864:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"38838:47:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4261,"name":"assetsToDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"38903:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4262,"name":"currentMaxDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"38921:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"38903:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4269,"nodeType":"IfStatement","src":"38899:157:11","trueBody":{"id":4268,"nodeType":"Block","src":"38940:116:11","statements":[{"expression":{"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4264,"name":"assetsToDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"39006:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4265,"name":"currentMaxDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"39024:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"39006:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4267,"nodeType":"ExpressionStatement","src":"39006:35:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4270,"name":"totalIdleAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7599,"src":"39074:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4271,"name":"minimumTotalIdle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7601,"src":"39093:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"39074:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4277,"nodeType":"IfStatement","src":"39070:100:11","trueBody":{"id":4276,"nodeType":"Block","src":"39111:59:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4273,"name":"InsufficientFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"39136:17:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39136:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4275,"nodeType":"RevertStatement","src":"39129:26:11"}]}},{"assignments":[4279],"declarations":[{"constant":false,"id":4279,"mutability":"mutable","name":"availableIdle","nameLocation":"39191:13:11","nodeType":"VariableDeclaration","scope":4367,"src":"39183:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4278,"name":"uint256","nodeType":"ElementaryTypeName","src":"39183:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4283,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4280,"name":"totalIdleAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7599,"src":"39207:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4281,"name":"minimumTotalIdle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7601,"src":"39225:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"39207:34:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"39183:58:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4284,"name":"assetsToDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"39337:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4285,"name":"availableIdle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"39355:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"39337:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4292,"nodeType":"IfStatement","src":"39333:101:11","trueBody":{"id":4291,"nodeType":"Block","src":"39370:64:11","statements":[{"expression":{"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4287,"name":"assetsToDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"39388:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4288,"name":"availableIdle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"39406:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"39388:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4290,"nodeType":"ExpressionStatement","src":"39388:31:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4293,"name":"assetsToDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"39484:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39502:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"39484:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4366,"nodeType":"IfStatement","src":"39480:1029:11","trueBody":{"id":4365,"nodeType":"Block","src":"39505:1004:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":4299,"name":"ASSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"39625:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}],"id":4298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"39617:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4297,"name":"address","nodeType":"ElementaryTypeName","src":"39617:7:11","typeDescriptions":{}}},"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39617:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4301,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"39633:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4302,"name":"assetsToDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"39643:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4296,"name":"_erc20SafeApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"39599:17:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39599:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4304,"nodeType":"ExpressionStatement","src":"39599:60:11"},{"assignments":[4306],"declarations":[{"constant":false,"id":4306,"mutability":"mutable","name":"preBalance","nameLocation":"39754:10:11","nodeType":"VariableDeclaration","scope":4365,"src":"39746:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4305,"name":"uint256","nodeType":"ElementaryTypeName","src":"39746:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4314,"initialValue":{"arguments":[{"arguments":[{"id":4311,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"39791:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":4310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"39783:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4309,"name":"address","nodeType":"ElementaryTypeName","src":"39783:7:11","typeDescriptions":{}}},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39783:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4307,"name":"ASSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"39767:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"39773:9:11","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":488,"src":"39767:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39767:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"39746:51:11"},{"expression":{"arguments":[{"id":4319,"name":"assetsToDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"39843:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4322,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"39868:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":4321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"39860:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4320,"name":"address","nodeType":"ElementaryTypeName","src":"39860:7:11","typeDescriptions":{}}},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39860:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4316,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"39825:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4315,"name":"IStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"39815:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStrategy_$6929_$","typeString":"type(contract IStrategy)"}},"id":4317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39815:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$6929","typeString":"contract IStrategy"}},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"39835:7:11","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":6876,"src":"39815:27:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) external returns (uint256)"}},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39815:59:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4325,"nodeType":"ExpressionStatement","src":"39815:59:11"},{"assignments":[4327],"declarations":[{"constant":false,"id":4327,"mutability":"mutable","name":"postBalance","nameLocation":"39900:11:11","nodeType":"VariableDeclaration","scope":4365,"src":"39892:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4326,"name":"uint256","nodeType":"ElementaryTypeName","src":"39892:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4335,"initialValue":{"arguments":[{"arguments":[{"id":4332,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"39938:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":4331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"39930:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4330,"name":"address","nodeType":"ElementaryTypeName","src":"39930:7:11","typeDescriptions":{}}},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39930:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4328,"name":"ASSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"39914:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"39920:9:11","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":488,"src":"39914:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39914:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"39892:52:11"},{"expression":{"arguments":[{"arguments":[{"id":4339,"name":"ASSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"40052:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}],"id":4338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"40044:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4337,"name":"address","nodeType":"ElementaryTypeName","src":"40044:7:11","typeDescriptions":{}}},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40044:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4341,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"40060:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":4342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"40070:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4336,"name":"_erc20SafeApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"40026:17:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40026:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4344,"nodeType":"ExpressionStatement","src":"40026:46:11"},{"expression":{"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4345,"name":"assetsToDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"40254:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4346,"name":"preBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"40272:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4347,"name":"postBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4327,"src":"40285:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"40272:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"40254:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4350,"nodeType":"ExpressionStatement","src":"40254:42:11"},{"expression":{"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4351,"name":"totalIdleAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7599,"src":"40350:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4352,"name":"assetsToDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"40369:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"40350:34:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4354,"nodeType":"ExpressionStatement","src":"40350:34:11"},{"expression":{"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4355,"name":"totalDebtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"40402:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4356,"name":"assetsToDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"40421:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"40402:34:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4358,"nodeType":"ExpressionStatement","src":"40402:34:11"},{"expression":{"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4359,"name":"newDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"40455:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4360,"name":"currentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"40465:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4361,"name":"assetsToDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"40479:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"40465:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"40455:39:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4364,"nodeType":"ExpressionStatement","src":"40455:39:11"}]}}]},"id":4368,"nodeType":"IfStatement","src":"35896:4623:11","trueBody":{"id":4223,"nodeType":"Block","src":"35923:2290:11","statements":[{"assignments":[4089],"declarations":[{"constant":false,"id":4089,"mutability":"mutable","name":"assetsToWithdraw","nameLocation":"35972:16:11","nodeType":"VariableDeclaration","scope":4223,"src":"35964:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4088,"name":"uint256","nodeType":"ElementaryTypeName","src":"35964:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4093,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4090,"name":"currentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"35991:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4091,"name":"newDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"36005:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35991:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"35964:48:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4094,"name":"totalIdleAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7599,"src":"36082:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4095,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"36100:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"36082:34:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4097,"name":"minimumTotalIdle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7601,"src":"36119:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"36082:53:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4115,"nodeType":"IfStatement","src":"36078:330:11","trueBody":{"id":4114,"nodeType":"Block","src":"36137:271:11","statements":[{"expression":{"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4099,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"36155:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4100,"name":"minimumTotalIdle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7601,"src":"36174:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4101,"name":"totalIdleAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7599,"src":"36193:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"36174:34:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"36155:53:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4104,"nodeType":"ExpressionStatement","src":"36155:53:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4105,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"36291:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4106,"name":"currentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"36310:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"36291:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4113,"nodeType":"IfStatement","src":"36287:107:11","trueBody":{"id":4112,"nodeType":"Block","src":"36323:71:11","statements":[{"expression":{"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4108,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"36345:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4109,"name":"currentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"36364:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"36345:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4111,"nodeType":"ExpressionStatement","src":"36345:30:11"}]}}]}},{"assignments":[4117],"declarations":[{"constant":false,"id":4117,"mutability":"mutable","name":"withdrawable","nameLocation":"36547:12:11","nodeType":"VariableDeclaration","scope":4223,"src":"36539:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4116,"name":"uint256","nodeType":"ElementaryTypeName","src":"36539:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4132,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":4128,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"36636:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":4127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"36628:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4126,"name":"address","nodeType":"ElementaryTypeName","src":"36628:7:11","typeDescriptions":{}}},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36628:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4123,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"36608:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4122,"name":"IStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"36598:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStrategy_$6929_$","typeString":"type(contract IStrategy)"}},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36598:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$6929","typeString":"contract IStrategy"}},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"36618:9:11","memberName":"maxRedeem","nodeType":"MemberAccess","referencedDeclaration":6928,"src":"36598:29:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36598:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4119,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"36572:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4118,"name":"IStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"36562:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStrategy_$6929_$","typeString":"type(contract IStrategy)"}},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36562:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$6929","typeString":"contract IStrategy"}},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"36582:15:11","memberName":"convertToAssets","nodeType":"MemberAccess","referencedDeclaration":6907,"src":"36562:35:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36562:81:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"36539:104:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4133,"name":"withdrawable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"36662:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":4134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36678:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"36662:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4140,"nodeType":"IfStatement","src":"36658:74:11","trueBody":{"id":4139,"nodeType":"Block","src":"36681:51:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4136,"name":"ZeroValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"36706:9:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36706:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4138,"nodeType":"RevertStatement","src":"36699:18:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4141,"name":"withdrawable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"36817:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4142,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"36832:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"36817:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4149,"nodeType":"IfStatement","src":"36813:101:11","trueBody":{"id":4148,"nodeType":"Block","src":"36850:64:11","statements":[{"expression":{"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4144,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"36868:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4145,"name":"withdrawable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"36887:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"36868:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4147,"nodeType":"ExpressionStatement","src":"36868:31:11"}]}},{"assignments":[4151],"declarations":[{"constant":false,"id":4151,"mutability":"mutable","name":"unrealisedLossesShare","nameLocation":"37049:21:11","nodeType":"VariableDeclaration","scope":4223,"src":"37041:29:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4150,"name":"uint256","nodeType":"ElementaryTypeName","src":"37041:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4156,"initialValue":{"arguments":[{"id":4153,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"37104:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4154,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"37114:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4152,"name":"_assessShareOfUnrealisedLosses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"37073:30:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37073:58:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"37041:90:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4157,"name":"unrealisedLossesShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"37149:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"37174:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"37149:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4164,"nodeType":"IfStatement","src":"37145:101:11","trueBody":{"id":4163,"nodeType":"Block","src":"37177:69:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4160,"name":"StrategyHasUnrealisedLosses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"37202:27:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37202:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4162,"nodeType":"RevertStatement","src":"37195:36:11"}]}},{"assignments":[4166],"declarations":[{"constant":false,"id":4166,"mutability":"mutable","name":"preBalance","nameLocation":"37325:10:11","nodeType":"VariableDeclaration","scope":4223,"src":"37317:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4165,"name":"uint256","nodeType":"ElementaryTypeName","src":"37317:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4174,"initialValue":{"arguments":[{"arguments":[{"id":4171,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"37362:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":4170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"37354:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4169,"name":"address","nodeType":"ElementaryTypeName","src":"37354:7:11","typeDescriptions":{}}},"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37354:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4167,"name":"ASSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"37338:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"37344:9:11","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":488,"src":"37338:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37338:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"37317:51:11"},{"expression":{"arguments":[{"id":4176,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"37404:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4177,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"37414:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4175,"name":"_withdrawFromStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"37382:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37382:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4179,"nodeType":"ExpressionStatement","src":"37382:49:11"},{"assignments":[4181],"declarations":[{"constant":false,"id":4181,"mutability":"mutable","name":"postBalance","nameLocation":"37453:11:11","nodeType":"VariableDeclaration","scope":4223,"src":"37445:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4180,"name":"uint256","nodeType":"ElementaryTypeName","src":"37445:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4189,"initialValue":{"arguments":[{"arguments":[{"id":4186,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"37491:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":4185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"37483:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4184,"name":"address","nodeType":"ElementaryTypeName","src":"37483:7:11","typeDescriptions":{}}},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37483:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4182,"name":"ASSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"37467:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"37473:9:11","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":488,"src":"37467:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37467:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"37445:52:11"},{"assignments":[4191],"declarations":[{"constant":false,"id":4191,"mutability":"mutable","name":"withdrawn","nameLocation":"37705:9:11","nodeType":"VariableDeclaration","scope":4223,"src":"37697:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4190,"name":"uint256","nodeType":"ElementaryTypeName","src":"37697:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4199,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4194,"name":"postBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"37726:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4195,"name":"preBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"37740:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"37726:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4197,"name":"currentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"37752:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4192,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"37717:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1709_$","typeString":"type(library Math)"}},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"37722:3:11","memberName":"min","nodeType":"MemberAccess","referencedDeclaration":886,"src":"37717:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37717:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"37697:67:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4200,"name":"withdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"37848:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4201,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"37860:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"37848:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4208,"nodeType":"IfStatement","src":"37844:95:11","trueBody":{"id":4207,"nodeType":"Block","src":"37878:61:11","statements":[{"expression":{"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4203,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"37896:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4204,"name":"withdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"37915:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"37896:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4206,"nodeType":"ExpressionStatement","src":"37896:28:11"}]}},{"expression":{"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4209,"name":"totalIdleAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7599,"src":"37984:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4210,"name":"withdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"38003:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"37984:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4212,"nodeType":"ExpressionStatement","src":"37984:28:11"},{"expression":{"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4213,"name":"totalDebtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"38112:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4214,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"38131:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"38112:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4216,"nodeType":"ExpressionStatement","src":"38112:35:11"},{"expression":{"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4217,"name":"newDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"38162:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4218,"name":"currentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"38172:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4219,"name":"assetsToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"38186:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"38172:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"38162:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4222,"nodeType":"ExpressionStatement","src":"38162:40:11"}]}},{"expression":{"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4369,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"40566:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":4371,"indexExpression":{"id":4370,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"40577:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"40566:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":4372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"40587:11:11","memberName":"currentDebt","nodeType":"MemberAccess","referencedDeclaration":7731,"src":"40566:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4373,"name":"newDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"40601:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"40566:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4375,"nodeType":"ExpressionStatement","src":"40566:42:11"},{"eventCall":{"arguments":[{"id":4377,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"40636:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4378,"name":"currentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"40646:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4379,"name":"newDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"40659:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4376,"name":"DebtUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7226,"src":"40624:11:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40624:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4381,"nodeType":"EmitStatement","src":"40619:48:11"},{"expression":{"id":4382,"name":"newDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"40684:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4056,"id":4383,"nodeType":"Return","src":"40677:14:11"}]},"id":4385,"implemented":true,"kind":"function","modifiers":[],"name":"_updateDebt","nameLocation":"35393:11:11","nodeType":"FunctionDefinition","parameters":{"id":4053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4050,"mutability":"mutable","name":"strategy","nameLocation":"35413:8:11","nodeType":"VariableDeclaration","scope":4385,"src":"35405:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4049,"name":"address","nodeType":"ElementaryTypeName","src":"35405:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4052,"mutability":"mutable","name":"targetDebt","nameLocation":"35431:10:11","nodeType":"VariableDeclaration","scope":4385,"src":"35423:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4051,"name":"uint256","nodeType":"ElementaryTypeName","src":"35423:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35404:38:11"},"returnParameters":{"id":4056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4385,"src":"35461:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4054,"name":"uint256","nodeType":"ElementaryTypeName","src":"35461:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35460:9:11"},"scope":6329,"src":"35384:5314:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4492,"nodeType":"Block","src":"41610:1305:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4394,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"41671:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":4396,"indexExpression":{"id":4395,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"41682:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"41671:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":4397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"41692:10:11","memberName":"activation","nodeType":"MemberAccess","referencedDeclaration":7727,"src":"41671:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"41706:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"41671:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4404,"nodeType":"IfStatement","src":"41667:92:11","trueBody":{"id":4403,"nodeType":"Block","src":"41709:50:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4400,"name":"InactiveStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"41730:16:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41730:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4402,"nodeType":"RevertStatement","src":"41723:25:11"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4405,"name":"_burnUnlockedShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"41838:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41838:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4407,"nodeType":"ExpressionStatement","src":"41838:21:11"},{"assignments":[4409,4411],"declarations":[{"constant":false,"id":4409,"mutability":"mutable","name":"gain","nameLocation":"41879:4:11","nodeType":"VariableDeclaration","scope":4492,"src":"41871:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4408,"name":"uint256","nodeType":"ElementaryTypeName","src":"41871:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4411,"mutability":"mutable","name":"loss","nameLocation":"41893:4:11","nodeType":"VariableDeclaration","scope":4492,"src":"41885:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4410,"name":"uint256","nodeType":"ElementaryTypeName","src":"41885:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4415,"initialValue":{"arguments":[{"id":4413,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"41922:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4412,"name":"_assessProfitAndLoss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4561,"src":"41901:20:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$","typeString":"function (address) view returns (uint256,uint256)"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41901:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"41870:61:11"},{"assignments":[4418],"declarations":[{"constant":false,"id":4418,"mutability":"mutable","name":"fees","nameLocation":"41963:4:11","nodeType":"VariableDeclaration","scope":4492,"src":"41942:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FeeAssessment_$7743_memory_ptr","typeString":"struct FeeAssessment"},"typeName":{"id":4417,"nodeType":"UserDefinedTypeName","pathNode":{"id":4416,"name":"FeeAssessment","nameLocations":["41942:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":7743,"src":"41942:13:11"},"referencedDeclaration":7743,"src":"41942:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_FeeAssessment_$7743_storage_ptr","typeString":"struct FeeAssessment"}},"visibility":"internal"}],"id":4424,"initialValue":{"arguments":[{"id":4420,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"41982:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4421,"name":"gain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"41992:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4422,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4411,"src":"41998:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4419,"name":"_assessFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4643,"src":"41970:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$_t_struct$_FeeAssessment_$7743_memory_ptr_$","typeString":"function (address,uint256,uint256) returns (struct FeeAssessment memory)"}},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41970:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_FeeAssessment_$7743_memory_ptr","typeString":"struct FeeAssessment memory"}},"nodeType":"VariableDeclarationStatement","src":"41942:61:11"},{"assignments":[4427],"declarations":[{"constant":false,"id":4427,"mutability":"mutable","name":"shares","nameLocation":"42037:6:11","nodeType":"VariableDeclaration","scope":4492,"src":"42014:29:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ShareManagement_$7750_memory_ptr","typeString":"struct ShareManagement"},"typeName":{"id":4426,"nodeType":"UserDefinedTypeName","pathNode":{"id":4425,"name":"ShareManagement","nameLocations":["42014:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":7750,"src":"42014:15:11"},"referencedDeclaration":7750,"src":"42014:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_ShareManagement_$7750_storage_ptr","typeString":"struct ShareManagement"}},"visibility":"internal"}],"id":4435,"initialValue":{"arguments":[{"id":4429,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4411,"src":"42072:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4430,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"42078:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_FeeAssessment_$7743_memory_ptr","typeString":"struct FeeAssessment memory"}},"id":4431,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"42083:9:11","memberName":"totalFees","nodeType":"MemberAccess","referencedDeclaration":7736,"src":"42078:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4432,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"42094:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_FeeAssessment_$7743_memory_ptr","typeString":"struct FeeAssessment memory"}},"id":4433,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"42099:12:11","memberName":"protocolFees","nodeType":"MemberAccess","referencedDeclaration":7740,"src":"42094:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4428,"name":"_calculateShareManagement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"42046:25:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_struct$_ShareManagement_$7750_memory_ptr_$","typeString":"function (uint256,uint256,uint256) view returns (struct ShareManagement memory)"}},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42046:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ShareManagement_$7750_memory_ptr","typeString":"struct ShareManagement memory"}},"nodeType":"VariableDeclarationStatement","src":"42014:98:11"},{"assignments":[4437,4439],"declarations":[{"constant":false,"id":4437,"mutability":"mutable","name":"previouslyLockedShares","nameLocation":"42132:22:11","nodeType":"VariableDeclaration","scope":4492,"src":"42124:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4436,"name":"uint256","nodeType":"ElementaryTypeName","src":"42124:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4439,"mutability":"mutable","name":"newlyLockedShares","nameLocation":"42164:17:11","nodeType":"VariableDeclaration","scope":4492,"src":"42156:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4438,"name":"uint256","nodeType":"ElementaryTypeName","src":"42156:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4447,"initialValue":{"arguments":[{"id":4441,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"42212:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_ShareManagement_$7750_memory_ptr","typeString":"struct ShareManagement memory"}},{"id":4442,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"42220:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_FeeAssessment_$7743_memory_ptr","typeString":"struct FeeAssessment memory"}},{"id":4443,"name":"gain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"42226:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4444,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4411,"src":"42232:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4445,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"42238:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ShareManagement_$7750_memory_ptr","typeString":"struct ShareManagement memory"},{"typeIdentifier":"t_struct$_FeeAssessment_$7743_memory_ptr","typeString":"struct FeeAssessment memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4440,"name":"_handleShareBurnsAndIssues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"42185:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_ShareManagement_$7750_memory_ptr_$_t_struct$_FeeAssessment_$7743_memory_ptr_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ShareManagement memory,struct FeeAssessment memory,uint256,uint256,address) returns (uint256,uint256)"}},"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42185:62:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"42123:124:11"},{"expression":{"arguments":[{"id":4449,"name":"previouslyLockedShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"42283:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4450,"name":"newlyLockedShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"42307:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4448,"name":"_manageUnlockingOfShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"42258:24:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42258:67:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4452,"nodeType":"ExpressionStatement","src":"42258:67:11"},{"expression":{"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4453,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"42386:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":4455,"indexExpression":{"id":4454,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"42397:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"42386:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":4456,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"42407:10:11","memberName":"lastReport","nodeType":"MemberAccess","referencedDeclaration":7729,"src":"42386:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4457,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"42420:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"42426:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"42420:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"42386:49:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4460,"nodeType":"ExpressionStatement","src":"42386:49:11"},{"eventCall":{"arguments":[{"id":4462,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"42561:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4463,"name":"gain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"42583:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4464,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4411,"src":"42601:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":4465,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"42619:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":4467,"indexExpression":{"id":4466,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"42630:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"42619:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":4468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"42640:11:11","memberName":"currentDebt","nodeType":"MemberAccess","referencedDeclaration":7731,"src":"42619:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"expression":{"id":4470,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"42682:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_ShareManagement_$7750_memory_ptr","typeString":"struct ShareManagement memory"}},"id":4471,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"42689:18:11","memberName":"protocolFeesShares","nodeType":"MemberAccess","referencedDeclaration":7749,"src":"42682:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4472,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"42709:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$7772_$","typeString":"type(enum Rounding)"}},"id":4473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"42718:10:11","memberName":"ROUND_DOWN","nodeType":"MemberAccess","referencedDeclaration":7770,"src":"42709:19:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}],"id":4469,"name":"_convertToAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"42665:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$7772_$returns$_t_uint256_$","typeString":"function (uint256,enum Rounding) view returns (uint256)"}},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42665:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4476,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"42760:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_ShareManagement_$7750_memory_ptr","typeString":"struct ShareManagement memory"}},"id":4477,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"42767:18:11","memberName":"protocolFeesShares","nodeType":"MemberAccess","referencedDeclaration":7749,"src":"42760:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4478,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"42788:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_ShareManagement_$7750_memory_ptr","typeString":"struct ShareManagement memory"}},"id":4479,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"42795:20:11","memberName":"accountantFeesShares","nodeType":"MemberAccess","referencedDeclaration":7747,"src":"42788:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"42760:55:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4481,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"42817:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$7772_$","typeString":"type(enum Rounding)"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"42826:10:11","memberName":"ROUND_DOWN","nodeType":"MemberAccess","referencedDeclaration":7770,"src":"42817:19:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}],"id":4475,"name":"_convertToAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"42743:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$7772_$returns$_t_uint256_$","typeString":"function (uint256,enum Rounding) view returns (uint256)"}},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42743:94:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4484,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"42851:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_FeeAssessment_$7743_memory_ptr","typeString":"struct FeeAssessment memory"}},"id":4485,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"42856:12:11","memberName":"totalRefunds","nodeType":"MemberAccess","referencedDeclaration":7738,"src":"42851:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4461,"name":"StrategyReported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7218,"src":"42531:16:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256,uint256,uint256,uint256)"}},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42531:347:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4487,"nodeType":"EmitStatement","src":"42526:352:11"},{"expression":{"components":[{"id":4488,"name":"gain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"42897:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4489,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4411,"src":"42903:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4490,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"42896:12:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":4393,"id":4491,"nodeType":"Return","src":"42889:19:11"}]},"id":4493,"implemented":true,"kind":"function","modifiers":[],"name":"_processReport","nameLocation":"41541:14:11","nodeType":"FunctionDefinition","parameters":{"id":4388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4387,"mutability":"mutable","name":"strategy","nameLocation":"41564:8:11","nodeType":"VariableDeclaration","scope":4493,"src":"41556:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4386,"name":"address","nodeType":"ElementaryTypeName","src":"41556:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"41555:18:11"},"returnParameters":{"id":4393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4493,"src":"41592:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4389,"name":"uint256","nodeType":"ElementaryTypeName","src":"41592:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4493,"src":"41601:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4391,"name":"uint256","nodeType":"ElementaryTypeName","src":"41601:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"41591:18:11"},"scope":6329,"src":"41532:1383:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4560,"nodeType":"Block","src":"43069:979:11","statements":[{"assignments":[4503],"declarations":[{"constant":false,"id":4503,"mutability":"mutable","name":"strategyShares","nameLocation":"43325:14:11","nodeType":"VariableDeclaration","scope":4560,"src":"43317:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4502,"name":"uint256","nodeType":"ElementaryTypeName","src":"43317:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4513,"initialValue":{"arguments":[{"arguments":[{"id":4510,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"43380:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":4509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"43372:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4508,"name":"address","nodeType":"ElementaryTypeName","src":"43372:7:11","typeDescriptions":{}}},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43372:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4505,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"43352:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4504,"name":"IStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"43342:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStrategy_$6929_$","typeString":"type(contract IStrategy)"}},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43342:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$6929","typeString":"contract IStrategy"}},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"43362:9:11","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":6888,"src":"43342:29:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43342:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"43317:69:11"},{"assignments":[4515],"declarations":[{"constant":false,"id":4515,"mutability":"mutable","name":"currentTotalAssets","nameLocation":"43454:18:11","nodeType":"VariableDeclaration","scope":4560,"src":"43446:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4514,"name":"uint256","nodeType":"ElementaryTypeName","src":"43446:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4522,"initialValue":{"arguments":[{"id":4520,"name":"strategyShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"43511:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4517,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"43485:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4516,"name":"IStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"43475:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStrategy_$6929_$","typeString":"type(contract IStrategy)"}},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43475:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$6929","typeString":"contract IStrategy"}},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"43495:15:11","memberName":"convertToAssets","nodeType":"MemberAccess","referencedDeclaration":6907,"src":"43475:35:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43475:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"43446:80:11"},{"assignments":[4524],"declarations":[{"constant":false,"id":4524,"mutability":"mutable","name":"currentDebt","nameLocation":"43605:11:11","nodeType":"VariableDeclaration","scope":4560,"src":"43597:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4523,"name":"uint256","nodeType":"ElementaryTypeName","src":"43597:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4529,"initialValue":{"expression":{"baseExpression":{"id":4525,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"43619:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":4527,"indexExpression":{"id":4526,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"43630:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"43619:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":4528,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"43640:11:11","memberName":"currentDebt","nodeType":"MemberAccess","referencedDeclaration":7731,"src":"43619:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"43597:54:11"},{"assignments":[4531],"declarations":[{"constant":false,"id":4531,"mutability":"mutable","name":"_gain","nameLocation":"43670:5:11","nodeType":"VariableDeclaration","scope":4560,"src":"43662:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4530,"name":"uint256","nodeType":"ElementaryTypeName","src":"43662:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4533,"initialValue":{"hexValue":"30","id":4532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"43678:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"43662:17:11"},{"assignments":[4535],"declarations":[{"constant":false,"id":4535,"mutability":"mutable","name":"_loss","nameLocation":"43697:5:11","nodeType":"VariableDeclaration","scope":4560,"src":"43689:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4534,"name":"uint256","nodeType":"ElementaryTypeName","src":"43689:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4537,"initialValue":{"hexValue":"30","id":4536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"43705:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"43689:17:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4538,"name":"currentTotalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4515,"src":"43778:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4539,"name":"currentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"43799:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"43778:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4554,"nodeType":"Block","src":"43914:96:11","statements":[{"expression":{"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4548,"name":"_loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"43959:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4549,"name":"currentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"43967:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4550,"name":"currentTotalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4515,"src":"43981:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"43967:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"43959:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4553,"nodeType":"ExpressionStatement","src":"43959:40:11"}]},"id":4555,"nodeType":"IfStatement","src":"43774:236:11","trueBody":{"id":4547,"nodeType":"Block","src":"43812:96:11","statements":[{"expression":{"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4541,"name":"_gain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"43857:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4542,"name":"currentTotalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4515,"src":"43865:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4543,"name":"currentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"43886:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"43865:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"43857:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4546,"nodeType":"ExpressionStatement","src":"43857:40:11"}]}},{"expression":{"components":[{"id":4556,"name":"_gain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"44028:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4557,"name":"_loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"44035:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4558,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"44027:14:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":4501,"id":4559,"nodeType":"Return","src":"44020:21:11"}]},"id":4561,"implemented":true,"kind":"function","modifiers":[],"name":"_assessProfitAndLoss","nameLocation":"42979:20:11","nodeType":"FunctionDefinition","parameters":{"id":4496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4495,"mutability":"mutable","name":"strategy","nameLocation":"43008:8:11","nodeType":"VariableDeclaration","scope":4561,"src":"43000:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4494,"name":"address","nodeType":"ElementaryTypeName","src":"43000:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"42999:18:11"},"returnParameters":{"id":4501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4498,"mutability":"mutable","name":"gain","nameLocation":"43049:4:11","nodeType":"VariableDeclaration","scope":4561,"src":"43041:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4497,"name":"uint256","nodeType":"ElementaryTypeName","src":"43041:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4500,"mutability":"mutable","name":"loss","nameLocation":"43063:4:11","nodeType":"VariableDeclaration","scope":4561,"src":"43055:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4499,"name":"uint256","nodeType":"ElementaryTypeName","src":"43055:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"43040:28:11"},"scope":6329,"src":"42970:1078:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4642,"nodeType":"Block","src":"44247:859:11","statements":[{"assignments":[4575],"declarations":[{"constant":false,"id":4575,"mutability":"mutable","name":"fees","nameLocation":"44278:4:11","nodeType":"VariableDeclaration","scope":4642,"src":"44257:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FeeAssessment_$7743_memory_ptr","typeString":"struct FeeAssessment"},"typeName":{"id":4574,"nodeType":"UserDefinedTypeName","pathNode":{"id":4573,"name":"FeeAssessment","nameLocations":["44257:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":7743,"src":"44257:13:11"},"referencedDeclaration":7743,"src":"44257:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_FeeAssessment_$7743_storage_ptr","typeString":"struct FeeAssessment"}},"visibility":"internal"}],"id":4576,"nodeType":"VariableDeclarationStatement","src":"44257:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4577,"name":"accountant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"44369:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"44391:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"44383:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4578,"name":"address","nodeType":"ElementaryTypeName","src":"44383:7:11","typeDescriptions":{}}},"id":4581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44383:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"44369:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4639,"nodeType":"IfStatement","src":"44365:713:11","trueBody":{"id":4638,"nodeType":"Block","src":"44395:683:11","statements":[{"expression":{"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"expression":{"id":4583,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"44410:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_FeeAssessment_$7743_memory_ptr","typeString":"struct FeeAssessment memory"}},"id":4585,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"44415:9:11","memberName":"totalFees","nodeType":"MemberAccess","referencedDeclaration":7736,"src":"44410:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4586,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"44426:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_FeeAssessment_$7743_memory_ptr","typeString":"struct FeeAssessment memory"}},"id":4587,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"44431:12:11","memberName":"totalRefunds","nodeType":"MemberAccess","referencedDeclaration":7738,"src":"44426:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4588,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"44409:35:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4593,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4563,"src":"44478:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4594,"name":"gain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"44488:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4595,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4567,"src":"44494:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4590,"name":"accountant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"44459:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4589,"name":"IAccountant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"44447:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccountant_$6345_$","typeString":"type(contract IAccountant)"}},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44447:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAccountant_$6345","typeString":"contract IAccountant"}},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"44471:6:11","memberName":"report","nodeType":"MemberAccess","referencedDeclaration":6344,"src":"44447:30:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (address,uint256,uint256) external returns (uint256,uint256)"}},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44447:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"44409:90:11","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4598,"nodeType":"ExpressionStatement","src":"44409:90:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4599,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"44583:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_FeeAssessment_$7743_memory_ptr","typeString":"struct FeeAssessment memory"}},"id":4600,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"44588:9:11","memberName":"totalFees","nodeType":"MemberAccess","referencedDeclaration":7736,"src":"44583:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"44600:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"44583:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4637,"nodeType":"IfStatement","src":"44579:489:11","trueBody":{"id":4636,"nodeType":"Block","src":"44603:465:11","statements":[{"assignments":[4604],"declarations":[{"constant":false,"id":4604,"mutability":"mutable","name":"protocolFeeBps","nameLocation":"44628:14:11","nodeType":"VariableDeclaration","scope":4636,"src":"44621:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4603,"name":"uint16","nodeType":"ElementaryTypeName","src":"44621:6:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":4605,"nodeType":"VariableDeclarationStatement","src":"44621:21:11"},{"expression":{"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4606,"name":"protocolFeeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"44711:14:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"id":4607,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"44727:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_FeeAssessment_$7743_memory_ptr","typeString":"struct FeeAssessment memory"}},"id":4608,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"44732:20:11","memberName":"protocolFeeRecipient","nodeType":"MemberAccess","referencedDeclaration":7742,"src":"44727:25:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4609,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"44710:43:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint16_$_t_address_$","typeString":"tuple(uint16,address)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4611,"name":"FACTORY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"44765:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4610,"name":"IFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6553,"src":"44756:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IFactory_$6553_$","typeString":"type(contract IFactory)"}},"id":4612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44756:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IFactory_$6553","typeString":"contract IFactory"}},"id":4613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"44774:17:11","memberName":"protocolFeeConfig","nodeType":"MemberAccess","referencedDeclaration":6552,"src":"44756:35:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint16_$_t_address_$","typeString":"function () view external returns (uint16,address)"}},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44756:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint16_$_t_address_$","typeString":"tuple(uint16,address)"}},"src":"44710:83:11","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4616,"nodeType":"ExpressionStatement","src":"44710:83:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4617,"name":"protocolFeeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"44832:14:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"44849:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"44832:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4635,"nodeType":"IfStatement","src":"44828:226:11","trueBody":{"id":4634,"nodeType":"Block","src":"44852:202:11","statements":[{"expression":{"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4620,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"44965:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_FeeAssessment_$7743_memory_ptr","typeString":"struct FeeAssessment memory"}},"id":4622,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"44970:12:11","memberName":"protocolFees","nodeType":"MemberAccess","referencedDeclaration":7740,"src":"44965:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4623,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"44985:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_FeeAssessment_$7743_memory_ptr","typeString":"struct FeeAssessment memory"}},"id":4624,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"44990:9:11","memberName":"totalFees","nodeType":"MemberAccess","referencedDeclaration":7736,"src":"44985:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4627,"name":"protocolFeeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"45010:14:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":4626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"45002:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4625,"name":"uint256","nodeType":"ElementaryTypeName","src":"45002:7:11","typeDescriptions":{}}},"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45002:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"44985:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4630,"name":"MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"45028:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"44985:50:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"44965:70:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4633,"nodeType":"ExpressionStatement","src":"44965:70:11"}]}}]}}]}},{"expression":{"id":4640,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"45095:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_FeeAssessment_$7743_memory_ptr","typeString":"struct FeeAssessment memory"}},"functionReturnParameters":4572,"id":4641,"nodeType":"Return","src":"45088:11:11"}]},"id":4643,"implemented":true,"kind":"function","modifiers":[],"name":"_assessFees","nameLocation":"44149:11:11","nodeType":"FunctionDefinition","parameters":{"id":4568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4563,"mutability":"mutable","name":"strategy","nameLocation":"44169:8:11","nodeType":"VariableDeclaration","scope":4643,"src":"44161:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4562,"name":"address","nodeType":"ElementaryTypeName","src":"44161:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4565,"mutability":"mutable","name":"gain","nameLocation":"44187:4:11","nodeType":"VariableDeclaration","scope":4643,"src":"44179:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4564,"name":"uint256","nodeType":"ElementaryTypeName","src":"44179:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4567,"mutability":"mutable","name":"loss","nameLocation":"44201:4:11","nodeType":"VariableDeclaration","scope":4643,"src":"44193:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4566,"name":"uint256","nodeType":"ElementaryTypeName","src":"44193:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"44160:46:11"},"returnParameters":{"id":4572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4643,"src":"44225:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FeeAssessment_$7743_memory_ptr","typeString":"struct FeeAssessment"},"typeName":{"id":4570,"nodeType":"UserDefinedTypeName","pathNode":{"id":4569,"name":"FeeAssessment","nameLocations":["44225:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":7743,"src":"44225:13:11"},"referencedDeclaration":7743,"src":"44225:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_FeeAssessment_$7743_storage_ptr","typeString":"struct FeeAssessment"}},"visibility":"internal"}],"src":"44224:22:11"},"scope":6329,"src":"44140:966:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4712,"nodeType":"Block","src":"45317:1000:11","statements":[{"assignments":[4657],"declarations":[{"constant":false,"id":4657,"mutability":"mutable","name":"shares","nameLocation":"45498:6:11","nodeType":"VariableDeclaration","scope":4712,"src":"45475:29:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ShareManagement_$7750_memory_ptr","typeString":"struct ShareManagement"},"typeName":{"id":4656,"nodeType":"UserDefinedTypeName","pathNode":{"id":4655,"name":"ShareManagement","nameLocations":["45475:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":7750,"src":"45475:15:11"},"referencedDeclaration":7750,"src":"45475:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_ShareManagement_$7750_storage_ptr","typeString":"struct ShareManagement"}},"visibility":"internal"}],"id":4658,"nodeType":"VariableDeclarationStatement","src":"45475:29:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4659,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"45583:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4660,"name":"totalFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"45590:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"45583:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"45602:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"45583:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4709,"nodeType":"IfStatement","src":"45579:708:11","trueBody":{"id":4708,"nodeType":"Block","src":"45605:682:11","statements":[{"expression":{"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4664,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4657,"src":"45703:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_ShareManagement_$7750_memory_ptr","typeString":"struct ShareManagement memory"}},"id":4666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"45710:12:11","memberName":"sharesToBurn","nodeType":"MemberAccess","referencedDeclaration":7745,"src":"45703:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4668,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"45743:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4669,"name":"totalFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"45750:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"45743:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4671,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"45761:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$7772_$","typeString":"type(enum Rounding)"}},"id":4672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"45770:8:11","memberName":"ROUND_UP","nodeType":"MemberAccess","referencedDeclaration":7771,"src":"45761:17:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}],"id":4667,"name":"_convertToShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"45726:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$7772_$returns$_t_uint256_$","typeString":"function (uint256,enum Rounding) view returns (uint256)"}},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45726:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"45703:76:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4675,"nodeType":"ExpressionStatement","src":"45703:76:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4676,"name":"totalFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"45910:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"45922:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"45910:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4707,"nodeType":"IfStatement","src":"45906:371:11","trueBody":{"id":4706,"nodeType":"Block","src":"45925:352:11","statements":[{"expression":{"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4679,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4657,"src":"46010:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_ShareManagement_$7750_memory_ptr","typeString":"struct ShareManagement memory"}},"id":4681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"46017:20:11","memberName":"accountantFeesShares","nodeType":"MemberAccess","referencedDeclaration":7747,"src":"46010:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4683,"name":"totalFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"46057:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4684,"name":"protocolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"46069:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"46057:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4686,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"46083:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$7772_$","typeString":"type(enum Rounding)"}},"id":4687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"46092:10:11","memberName":"ROUND_DOWN","nodeType":"MemberAccess","referencedDeclaration":7770,"src":"46083:19:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}],"id":4682,"name":"_convertToShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"46040:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$7772_$returns$_t_uint256_$","typeString":"function (uint256,enum Rounding) view returns (uint256)"}},"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"46040:63:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"46010:93:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4690,"nodeType":"ExpressionStatement","src":"46010:93:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4691,"name":"protocolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"46125:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"46140:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"46125:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4705,"nodeType":"IfStatement","src":"46121:142:11","trueBody":{"id":4704,"nodeType":"Block","src":"46143:120:11","statements":[{"expression":{"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4694,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4657,"src":"46165:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_ShareManagement_$7750_memory_ptr","typeString":"struct ShareManagement memory"}},"id":4696,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"46172:18:11","memberName":"protocolFeesShares","nodeType":"MemberAccess","referencedDeclaration":7749,"src":"46165:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4698,"name":"protocolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"46210:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4699,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"46224:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$7772_$","typeString":"type(enum Rounding)"}},"id":4700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"46233:10:11","memberName":"ROUND_DOWN","nodeType":"MemberAccess","referencedDeclaration":7770,"src":"46224:19:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}],"id":4697,"name":"_convertToShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"46193:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$7772_$returns$_t_uint256_$","typeString":"function (uint256,enum Rounding) view returns (uint256)"}},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"46193:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"46165:79:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4703,"nodeType":"ExpressionStatement","src":"46165:79:11"}]}}]}}]}},{"expression":{"id":4710,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4657,"src":"46304:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_ShareManagement_$7750_memory_ptr","typeString":"struct ShareManagement memory"}},"functionReturnParameters":4654,"id":4711,"nodeType":"Return","src":"46297:13:11"}]},"id":4713,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateShareManagement","nameLocation":"45189:25:11","nodeType":"FunctionDefinition","parameters":{"id":4650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4645,"mutability":"mutable","name":"loss","nameLocation":"45223:4:11","nodeType":"VariableDeclaration","scope":4713,"src":"45215:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4644,"name":"uint256","nodeType":"ElementaryTypeName","src":"45215:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4647,"mutability":"mutable","name":"totalFees","nameLocation":"45237:9:11","nodeType":"VariableDeclaration","scope":4713,"src":"45229:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4646,"name":"uint256","nodeType":"ElementaryTypeName","src":"45229:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4649,"mutability":"mutable","name":"protocolFees","nameLocation":"45256:12:11","nodeType":"VariableDeclaration","scope":4713,"src":"45248:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4648,"name":"uint256","nodeType":"ElementaryTypeName","src":"45248:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45214:55:11"},"returnParameters":{"id":4654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4713,"src":"45293:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ShareManagement_$7750_memory_ptr","typeString":"struct ShareManagement"},"typeName":{"id":4652,"nodeType":"UserDefinedTypeName","pathNode":{"id":4651,"name":"ShareManagement","nameLocations":["45293:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":7750,"src":"45293:15:11"},"referencedDeclaration":7750,"src":"45293:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_ShareManagement_$7750_storage_ptr","typeString":"struct ShareManagement"}},"visibility":"internal"}],"src":"45292:24:11"},"scope":6329,"src":"45180:1137:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4931,"nodeType":"Block","src":"46670:3021:11","statements":[{"assignments":[4733],"declarations":[{"constant":false,"id":4733,"mutability":"mutable","name":"_newlyLockedShares","nameLocation":"46775:18:11","nodeType":"VariableDeclaration","scope":4931,"src":"46767:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4732,"name":"uint256","nodeType":"ElementaryTypeName","src":"46767:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4734,"nodeType":"VariableDeclarationStatement","src":"46767:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4735,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"46807:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_FeeAssessment_$7743_memory_ptr","typeString":"struct FeeAssessment memory"}},"id":4736,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"46812:12:11","memberName":"totalRefunds","nodeType":"MemberAccess","referencedDeclaration":7738,"src":"46807:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"46827:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"46807:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4784,"nodeType":"IfStatement","src":"46803:528:11","trueBody":{"id":4783,"nodeType":"Block","src":"46830:501:11","statements":[{"expression":{"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4739,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"46919:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_FeeAssessment_$7743_memory_ptr","typeString":"struct FeeAssessment memory"}},"id":4741,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"46924:12:11","memberName":"totalRefunds","nodeType":"MemberAccess","referencedDeclaration":7738,"src":"46919:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4744,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"46948:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_FeeAssessment_$7743_memory_ptr","typeString":"struct FeeAssessment memory"}},"id":4745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"46953:12:11","memberName":"totalRefunds","nodeType":"MemberAccess","referencedDeclaration":7738,"src":"46948:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"id":4750,"name":"accountant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"46992:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4748,"name":"ASSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"46976:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}},"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"46982:9:11","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":488,"src":"46976:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"46976:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4754,"name":"accountant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"47021:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4757,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"47041:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":4756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"47033:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4755,"name":"address","nodeType":"ElementaryTypeName","src":"47033:7:11","typeDescriptions":{}}},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"47033:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4752,"name":"ASSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"47005:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}},"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"47011:9:11","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":508,"src":"47005:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"47005:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4746,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"46967:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1709_$","typeString":"type(library Math)"}},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"46972:3:11","memberName":"min","nodeType":"MemberAccess","referencedDeclaration":886,"src":"46967:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"46967:81:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4742,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"46939:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1709_$","typeString":"type(library Math)"}},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"46944:3:11","memberName":"min","nodeType":"MemberAccess","referencedDeclaration":886,"src":"46939:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"46939:110:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"46919:130:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4763,"nodeType":"ExpressionStatement","src":"46919:130:11"},{"expression":{"arguments":[{"arguments":[{"id":4767,"name":"ASSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"47161:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}],"id":4766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"47153:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4765,"name":"address","nodeType":"ElementaryTypeName","src":"47153:7:11","typeDescriptions":{}}},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"47153:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4769,"name":"accountant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"47169:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4772,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"47189:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":4771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"47181:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4770,"name":"address","nodeType":"ElementaryTypeName","src":"47181:7:11","typeDescriptions":{}}},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"47181:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4774,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"47196:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_FeeAssessment_$7743_memory_ptr","typeString":"struct FeeAssessment memory"}},"id":4775,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"47201:12:11","memberName":"totalRefunds","nodeType":"MemberAccess","referencedDeclaration":7738,"src":"47196:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4764,"name":"_erc20SafeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"47130:22:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"47130:84:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4777,"nodeType":"ExpressionStatement","src":"47130:84:11"},{"expression":{"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4778,"name":"totalIdleAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7599,"src":"47284:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":4779,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"47303:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_FeeAssessment_$7743_memory_ptr","typeString":"struct FeeAssessment memory"}},"id":4780,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"47308:12:11","memberName":"totalRefunds","nodeType":"MemberAccess","referencedDeclaration":7738,"src":"47303:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"47284:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4782,"nodeType":"ExpressionStatement","src":"47284:36:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4785,"name":"gain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"47383:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"47390:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"47383:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4800,"nodeType":"IfStatement","src":"47379:169:11","trueBody":{"id":4799,"nodeType":"Block","src":"47393:155:11","statements":[{"expression":{"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4788,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"47460:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":4790,"indexExpression":{"id":4789,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"47471:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"47460:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":4791,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"47481:11:11","memberName":"currentDebt","nodeType":"MemberAccess","referencedDeclaration":7731,"src":"47460:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4792,"name":"gain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"47496:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"47460:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4794,"nodeType":"ExpressionStatement","src":"47460:40:11"},{"expression":{"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4795,"name":"totalDebtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"47514:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4796,"name":"gain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"47533:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"47514:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4798,"nodeType":"ExpressionStatement","src":"47514:23:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4801,"name":"gain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"47616:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4802,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"47623:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_FeeAssessment_$7743_memory_ptr","typeString":"struct FeeAssessment memory"}},"id":4803,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"47628:12:11","memberName":"totalRefunds","nodeType":"MemberAccess","referencedDeclaration":7738,"src":"47623:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"47616:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"47643:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"47616:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4807,"name":"profitMaxUnlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7625,"src":"47648:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"47671:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"47648:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"47616:56:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4825,"nodeType":"IfStatement","src":"47612:170:11","trueBody":{"id":4824,"nodeType":"Block","src":"47674:108:11","statements":[{"expression":{"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4811,"name":"_newlyLockedShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"47688:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4813,"name":"gain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"47731:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4814,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"47738:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_FeeAssessment_$7743_memory_ptr","typeString":"struct FeeAssessment memory"}},"id":4815,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"47743:12:11","memberName":"totalRefunds","nodeType":"MemberAccess","referencedDeclaration":7738,"src":"47738:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"47731:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4819,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"47765:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":4818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"47757:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4817,"name":"address","nodeType":"ElementaryTypeName","src":"47757:7:11","typeDescriptions":{}}},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"47757:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4812,"name":"_issueSharesForAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"47709:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) returns (uint256)"}},"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"47709:62:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"47688:83:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4823,"nodeType":"ExpressionStatement","src":"47688:83:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4826,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"47836:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"47843:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"47836:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4841,"nodeType":"IfStatement","src":"47832:116:11","trueBody":{"id":4840,"nodeType":"Block","src":"47846:102:11","statements":[{"expression":{"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4829,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"47860:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":4831,"indexExpression":{"id":4830,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"47871:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"47860:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":4832,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"47881:11:11","memberName":"currentDebt","nodeType":"MemberAccess","referencedDeclaration":7731,"src":"47860:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4833,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"47896:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"47860:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4835,"nodeType":"ExpressionStatement","src":"47860:40:11"},{"expression":{"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4836,"name":"totalDebtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"47914:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4837,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"47933:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"47914:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4839,"nodeType":"ExpressionStatement","src":"47914:23:11"}]}},{"assignments":[4843],"declarations":[{"constant":false,"id":4843,"mutability":"mutable","name":"_previouslyLockedShares","nameLocation":"48238:23:11","nodeType":"VariableDeclaration","scope":4931,"src":"48230:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4842,"name":"uint256","nodeType":"ElementaryTypeName","src":"48230:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4852,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4844,"name":"_balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"48264:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4849,"indexExpression":{"arguments":[{"id":4847,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"48283:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":4846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"48275:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4845,"name":"address","nodeType":"ElementaryTypeName","src":"48275:7:11","typeDescriptions":{}}},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"48275:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"48264:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4850,"name":"_newlyLockedShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"48292:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"48264:46:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"48230:80:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4853,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"48653:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_ShareManagement_$7750_memory_ptr","typeString":"struct ShareManagement memory"}},"id":4854,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"48660:12:11","memberName":"sharesToBurn","nodeType":"MemberAccess","referencedDeclaration":7745,"src":"48653:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"48675:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"48653:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4901,"nodeType":"IfStatement","src":"48649:637:11","trueBody":{"id":4900,"nodeType":"Block","src":"48678:608:11","statements":[{"expression":{"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4857,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"48743:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_ShareManagement_$7750_memory_ptr","typeString":"struct ShareManagement memory"}},"id":4859,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"48750:12:11","memberName":"sharesToBurn","nodeType":"MemberAccess","referencedDeclaration":7745,"src":"48743:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4862,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"48774:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_ShareManagement_$7750_memory_ptr","typeString":"struct ShareManagement memory"}},"id":4863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"48781:12:11","memberName":"sharesToBurn","nodeType":"MemberAccess","referencedDeclaration":7745,"src":"48774:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4864,"name":"_previouslyLockedShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4843,"src":"48795:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4865,"name":"_newlyLockedShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"48821:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"48795:44:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4860,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"48765:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1709_$","typeString":"type(library Math)"}},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"48770:3:11","memberName":"min","nodeType":"MemberAccess","referencedDeclaration":886,"src":"48765:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"48765:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"48743:97:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4869,"nodeType":"ExpressionStatement","src":"48743:97:11"},{"expression":{"arguments":[{"expression":{"id":4871,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"48866:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_ShareManagement_$7750_memory_ptr","typeString":"struct ShareManagement memory"}},"id":4872,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"48873:12:11","memberName":"sharesToBurn","nodeType":"MemberAccess","referencedDeclaration":7745,"src":"48866:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4875,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"48895:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":4874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"48887:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4873,"name":"address","nodeType":"ElementaryTypeName","src":"48887:7:11","typeDescriptions":{}}},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"48887:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4870,"name":"_burnShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"48854:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"48854:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4878,"nodeType":"ExpressionStatement","src":"48854:47:11"},{"assignments":[4880],"declarations":[{"constant":false,"id":4880,"mutability":"mutable","name":"sharesNotToLock","nameLocation":"49013:15:11","nodeType":"VariableDeclaration","scope":4900,"src":"49005:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4879,"name":"uint256","nodeType":"ElementaryTypeName","src":"49005:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4887,"initialValue":{"arguments":[{"expression":{"id":4883,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"49040:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_ShareManagement_$7750_memory_ptr","typeString":"struct ShareManagement memory"}},"id":4884,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"49047:12:11","memberName":"sharesToBurn","nodeType":"MemberAccess","referencedDeclaration":7745,"src":"49040:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4885,"name":"_newlyLockedShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"49061:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4881,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"49031:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1709_$","typeString":"type(library Math)"}},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"49036:3:11","memberName":"min","nodeType":"MemberAccess","referencedDeclaration":886,"src":"49031:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"49031:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"49005:75:11"},{"expression":{"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4888,"name":"_newlyLockedShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"49158:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4889,"name":"sharesNotToLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"49180:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"49158:37:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4891,"nodeType":"ExpressionStatement","src":"49158:37:11"},{"expression":{"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4892,"name":"_previouslyLockedShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4843,"src":"49209:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4893,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"49237:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_ShareManagement_$7750_memory_ptr","typeString":"struct ShareManagement memory"}},"id":4894,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"49244:12:11","memberName":"sharesToBurn","nodeType":"MemberAccess","referencedDeclaration":7745,"src":"49237:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4895,"name":"sharesNotToLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"49259:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"49237:37:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4897,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"49236:39:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"49209:66:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4899,"nodeType":"ExpressionStatement","src":"49209:66:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4902,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"49375:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_ShareManagement_$7750_memory_ptr","typeString":"struct ShareManagement memory"}},"id":4903,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"49382:20:11","memberName":"accountantFeesShares","nodeType":"MemberAccess","referencedDeclaration":7747,"src":"49375:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"49405:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"49375:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4913,"nodeType":"IfStatement","src":"49371:115:11","trueBody":{"id":4912,"nodeType":"Block","src":"49408:78:11","statements":[{"expression":{"arguments":[{"expression":{"id":4907,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"49435:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_ShareManagement_$7750_memory_ptr","typeString":"struct ShareManagement memory"}},"id":4908,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"49442:20:11","memberName":"accountantFeesShares","nodeType":"MemberAccess","referencedDeclaration":7747,"src":"49435:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4909,"name":"accountant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"49464:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4906,"name":"_issueShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"49422:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"49422:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4911,"nodeType":"ExpressionStatement","src":"49422:53:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4914,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"49500:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_ShareManagement_$7750_memory_ptr","typeString":"struct ShareManagement memory"}},"id":4915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"49507:18:11","memberName":"protocolFeesShares","nodeType":"MemberAccess","referencedDeclaration":7749,"src":"49500:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"49528:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"49500:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4926,"nodeType":"IfStatement","src":"49496:126:11","trueBody":{"id":4925,"nodeType":"Block","src":"49531:91:11","statements":[{"expression":{"arguments":[{"expression":{"id":4919,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"49558:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_ShareManagement_$7750_memory_ptr","typeString":"struct ShareManagement memory"}},"id":4920,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"49565:18:11","memberName":"protocolFeesShares","nodeType":"MemberAccess","referencedDeclaration":7749,"src":"49558:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4921,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"49585:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_FeeAssessment_$7743_memory_ptr","typeString":"struct FeeAssessment memory"}},"id":4922,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"49590:20:11","memberName":"protocolFeeRecipient","nodeType":"MemberAccess","referencedDeclaration":7742,"src":"49585:25:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4918,"name":"_issueShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"49545:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"49545:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4924,"nodeType":"ExpressionStatement","src":"49545:66:11"}]}},{"expression":{"components":[{"id":4927,"name":"_previouslyLockedShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4843,"src":"49640:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4928,"name":"_newlyLockedShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"49665:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4929,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"49639:45:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":4731,"id":4930,"nodeType":"Return","src":"49632:52:11"}]},"id":4932,"implemented":true,"kind":"function","modifiers":[],"name":"_handleShareBurnsAndIssues","nameLocation":"46412:26:11","nodeType":"FunctionDefinition","parameters":{"id":4726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4716,"mutability":"mutable","name":"shares","nameLocation":"46471:6:11","nodeType":"VariableDeclaration","scope":4932,"src":"46448:29:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ShareManagement_$7750_memory_ptr","typeString":"struct ShareManagement"},"typeName":{"id":4715,"nodeType":"UserDefinedTypeName","pathNode":{"id":4714,"name":"ShareManagement","nameLocations":["46448:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":7750,"src":"46448:15:11"},"referencedDeclaration":7750,"src":"46448:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_ShareManagement_$7750_storage_ptr","typeString":"struct ShareManagement"}},"visibility":"internal"},{"constant":false,"id":4719,"mutability":"mutable","name":"fees","nameLocation":"46509:4:11","nodeType":"VariableDeclaration","scope":4932,"src":"46488:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FeeAssessment_$7743_memory_ptr","typeString":"struct FeeAssessment"},"typeName":{"id":4718,"nodeType":"UserDefinedTypeName","pathNode":{"id":4717,"name":"FeeAssessment","nameLocations":["46488:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":7743,"src":"46488:13:11"},"referencedDeclaration":7743,"src":"46488:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_FeeAssessment_$7743_storage_ptr","typeString":"struct FeeAssessment"}},"visibility":"internal"},{"constant":false,"id":4721,"mutability":"mutable","name":"gain","nameLocation":"46532:4:11","nodeType":"VariableDeclaration","scope":4932,"src":"46524:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4720,"name":"uint256","nodeType":"ElementaryTypeName","src":"46524:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4723,"mutability":"mutable","name":"loss","nameLocation":"46555:4:11","nodeType":"VariableDeclaration","scope":4932,"src":"46547:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4722,"name":"uint256","nodeType":"ElementaryTypeName","src":"46547:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4725,"mutability":"mutable","name":"strategy","nameLocation":"46578:8:11","nodeType":"VariableDeclaration","scope":4932,"src":"46570:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4724,"name":"address","nodeType":"ElementaryTypeName","src":"46570:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"46438:154:11"},"returnParameters":{"id":4731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4728,"mutability":"mutable","name":"previouslyLockedShares","nameLocation":"46619:22:11","nodeType":"VariableDeclaration","scope":4932,"src":"46611:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4727,"name":"uint256","nodeType":"ElementaryTypeName","src":"46611:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4730,"mutability":"mutable","name":"newlyLockedShares","nameLocation":"46651:17:11","nodeType":"VariableDeclaration","scope":4932,"src":"46643:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4729,"name":"uint256","nodeType":"ElementaryTypeName","src":"46643:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"46610:59:11"},"scope":6329,"src":"46403:3288:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5006,"nodeType":"Block","src":"49883:1574:11","statements":[{"assignments":[4940],"declarations":[{"constant":false,"id":4940,"mutability":"mutable","name":"totalLockedShares","nameLocation":"49962:17:11","nodeType":"VariableDeclaration","scope":5006,"src":"49954:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4939,"name":"uint256","nodeType":"ElementaryTypeName","src":"49954:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4944,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4941,"name":"previouslyLockedShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"49982:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4942,"name":"newlyLockedShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4936,"src":"50007:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"49982:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"49954:70:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4945,"name":"totalLockedShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4940,"src":"50038:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"50058:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"50038:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5004,"nodeType":"Block","src":"51246:205:11","statements":[{"expression":{"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5000,"name":"profitUnlockingRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"51417:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":5001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"51439:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"51417:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5003,"nodeType":"ExpressionStatement","src":"51417:23:11"}]},"id":5005,"nodeType":"IfStatement","src":"50034:1417:11","trueBody":{"id":4999,"nodeType":"Block","src":"50061:1179:11","statements":[{"assignments":[4949],"declarations":[{"constant":false,"id":4949,"mutability":"mutable","name":"previouslyLockedTime","nameLocation":"50083:20:11","nodeType":"VariableDeclaration","scope":4999,"src":"50075:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4948,"name":"uint256","nodeType":"ElementaryTypeName","src":"50075:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4951,"initialValue":{"hexValue":"30","id":4950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"50106:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"50075:32:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4952,"name":"fullProfitUnlockDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"50196:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4953,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"50219:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"50225:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"50219:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"50196:38:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4967,"nodeType":"IfStatement","src":"50192:338:11","trueBody":{"id":4966,"nodeType":"Block","src":"50236:294:11","statements":[{"expression":{"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4956,"name":"previouslyLockedTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"50427:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4957,"name":"previouslyLockedShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"50450:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4958,"name":"fullProfitUnlockDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"50476:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":4959,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"50499:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"50505:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"50499:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"50476:38:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4962,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"50475:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"50450:65:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"50427:88:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4965,"nodeType":"ExpressionStatement","src":"50427:88:11"}]}},{"assignments":[4969],"declarations":[{"constant":false,"id":4969,"mutability":"mutable","name":"newProfitLockingPeriod","nameLocation":"50699:22:11","nodeType":"VariableDeclaration","scope":4999,"src":"50691:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4968,"name":"uint256","nodeType":"ElementaryTypeName","src":"50691:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4978,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4970,"name":"previouslyLockedTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"50725:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4971,"name":"newlyLockedShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4936,"src":"50748:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4972,"name":"profitMaxUnlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7625,"src":"50768:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"50748:39:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"50725:62:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4975,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"50724:64:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4976,"name":"totalLockedShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4940,"src":"50791:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"50724:84:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"50691:117:11"},{"expression":{"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4979,"name":"profitUnlockingRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"50882:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4980,"name":"totalLockedShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4940,"src":"50904:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4981,"name":"MAX_BPS_EXTENDED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"50924:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"50904:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4983,"name":"newProfitLockingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4969,"src":"50943:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"50904:61:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"50882:83:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4986,"nodeType":"ExpressionStatement","src":"50882:83:11"},{"expression":{"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4987,"name":"fullProfitUnlockDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"51058:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4988,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"51081:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"51087:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"51081:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4990,"name":"newProfitLockingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4969,"src":"51099:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"51081:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"51058:63:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4993,"nodeType":"ExpressionStatement","src":"51058:63:11"},{"expression":{"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4994,"name":"lastProfitUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7631,"src":"51195:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4995,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"51214:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"51220:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"51214:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"51195:34:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4998,"nodeType":"ExpressionStatement","src":"51195:34:11"}]}}]},"id":5007,"implemented":true,"kind":"function","modifiers":[],"name":"_manageUnlockingOfShares","nameLocation":"49790:24:11","nodeType":"FunctionDefinition","parameters":{"id":4937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4934,"mutability":"mutable","name":"previouslyLockedShares","nameLocation":"49823:22:11","nodeType":"VariableDeclaration","scope":5007,"src":"49815:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4933,"name":"uint256","nodeType":"ElementaryTypeName","src":"49815:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4936,"mutability":"mutable","name":"newlyLockedShares","nameLocation":"49855:17:11","nodeType":"VariableDeclaration","scope":5007,"src":"49847:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4935,"name":"uint256","nodeType":"ElementaryTypeName","src":"49847:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"49814:59:11"},"returnParameters":{"id":4938,"nodeType":"ParameterList","parameters":[],"src":"49883:0:11"},"scope":6329,"src":"49781:1676:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[6956],"body":{"id":5024,"nodeType":"Block","src":"51675:89:11","statements":[{"expression":{"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5016,"name":"accountant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"51685:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5017,"name":"newAccountant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"51698:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"51685:26:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5019,"nodeType":"ExpressionStatement","src":"51685:26:11"},{"eventCall":{"arguments":[{"id":5021,"name":"newAccountant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"51743:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5020,"name":"UpdateAccountant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7247,"src":"51726:16:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"51726:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5023,"nodeType":"EmitStatement","src":"51721:36:11"}]},"functionSelector":"48ea7127","id":5025,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5013,"name":"ACCOUNTANT_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7652,"src":"51655:18:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5014,"kind":"modifierInvocation","modifierName":{"id":5012,"name":"onlyRole","nameLocations":["51646:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"51646:8:11"},"nodeType":"ModifierInvocation","src":"51646:28:11"}],"name":"setAccountant","nameLocation":"51591:13:11","nodeType":"FunctionDefinition","overrides":{"id":5011,"nodeType":"OverrideSpecifier","overrides":[],"src":"51637:8:11"},"parameters":{"id":5010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5009,"mutability":"mutable","name":"newAccountant","nameLocation":"51613:13:11","nodeType":"VariableDeclaration","scope":5025,"src":"51605:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5008,"name":"address","nodeType":"ElementaryTypeName","src":"51605:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"51604:23:11"},"returnParameters":{"id":5015,"nodeType":"ParameterList","parameters":[],"src":"51675:0:11"},"scope":6329,"src":"51582:182:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6962],"body":{"id":5073,"nodeType":"Block","src":"52046:426:11","statements":[{"body":{"id":5063,"nodeType":"Block","src":"52170:175:11","statements":[{"assignments":[5047],"declarations":[{"constant":false,"id":5047,"mutability":"mutable","name":"strategy","nameLocation":"52192:8:11","nodeType":"VariableDeclaration","scope":5063,"src":"52184:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5046,"name":"address","nodeType":"ElementaryTypeName","src":"52184:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5051,"initialValue":{"baseExpression":{"id":5048,"name":"newDefaultQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"52203:15:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":5050,"indexExpression":{"id":5049,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"52219:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"52203:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"52184:37:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":5052,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"52239:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":5054,"indexExpression":{"id":5053,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5047,"src":"52250:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"52239:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":5055,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"52260:10:11","memberName":"activation","nodeType":"MemberAccess","referencedDeclaration":7727,"src":"52239:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"52274:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"52239:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5062,"nodeType":"IfStatement","src":"52235:100:11","trueBody":{"id":5061,"nodeType":"Block","src":"52277:58:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5058,"name":"InactiveStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"52302:16:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"52302:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5060,"nodeType":"RevertStatement","src":"52295:25:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5039,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"52137:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5040,"name":"newDefaultQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"52141:15:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"52157:6:11","memberName":"length","nodeType":"MemberAccess","src":"52141:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"52137:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5064,"initializationExpression":{"assignments":[5036],"declarations":[{"constant":false,"id":5036,"mutability":"mutable","name":"i","nameLocation":"52130:1:11","nodeType":"VariableDeclaration","scope":5064,"src":"52125:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5035,"name":"uint","nodeType":"ElementaryTypeName","src":"52125:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5038,"initialValue":{"hexValue":"30","id":5037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"52134:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"52125:10:11"},"loopExpression":{"expression":{"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"52165:3:11","subExpression":{"id":5043,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"52165:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5045,"nodeType":"ExpressionStatement","src":"52165:3:11"},"nodeType":"ForStatement","src":"52120:225:11"},{"expression":{"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5065,"name":"defaultQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"52385:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5066,"name":"newDefaultQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"52400:15:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"src":"52385:30:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5068,"nodeType":"ExpressionStatement","src":"52385:30:11"},{"eventCall":{"arguments":[{"id":5070,"name":"newDefaultQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"52449:15:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}],"id":5069,"name":"UpdateDefaultQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7252,"src":"52430:18:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (address[] memory)"}},"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"52430:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5072,"nodeType":"EmitStatement","src":"52425:40:11"}]},"functionSelector":"633f228c","id":5074,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5032,"name":"QUEUE_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7657,"src":"52031:13:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5033,"kind":"modifierInvocation","modifierName":{"id":5031,"name":"onlyRole","nameLocations":["52022:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"52022:8:11"},"nodeType":"ModifierInvocation","src":"52022:23:11"}],"name":"setDefaultQueue","nameLocation":"51952:15:11","nodeType":"FunctionDefinition","overrides":{"id":5030,"nodeType":"OverrideSpecifier","overrides":[],"src":"52013:8:11"},"parameters":{"id":5029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5028,"mutability":"mutable","name":"newDefaultQueue","nameLocation":"51987:15:11","nodeType":"VariableDeclaration","scope":5074,"src":"51968:34:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5026,"name":"address","nodeType":"ElementaryTypeName","src":"51968:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5027,"nodeType":"ArrayTypeName","src":"51968:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"51967:36:11"},"returnParameters":{"id":5034,"nodeType":"ParameterList","parameters":[],"src":"52046:0:11"},"scope":6329,"src":"51943:529:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6967],"body":{"id":5091,"nodeType":"Block","src":"52769:105:11","statements":[{"expression":{"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5083,"name":"useDefaultQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7583,"src":"52779:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5084,"name":"_useDefaultQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5076,"src":"52797:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"52779:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5086,"nodeType":"ExpressionStatement","src":"52779:34:11"},{"eventCall":{"arguments":[{"id":5088,"name":"_useDefaultQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5076,"src":"52850:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5087,"name":"UpdateUseDefaultQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7256,"src":"52828:21:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"52828:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5090,"nodeType":"EmitStatement","src":"52823:44:11"}]},"functionSelector":"9bbca884","id":5092,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5080,"name":"QUEUE_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7657,"src":"52754:13:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5081,"kind":"modifierInvocation","modifierName":{"id":5079,"name":"onlyRole","nameLocations":["52745:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"52745:8:11"},"nodeType":"ModifierInvocation","src":"52745:23:11"}],"name":"setUseDefaultQueue","nameLocation":"52685:18:11","nodeType":"FunctionDefinition","overrides":{"id":5078,"nodeType":"OverrideSpecifier","overrides":[],"src":"52736:8:11"},"parameters":{"id":5077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5076,"mutability":"mutable","name":"_useDefaultQueue","nameLocation":"52709:16:11","nodeType":"VariableDeclaration","scope":5092,"src":"52704:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5075,"name":"bool","nodeType":"ElementaryTypeName","src":"52704:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"52703:23:11"},"returnParameters":{"id":5082,"nodeType":"ParameterList","parameters":[],"src":"52769:0:11"},"scope":6329,"src":"52676:198:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6972],"body":{"id":5128,"nodeType":"Block","src":"53159:268:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5101,"name":"shutdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"53173:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":5102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"53185:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"53173:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5108,"nodeType":"IfStatement","src":"53169:74:11","trueBody":{"id":5107,"nodeType":"Block","src":"53191:52:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5104,"name":"StrategyIsShutdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"53212:18:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"53212:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5106,"nodeType":"RevertStatement","src":"53205:27:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5109,"name":"depositLimitModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7607,"src":"53256:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"53286:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"53278:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5110,"name":"address","nodeType":"ElementaryTypeName","src":"53278:7:11","typeDescriptions":{}}},"id":5113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"53278:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"53256:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5119,"nodeType":"IfStatement","src":"53252:83:11","trueBody":{"id":5118,"nodeType":"Block","src":"53290:45:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5115,"name":"UsingModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"53311:11:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"53311:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5117,"nodeType":"RevertStatement","src":"53304:20:11"}]}},{"expression":{"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5120,"name":"depositLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7603,"src":"53344:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5121,"name":"_depositLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"53359:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"53344:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5123,"nodeType":"ExpressionStatement","src":"53344:28:11"},{"eventCall":{"arguments":[{"id":5125,"name":"_depositLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"53406:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5124,"name":"UpdateDepositLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"53387:18:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"53387:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5127,"nodeType":"EmitStatement","src":"53382:38:11"}]},"functionSelector":"bdc8144b","id":5129,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5098,"name":"DEPOSIT_LIMIT_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7662,"src":"53136:21:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5099,"kind":"modifierInvocation","modifierName":{"id":5097,"name":"onlyRole","nameLocations":["53127:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"53127:8:11"},"nodeType":"ModifierInvocation","src":"53127:31:11"}],"name":"setDepositLimit","nameLocation":"53070:15:11","nodeType":"FunctionDefinition","overrides":{"id":5096,"nodeType":"OverrideSpecifier","overrides":[],"src":"53118:8:11"},"parameters":{"id":5095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5094,"mutability":"mutable","name":"_depositLimit","nameLocation":"53094:13:11","nodeType":"VariableDeclaration","scope":5129,"src":"53086:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5093,"name":"uint256","nodeType":"ElementaryTypeName","src":"53086:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53085:23:11"},"returnParameters":{"id":5100,"nodeType":"ParameterList","parameters":[],"src":"53159:0:11"},"scope":6329,"src":"53061:366:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6977],"body":{"id":5166,"nodeType":"Block","src":"53778:299:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5138,"name":"shutdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"53792:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":5139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"53804:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"53792:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5145,"nodeType":"IfStatement","src":"53788:74:11","trueBody":{"id":5144,"nodeType":"Block","src":"53810:52:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5141,"name":"StrategyIsShutdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"53831:18:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"53831:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5143,"nodeType":"RevertStatement","src":"53824:27:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5146,"name":"depositLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7603,"src":"53875:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":5149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"53896:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5148,"name":"uint256","nodeType":"ElementaryTypeName","src":"53896:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":5147,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"53891:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"53891:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":5151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"53905:3:11","memberName":"max","nodeType":"MemberAccess","src":"53891:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"53875:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5157,"nodeType":"IfStatement","src":"53871:90:11","trueBody":{"id":5156,"nodeType":"Block","src":"53910:51:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5153,"name":"UsingDepositLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"53931:17:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"53931:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5155,"nodeType":"RevertStatement","src":"53924:26:11"}]}},{"expression":{"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5158,"name":"depositLimitModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7607,"src":"53970:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5159,"name":"_depositLimitModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"53991:19:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"53970:40:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5161,"nodeType":"ExpressionStatement","src":"53970:40:11"},{"eventCall":{"arguments":[{"id":5163,"name":"_depositLimitModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"54050:19:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5162,"name":"UpdateDepositLimitModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7288,"src":"54025:24:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"54025:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5165,"nodeType":"EmitStatement","src":"54020:50:11"}]},"functionSelector":"2d772168","id":5167,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5135,"name":"DEPOSIT_LIMIT_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7662,"src":"53755:21:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5136,"kind":"modifierInvocation","modifierName":{"id":5134,"name":"onlyRole","nameLocations":["53746:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"53746:8:11"},"nodeType":"ModifierInvocation","src":"53746:31:11"}],"name":"setDepositLimitModule","nameLocation":"53677:21:11","nodeType":"FunctionDefinition","overrides":{"id":5133,"nodeType":"OverrideSpecifier","overrides":[],"src":"53737:8:11"},"parameters":{"id":5132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5131,"mutability":"mutable","name":"_depositLimitModule","nameLocation":"53707:19:11","nodeType":"VariableDeclaration","scope":5167,"src":"53699:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5130,"name":"address","nodeType":"ElementaryTypeName","src":"53699:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"53698:29:11"},"returnParameters":{"id":5137,"nodeType":"ParameterList","parameters":[],"src":"53778:0:11"},"scope":6329,"src":"53668:409:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6982],"body":{"id":5184,"nodeType":"Block","src":"54374:121:11","statements":[{"expression":{"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5176,"name":"withdrawLimitModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"54384:19:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5177,"name":"_withdrawLimitModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"54406:20:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"54384:42:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5179,"nodeType":"ExpressionStatement","src":"54384:42:11"},{"eventCall":{"arguments":[{"id":5181,"name":"_withdrawLimitModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"54467:20:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5180,"name":"UpdateWithdrawLimitModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7292,"src":"54441:25:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"54441:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5183,"nodeType":"EmitStatement","src":"54436:52:11"}]},"functionSelector":"4bbd71e9","id":5185,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5173,"name":"WITHDRAW_LIMIT_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7667,"src":"54350:22:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5174,"kind":"modifierInvocation","modifierName":{"id":5172,"name":"onlyRole","nameLocations":["54341:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"54341:8:11"},"nodeType":"ModifierInvocation","src":"54341:32:11"}],"name":"setWithdrawLimitModule","nameLocation":"54270:22:11","nodeType":"FunctionDefinition","overrides":{"id":5171,"nodeType":"OverrideSpecifier","overrides":[],"src":"54332:8:11"},"parameters":{"id":5170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5169,"mutability":"mutable","name":"_withdrawLimitModule","nameLocation":"54301:20:11","nodeType":"VariableDeclaration","scope":5185,"src":"54293:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5168,"name":"address","nodeType":"ElementaryTypeName","src":"54293:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"54292:30:11"},"returnParameters":{"id":5175,"nodeType":"ParameterList","parameters":[],"src":"54374:0:11"},"scope":6329,"src":"54261:234:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6987],"body":{"id":5202,"nodeType":"Block","src":"54714:109:11","statements":[{"expression":{"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5194,"name":"minimumTotalIdle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7601,"src":"54724:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5195,"name":"_minimumTotalIdle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"54743:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"54724:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5197,"nodeType":"ExpressionStatement","src":"54724:36:11"},{"eventCall":{"arguments":[{"id":5199,"name":"_minimumTotalIdle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"54798:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5198,"name":"UpdateMinimumTotalIdle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7272,"src":"54775:22:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"54775:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5201,"nodeType":"EmitStatement","src":"54770:46:11"}]},"functionSelector":"8212fd43","id":5203,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5191,"name":"MINIMUM_IDLE_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7672,"src":"54692:20:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5192,"kind":"modifierInvocation","modifierName":{"id":5190,"name":"onlyRole","nameLocations":["54683:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"54683:8:11"},"nodeType":"ModifierInvocation","src":"54683:30:11"}],"name":"setMinimumTotalIdle","nameLocation":"54618:19:11","nodeType":"FunctionDefinition","overrides":{"id":5189,"nodeType":"OverrideSpecifier","overrides":[],"src":"54674:8:11"},"parameters":{"id":5188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5187,"mutability":"mutable","name":"_minimumTotalIdle","nameLocation":"54646:17:11","nodeType":"VariableDeclaration","scope":5203,"src":"54638:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5186,"name":"uint256","nodeType":"ElementaryTypeName","src":"54638:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"54637:27:11"},"returnParameters":{"id":5193,"nodeType":"ParameterList","parameters":[],"src":"54714:0:11"},"scope":6329,"src":"54609:214:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6992],"body":{"id":5254,"nodeType":"Block","src":"55491:648:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5212,"name":"_newProfitMaxUnlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"55561:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5213,"name":"ONE_YEAR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"55587:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"55561:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5219,"nodeType":"IfStatement","src":"55557:97:11","trueBody":{"id":5218,"nodeType":"Block","src":"55597:57:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5215,"name":"ProfitUnlockTimeTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"55618:23:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"55618:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5217,"nodeType":"RevertStatement","src":"55611:32:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5220,"name":"_newProfitMaxUnlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"55731:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"55758:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"55731:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5245,"nodeType":"IfStatement","src":"55727:286:11","trueBody":{"id":5244,"nodeType":"Block","src":"55761:252:11","statements":[{"expression":{"arguments":[{"baseExpression":{"id":5224,"name":"_balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"55839:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5229,"indexExpression":{"arguments":[{"id":5227,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"55858:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":5226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"55850:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5225,"name":"address","nodeType":"ElementaryTypeName","src":"55850:7:11","typeDescriptions":{}}},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"55850:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"55839:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5232,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"55874:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":5231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"55866:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5230,"name":"address","nodeType":"ElementaryTypeName","src":"55866:7:11","typeDescriptions":{}}},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"55866:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5223,"name":"_burnShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"55827:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"55827:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5235,"nodeType":"ExpressionStatement","src":"55827:53:11"},{"expression":{"id":5238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5236,"name":"profitUnlockingRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"55941:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":5237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"55963:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"55941:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5239,"nodeType":"ExpressionStatement","src":"55941:23:11"},{"expression":{"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5240,"name":"fullProfitUnlockDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"55978:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":5241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"56001:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"55978:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5243,"nodeType":"ExpressionStatement","src":"55978:24:11"}]}},{"expression":{"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5246,"name":"profitMaxUnlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7625,"src":"56022:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5247,"name":"_newProfitMaxUnlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"56044:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"56022:45:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5249,"nodeType":"ExpressionStatement","src":"56022:45:11"},{"eventCall":{"arguments":[{"id":5251,"name":"_newProfitMaxUnlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"56108:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5250,"name":"UpdateProfitMaxUnlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"56082:25:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"56082:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5253,"nodeType":"EmitStatement","src":"56077:55:11"}]},"functionSelector":"df69b22a","id":5255,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5209,"name":"PROFIT_UNLOCK_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7677,"src":"55468:21:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5210,"kind":"modifierInvocation","modifierName":{"id":5208,"name":"onlyRole","nameLocations":["55459:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"55459:8:11"},"nodeType":"ModifierInvocation","src":"55459:31:11"}],"name":"setProfitMaxUnlockTime","nameLocation":"55385:22:11","nodeType":"FunctionDefinition","overrides":{"id":5207,"nodeType":"OverrideSpecifier","overrides":[],"src":"55450:8:11"},"parameters":{"id":5206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5205,"mutability":"mutable","name":"_newProfitMaxUnlockTime","nameLocation":"55416:23:11","nodeType":"VariableDeclaration","scope":5255,"src":"55408:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5204,"name":"uint256","nodeType":"ElementaryTypeName","src":"55408:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55407:33:11"},"returnParameters":{"id":5211,"nodeType":"ParameterList","parameters":[],"src":"55491:0:11"},"scope":6329,"src":"55376:763:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6999],"body":{"id":5276,"nodeType":"Block","src":"56516:79:11","statements":[{"expression":{"arguments":[{"id":5267,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"56537:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"56543:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5266,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"56526:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"56526:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5270,"nodeType":"ExpressionStatement","src":"56526:25:11"},{"eventCall":{"arguments":[{"id":5272,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"56574:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5273,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"56583:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5271,"name":"RoleSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"56566:7:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32)"}},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"56566:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5275,"nodeType":"EmitStatement","src":"56561:27:11"}]},"functionSelector":"a73f7f8a","id":5277,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5263,"name":"ROLE_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7682,"src":"56502:12:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5264,"kind":"modifierInvocation","modifierName":{"id":5262,"name":"onlyRole","nameLocations":["56493:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"56493:8:11"},"nodeType":"ModifierInvocation","src":"56493:22:11"}],"name":"addRole","nameLocation":"56438:7:11","nodeType":"FunctionDefinition","overrides":{"id":5261,"nodeType":"OverrideSpecifier","overrides":[],"src":"56484:8:11"},"parameters":{"id":5260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5257,"mutability":"mutable","name":"account","nameLocation":"56454:7:11","nodeType":"VariableDeclaration","scope":5277,"src":"56446:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5256,"name":"address","nodeType":"ElementaryTypeName","src":"56446:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5259,"mutability":"mutable","name":"role","nameLocation":"56471:4:11","nodeType":"VariableDeclaration","scope":5277,"src":"56463:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"56463:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"56445:31:11"},"returnParameters":{"id":5265,"nodeType":"ParameterList","parameters":[],"src":"56516:0:11"},"scope":6329,"src":"56429:166:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[7006],"body":{"id":5298,"nodeType":"Block","src":"56922:80:11","statements":[{"expression":{"arguments":[{"id":5289,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"56944:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5290,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5279,"src":"56950:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5288,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"56932:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"56932:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5292,"nodeType":"ExpressionStatement","src":"56932:26:11"},{"eventCall":{"arguments":[{"id":5294,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5279,"src":"56981:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5295,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"56990:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5293,"name":"RoleSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"56973:7:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32)"}},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"56973:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5297,"nodeType":"EmitStatement","src":"56968:27:11"}]},"functionSelector":"6853920e","id":5299,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5285,"name":"ROLE_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7682,"src":"56908:12:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5286,"kind":"modifierInvocation","modifierName":{"id":5284,"name":"onlyRole","nameLocations":["56899:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"56899:8:11"},"nodeType":"ModifierInvocation","src":"56899:22:11"}],"name":"removeRole","nameLocation":"56839:10:11","nodeType":"FunctionDefinition","overrides":{"id":5283,"nodeType":"OverrideSpecifier","overrides":[],"src":"56890:8:11"},"parameters":{"id":5282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5279,"mutability":"mutable","name":"account","nameLocation":"56858:7:11","nodeType":"VariableDeclaration","scope":5299,"src":"56850:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5278,"name":"address","nodeType":"ElementaryTypeName","src":"56850:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5281,"mutability":"mutable","name":"role","nameLocation":"56875:4:11","nodeType":"VariableDeclaration","scope":5299,"src":"56867:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5280,"name":"bytes32","nodeType":"ElementaryTypeName","src":"56867:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"56849:31:11"},"returnParameters":{"id":5287,"nodeType":"ParameterList","parameters":[],"src":"56922:0:11"},"scope":6329,"src":"56830:172:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7011],"body":{"id":5320,"nodeType":"Block","src":"57158:102:11","statements":[{"expression":{"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5308,"name":"openRoles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7617,"src":"57168:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":5310,"indexExpression":{"id":5309,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5301,"src":"57178:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"57168:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"57186:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"57168:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5313,"nodeType":"ExpressionStatement","src":"57168:22:11"},{"eventCall":{"arguments":[{"id":5315,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5301,"src":"57223:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5316,"name":"RoleStatusChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"57229:16:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RoleStatusChange_$7769_$","typeString":"type(enum RoleStatusChange)"}},"id":5317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"57246:6:11","memberName":"OPENED","nodeType":"MemberAccess","referencedDeclaration":7767,"src":"57229:23:11","typeDescriptions":{"typeIdentifier":"t_enum$_RoleStatusChange_$7769","typeString":"enum RoleStatusChange"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_enum$_RoleStatusChange_$7769","typeString":"enum RoleStatusChange"}],"id":5314,"name":"RoleStatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7239,"src":"57205:17:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_enum$_RoleStatusChange_$7769_$returns$__$","typeString":"function (bytes32,enum RoleStatusChange)"}},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"57205:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5319,"nodeType":"EmitStatement","src":"57200:53:11"}]},"functionSelector":"d538e904","id":5321,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5305,"name":"ROLE_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7682,"src":"57144:12:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5306,"kind":"modifierInvocation","modifierName":{"id":5304,"name":"onlyRole","nameLocations":["57135:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"57135:8:11"},"nodeType":"ModifierInvocation","src":"57135:22:11"}],"name":"setOpenRole","nameLocation":"57091:11:11","nodeType":"FunctionDefinition","overrides":{"id":5303,"nodeType":"OverrideSpecifier","overrides":[],"src":"57126:8:11"},"parameters":{"id":5302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5301,"mutability":"mutable","name":"role","nameLocation":"57111:4:11","nodeType":"VariableDeclaration","scope":5321,"src":"57103:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"57103:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"57102:14:11"},"returnParameters":{"id":5307,"nodeType":"ParameterList","parameters":[],"src":"57158:0:11"},"scope":6329,"src":"57082:178:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7016],"body":{"id":5342,"nodeType":"Block","src":"57418:103:11","statements":[{"expression":{"id":5334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5330,"name":"openRoles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7617,"src":"57428:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":5332,"indexExpression":{"id":5331,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5323,"src":"57438:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"57428:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"57446:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"57428:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5335,"nodeType":"ExpressionStatement","src":"57428:23:11"},{"eventCall":{"arguments":[{"id":5337,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5323,"src":"57484:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5338,"name":"RoleStatusChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"57490:16:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RoleStatusChange_$7769_$","typeString":"type(enum RoleStatusChange)"}},"id":5339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"57507:6:11","memberName":"CLOSED","nodeType":"MemberAccess","referencedDeclaration":7768,"src":"57490:23:11","typeDescriptions":{"typeIdentifier":"t_enum$_RoleStatusChange_$7769","typeString":"enum RoleStatusChange"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_enum$_RoleStatusChange_$7769","typeString":"enum RoleStatusChange"}],"id":5336,"name":"RoleStatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7239,"src":"57466:17:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_enum$_RoleStatusChange_$7769_$returns$__$","typeString":"function (bytes32,enum RoleStatusChange)"}},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"57466:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5341,"nodeType":"EmitStatement","src":"57461:53:11"}]},"functionSelector":"c9a16ea4","id":5343,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5327,"name":"ROLE_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7682,"src":"57404:12:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5328,"kind":"modifierInvocation","modifierName":{"id":5326,"name":"onlyRole","nameLocations":["57395:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"57395:8:11"},"nodeType":"ModifierInvocation","src":"57395:22:11"}],"name":"closeOpenRole","nameLocation":"57349:13:11","nodeType":"FunctionDefinition","overrides":{"id":5325,"nodeType":"OverrideSpecifier","overrides":[],"src":"57386:8:11"},"parameters":{"id":5324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5323,"mutability":"mutable","name":"role","nameLocation":"57371:4:11","nodeType":"VariableDeclaration","scope":5343,"src":"57363:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"57363:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"57362:14:11"},"returnParameters":{"id":5329,"nodeType":"ParameterList","parameters":[],"src":"57418:0:11"},"scope":6329,"src":"57340:181:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7021],"body":{"id":5356,"nodeType":"Block","src":"57887:51:11","statements":[{"expression":{"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5352,"name":"futureRoleManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7621,"src":"57897:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5353,"name":"newRoleManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"57917:14:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"57897:34:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5355,"nodeType":"ExpressionStatement","src":"57897:34:11"}]},"functionSelector":"629b9142","id":5357,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5349,"name":"ROLE_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7682,"src":"57873:12:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5350,"kind":"modifierInvocation","modifierName":{"id":5348,"name":"onlyRole","nameLocations":["57864:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"57864:8:11"},"nodeType":"ModifierInvocation","src":"57864:22:11"}],"name":"transferRoleManager","nameLocation":"57802:19:11","nodeType":"FunctionDefinition","overrides":{"id":5347,"nodeType":"OverrideSpecifier","overrides":[],"src":"57855:8:11"},"parameters":{"id":5346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5345,"mutability":"mutable","name":"newRoleManager","nameLocation":"57830:14:11","nodeType":"VariableDeclaration","scope":5357,"src":"57822:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5344,"name":"address","nodeType":"ElementaryTypeName","src":"57822:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"57821:24:11"},"returnParameters":{"id":5351,"nodeType":"ParameterList","parameters":[],"src":"57887:0:11"},"scope":6329,"src":"57793:145:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7024],"body":{"id":5387,"nodeType":"Block","src":"58040:236:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5361,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"58054:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"58058:6:11","memberName":"sender","nodeType":"MemberAccess","src":"58054:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5363,"name":"futureRoleManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7621,"src":"58068:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"58054:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5369,"nodeType":"IfStatement","src":"58050:102:11","trueBody":{"id":5368,"nodeType":"Block","src":"58087:65:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5365,"name":"CallerIsNotTheFutureRoleManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"58108:31:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"58108:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5367,"nodeType":"RevertStatement","src":"58101:40:11"}]}},{"expression":{"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5370,"name":"roleManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"58161:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5371,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"58175:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"58179:6:11","memberName":"sender","nodeType":"MemberAccess","src":"58175:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"58161:24:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5374,"nodeType":"ExpressionStatement","src":"58161:24:11"},{"expression":{"id":5380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5375,"name":"futureRoleManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7621,"src":"58195:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":5378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"58223:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"58215:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5376,"name":"address","nodeType":"ElementaryTypeName","src":"58215:7:11","typeDescriptions":{}}},"id":5379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"58215:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"58195:30:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5381,"nodeType":"ExpressionStatement","src":"58195:30:11"},{"eventCall":{"arguments":[{"expression":{"id":5383,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"58258:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"58262:6:11","memberName":"sender","nodeType":"MemberAccess","src":"58258:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5382,"name":"UpdateRoleManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"58240:17:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"58240:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5386,"nodeType":"EmitStatement","src":"58235:34:11"}]},"functionSelector":"6d020808","id":5388,"implemented":true,"kind":"function","modifiers":[],"name":"acceptRoleManager","nameLocation":"58002:17:11","nodeType":"FunctionDefinition","overrides":{"id":5359,"nodeType":"OverrideSpecifier","overrides":[],"src":"58031:8:11"},"parameters":{"id":5358,"nodeType":"ParameterList","parameters":[],"src":"58019:2:11"},"returnParameters":{"id":5360,"nodeType":"ParameterList","parameters":[],"src":"58040:0:11"},"scope":6329,"src":"57993:283:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7172],"body":{"id":5397,"nodeType":"Block","src":"58506:41:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5394,"name":"_unlockedShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"58523:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"58523:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5393,"id":5396,"nodeType":"Return","src":"58516:24:11"}]},"functionSelector":"d9a0e97a","id":5398,"implemented":true,"kind":"function","modifiers":[],"name":"unlockedShares","nameLocation":"58448:14:11","nodeType":"FunctionDefinition","overrides":{"id":5390,"nodeType":"OverrideSpecifier","overrides":[],"src":"58479:8:11"},"parameters":{"id":5389,"nodeType":"ParameterList","parameters":[],"src":"58462:2:11"},"returnParameters":{"id":5393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5398,"src":"58497:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5391,"name":"uint256","nodeType":"ElementaryTypeName","src":"58497:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58496:9:11"},"scope":6329,"src":"58439:108:11","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[7177],"body":{"id":5412,"nodeType":"Block","src":"58871:75:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"58905:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5406,"name":"DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"58909:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"58905:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5408,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"58919:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$7772_$","typeString":"type(enum Rounding)"}},"id":5409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"58928:10:11","memberName":"ROUND_DOWN","nodeType":"MemberAccess","referencedDeclaration":7770,"src":"58919:19:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}],"id":5404,"name":"_convertToAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"58888:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$7772_$returns$_t_uint256_$","typeString":"function (uint256,enum Rounding) view returns (uint256)"}},"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"58888:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5403,"id":5411,"nodeType":"Return","src":"58881:58:11"}]},"functionSelector":"99530b06","id":5413,"implemented":true,"kind":"function","modifiers":[],"name":"pricePerShare","nameLocation":"58814:13:11","nodeType":"FunctionDefinition","overrides":{"id":5400,"nodeType":"OverrideSpecifier","overrides":[],"src":"58844:8:11"},"parameters":{"id":5399,"nodeType":"ParameterList","parameters":[],"src":"58827:2:11"},"returnParameters":{"id":5403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5413,"src":"58862:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5401,"name":"uint256","nodeType":"ElementaryTypeName","src":"58862:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58861:9:11"},"scope":6329,"src":"58805:141:11","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[7033],"body":{"id":5432,"nodeType":"Block","src":"59274:48:11","statements":[{"expression":{"arguments":[{"id":5429,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"59306:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5428,"name":"_processReport","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"59291:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$_t_uint256_$","typeString":"function (address) returns (uint256,uint256)"}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"59291:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":5427,"id":5431,"nodeType":"Return","src":"59284:31:11"}]},"functionSelector":"b6cc2d1f","id":5433,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5419,"name":"REPORTING_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7687,"src":"59215:17:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5420,"kind":"modifierInvocation","modifierName":{"id":5418,"name":"onlyRole","nameLocations":["59206:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"59206:8:11"},"nodeType":"ModifierInvocation","src":"59206:27:11"},{"id":5422,"kind":"modifierInvocation","modifierName":{"id":5421,"name":"nonReentrant","nameLocations":["59234:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":418,"src":"59234:12:11"},"nodeType":"ModifierInvocation","src":"59234:12:11"}],"name":"processReport","nameLocation":"59156:13:11","nodeType":"FunctionDefinition","overrides":{"id":5417,"nodeType":"OverrideSpecifier","overrides":[],"src":"59197:8:11"},"parameters":{"id":5416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5415,"mutability":"mutable","name":"strategy","nameLocation":"59178:8:11","nodeType":"VariableDeclaration","scope":5433,"src":"59170:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5414,"name":"address","nodeType":"ElementaryTypeName","src":"59170:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"59169:18:11"},"returnParameters":{"id":5427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5433,"src":"59256:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5423,"name":"uint256","nodeType":"ElementaryTypeName","src":"59256:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5433,"src":"59265:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5425,"name":"uint256","nodeType":"ElementaryTypeName","src":"59265:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"59255:18:11"},"scope":6329,"src":"59147:175:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7040],"body":{"id":5558,"nodeType":"Block","src":"59867:1337:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":5446,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"59881:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":5448,"indexExpression":{"id":5447,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"59892:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"59881:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":5449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"59902:10:11","memberName":"activation","nodeType":"MemberAccess","referencedDeclaration":7727,"src":"59881:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"59916:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"59881:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5456,"nodeType":"IfStatement","src":"59877:92:11","trueBody":{"id":5455,"nodeType":"Block","src":"59919:50:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5452,"name":"InactiveStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"59940:16:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"59940:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5454,"nodeType":"RevertStatement","src":"59933:25:11"}]}},{"assignments":[5458],"declarations":[{"constant":false,"id":5458,"mutability":"mutable","name":"currentDebt","nameLocation":"60022:11:11","nodeType":"VariableDeclaration","scope":5558,"src":"60014:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5457,"name":"uint256","nodeType":"ElementaryTypeName","src":"60014:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5463,"initialValue":{"expression":{"baseExpression":{"id":5459,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"60036:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":5461,"indexExpression":{"id":5460,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"60047:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"60036:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":5462,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"60057:11:11","memberName":"currentDebt","nodeType":"MemberAccess","referencedDeclaration":7731,"src":"60036:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"60014:54:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5464,"name":"currentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"60083:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":5465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"60098:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"60083:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5467,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"60103:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":5468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"60113:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"60103:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"60083:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5475,"nodeType":"IfStatement","src":"60079:80:11","trueBody":{"id":5474,"nodeType":"Block","src":"60116:43:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5471,"name":"ZeroValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"60137:9:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"60137:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5473,"nodeType":"RevertStatement","src":"60130:18:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5476,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"60173:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5477,"name":"currentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"60182:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"60173:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5484,"nodeType":"IfStatement","src":"60169:71:11","trueBody":{"id":5483,"nodeType":"Block","src":"60195:45:11","statements":[{"expression":{"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5479,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"60209:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5480,"name":"currentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"60218:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"60209:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5482,"nodeType":"ExpressionStatement","src":"60209:20:11"}]}},{"assignments":[5486],"declarations":[{"constant":false,"id":5486,"mutability":"mutable","name":"shares","nameLocation":"60473:6:11","nodeType":"VariableDeclaration","scope":5558,"src":"60465:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5485,"name":"uint256","nodeType":"ElementaryTypeName","src":"60465:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5500,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":5493,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"60517:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":5492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"60509:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5491,"name":"address","nodeType":"ElementaryTypeName","src":"60509:7:11","typeDescriptions":{}}},"id":5494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"60509:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5488,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"60489:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5487,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"60482:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$531_$","typeString":"type(contract IERC20)"}},"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"60482:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}},"id":5490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"60499:9:11","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":488,"src":"60482:26:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"60482:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5496,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"60526:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"60482:50:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5498,"name":"currentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"60535:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"60482:64:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"60465:81:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5501,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"60561:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":5502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"60571:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"60561:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5508,"nodeType":"IfStatement","src":"60557:60:11","trueBody":{"id":5507,"nodeType":"Block","src":"60574:43:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5504,"name":"ZeroValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"60595:9:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"60595:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5506,"nodeType":"RevertStatement","src":"60588:18:11"}]}},{"expression":{"arguments":[{"arguments":[{"id":5512,"name":"ASSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"60658:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}],"id":5511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"60650:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5510,"name":"address","nodeType":"ElementaryTypeName","src":"60650:7:11","typeDescriptions":{}}},"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"60650:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5514,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"60666:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"60670:6:11","memberName":"sender","nodeType":"MemberAccess","src":"60666:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5518,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"60686:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":5517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"60678:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5516,"name":"address","nodeType":"ElementaryTypeName","src":"60678:7:11","typeDescriptions":{}}},"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"60678:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5520,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"60693:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5509,"name":"_erc20SafeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"60627:22:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":5521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"60627:73:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5522,"nodeType":"ExpressionStatement","src":"60627:73:11"},{"expression":{"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":5523,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"60742:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":5525,"indexExpression":{"id":5524,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"60753:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"60742:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":5526,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"60763:11:11","memberName":"currentDebt","nodeType":"MemberAccess","referencedDeclaration":7731,"src":"60742:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5527,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"60778:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"60742:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5529,"nodeType":"ExpressionStatement","src":"60742:42:11"},{"expression":{"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5530,"name":"totalDebtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"60822:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5531,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"60841:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"60822:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5533,"nodeType":"ExpressionStatement","src":"60822:25:11"},{"expression":{"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5534,"name":"totalIdleAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7599,"src":"60888:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5535,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"60907:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"60888:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5537,"nodeType":"ExpressionStatement","src":"60888:25:11"},{"eventCall":{"arguments":[{"id":5539,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"60968:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5540,"name":"currentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"60978:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5541,"name":"currentDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"60991:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5542,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"61005:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"60991:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5538,"name":"DebtUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7226,"src":"60956:11:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"60956:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5545,"nodeType":"EmitStatement","src":"60951:61:11"},{"expression":{"arguments":[{"id":5547,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"61088:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5548,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"61098:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"61102:6:11","memberName":"sender","nodeType":"MemberAccess","src":"61098:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5550,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"61110:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5546,"name":"_erc20SafeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"61069:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"61069:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5552,"nodeType":"ExpressionStatement","src":"61069:48:11"},{"eventCall":{"arguments":[{"id":5554,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"61180:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5555,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"61190:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5553,"name":"DebtPurchased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"61166:13:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"61166:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5557,"nodeType":"EmitStatement","src":"61161:36:11"}]},"functionSelector":"405977e7","id":5559,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5441,"name":"DEBT_PURCHASER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7692,"src":"59838:14:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5442,"kind":"modifierInvocation","modifierName":{"id":5440,"name":"onlyRole","nameLocations":["59829:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"59829:8:11"},"nodeType":"ModifierInvocation","src":"59829:24:11"},{"id":5444,"kind":"modifierInvocation","modifierName":{"id":5443,"name":"nonReentrant","nameLocations":["59854:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":418,"src":"59854:12:11"},"nodeType":"ModifierInvocation","src":"59854:12:11"}],"name":"buyDebt","nameLocation":"59769:7:11","nodeType":"FunctionDefinition","overrides":{"id":5439,"nodeType":"OverrideSpecifier","overrides":[],"src":"59820:8:11"},"parameters":{"id":5438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5435,"mutability":"mutable","name":"strategy","nameLocation":"59785:8:11","nodeType":"VariableDeclaration","scope":5559,"src":"59777:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5434,"name":"address","nodeType":"ElementaryTypeName","src":"59777:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5437,"mutability":"mutable","name":"amount","nameLocation":"59803:6:11","nodeType":"VariableDeclaration","scope":5559,"src":"59795:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5436,"name":"uint256","nodeType":"ElementaryTypeName","src":"59795:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"59776:34:11"},"returnParameters":{"id":5445,"nodeType":"ParameterList","parameters":[],"src":"59867:0:11"},"scope":6329,"src":"59760:1444:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7045],"body":{"id":5572,"nodeType":"Block","src":"61416:42:11","statements":[{"expression":{"arguments":[{"id":5569,"name":"newStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"61439:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5568,"name":"_addStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"61426:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"61426:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5571,"nodeType":"ExpressionStatement","src":"61426:25:11"}]},"functionSelector":"223e5479","id":5573,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5565,"name":"ADD_STRATEGY_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"61394:20:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5566,"kind":"modifierInvocation","modifierName":{"id":5564,"name":"onlyRole","nameLocations":["61385:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"61385:8:11"},"nodeType":"ModifierInvocation","src":"61385:30:11"}],"name":"addStrategy","nameLocation":"61334:11:11","nodeType":"FunctionDefinition","overrides":{"id":5563,"nodeType":"OverrideSpecifier","overrides":[],"src":"61376:8:11"},"parameters":{"id":5562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5561,"mutability":"mutable","name":"newStrategy","nameLocation":"61354:11:11","nodeType":"VariableDeclaration","scope":5573,"src":"61346:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5560,"name":"address","nodeType":"ElementaryTypeName","src":"61346:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"61345:21:11"},"returnParameters":{"id":5567,"nodeType":"ParameterList","parameters":[],"src":"61416:0:11"},"scope":6329,"src":"61325:133:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7050],"body":{"id":5587,"nodeType":"Block","src":"61639:49:11","statements":[{"expression":{"arguments":[{"id":5583,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"61665:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":5584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"61675:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5582,"name":"_revokeStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"61649:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"61649:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5586,"nodeType":"ExpressionStatement","src":"61649:32:11"}]},"functionSelector":"bb994d48","id":5588,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5579,"name":"REVOKE_STRATEGY_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7702,"src":"61614:23:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5580,"kind":"modifierInvocation","modifierName":{"id":5578,"name":"onlyRole","nameLocations":["61605:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"61605:8:11"},"nodeType":"ModifierInvocation","src":"61605:33:11"}],"name":"revokeStrategy","nameLocation":"61554:14:11","nodeType":"FunctionDefinition","overrides":{"id":5577,"nodeType":"OverrideSpecifier","overrides":[],"src":"61596:8:11"},"parameters":{"id":5576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5575,"mutability":"mutable","name":"strategy","nameLocation":"61577:8:11","nodeType":"VariableDeclaration","scope":5588,"src":"61569:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5574,"name":"address","nodeType":"ElementaryTypeName","src":"61569:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"61568:18:11"},"returnParameters":{"id":5581,"nodeType":"ParameterList","parameters":[],"src":"61639:0:11"},"scope":6329,"src":"61545:143:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7055],"body":{"id":5602,"nodeType":"Block","src":"62293:48:11","statements":[{"expression":{"arguments":[{"id":5598,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5590,"src":"62319:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":5599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"62329:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5597,"name":"_revokeStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"62303:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"62303:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5601,"nodeType":"ExpressionStatement","src":"62303:31:11"}]},"functionSelector":"16b87ac0","id":5603,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5594,"name":"FORCE_REVOKE_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7707,"src":"62271:20:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5595,"kind":"modifierInvocation","modifierName":{"id":5593,"name":"onlyRole","nameLocations":["62262:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"62262:8:11"},"nodeType":"ModifierInvocation","src":"62262:30:11"}],"name":"forceRevokeStrategy","nameLocation":"62206:19:11","nodeType":"FunctionDefinition","overrides":{"id":5592,"nodeType":"OverrideSpecifier","overrides":[],"src":"62253:8:11"},"parameters":{"id":5591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5590,"mutability":"mutable","name":"strategy","nameLocation":"62234:8:11","nodeType":"VariableDeclaration","scope":5603,"src":"62226:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5589,"name":"address","nodeType":"ElementaryTypeName","src":"62226:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"62225:18:11"},"returnParameters":{"id":5596,"nodeType":"ParameterList","parameters":[],"src":"62293:0:11"},"scope":6329,"src":"62197:144:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7062],"body":{"id":5639,"nodeType":"Block","src":"62665:233:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":5614,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"62679:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":5616,"indexExpression":{"id":5615,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"62690:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"62679:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":5617,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"62700:10:11","memberName":"activation","nodeType":"MemberAccess","referencedDeclaration":7727,"src":"62679:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"62714:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"62679:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5624,"nodeType":"IfStatement","src":"62675:92:11","trueBody":{"id":5623,"nodeType":"Block","src":"62717:50:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5620,"name":"InactiveStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"62738:16:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"62738:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5622,"nodeType":"RevertStatement","src":"62731:25:11"}]}},{"expression":{"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":5625,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"62776:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":5627,"indexExpression":{"id":5626,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"62787:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"62776:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":5628,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"62797:7:11","memberName":"maxDebt","nodeType":"MemberAccess","referencedDeclaration":7733,"src":"62776:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5629,"name":"newMaxDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5607,"src":"62807:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"62776:41:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5631,"nodeType":"ExpressionStatement","src":"62776:41:11"},{"eventCall":{"arguments":[{"expression":{"id":5633,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"62858:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"62862:6:11","memberName":"sender","nodeType":"MemberAccess","src":"62858:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5635,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"62870:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5636,"name":"newMaxDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5607,"src":"62880:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5632,"name":"UpdatedMaxDebtForStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7264,"src":"62832:25:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"62832:59:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5638,"nodeType":"EmitStatement","src":"62827:64:11"}]},"functionSelector":"f6d7bfa0","id":5640,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5611,"name":"MAX_DEBT_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7712,"src":"62647:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5612,"kind":"modifierInvocation","modifierName":{"id":5610,"name":"onlyRole","nameLocations":["62638:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"62638:8:11"},"nodeType":"ModifierInvocation","src":"62638:26:11"}],"name":"updateMaxDebtForStrategy","nameLocation":"62557:24:11","nodeType":"FunctionDefinition","overrides":{"id":5609,"nodeType":"OverrideSpecifier","overrides":[],"src":"62629:8:11"},"parameters":{"id":5608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5605,"mutability":"mutable","name":"strategy","nameLocation":"62590:8:11","nodeType":"VariableDeclaration","scope":5640,"src":"62582:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5604,"name":"address","nodeType":"ElementaryTypeName","src":"62582:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5607,"mutability":"mutable","name":"newMaxDebt","nameLocation":"62608:10:11","nodeType":"VariableDeclaration","scope":5640,"src":"62600:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5606,"name":"uint256","nodeType":"ElementaryTypeName","src":"62600:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62581:38:11"},"returnParameters":{"id":5613,"nodeType":"ParameterList","parameters":[],"src":"62665:0:11"},"scope":6329,"src":"62548:350:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7071],"body":{"id":5660,"nodeType":"Block","src":"63253:57:11","statements":[{"expression":{"arguments":[{"id":5656,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"63282:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5657,"name":"targetDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5644,"src":"63292:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5655,"name":"_updateDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"63270:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) returns (uint256)"}},"id":5658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"63270:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5654,"id":5659,"nodeType":"Return","src":"63263:40:11"}]},"functionSelector":"46e6ac49","id":5661,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5648,"name":"DEBT_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7717,"src":"63208:12:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5649,"kind":"modifierInvocation","modifierName":{"id":5647,"name":"onlyRole","nameLocations":["63199:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"63199:8:11"},"nodeType":"ModifierInvocation","src":"63199:22:11"},{"id":5651,"kind":"modifierInvocation","modifierName":{"id":5650,"name":"nonReentrant","nameLocations":["63222:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":418,"src":"63222:12:11"},"nodeType":"ModifierInvocation","src":"63222:12:11"}],"name":"updateDebt","nameLocation":"63132:10:11","nodeType":"FunctionDefinition","overrides":{"id":5646,"nodeType":"OverrideSpecifier","overrides":[],"src":"63190:8:11"},"parameters":{"id":5645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5642,"mutability":"mutable","name":"strategy","nameLocation":"63151:8:11","nodeType":"VariableDeclaration","scope":5661,"src":"63143:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5641,"name":"address","nodeType":"ElementaryTypeName","src":"63143:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5644,"mutability":"mutable","name":"targetDebt","nameLocation":"63169:10:11","nodeType":"VariableDeclaration","scope":5661,"src":"63161:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5643,"name":"uint256","nodeType":"ElementaryTypeName","src":"63161:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63142:38:11"},"returnParameters":{"id":5654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5661,"src":"63244:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5652,"name":"uint256","nodeType":"ElementaryTypeName","src":"63244:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63243:9:11"},"scope":6329,"src":"63123:187:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7074],"body":{"id":5719,"nodeType":"Block","src":"63451:471:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5668,"name":"shutdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"63465:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":5669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"63477:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"63465:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5675,"nodeType":"IfStatement","src":"63461:72:11","trueBody":{"id":5674,"nodeType":"Block","src":"63483:50:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5671,"name":"InactiveStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"63504:16:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"63504:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5673,"nodeType":"RevertStatement","src":"63497:25:11"}]}},{"expression":{"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5676,"name":"shutdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7623,"src":"63574:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"63585:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"63574:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5679,"nodeType":"ExpressionStatement","src":"63574:15:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5680,"name":"depositLimitModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7607,"src":"63639:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"63669:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"63661:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5681,"name":"address","nodeType":"ElementaryTypeName","src":"63661:7:11","typeDescriptions":{}}},"id":5684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"63661:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"63639:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5701,"nodeType":"IfStatement","src":"63635:149:11","trueBody":{"id":5700,"nodeType":"Block","src":"63673:111:11","statements":[{"expression":{"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5686,"name":"depositLimitModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7607,"src":"63687:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":5689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"63716:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"63708:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5687,"name":"address","nodeType":"ElementaryTypeName","src":"63708:7:11","typeDescriptions":{}}},"id":5690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"63708:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"63687:31:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5692,"nodeType":"ExpressionStatement","src":"63687:31:11"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":5696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"63770:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"63762:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5694,"name":"address","nodeType":"ElementaryTypeName","src":"63762:7:11","typeDescriptions":{}}},"id":5697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"63762:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5693,"name":"UpdateDepositLimitModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7288,"src":"63737:24:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"63737:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5699,"nodeType":"EmitStatement","src":"63732:41:11"}]}},{"expression":{"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5702,"name":"depositLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7603,"src":"63794:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":5703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"63809:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"63794:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5705,"nodeType":"ExpressionStatement","src":"63794:16:11"},{"eventCall":{"arguments":[{"hexValue":"30","id":5707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"63844:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5706,"name":"UpdateDepositLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"63825:18:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"63825:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5709,"nodeType":"EmitStatement","src":"63820:26:11"},{"expression":{"arguments":[{"expression":{"id":5711,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"63865:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"63869:6:11","memberName":"sender","nodeType":"MemberAccess","src":"63865:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5713,"name":"DEBT_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7717,"src":"63877:12:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5710,"name":"addRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5277,"src":"63857:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32)"}},"id":5714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"63857:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5715,"nodeType":"ExpressionStatement","src":"63857:33:11"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5716,"name":"Shutdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7284,"src":"63905:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"63905:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5718,"nodeType":"EmitStatement","src":"63900:15:11"}]},"functionSelector":"e5236cc9","id":5720,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5665,"name":"EMERGENCY_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7722,"src":"63432:17:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5666,"kind":"modifierInvocation","modifierName":{"id":5664,"name":"onlyRole","nameLocations":["63423:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"63423:8:11"},"nodeType":"ModifierInvocation","src":"63423:27:11"}],"name":"shutdownVault","nameLocation":"63389:13:11","nodeType":"FunctionDefinition","overrides":{"id":5663,"nodeType":"OverrideSpecifier","overrides":[],"src":"63414:8:11"},"parameters":{"id":5662,"nodeType":"ParameterList","parameters":[],"src":"63402:2:11"},"returnParameters":{"id":5667,"nodeType":"ParameterList","parameters":[],"src":"63451:0:11"},"scope":6329,"src":"63380:542:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6440],"body":{"id":5739,"nodeType":"Block","src":"64290:62:11","statements":[{"expression":{"arguments":[{"expression":{"id":5733,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"64316:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"64320:6:11","memberName":"sender","nodeType":"MemberAccess","src":"64316:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5735,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"64328:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5736,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"64338:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5732,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"64307:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) returns (uint256)"}},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"64307:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5731,"id":5738,"nodeType":"Return","src":"64300:45:11"}]},"functionSelector":"6e553f65","id":5740,"implemented":true,"kind":"function","modifiers":[{"id":5728,"kind":"modifierInvocation","modifierName":{"id":5727,"name":"nonReentrant","nameLocations":["64259:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":418,"src":"64259:12:11"},"nodeType":"ModifierInvocation","src":"64259:12:11"}],"name":"deposit","nameLocation":"64199:7:11","nodeType":"FunctionDefinition","overrides":{"id":5726,"nodeType":"OverrideSpecifier","overrides":[],"src":"64250:8:11"},"parameters":{"id":5725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5722,"mutability":"mutable","name":"assets","nameLocation":"64215:6:11","nodeType":"VariableDeclaration","scope":5740,"src":"64207:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5721,"name":"uint256","nodeType":"ElementaryTypeName","src":"64207:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5724,"mutability":"mutable","name":"receiver","nameLocation":"64231:8:11","nodeType":"VariableDeclaration","scope":5740,"src":"64223:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5723,"name":"address","nodeType":"ElementaryTypeName","src":"64223:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"64206:34:11"},"returnParameters":{"id":5731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5740,"src":"64281:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5729,"name":"uint256","nodeType":"ElementaryTypeName","src":"64281:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64280:9:11"},"scope":6329,"src":"64190:162:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6466],"body":{"id":5759,"nodeType":"Block","src":"64656:59:11","statements":[{"expression":{"arguments":[{"expression":{"id":5753,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"64679:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"64683:6:11","memberName":"sender","nodeType":"MemberAccess","src":"64679:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5755,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5744,"src":"64691:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5756,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"64701:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5752,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"64673:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) returns (uint256)"}},"id":5757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"64673:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5751,"id":5758,"nodeType":"Return","src":"64666:42:11"}]},"functionSelector":"94bf804d","id":5760,"implemented":true,"kind":"function","modifiers":[{"id":5748,"kind":"modifierInvocation","modifierName":{"id":5747,"name":"nonReentrant","nameLocations":["64625:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":418,"src":"64625:12:11"},"nodeType":"ModifierInvocation","src":"64625:12:11"}],"name":"mint","nameLocation":"64568:4:11","nodeType":"FunctionDefinition","overrides":{"id":5746,"nodeType":"OverrideSpecifier","overrides":[],"src":"64616:8:11"},"parameters":{"id":5745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5742,"mutability":"mutable","name":"shares","nameLocation":"64581:6:11","nodeType":"VariableDeclaration","scope":5760,"src":"64573:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5741,"name":"uint256","nodeType":"ElementaryTypeName","src":"64573:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5744,"mutability":"mutable","name":"receiver","nameLocation":"64597:8:11","nodeType":"VariableDeclaration","scope":5760,"src":"64589:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5743,"name":"address","nodeType":"ElementaryTypeName","src":"64589:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"64572:34:11"},"returnParameters":{"id":5751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5760,"src":"64647:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5749,"name":"uint256","nodeType":"ElementaryTypeName","src":"64647:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64646:9:11"},"scope":6329,"src":"64559:156:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7090],"body":{"id":5800,"nodeType":"Block","src":"65444:184:11","statements":[{"assignments":[5780],"declarations":[{"constant":false,"id":5780,"mutability":"mutable","name":"shares","nameLocation":"65462:6:11","nodeType":"VariableDeclaration","scope":5800,"src":"65454:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5779,"name":"uint256","nodeType":"ElementaryTypeName","src":"65454:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5786,"initialValue":{"arguments":[{"id":5782,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"65488:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5783,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"65496:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$7772_$","typeString":"type(enum Rounding)"}},"id":5784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"65505:8:11","memberName":"ROUND_UP","nodeType":"MemberAccess","referencedDeclaration":7771,"src":"65496:17:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}],"id":5781,"name":"_convertToShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"65471:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$7772_$returns$_t_uint256_$","typeString":"function (uint256,enum Rounding) view returns (uint256)"}},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"65471:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"65454:60:11"},{"expression":{"arguments":[{"expression":{"id":5788,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"65532:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"65536:6:11","memberName":"sender","nodeType":"MemberAccess","src":"65532:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5790,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"65544:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5791,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"65554:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5792,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"65561:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5793,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"65569:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5794,"name":"maxLoss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5768,"src":"65577:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5795,"name":"_strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"65586:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":5787,"name":"_redeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"65524:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,address,address,uint256,uint256,uint256,address[] memory) returns (uint256)"}},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"65524:74:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5797,"nodeType":"ExpressionStatement","src":"65524:74:11"},{"expression":{"id":5798,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"65615:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5778,"id":5799,"nodeType":"Return","src":"65608:13:11"}]},"functionSelector":"d81a09f6","id":5801,"implemented":true,"kind":"function","modifiers":[{"id":5775,"kind":"modifierInvocation","modifierName":{"id":5774,"name":"nonReentrant","nameLocations":["65413:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":418,"src":"65413:12:11"},"nodeType":"ModifierInvocation","src":"65413:12:11"}],"name":"withdraw","nameLocation":"65244:8:11","nodeType":"FunctionDefinition","overrides":{"id":5773,"nodeType":"OverrideSpecifier","overrides":[],"src":"65404:8:11"},"parameters":{"id":5772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5762,"mutability":"mutable","name":"assets","nameLocation":"65270:6:11","nodeType":"VariableDeclaration","scope":5801,"src":"65262:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5761,"name":"uint256","nodeType":"ElementaryTypeName","src":"65262:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5764,"mutability":"mutable","name":"receiver","nameLocation":"65294:8:11","nodeType":"VariableDeclaration","scope":5801,"src":"65286:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5763,"name":"address","nodeType":"ElementaryTypeName","src":"65286:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5766,"mutability":"mutable","name":"owner","nameLocation":"65320:5:11","nodeType":"VariableDeclaration","scope":5801,"src":"65312:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5765,"name":"address","nodeType":"ElementaryTypeName","src":"65312:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5768,"mutability":"mutable","name":"maxLoss","nameLocation":"65343:7:11","nodeType":"VariableDeclaration","scope":5801,"src":"65335:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5767,"name":"uint256","nodeType":"ElementaryTypeName","src":"65335:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5771,"mutability":"mutable","name":"_strategies","nameLocation":"65377:11:11","nodeType":"VariableDeclaration","scope":5801,"src":"65360:28:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5769,"name":"address","nodeType":"ElementaryTypeName","src":"65360:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5770,"nodeType":"ArrayTypeName","src":"65360:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"65252:142:11"},"returnParameters":{"id":5778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5801,"src":"65435:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5776,"name":"uint256","nodeType":"ElementaryTypeName","src":"65435:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"65434:9:11"},"scope":6329,"src":"65235:393:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7106],"body":{"id":5839,"nodeType":"Block","src":"66374:234:11","statements":[{"assignments":[5821],"declarations":[{"constant":false,"id":5821,"mutability":"mutable","name":"assets","nameLocation":"66392:6:11","nodeType":"VariableDeclaration","scope":5839,"src":"66384:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5820,"name":"uint256","nodeType":"ElementaryTypeName","src":"66384:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5827,"initialValue":{"arguments":[{"id":5823,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5803,"src":"66418:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5824,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"66426:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$7772_$","typeString":"type(enum Rounding)"}},"id":5825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"66435:10:11","memberName":"ROUND_DOWN","nodeType":"MemberAccess","referencedDeclaration":7770,"src":"66426:19:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}],"id":5822,"name":"_convertToAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"66401:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$7772_$returns$_t_uint256_$","typeString":"function (uint256,enum Rounding) view returns (uint256)"}},"id":5826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"66401:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"66384:62:11"},{"expression":{"arguments":[{"expression":{"id":5829,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"66535:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"66539:6:11","memberName":"sender","nodeType":"MemberAccess","src":"66535:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5831,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5805,"src":"66547:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5832,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5807,"src":"66557:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5833,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5821,"src":"66564:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5834,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5803,"src":"66572:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5835,"name":"maxLoss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5809,"src":"66580:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5836,"name":"_strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5812,"src":"66589:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":5828,"name":"_redeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"66527:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,address,address,uint256,uint256,uint256,address[] memory) returns (uint256)"}},"id":5837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"66527:74:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5819,"id":5838,"nodeType":"Return","src":"66520:81:11"}]},"functionSelector":"06580f2d","id":5840,"implemented":true,"kind":"function","modifiers":[{"id":5816,"kind":"modifierInvocation","modifierName":{"id":5815,"name":"nonReentrant","nameLocations":["66343:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":418,"src":"66343:12:11"},"nodeType":"ModifierInvocation","src":"66343:12:11"}],"name":"redeem","nameLocation":"66176:6:11","nodeType":"FunctionDefinition","overrides":{"id":5814,"nodeType":"OverrideSpecifier","overrides":[],"src":"66334:8:11"},"parameters":{"id":5813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5803,"mutability":"mutable","name":"shares","nameLocation":"66200:6:11","nodeType":"VariableDeclaration","scope":5840,"src":"66192:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5802,"name":"uint256","nodeType":"ElementaryTypeName","src":"66192:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5805,"mutability":"mutable","name":"receiver","nameLocation":"66224:8:11","nodeType":"VariableDeclaration","scope":5840,"src":"66216:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5804,"name":"address","nodeType":"ElementaryTypeName","src":"66216:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5807,"mutability":"mutable","name":"owner","nameLocation":"66250:5:11","nodeType":"VariableDeclaration","scope":5840,"src":"66242:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5806,"name":"address","nodeType":"ElementaryTypeName","src":"66242:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5809,"mutability":"mutable","name":"maxLoss","nameLocation":"66273:7:11","nodeType":"VariableDeclaration","scope":5840,"src":"66265:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5808,"name":"uint256","nodeType":"ElementaryTypeName","src":"66265:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5812,"mutability":"mutable","name":"_strategies","nameLocation":"66307:11:11","nodeType":"VariableDeclaration","scope":5840,"src":"66290:28:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5810,"name":"address","nodeType":"ElementaryTypeName","src":"66290:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5811,"nodeType":"ArrayTypeName","src":"66290:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"66182:142:11"},"returnParameters":{"id":5819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5840,"src":"66365:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5817,"name":"uint256","nodeType":"ElementaryTypeName","src":"66365:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"66364:9:11"},"scope":6329,"src":"66167:441:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[518],"body":{"id":5857,"nodeType":"Block","src":"66912:61:11","statements":[{"expression":{"arguments":[{"expression":{"id":5851,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"66938:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"66942:6:11","memberName":"sender","nodeType":"MemberAccess","src":"66938:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5853,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5842,"src":"66950:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5854,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"66959:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5850,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"66929:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"66929:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5849,"id":5856,"nodeType":"Return","src":"66922:44:11"}]},"functionSelector":"095ea7b3","id":5858,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"66838:7:11","nodeType":"FunctionDefinition","overrides":{"id":5846,"nodeType":"OverrideSpecifier","overrides":[],"src":"66888:8:11"},"parameters":{"id":5845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5842,"mutability":"mutable","name":"spender","nameLocation":"66854:7:11","nodeType":"VariableDeclaration","scope":5858,"src":"66846:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5841,"name":"address","nodeType":"ElementaryTypeName","src":"66846:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5844,"mutability":"mutable","name":"amount","nameLocation":"66871:6:11","nodeType":"VariableDeclaration","scope":5858,"src":"66863:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5843,"name":"uint256","nodeType":"ElementaryTypeName","src":"66863:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"66845:33:11"},"returnParameters":{"id":5849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5858,"src":"66906:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5847,"name":"bool","nodeType":"ElementaryTypeName","src":"66906:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"66905:6:11"},"scope":6329,"src":"66829:144:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[498],"body":{"id":5895,"nodeType":"Block","src":"67275:188:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5868,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"67289:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":5871,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"67309:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":5870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"67301:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5869,"name":"address","nodeType":"ElementaryTypeName","src":"67301:7:11","typeDescriptions":{}}},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"67301:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"67289:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5874,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"67318:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"67338:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"67330:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5875,"name":"address","nodeType":"ElementaryTypeName","src":"67330:7:11","typeDescriptions":{}}},"id":5878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"67330:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"67318:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"67289:51:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5885,"nodeType":"IfStatement","src":"67285:102:11","trueBody":{"id":5884,"nodeType":"Block","src":"67342:45:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5881,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"67363:11:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"67363:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5883,"nodeType":"RevertStatement","src":"67356:20:11"}]}},{"expression":{"arguments":[{"expression":{"id":5887,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"67406:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"67410:6:11","memberName":"sender","nodeType":"MemberAccess","src":"67406:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5889,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"67418:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5890,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5862,"src":"67428:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5886,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"67396:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"67396:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5892,"nodeType":"ExpressionStatement","src":"67396:39:11"},{"expression":{"hexValue":"74727565","id":5893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"67452:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5867,"id":5894,"nodeType":"Return","src":"67445:11:11"}]},"functionSelector":"a9059cbb","id":5896,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"67199:8:11","nodeType":"FunctionDefinition","overrides":{"id":5864,"nodeType":"OverrideSpecifier","overrides":[],"src":"67251:8:11"},"parameters":{"id":5863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5860,"mutability":"mutable","name":"receiver","nameLocation":"67216:8:11","nodeType":"VariableDeclaration","scope":5896,"src":"67208:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5859,"name":"address","nodeType":"ElementaryTypeName","src":"67208:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5862,"mutability":"mutable","name":"amount","nameLocation":"67234:6:11","nodeType":"VariableDeclaration","scope":5896,"src":"67226:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5861,"name":"uint256","nodeType":"ElementaryTypeName","src":"67226:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"67207:34:11"},"returnParameters":{"id":5867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5896,"src":"67269:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5865,"name":"bool","nodeType":"ElementaryTypeName","src":"67269:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"67268:6:11"},"scope":6329,"src":"67190:273:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[530],"body":{"id":5932,"nodeType":"Block","src":"67857:174:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5908,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"67871:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":5911,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"67891:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":5910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"67883:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5909,"name":"address","nodeType":"ElementaryTypeName","src":"67883:7:11","typeDescriptions":{}}},"id":5912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"67883:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"67871:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5914,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"67900:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"67920:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"67912:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5915,"name":"address","nodeType":"ElementaryTypeName","src":"67912:7:11","typeDescriptions":{}}},"id":5918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"67912:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"67900:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"67871:51:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5925,"nodeType":"IfStatement","src":"67867:102:11","trueBody":{"id":5924,"nodeType":"Block","src":"67924:45:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5921,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"67945:11:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"67945:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5923,"nodeType":"RevertStatement","src":"67938:20:11"}]}},{"expression":{"arguments":[{"id":5927,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"67999:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5928,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"68007:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5929,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"68017:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5926,"name":"_transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"67985:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"67985:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5907,"id":5931,"nodeType":"Return","src":"67978:46:11"}]},"functionSelector":"23b872dd","id":5933,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"67761:12:11","nodeType":"FunctionDefinition","overrides":{"id":5904,"nodeType":"OverrideSpecifier","overrides":[],"src":"67833:8:11"},"parameters":{"id":5903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5898,"mutability":"mutable","name":"sender","nameLocation":"67782:6:11","nodeType":"VariableDeclaration","scope":5933,"src":"67774:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5897,"name":"address","nodeType":"ElementaryTypeName","src":"67774:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5900,"mutability":"mutable","name":"receiver","nameLocation":"67798:8:11","nodeType":"VariableDeclaration","scope":5933,"src":"67790:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5899,"name":"address","nodeType":"ElementaryTypeName","src":"67790:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5902,"mutability":"mutable","name":"amount","nameLocation":"67816:6:11","nodeType":"VariableDeclaration","scope":5933,"src":"67808:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5901,"name":"uint256","nodeType":"ElementaryTypeName","src":"67808:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"67773:50:11"},"returnParameters":{"id":5907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5933,"src":"67851:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5905,"name":"bool","nodeType":"ElementaryTypeName","src":"67851:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"67850:6:11"},"scope":6329,"src":"67752:279:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7115],"body":{"id":5950,"nodeType":"Block","src":"68398:71:11","statements":[{"expression":{"arguments":[{"expression":{"id":5944,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"68434:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"68438:6:11","memberName":"sender","nodeType":"MemberAccess","src":"68434:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5946,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"68446:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5947,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5937,"src":"68455:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5943,"name":"_increaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"68415:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":5948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"68415:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5942,"id":5949,"nodeType":"Return","src":"68408:54:11"}]},"functionSelector":"39509351","id":5951,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"68314:17:11","nodeType":"FunctionDefinition","overrides":{"id":5939,"nodeType":"OverrideSpecifier","overrides":[],"src":"68374:8:11"},"parameters":{"id":5938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5935,"mutability":"mutable","name":"spender","nameLocation":"68340:7:11","nodeType":"VariableDeclaration","scope":5951,"src":"68332:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5934,"name":"address","nodeType":"ElementaryTypeName","src":"68332:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5937,"mutability":"mutable","name":"amount","nameLocation":"68357:6:11","nodeType":"VariableDeclaration","scope":5951,"src":"68349:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5936,"name":"uint256","nodeType":"ElementaryTypeName","src":"68349:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"68331:33:11"},"returnParameters":{"id":5942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5951,"src":"68392:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5940,"name":"bool","nodeType":"ElementaryTypeName","src":"68392:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"68391:6:11"},"scope":6329,"src":"68305:164:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7124],"body":{"id":5968,"nodeType":"Block","src":"68800:71:11","statements":[{"expression":{"arguments":[{"expression":{"id":5962,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"68836:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"68840:6:11","memberName":"sender","nodeType":"MemberAccess","src":"68836:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5964,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"68848:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5965,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5955,"src":"68857:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5961,"name":"_decreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"68817:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"68817:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5960,"id":5967,"nodeType":"Return","src":"68810:54:11"}]},"functionSelector":"a457c2d7","id":5969,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"68716:17:11","nodeType":"FunctionDefinition","overrides":{"id":5957,"nodeType":"OverrideSpecifier","overrides":[],"src":"68776:8:11"},"parameters":{"id":5956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5953,"mutability":"mutable","name":"spender","nameLocation":"68742:7:11","nodeType":"VariableDeclaration","scope":5969,"src":"68734:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5952,"name":"address","nodeType":"ElementaryTypeName","src":"68734:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5955,"mutability":"mutable","name":"amount","nameLocation":"68759:6:11","nodeType":"VariableDeclaration","scope":5969,"src":"68751:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5954,"name":"uint256","nodeType":"ElementaryTypeName","src":"68751:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"68733:33:11"},"returnParameters":{"id":5960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5969,"src":"68794:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5958,"name":"bool","nodeType":"ElementaryTypeName","src":"68794:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"68793:6:11"},"scope":6329,"src":"68707:164:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7143],"body":{"id":5999,"nodeType":"Block","src":"69546:74:11","statements":[{"expression":{"arguments":[{"id":5990,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"69571:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5991,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5973,"src":"69578:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5992,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5975,"src":"69587:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5993,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"69595:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5994,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5979,"src":"69605:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5995,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5981,"src":"69608:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5996,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5983,"src":"69611:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5989,"name":"_permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"69563:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) returns (bool)"}},"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"69563:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5988,"id":5998,"nodeType":"Return","src":"69556:57:11"}]},"functionSelector":"d505accf","id":6000,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"69347:6:11","nodeType":"FunctionDefinition","overrides":{"id":5985,"nodeType":"OverrideSpecifier","overrides":[],"src":"69522:8:11"},"parameters":{"id":5984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5971,"mutability":"mutable","name":"owner","nameLocation":"69371:5:11","nodeType":"VariableDeclaration","scope":6000,"src":"69363:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5970,"name":"address","nodeType":"ElementaryTypeName","src":"69363:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5973,"mutability":"mutable","name":"spender","nameLocation":"69394:7:11","nodeType":"VariableDeclaration","scope":6000,"src":"69386:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5972,"name":"address","nodeType":"ElementaryTypeName","src":"69386:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5975,"mutability":"mutable","name":"amount","nameLocation":"69419:6:11","nodeType":"VariableDeclaration","scope":6000,"src":"69411:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5974,"name":"uint256","nodeType":"ElementaryTypeName","src":"69411:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5977,"mutability":"mutable","name":"deadline","nameLocation":"69443:8:11","nodeType":"VariableDeclaration","scope":6000,"src":"69435:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5976,"name":"uint256","nodeType":"ElementaryTypeName","src":"69435:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5979,"mutability":"mutable","name":"v","nameLocation":"69467:1:11","nodeType":"VariableDeclaration","scope":6000,"src":"69461:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5978,"name":"uint8","nodeType":"ElementaryTypeName","src":"69461:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5981,"mutability":"mutable","name":"r","nameLocation":"69486:1:11","nodeType":"VariableDeclaration","scope":6000,"src":"69478:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5980,"name":"bytes32","nodeType":"ElementaryTypeName","src":"69478:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5983,"mutability":"mutable","name":"s","nameLocation":"69505:1:11","nodeType":"VariableDeclaration","scope":6000,"src":"69497:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5982,"name":"bytes32","nodeType":"ElementaryTypeName","src":"69497:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"69353:159:11"},"returnParameters":{"id":5988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6000,"src":"69540:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5986,"name":"bool","nodeType":"ElementaryTypeName","src":"69540:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"69539:6:11"},"scope":6329,"src":"69338:282:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[488],"body":{"id":6027,"nodeType":"Block","src":"69836:143:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6008,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6002,"src":"69849:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":6011,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"69865:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":6010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"69857:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6009,"name":"address","nodeType":"ElementaryTypeName","src":"69857:7:11","typeDescriptions":{}}},"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"69857:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"69849:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6022,"nodeType":"IfStatement","src":"69846:94:11","trueBody":{"id":6021,"nodeType":"Block","src":"69872:68:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6014,"name":"_balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"69893:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6016,"indexExpression":{"id":6015,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6002,"src":"69904:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"69893:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6017,"name":"_unlockedShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"69912:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"69912:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"69893:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6007,"id":6020,"nodeType":"Return","src":"69886:43:11"}]}},{"expression":{"baseExpression":{"id":6023,"name":"_balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"69956:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6025,"indexExpression":{"id":6024,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6002,"src":"69967:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"69956:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6007,"id":6026,"nodeType":"Return","src":"69949:23:11"}]},"functionSelector":"70a08231","id":6028,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"69771:9:11","nodeType":"FunctionDefinition","overrides":{"id":6004,"nodeType":"OverrideSpecifier","overrides":[],"src":"69809:8:11"},"parameters":{"id":6003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6002,"mutability":"mutable","name":"addr","nameLocation":"69789:4:11","nodeType":"VariableDeclaration","scope":6028,"src":"69781:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6001,"name":"address","nodeType":"ElementaryTypeName","src":"69781:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"69780:14:11"},"returnParameters":{"id":6007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6028,"src":"69827:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6005,"name":"uint256","nodeType":"ElementaryTypeName","src":"69827:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"69826:9:11"},"scope":6329,"src":"69762:217:11","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[480,7182],"body":{"id":6039,"nodeType":"Block","src":"70155:38:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6036,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"70172:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"70172:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6035,"id":6038,"nodeType":"Return","src":"70165:21:11"}]},"functionSelector":"18160ddd","id":6040,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"70084:11:11","nodeType":"FunctionDefinition","overrides":{"id":6032,"nodeType":"OverrideSpecifier","overrides":[{"id":6030,"name":"IERC20","nameLocations":["70121:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":531,"src":"70121:6:11"},{"id":6031,"name":"IVault","nameLocations":["70129:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":7192,"src":"70129:6:11"}],"src":"70112:24:11"},"parameters":{"id":6029,"nodeType":"ParameterList","parameters":[],"src":"70095:2:11"},"returnParameters":{"id":6035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6040,"src":"70146:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6033,"name":"uint256","nodeType":"ElementaryTypeName","src":"70146:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"70145:9:11"},"scope":6329,"src":"70075:118:11","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[6392],"body":{"id":6051,"nodeType":"Block","src":"70343:38:11","statements":[{"expression":{"arguments":[{"id":6048,"name":"ASSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"70368:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}],"id":6047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"70360:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6046,"name":"address","nodeType":"ElementaryTypeName","src":"70360:7:11","typeDescriptions":{}}},"id":6049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"70360:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6045,"id":6050,"nodeType":"Return","src":"70353:21:11"}]},"functionSelector":"38d52e0f","id":6052,"implemented":true,"kind":"function","modifiers":[],"name":"asset","nameLocation":"70294:5:11","nodeType":"FunctionDefinition","overrides":{"id":6042,"nodeType":"OverrideSpecifier","overrides":[],"src":"70316:8:11"},"parameters":{"id":6041,"nodeType":"ParameterList","parameters":[],"src":"70299:2:11"},"returnParameters":{"id":6045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6052,"src":"70334:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6043,"name":"address","nodeType":"ElementaryTypeName","src":"70334:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"70333:9:11"},"scope":6329,"src":"70285:96:11","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[555],"body":{"id":6063,"nodeType":"Block","src":"70566:39:11","statements":[{"expression":{"arguments":[{"id":6060,"name":"DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"70589:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"70583:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6058,"name":"uint8","nodeType":"ElementaryTypeName","src":"70583:5:11","typeDescriptions":{}}},"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"70583:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6057,"id":6062,"nodeType":"Return","src":"70576:22:11"}]},"functionSelector":"313ce567","id":6064,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"70516:8:11","nodeType":"FunctionDefinition","overrides":{"id":6054,"nodeType":"OverrideSpecifier","overrides":[],"src":"70541:8:11"},"parameters":{"id":6053,"nodeType":"ParameterList","parameters":[],"src":"70524:2:11"},"returnParameters":{"id":6057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6064,"src":"70559:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6055,"name":"uint8","nodeType":"ElementaryTypeName","src":"70559:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"70558:7:11"},"scope":6329,"src":"70507:98:11","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[6398],"body":{"id":6073,"nodeType":"Block","src":"70781:38:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6070,"name":"_totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"70798:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"70798:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6069,"id":6072,"nodeType":"Return","src":"70791:21:11"}]},"functionSelector":"01e1d114","id":6074,"implemented":true,"kind":"function","modifiers":[],"name":"totalAssets","nameLocation":"70726:11:11","nodeType":"FunctionDefinition","overrides":{"id":6066,"nodeType":"OverrideSpecifier","overrides":[],"src":"70754:8:11"},"parameters":{"id":6065,"nodeType":"ParameterList","parameters":[],"src":"70737:2:11"},"returnParameters":{"id":6069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6074,"src":"70772:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6067,"name":"uint256","nodeType":"ElementaryTypeName","src":"70772:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"70771:9:11"},"scope":6329,"src":"70717:102:11","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[6406],"body":{"id":6088,"nodeType":"Block","src":"71052:69:11","statements":[{"expression":{"arguments":[{"id":6083,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"71086:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6084,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"71094:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$7772_$","typeString":"type(enum Rounding)"}},"id":6085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"71103:10:11","memberName":"ROUND_DOWN","nodeType":"MemberAccess","referencedDeclaration":7770,"src":"71094:19:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}],"id":6082,"name":"_convertToShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"71069:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$7772_$returns$_t_uint256_$","typeString":"function (uint256,enum Rounding) view returns (uint256)"}},"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"71069:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6081,"id":6087,"nodeType":"Return","src":"71062:52:11"}]},"functionSelector":"c6e6f592","id":6089,"implemented":true,"kind":"function","modifiers":[],"name":"convertToShares","nameLocation":"70979:15:11","nodeType":"FunctionDefinition","overrides":{"id":6078,"nodeType":"OverrideSpecifier","overrides":[],"src":"71025:8:11"},"parameters":{"id":6077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6076,"mutability":"mutable","name":"assets","nameLocation":"71003:6:11","nodeType":"VariableDeclaration","scope":6089,"src":"70995:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6075,"name":"uint256","nodeType":"ElementaryTypeName","src":"70995:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"70994:16:11"},"returnParameters":{"id":6081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6089,"src":"71043:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6079,"name":"uint256","nodeType":"ElementaryTypeName","src":"71043:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71042:9:11"},"scope":6329,"src":"70970:151:11","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[6430],"body":{"id":6103,"nodeType":"Block","src":"71400:69:11","statements":[{"expression":{"arguments":[{"id":6098,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6091,"src":"71434:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6099,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"71442:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$7772_$","typeString":"type(enum Rounding)"}},"id":6100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"71451:10:11","memberName":"ROUND_DOWN","nodeType":"MemberAccess","referencedDeclaration":7770,"src":"71442:19:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}],"id":6097,"name":"_convertToShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"71417:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$7772_$returns$_t_uint256_$","typeString":"function (uint256,enum Rounding) view returns (uint256)"}},"id":6101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"71417:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6096,"id":6102,"nodeType":"Return","src":"71410:52:11"}]},"functionSelector":"ef8b30f7","id":6104,"implemented":true,"kind":"function","modifiers":[],"name":"previewDeposit","nameLocation":"71328:14:11","nodeType":"FunctionDefinition","overrides":{"id":6093,"nodeType":"OverrideSpecifier","overrides":[],"src":"71373:8:11"},"parameters":{"id":6092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6091,"mutability":"mutable","name":"assets","nameLocation":"71351:6:11","nodeType":"VariableDeclaration","scope":6104,"src":"71343:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6090,"name":"uint256","nodeType":"ElementaryTypeName","src":"71343:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71342:16:11"},"returnParameters":{"id":6096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6104,"src":"71391:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6094,"name":"uint256","nodeType":"ElementaryTypeName","src":"71391:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71390:9:11"},"scope":6329,"src":"71319:150:11","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[6456],"body":{"id":6118,"nodeType":"Block","src":"71745:67:11","statements":[{"expression":{"arguments":[{"id":6113,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6106,"src":"71779:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6114,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"71787:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$7772_$","typeString":"type(enum Rounding)"}},"id":6115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"71796:8:11","memberName":"ROUND_UP","nodeType":"MemberAccess","referencedDeclaration":7771,"src":"71787:17:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}],"id":6112,"name":"_convertToAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"71762:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$7772_$returns$_t_uint256_$","typeString":"function (uint256,enum Rounding) view returns (uint256)"}},"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"71762:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6111,"id":6117,"nodeType":"Return","src":"71755:50:11"}]},"functionSelector":"b3d7f6b9","id":6119,"implemented":true,"kind":"function","modifiers":[],"name":"previewMint","nameLocation":"71676:11:11","nodeType":"FunctionDefinition","overrides":{"id":6108,"nodeType":"OverrideSpecifier","overrides":[],"src":"71718:8:11"},"parameters":{"id":6107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6106,"mutability":"mutable","name":"shares","nameLocation":"71696:6:11","nodeType":"VariableDeclaration","scope":6119,"src":"71688:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6105,"name":"uint256","nodeType":"ElementaryTypeName","src":"71688:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71687:16:11"},"returnParameters":{"id":6111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6119,"src":"71736:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6109,"name":"uint256","nodeType":"ElementaryTypeName","src":"71736:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71735:9:11"},"scope":6329,"src":"71667:145:11","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[6414],"body":{"id":6133,"nodeType":"Block","src":"72045:69:11","statements":[{"expression":{"arguments":[{"id":6128,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"72079:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6129,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"72087:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$7772_$","typeString":"type(enum Rounding)"}},"id":6130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"72096:10:11","memberName":"ROUND_DOWN","nodeType":"MemberAccess","referencedDeclaration":7770,"src":"72087:19:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}],"id":6127,"name":"_convertToAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"72062:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$7772_$returns$_t_uint256_$","typeString":"function (uint256,enum Rounding) view returns (uint256)"}},"id":6131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"72062:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6126,"id":6132,"nodeType":"Return","src":"72055:52:11"}]},"functionSelector":"07a2d13a","id":6134,"implemented":true,"kind":"function","modifiers":[],"name":"convertToAssets","nameLocation":"71972:15:11","nodeType":"FunctionDefinition","overrides":{"id":6123,"nodeType":"OverrideSpecifier","overrides":[],"src":"72018:8:11"},"parameters":{"id":6122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6121,"mutability":"mutable","name":"shares","nameLocation":"71996:6:11","nodeType":"VariableDeclaration","scope":6134,"src":"71988:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6120,"name":"uint256","nodeType":"ElementaryTypeName","src":"71988:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71987:16:11"},"returnParameters":{"id":6126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6134,"src":"72036:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6124,"name":"uint256","nodeType":"ElementaryTypeName","src":"72036:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"72035:9:11"},"scope":6329,"src":"71963:151:11","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[6422],"body":{"id":6146,"nodeType":"Block","src":"72402:45:11","statements":[{"expression":{"arguments":[{"id":6143,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"72431:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6142,"name":"_maxDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"72419:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":6144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"72419:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6141,"id":6145,"nodeType":"Return","src":"72412:28:11"}]},"functionSelector":"402d267d","id":6147,"implemented":true,"kind":"function","modifiers":[],"name":"maxDeposit","nameLocation":"72332:10:11","nodeType":"FunctionDefinition","overrides":{"id":6138,"nodeType":"OverrideSpecifier","overrides":[],"src":"72375:8:11"},"parameters":{"id":6137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6136,"mutability":"mutable","name":"receiver","nameLocation":"72351:8:11","nodeType":"VariableDeclaration","scope":6147,"src":"72343:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6135,"name":"address","nodeType":"ElementaryTypeName","src":"72343:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"72342:18:11"},"returnParameters":{"id":6141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6147,"src":"72393:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6139,"name":"uint256","nodeType":"ElementaryTypeName","src":"72393:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"72392:9:11"},"scope":6329,"src":"72323:124:11","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[6448],"body":{"id":6167,"nodeType":"Block","src":"72726:137:11","statements":[{"assignments":[6156],"declarations":[{"constant":false,"id":6156,"mutability":"mutable","name":"maxDepositAmount","nameLocation":"72744:16:11","nodeType":"VariableDeclaration","scope":6167,"src":"72736:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6155,"name":"uint256","nodeType":"ElementaryTypeName","src":"72736:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6160,"initialValue":{"arguments":[{"id":6158,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"72775:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6157,"name":"_maxDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"72763:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"72763:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"72736:48:11"},{"expression":{"arguments":[{"id":6162,"name":"maxDepositAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"72818:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6163,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"72836:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$7772_$","typeString":"type(enum Rounding)"}},"id":6164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"72845:10:11","memberName":"ROUND_DOWN","nodeType":"MemberAccess","referencedDeclaration":7770,"src":"72836:19:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}],"id":6161,"name":"_convertToShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"72801:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$7772_$returns$_t_uint256_$","typeString":"function (uint256,enum Rounding) view returns (uint256)"}},"id":6165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"72801:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6154,"id":6166,"nodeType":"Return","src":"72794:62:11"}]},"functionSelector":"c63d75b6","id":6168,"implemented":true,"kind":"function","modifiers":[],"name":"maxMint","nameLocation":"72659:7:11","nodeType":"FunctionDefinition","overrides":{"id":6151,"nodeType":"OverrideSpecifier","overrides":[],"src":"72699:8:11"},"parameters":{"id":6150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6149,"mutability":"mutable","name":"receiver","nameLocation":"72675:8:11","nodeType":"VariableDeclaration","scope":6168,"src":"72667:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6148,"name":"address","nodeType":"ElementaryTypeName","src":"72667:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"72666:18:11"},"returnParameters":{"id":6154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6168,"src":"72717:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6152,"name":"uint256","nodeType":"ElementaryTypeName","src":"72717:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"72716:9:11"},"scope":6329,"src":"72650:213:11","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[7155],"body":{"id":6187,"nodeType":"Block","src":"73355:65:11","statements":[{"expression":{"arguments":[{"id":6182,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"73385:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6183,"name":"maxLoss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6172,"src":"73392:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6184,"name":"_strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"73401:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":6181,"name":"_maxWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"73372:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256,address[] memory) returns (uint256)"}},"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"73372:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6180,"id":6186,"nodeType":"Return","src":"73365:48:11"}]},"functionSelector":"65cb6765","id":6188,"implemented":true,"kind":"function","modifiers":[],"name":"maxWithdraw","nameLocation":"73245:11:11","nodeType":"FunctionDefinition","overrides":{"id":6177,"nodeType":"OverrideSpecifier","overrides":[],"src":"73328:8:11"},"parameters":{"id":6176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6170,"mutability":"mutable","name":"owner","nameLocation":"73265:5:11","nodeType":"VariableDeclaration","scope":6188,"src":"73257:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6169,"name":"address","nodeType":"ElementaryTypeName","src":"73257:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6172,"mutability":"mutable","name":"maxLoss","nameLocation":"73280:7:11","nodeType":"VariableDeclaration","scope":6188,"src":"73272:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6171,"name":"uint256","nodeType":"ElementaryTypeName","src":"73272:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6175,"mutability":"mutable","name":"_strategies","nameLocation":"73306:11:11","nodeType":"VariableDeclaration","scope":6188,"src":"73289:28:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6173,"name":"address","nodeType":"ElementaryTypeName","src":"73289:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6174,"nodeType":"ArrayTypeName","src":"73289:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"73256:62:11"},"returnParameters":{"id":6180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6188,"src":"73346:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6178,"name":"uint256","nodeType":"ElementaryTypeName","src":"73346:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73345:9:11"},"scope":6329,"src":"73236:184:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7167],"body":{"id":6225,"nodeType":"Block","src":"73908:239:11","statements":[{"assignments":[6202],"declarations":[{"constant":false,"id":6202,"mutability":"mutable","name":"maxWithdrawAmount","nameLocation":"73926:17:11","nodeType":"VariableDeclaration","scope":6225,"src":"73918:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6201,"name":"uint256","nodeType":"ElementaryTypeName","src":"73918:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6208,"initialValue":{"arguments":[{"id":6204,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6190,"src":"73959:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6205,"name":"maxLoss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"73966:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6206,"name":"_strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"73975:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":6203,"name":"_maxWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"73946:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256,address[] memory) returns (uint256)"}},"id":6207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"73946:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"73918:69:11"},{"assignments":[6210],"declarations":[{"constant":false,"id":6210,"mutability":"mutable","name":"sharesEquivalent","nameLocation":"74005:16:11","nodeType":"VariableDeclaration","scope":6225,"src":"73997:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6209,"name":"uint256","nodeType":"ElementaryTypeName","src":"73997:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6216,"initialValue":{"arguments":[{"id":6212,"name":"maxWithdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"74041:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6213,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"74060:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$7772_$","typeString":"type(enum Rounding)"}},"id":6214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"74069:8:11","memberName":"ROUND_UP","nodeType":"MemberAccess","referencedDeclaration":7771,"src":"74060:17:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}],"id":6211,"name":"_convertToShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"74024:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$7772_$returns$_t_uint256_$","typeString":"function (uint256,enum Rounding) view returns (uint256)"}},"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"74024:54:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"73997:81:11"},{"expression":{"arguments":[{"id":6219,"name":"sharesEquivalent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6210,"src":"74104:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":6220,"name":"_balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"74122:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6222,"indexExpression":{"id":6221,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6190,"src":"74133:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"74122:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6217,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"74095:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1709_$","typeString":"type(library Math)"}},"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"74100:3:11","memberName":"min","nodeType":"MemberAccess","referencedDeclaration":886,"src":"74095:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"74095:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6200,"id":6224,"nodeType":"Return","src":"74088:52:11"}]},"functionSelector":"34b5fab6","id":6226,"implemented":true,"kind":"function","modifiers":[],"name":"maxRedeem","nameLocation":"73800:9:11","nodeType":"FunctionDefinition","overrides":{"id":6197,"nodeType":"OverrideSpecifier","overrides":[],"src":"73881:8:11"},"parameters":{"id":6196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6190,"mutability":"mutable","name":"owner","nameLocation":"73818:5:11","nodeType":"VariableDeclaration","scope":6226,"src":"73810:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6189,"name":"address","nodeType":"ElementaryTypeName","src":"73810:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6192,"mutability":"mutable","name":"maxLoss","nameLocation":"73833:7:11","nodeType":"VariableDeclaration","scope":6226,"src":"73825:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6191,"name":"uint256","nodeType":"ElementaryTypeName","src":"73825:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6195,"mutability":"mutable","name":"_strategies","nameLocation":"73859:11:11","nodeType":"VariableDeclaration","scope":6226,"src":"73842:28:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6193,"name":"address","nodeType":"ElementaryTypeName","src":"73842:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6194,"nodeType":"ArrayTypeName","src":"73842:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"73809:62:11"},"returnParameters":{"id":6200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6226,"src":"73899:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6198,"name":"uint256","nodeType":"ElementaryTypeName","src":"73899:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73898:9:11"},"scope":6329,"src":"73791:356:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6487],"body":{"id":6240,"nodeType":"Block","src":"74433:67:11","statements":[{"expression":{"arguments":[{"id":6235,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6228,"src":"74467:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6236,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"74475:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$7772_$","typeString":"type(enum Rounding)"}},"id":6237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"74484:8:11","memberName":"ROUND_UP","nodeType":"MemberAccess","referencedDeclaration":7771,"src":"74475:17:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}],"id":6234,"name":"_convertToShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"74450:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$7772_$returns$_t_uint256_$","typeString":"function (uint256,enum Rounding) view returns (uint256)"}},"id":6238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"74450:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6233,"id":6239,"nodeType":"Return","src":"74443:50:11"}]},"functionSelector":"0a28a477","id":6241,"implemented":true,"kind":"function","modifiers":[],"name":"previewWithdraw","nameLocation":"74360:15:11","nodeType":"FunctionDefinition","overrides":{"id":6230,"nodeType":"OverrideSpecifier","overrides":[],"src":"74406:8:11"},"parameters":{"id":6229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6228,"mutability":"mutable","name":"assets","nameLocation":"74384:6:11","nodeType":"VariableDeclaration","scope":6241,"src":"74376:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6227,"name":"uint256","nodeType":"ElementaryTypeName","src":"74376:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74375:16:11"},"returnParameters":{"id":6233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6241,"src":"74424:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6231,"name":"uint256","nodeType":"ElementaryTypeName","src":"74424:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74423:9:11"},"scope":6329,"src":"74351:149:11","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[6525],"body":{"id":6255,"nodeType":"Block","src":"74782:69:11","statements":[{"expression":{"arguments":[{"id":6250,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"74816:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6251,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"74824:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$7772_$","typeString":"type(enum Rounding)"}},"id":6252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"74833:10:11","memberName":"ROUND_DOWN","nodeType":"MemberAccess","referencedDeclaration":7770,"src":"74824:19:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}],"id":6249,"name":"_convertToAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"74799:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$7772_$returns$_t_uint256_$","typeString":"function (uint256,enum Rounding) view returns (uint256)"}},"id":6253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"74799:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6248,"id":6254,"nodeType":"Return","src":"74792:52:11"}]},"functionSelector":"4cdad506","id":6256,"implemented":true,"kind":"function","modifiers":[],"name":"previewRedeem","nameLocation":"74711:13:11","nodeType":"FunctionDefinition","overrides":{"id":6245,"nodeType":"OverrideSpecifier","overrides":[],"src":"74755:8:11"},"parameters":{"id":6244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6243,"mutability":"mutable","name":"shares","nameLocation":"74733:6:11","nodeType":"VariableDeclaration","scope":6256,"src":"74725:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6242,"name":"uint256","nodeType":"ElementaryTypeName","src":"74725:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74724:16:11"},"returnParameters":{"id":6248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6256,"src":"74773:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6246,"name":"uint256","nodeType":"ElementaryTypeName","src":"74773:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74772:9:11"},"scope":6329,"src":"74702:149:11","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[7191],"body":{"id":6282,"nodeType":"Block","src":"75245:298:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6266,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"75349:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":6268,"indexExpression":{"id":6267,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"75360:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"75349:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":6269,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"75370:11:11","memberName":"currentDebt","nodeType":"MemberAccess","referencedDeclaration":7731,"src":"75349:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6270,"name":"assetsNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6260,"src":"75384:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"75349:47:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6276,"nodeType":"IfStatement","src":"75345:121:11","trueBody":{"id":6275,"nodeType":"Block","src":"75398:68:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6272,"name":"StrategyDebtIsLessThanAssetsNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"75419:34:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"75419:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6274,"nodeType":"RevertStatement","src":"75412:43:11"}]}},{"expression":{"arguments":[{"id":6278,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"75513:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6279,"name":"assetsNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6260,"src":"75523:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6277,"name":"_assessShareOfUnrealisedLosses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"75482:30:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":6280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"75482:54:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6265,"id":6281,"nodeType":"Return","src":"75475:61:11"}]},"functionSelector":"5a569099","id":6283,"implemented":true,"kind":"function","modifiers":[],"name":"assessShareOfUnrealisedLosses","nameLocation":"75134:29:11","nodeType":"FunctionDefinition","overrides":{"id":6262,"nodeType":"OverrideSpecifier","overrides":[],"src":"75218:8:11"},"parameters":{"id":6261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6258,"mutability":"mutable","name":"strategy","nameLocation":"75172:8:11","nodeType":"VariableDeclaration","scope":6283,"src":"75164:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6257,"name":"address","nodeType":"ElementaryTypeName","src":"75164:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6260,"mutability":"mutable","name":"assetsNeeded","nameLocation":"75190:12:11","nodeType":"VariableDeclaration","scope":6283,"src":"75182:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6259,"name":"uint256","nodeType":"ElementaryTypeName","src":"75182:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"75163:40:11"},"returnParameters":{"id":6265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6283,"src":"75236:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6263,"name":"uint256","nodeType":"ElementaryTypeName","src":"75236:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"75235:9:11"},"scope":6329,"src":"75125:418:11","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[508],"body":{"id":6299,"nodeType":"Block","src":"75641:50:11","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":6293,"name":"_allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"75658:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":6295,"indexExpression":{"id":6294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"75669:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"75658:17:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6297,"indexExpression":{"id":6296,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6287,"src":"75676:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"75658:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6292,"id":6298,"nodeType":"Return","src":"75651:33:11"}]},"functionSelector":"dd62ed3e","id":6300,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"75558:9:11","nodeType":"FunctionDefinition","overrides":{"id":6289,"nodeType":"OverrideSpecifier","overrides":[],"src":"75614:8:11"},"parameters":{"id":6288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6285,"mutability":"mutable","name":"owner","nameLocation":"75576:5:11","nodeType":"VariableDeclaration","scope":6300,"src":"75568:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6284,"name":"address","nodeType":"ElementaryTypeName","src":"75568:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6287,"mutability":"mutable","name":"spender","nameLocation":"75591:7:11","nodeType":"VariableDeclaration","scope":6300,"src":"75583:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6286,"name":"address","nodeType":"ElementaryTypeName","src":"75583:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75567:32:11"},"returnParameters":{"id":6292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6300,"src":"75632:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6290,"name":"uint256","nodeType":"ElementaryTypeName","src":"75632:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"75631:9:11"},"scope":6329,"src":"75549:142:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6327,"nodeType":"Block","src":"75807:220:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":6308,"name":"DOMAIN_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7640,"src":"75858:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"596561726e205661756c74","id":6310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"75898:13:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_da26655fe98828873f36b43d69dcf685bd7966c6141a47d0d8cf605a48cc4e6a","typeString":"literal_string \"Yearn Vault\""},"value":"Yearn Vault"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da26655fe98828873f36b43d69dcf685bd7966c6141a47d0d8cf605a48cc4e6a","typeString":"literal_string \"Yearn Vault\""}],"id":6309,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"75888:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"75888:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":6315,"name":"API_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7571,"src":"75942:11:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"75936:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6313,"name":"bytes","nodeType":"ElementaryTypeName","src":"75936:5:11","typeDescriptions":{}}},"id":6316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"75936:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6312,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"75926:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"75926:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6318,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"75969:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"75975:7:11","memberName":"chainid","nodeType":"MemberAccess","src":"75969:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6322,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"76004:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FathomVault_$6329","typeString":"contract FathomVault"}],"id":6321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"75996:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6320,"name":"address","nodeType":"ElementaryTypeName","src":"75996:7:11","typeDescriptions":{}}},"id":6323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"75996:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6306,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"75834:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"75838:6:11","memberName":"encode","nodeType":"MemberAccess","src":"75834:10:11","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"75834:185:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6305,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"75824:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"75824:196:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6304,"id":6326,"nodeType":"Return","src":"75817:203:11"}]},"id":6328,"implemented":true,"kind":"function","modifiers":[],"name":"domainSeparator","nameLocation":"75757:15:11","nodeType":"FunctionDefinition","parameters":{"id":6301,"nodeType":"ParameterList","parameters":[],"src":"75772:2:11"},"returnParameters":{"id":6304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6328,"src":"75798:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75798:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"75797:9:11"},"scope":6329,"src":"75748:279:11","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":6330,"src":"1031:74998:11","usedErrors":[1851,1853,1855,1857,1859,1861,1863,1865,1867,1869,1871,1873,1875,1877,1879,1881,1883,1885,1887,1889,1891,1893,1895,1897,1899]}],"src":"39:75990:11"},"id":11},"contracts/Interfaces/IAccountant.sol":{"ast":{"absolutePath":"contracts/Interfaces/IAccountant.sol","exportedSymbols":{"IAccountant":[6345]},"id":6346,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":6331,"literals":["solidity","^","0.8",".16"],"nodeType":"PragmaDirective","src":"36:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccountant","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6345,"linearizedBaseContracts":[6345],"name":"IAccountant","nameLocation":"72:11:12","nodeType":"ContractDefinition","nodes":[{"functionSelector":"921f8a8f","id":6344,"implemented":false,"kind":"function","modifiers":[],"name":"report","nameLocation":"99:6:12","nodeType":"FunctionDefinition","parameters":{"id":6338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6333,"mutability":"mutable","name":"strategy","nameLocation":"114:8:12","nodeType":"VariableDeclaration","scope":6344,"src":"106:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6332,"name":"address","nodeType":"ElementaryTypeName","src":"106:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6335,"mutability":"mutable","name":"gain","nameLocation":"132:4:12","nodeType":"VariableDeclaration","scope":6344,"src":"124:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6334,"name":"uint256","nodeType":"ElementaryTypeName","src":"124:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6337,"mutability":"mutable","name":"loss","nameLocation":"146:4:12","nodeType":"VariableDeclaration","scope":6344,"src":"138:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6336,"name":"uint256","nodeType":"ElementaryTypeName","src":"138:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"105:46:12"},"returnParameters":{"id":6343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6344,"src":"170:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6339,"name":"uint256","nodeType":"ElementaryTypeName","src":"170:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6344,"src":"179:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6341,"name":"uint256","nodeType":"ElementaryTypeName","src":"179:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"169:18:12"},"scope":6345,"src":"90:98:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6346,"src":"62:128:12","usedErrors":[]}],"src":"36:154:12"},"id":12},"contracts/Interfaces/IDepositLimitModule.sol":{"ast":{"absolutePath":"contracts/Interfaces/IDepositLimitModule.sol","exportedSymbols":{"IDepositLimitModule":[6355]},"id":6356,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":6347,"literals":["solidity","^","0.8",".16"],"nodeType":"PragmaDirective","src":"36:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IDepositLimitModule","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6355,"linearizedBaseContracts":[6355],"name":"IDepositLimitModule","nameLocation":"72:19:13","nodeType":"ContractDefinition","nodes":[{"functionSelector":"46aa2f12","id":6354,"implemented":false,"kind":"function","modifiers":[],"name":"availableDepositLimit","nameLocation":"107:21:13","nodeType":"FunctionDefinition","parameters":{"id":6350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6349,"mutability":"mutable","name":"receiver","nameLocation":"137:8:13","nodeType":"VariableDeclaration","scope":6354,"src":"129:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6348,"name":"address","nodeType":"ElementaryTypeName","src":"129:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"128:18:13"},"returnParameters":{"id":6353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6354,"src":"170:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6351,"name":"uint256","nodeType":"ElementaryTypeName","src":"170:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"169:9:13"},"scope":6355,"src":"98:81:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6356,"src":"62:119:13","usedErrors":[]}],"src":"36:145:13"},"id":13},"contracts/Interfaces/IERC4626.sol":{"ast":{"absolutePath":"contracts/Interfaces/IERC4626.sol","exportedSymbols":{"IERC20":[531],"IERC20Metadata":[556],"IERC4626":[6543]},"id":6544,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6357,"literals":["solidity","^","0.8",".16"],"nodeType":"PragmaDirective","src":"107:24:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":6358,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6544,"sourceUnit":532,"src":"133:56:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":6359,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6544,"sourceUnit":557,"src":"190:75:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6361,"name":"IERC20","nameLocations":["456:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":531,"src":"456:6:14"},"id":6362,"nodeType":"InheritanceSpecifier","src":"456:6:14"},{"baseName":{"id":6363,"name":"IERC20Metadata","nameLocations":["464:14:14"],"nodeType":"IdentifierPath","referencedDeclaration":556,"src":"464:14:14"},"id":6364,"nodeType":"InheritanceSpecifier","src":"464:14:14"}],"canonicalName":"IERC4626","contractDependencies":[],"contractKind":"interface","documentation":{"id":6360,"nodeType":"StructuredDocumentation","src":"267:166:14","text":" @dev Interface of the ERC4626 \"Tokenized Vault Standard\", as defined in\n https://eips.ethereum.org/EIPS/eip-4626[ERC-4626].\n _Available since v4.7._"},"fullyImplemented":false,"id":6543,"linearizedBaseContracts":[6543,556,531],"name":"IERC4626","nameLocation":"444:8:14","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"dcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7","id":6374,"name":"Deposit","nameLocation":"562:7:14","nodeType":"EventDefinition","parameters":{"id":6373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6366,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"586:6:14","nodeType":"VariableDeclaration","scope":6374,"src":"570:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6365,"name":"address","nodeType":"ElementaryTypeName","src":"570:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6368,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"610:5:14","nodeType":"VariableDeclaration","scope":6374,"src":"594:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6367,"name":"address","nodeType":"ElementaryTypeName","src":"594:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6370,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"625:6:14","nodeType":"VariableDeclaration","scope":6374,"src":"617:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6369,"name":"uint256","nodeType":"ElementaryTypeName","src":"617:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6372,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"641:6:14","nodeType":"VariableDeclaration","scope":6374,"src":"633:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6371,"name":"uint256","nodeType":"ElementaryTypeName","src":"633:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"569:79:14"},"src":"556:93:14"},{"anonymous":false,"eventSelector":"fbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db","id":6386,"name":"Withdraw","nameLocation":"661:8:14","nodeType":"EventDefinition","parameters":{"id":6385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6376,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"695:6:14","nodeType":"VariableDeclaration","scope":6386,"src":"679:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6375,"name":"address","nodeType":"ElementaryTypeName","src":"679:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6378,"indexed":true,"mutability":"mutable","name":"receiver","nameLocation":"727:8:14","nodeType":"VariableDeclaration","scope":6386,"src":"711:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6377,"name":"address","nodeType":"ElementaryTypeName","src":"711:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6380,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"761:5:14","nodeType":"VariableDeclaration","scope":6386,"src":"745:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6379,"name":"address","nodeType":"ElementaryTypeName","src":"745:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6382,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"784:6:14","nodeType":"VariableDeclaration","scope":6386,"src":"776:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6381,"name":"uint256","nodeType":"ElementaryTypeName","src":"776:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6384,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"808:6:14","nodeType":"VariableDeclaration","scope":6386,"src":"800:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6383,"name":"uint256","nodeType":"ElementaryTypeName","src":"800:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"669:151:14"},"src":"655:166:14"},{"documentation":{"id":6387,"nodeType":"StructuredDocumentation","src":"827:207:14","text":" @dev Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing.\n - MUST be an ERC-20 token contract.\n - MUST NOT revert."},"functionSelector":"38d52e0f","id":6392,"implemented":false,"kind":"function","modifiers":[],"name":"asset","nameLocation":"1048:5:14","nodeType":"FunctionDefinition","parameters":{"id":6388,"nodeType":"ParameterList","parameters":[],"src":"1053:2:14"},"returnParameters":{"id":6391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6390,"mutability":"mutable","name":"assetTokenAddress","nameLocation":"1087:17:14","nodeType":"VariableDeclaration","scope":6392,"src":"1079:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6389,"name":"address","nodeType":"ElementaryTypeName","src":"1079:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1078:27:14"},"scope":6543,"src":"1039:67:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6393,"nodeType":"StructuredDocumentation","src":"1112:286:14","text":" @dev Returns the total amount of the underlying asset that is “managed” by Vault.\n - SHOULD include any compounding that occurs from yield.\n - MUST be inclusive of any fees that are charged against assets in the Vault.\n - MUST NOT revert."},"functionSelector":"01e1d114","id":6398,"implemented":false,"kind":"function","modifiers":[],"name":"totalAssets","nameLocation":"1412:11:14","nodeType":"FunctionDefinition","parameters":{"id":6394,"nodeType":"ParameterList","parameters":[],"src":"1423:2:14"},"returnParameters":{"id":6397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6396,"mutability":"mutable","name":"totalManagedAssets","nameLocation":"1457:18:14","nodeType":"VariableDeclaration","scope":6398,"src":"1449:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6395,"name":"uint256","nodeType":"ElementaryTypeName","src":"1449:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1448:28:14"},"scope":6543,"src":"1403:74:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6399,"nodeType":"StructuredDocumentation","src":"1483:720:14","text":" @dev Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal\n scenario where all the conditions are met.\n - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n - MUST NOT show any variations depending on the caller.\n - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n - MUST NOT revert.\n NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n from."},"functionSelector":"c6e6f592","id":6406,"implemented":false,"kind":"function","modifiers":[],"name":"convertToShares","nameLocation":"2217:15:14","nodeType":"FunctionDefinition","parameters":{"id":6402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6401,"mutability":"mutable","name":"assets","nameLocation":"2241:6:14","nodeType":"VariableDeclaration","scope":6406,"src":"2233:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6400,"name":"uint256","nodeType":"ElementaryTypeName","src":"2233:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2232:16:14"},"returnParameters":{"id":6405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6404,"mutability":"mutable","name":"shares","nameLocation":"2280:6:14","nodeType":"VariableDeclaration","scope":6406,"src":"2272:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6403,"name":"uint256","nodeType":"ElementaryTypeName","src":"2272:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2271:16:14"},"scope":6543,"src":"2208:80:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6407,"nodeType":"StructuredDocumentation","src":"2294:720:14","text":" @dev Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal\n scenario where all the conditions are met.\n - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n - MUST NOT show any variations depending on the caller.\n - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n - MUST NOT revert.\n NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n from."},"functionSelector":"07a2d13a","id":6414,"implemented":false,"kind":"function","modifiers":[],"name":"convertToAssets","nameLocation":"3028:15:14","nodeType":"FunctionDefinition","parameters":{"id":6410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6409,"mutability":"mutable","name":"shares","nameLocation":"3052:6:14","nodeType":"VariableDeclaration","scope":6414,"src":"3044:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6408,"name":"uint256","nodeType":"ElementaryTypeName","src":"3044:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3043:16:14"},"returnParameters":{"id":6413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6412,"mutability":"mutable","name":"assets","nameLocation":"3091:6:14","nodeType":"VariableDeclaration","scope":6414,"src":"3083:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6411,"name":"uint256","nodeType":"ElementaryTypeName","src":"3083:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3082:16:14"},"scope":6543,"src":"3019:80:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6415,"nodeType":"StructuredDocumentation","src":"3105:386:14","text":" @dev Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver,\n through a deposit call.\n - MUST return a limited value if receiver is subject to some deposit limit.\n - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited.\n - MUST NOT revert."},"functionSelector":"402d267d","id":6422,"implemented":false,"kind":"function","modifiers":[],"name":"maxDeposit","nameLocation":"3505:10:14","nodeType":"FunctionDefinition","parameters":{"id":6418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6417,"mutability":"mutable","name":"receiver","nameLocation":"3524:8:14","nodeType":"VariableDeclaration","scope":6422,"src":"3516:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6416,"name":"address","nodeType":"ElementaryTypeName","src":"3516:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3515:18:14"},"returnParameters":{"id":6421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6420,"mutability":"mutable","name":"maxAssets","nameLocation":"3565:9:14","nodeType":"VariableDeclaration","scope":6422,"src":"3557:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6419,"name":"uint256","nodeType":"ElementaryTypeName","src":"3557:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3556:19:14"},"scope":6543,"src":"3496:80:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6423,"nodeType":"StructuredDocumentation","src":"3582:1012:14","text":" @dev Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given\n current on-chain conditions.\n - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit\n   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called\n   in the same transaction.\n - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the\n   deposit would be accepted, regardless if the user has enough tokens approved, etc.\n - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by depositing."},"functionSelector":"ef8b30f7","id":6430,"implemented":false,"kind":"function","modifiers":[],"name":"previewDeposit","nameLocation":"4608:14:14","nodeType":"FunctionDefinition","parameters":{"id":6426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6425,"mutability":"mutable","name":"assets","nameLocation":"4631:6:14","nodeType":"VariableDeclaration","scope":6430,"src":"4623:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6424,"name":"uint256","nodeType":"ElementaryTypeName","src":"4623:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4622:16:14"},"returnParameters":{"id":6429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6428,"mutability":"mutable","name":"shares","nameLocation":"4670:6:14","nodeType":"VariableDeclaration","scope":6430,"src":"4662:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6427,"name":"uint256","nodeType":"ElementaryTypeName","src":"4662:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4661:16:14"},"scope":6543,"src":"4599:79:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6431,"nodeType":"StructuredDocumentation","src":"4684:651:14","text":" @dev Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens.\n - MUST emit the Deposit event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n   deposit execution, and are accounted for during deposit.\n - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not\n   approving enough underlying tokens to the Vault contract, etc).\n NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."},"functionSelector":"6e553f65","id":6440,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"5349:7:14","nodeType":"FunctionDefinition","parameters":{"id":6436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6433,"mutability":"mutable","name":"assets","nameLocation":"5365:6:14","nodeType":"VariableDeclaration","scope":6440,"src":"5357:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6432,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6435,"mutability":"mutable","name":"receiver","nameLocation":"5381:8:14","nodeType":"VariableDeclaration","scope":6440,"src":"5373:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6434,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5356:34:14"},"returnParameters":{"id":6439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6438,"mutability":"mutable","name":"shares","nameLocation":"5417:6:14","nodeType":"VariableDeclaration","scope":6440,"src":"5409:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6437,"name":"uint256","nodeType":"ElementaryTypeName","src":"5409:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5408:16:14"},"scope":6543,"src":"5340:85:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6441,"nodeType":"StructuredDocumentation","src":"5431:341:14","text":" @dev Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call.\n - MUST return a limited value if receiver is subject to some mint limit.\n - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted.\n - MUST NOT revert."},"functionSelector":"c63d75b6","id":6448,"implemented":false,"kind":"function","modifiers":[],"name":"maxMint","nameLocation":"5786:7:14","nodeType":"FunctionDefinition","parameters":{"id":6444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6443,"mutability":"mutable","name":"receiver","nameLocation":"5802:8:14","nodeType":"VariableDeclaration","scope":6448,"src":"5794:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6442,"name":"address","nodeType":"ElementaryTypeName","src":"5794:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5793:18:14"},"returnParameters":{"id":6447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6446,"mutability":"mutable","name":"maxShares","nameLocation":"5843:9:14","nodeType":"VariableDeclaration","scope":6448,"src":"5835:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6445,"name":"uint256","nodeType":"ElementaryTypeName","src":"5835:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5834:19:14"},"scope":6543,"src":"5777:77:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6449,"nodeType":"StructuredDocumentation","src":"5860:984:14","text":" @dev Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given\n current on-chain conditions.\n - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call\n   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the\n   same transaction.\n - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint\n   would be accepted, regardless if the user has enough tokens approved, etc.\n - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by minting."},"functionSelector":"b3d7f6b9","id":6456,"implemented":false,"kind":"function","modifiers":[],"name":"previewMint","nameLocation":"6858:11:14","nodeType":"FunctionDefinition","parameters":{"id":6452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6451,"mutability":"mutable","name":"shares","nameLocation":"6878:6:14","nodeType":"VariableDeclaration","scope":6456,"src":"6870:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6450,"name":"uint256","nodeType":"ElementaryTypeName","src":"6870:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6869:16:14"},"returnParameters":{"id":6455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6454,"mutability":"mutable","name":"assets","nameLocation":"6917:6:14","nodeType":"VariableDeclaration","scope":6456,"src":"6909:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6453,"name":"uint256","nodeType":"ElementaryTypeName","src":"6909:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6908:16:14"},"scope":6543,"src":"6849:76:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6457,"nodeType":"StructuredDocumentation","src":"6931:642:14","text":" @dev Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens.\n - MUST emit the Deposit event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint\n   execution, and are accounted for during mint.\n - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not\n   approving enough underlying tokens to the Vault contract, etc).\n NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."},"functionSelector":"94bf804d","id":6466,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"7587:4:14","nodeType":"FunctionDefinition","parameters":{"id":6462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6459,"mutability":"mutable","name":"shares","nameLocation":"7600:6:14","nodeType":"VariableDeclaration","scope":6466,"src":"7592:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6458,"name":"uint256","nodeType":"ElementaryTypeName","src":"7592:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6461,"mutability":"mutable","name":"receiver","nameLocation":"7616:8:14","nodeType":"VariableDeclaration","scope":6466,"src":"7608:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6460,"name":"address","nodeType":"ElementaryTypeName","src":"7608:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7591:34:14"},"returnParameters":{"id":6465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6464,"mutability":"mutable","name":"assets","nameLocation":"7652:6:14","nodeType":"VariableDeclaration","scope":6466,"src":"7644:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6463,"name":"uint256","nodeType":"ElementaryTypeName","src":"7644:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7643:16:14"},"scope":6543,"src":"7578:82:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6467,"nodeType":"StructuredDocumentation","src":"7666:293:14","text":" @dev Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the\n Vault, through a withdraw call.\n - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n - MUST NOT revert."},"functionSelector":"65cb6765","id":6479,"implemented":false,"kind":"function","modifiers":[],"name":"maxWithdraw","nameLocation":"7973:11:14","nodeType":"FunctionDefinition","parameters":{"id":6475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6469,"mutability":"mutable","name":"owner","nameLocation":"7993:5:14","nodeType":"VariableDeclaration","scope":6479,"src":"7985:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6468,"name":"address","nodeType":"ElementaryTypeName","src":"7985:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6471,"mutability":"mutable","name":"maxLoss","nameLocation":"8008:7:14","nodeType":"VariableDeclaration","scope":6479,"src":"8000:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6470,"name":"uint256","nodeType":"ElementaryTypeName","src":"8000:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6474,"mutability":"mutable","name":"strategies","nameLocation":"8034:10:14","nodeType":"VariableDeclaration","scope":6479,"src":"8017:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6472,"name":"address","nodeType":"ElementaryTypeName","src":"8017:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6473,"nodeType":"ArrayTypeName","src":"8017:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7984:61:14"},"returnParameters":{"id":6478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6477,"mutability":"mutable","name":"maxAssets","nameLocation":"8072:9:14","nodeType":"VariableDeclaration","scope":6479,"src":"8064:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6476,"name":"uint256","nodeType":"ElementaryTypeName","src":"8064:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8063:19:14"},"scope":6543,"src":"7964:119:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6480,"nodeType":"StructuredDocumentation","src":"8089:1034:14","text":" @dev Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block,\n given current on-chain conditions.\n - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw\n   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if\n   called\n   in the same transaction.\n - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though\n   the withdrawal would be accepted, regardless if the user has enough shares, etc.\n - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by depositing."},"functionSelector":"0a28a477","id":6487,"implemented":false,"kind":"function","modifiers":[],"name":"previewWithdraw","nameLocation":"9137:15:14","nodeType":"FunctionDefinition","parameters":{"id":6483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6482,"mutability":"mutable","name":"assets","nameLocation":"9161:6:14","nodeType":"VariableDeclaration","scope":6487,"src":"9153:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6481,"name":"uint256","nodeType":"ElementaryTypeName","src":"9153:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9152:16:14"},"returnParameters":{"id":6486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6485,"mutability":"mutable","name":"shares","nameLocation":"9200:6:14","nodeType":"VariableDeclaration","scope":6487,"src":"9192:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6484,"name":"uint256","nodeType":"ElementaryTypeName","src":"9192:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9191:16:14"},"scope":6543,"src":"9128:80:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6488,"nodeType":"StructuredDocumentation","src":"9214:670:14","text":" @dev Burns shares from owner and sends exactly assets of underlying tokens to receiver.\n - MUST emit the Withdraw event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n   withdraw execution, and are accounted for during withdraw.\n - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner\n   not having enough shares, etc).\n Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n Those methods should be performed separately."},"functionSelector":"d81a09f6","id":6504,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"9898:8:14","nodeType":"FunctionDefinition","parameters":{"id":6500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6490,"mutability":"mutable","name":"assets","nameLocation":"9915:6:14","nodeType":"VariableDeclaration","scope":6504,"src":"9907:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6489,"name":"uint256","nodeType":"ElementaryTypeName","src":"9907:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6492,"mutability":"mutable","name":"receiver","nameLocation":"9931:8:14","nodeType":"VariableDeclaration","scope":6504,"src":"9923:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6491,"name":"address","nodeType":"ElementaryTypeName","src":"9923:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6494,"mutability":"mutable","name":"owner","nameLocation":"9949:5:14","nodeType":"VariableDeclaration","scope":6504,"src":"9941:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6493,"name":"address","nodeType":"ElementaryTypeName","src":"9941:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6496,"mutability":"mutable","name":"maxLoss","nameLocation":"9964:7:14","nodeType":"VariableDeclaration","scope":6504,"src":"9956:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6495,"name":"uint256","nodeType":"ElementaryTypeName","src":"9956:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6499,"mutability":"mutable","name":"strategies","nameLocation":"9990:10:14","nodeType":"VariableDeclaration","scope":6504,"src":"9973:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6497,"name":"address","nodeType":"ElementaryTypeName","src":"9973:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6498,"nodeType":"ArrayTypeName","src":"9973:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"9906:95:14"},"returnParameters":{"id":6503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6502,"mutability":"mutable","name":"shares","nameLocation":"10028:6:14","nodeType":"VariableDeclaration","scope":6504,"src":"10020:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6501,"name":"uint256","nodeType":"ElementaryTypeName","src":"10020:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10019:16:14"},"scope":6543,"src":"9889:147:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6505,"nodeType":"StructuredDocumentation","src":"10042:381:14","text":" @dev Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault,\n through a redeem call.\n - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock.\n - MUST NOT revert."},"functionSelector":"34b5fab6","id":6517,"implemented":false,"kind":"function","modifiers":[],"name":"maxRedeem","nameLocation":"10437:9:14","nodeType":"FunctionDefinition","parameters":{"id":6513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6507,"mutability":"mutable","name":"owner","nameLocation":"10455:5:14","nodeType":"VariableDeclaration","scope":6517,"src":"10447:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6506,"name":"address","nodeType":"ElementaryTypeName","src":"10447:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6509,"mutability":"mutable","name":"maxLoss","nameLocation":"10470:7:14","nodeType":"VariableDeclaration","scope":6517,"src":"10462:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6508,"name":"uint256","nodeType":"ElementaryTypeName","src":"10462:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6512,"mutability":"mutable","name":"strategies","nameLocation":"10496:10:14","nodeType":"VariableDeclaration","scope":6517,"src":"10479:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6510,"name":"address","nodeType":"ElementaryTypeName","src":"10479:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6511,"nodeType":"ArrayTypeName","src":"10479:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10446:61:14"},"returnParameters":{"id":6516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6515,"mutability":"mutable","name":"maxShares","nameLocation":"10534:9:14","nodeType":"VariableDeclaration","scope":6517,"src":"10526:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6514,"name":"uint256","nodeType":"ElementaryTypeName","src":"10526:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10525:19:14"},"scope":6543,"src":"10428:117:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6518,"nodeType":"StructuredDocumentation","src":"10551:1010:14","text":" @dev Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block,\n given current on-chain conditions.\n - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call\n   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the\n   same transaction.\n - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the\n   redemption would be accepted, regardless if the user has enough shares, etc.\n - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by redeeming."},"functionSelector":"4cdad506","id":6525,"implemented":false,"kind":"function","modifiers":[],"name":"previewRedeem","nameLocation":"11575:13:14","nodeType":"FunctionDefinition","parameters":{"id":6521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6520,"mutability":"mutable","name":"shares","nameLocation":"11597:6:14","nodeType":"VariableDeclaration","scope":6525,"src":"11589:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6519,"name":"uint256","nodeType":"ElementaryTypeName","src":"11589:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11588:16:14"},"returnParameters":{"id":6524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6523,"mutability":"mutable","name":"assets","nameLocation":"11636:6:14","nodeType":"VariableDeclaration","scope":6525,"src":"11628:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6522,"name":"uint256","nodeType":"ElementaryTypeName","src":"11628:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11627:16:14"},"scope":6543,"src":"11566:78:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6526,"nodeType":"StructuredDocumentation","src":"11650:661:14","text":" @dev Burns exactly shares from owner and sends assets of underlying tokens to receiver.\n - MUST emit the Withdraw event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n   redeem execution, and are accounted for during redeem.\n - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner\n   not having enough shares, etc).\n NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n Those methods should be performed separately."},"functionSelector":"06580f2d","id":6542,"implemented":false,"kind":"function","modifiers":[],"name":"redeem","nameLocation":"12325:6:14","nodeType":"FunctionDefinition","parameters":{"id":6538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6528,"mutability":"mutable","name":"shares","nameLocation":"12340:6:14","nodeType":"VariableDeclaration","scope":6542,"src":"12332:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6527,"name":"uint256","nodeType":"ElementaryTypeName","src":"12332:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6530,"mutability":"mutable","name":"receiver","nameLocation":"12356:8:14","nodeType":"VariableDeclaration","scope":6542,"src":"12348:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6529,"name":"address","nodeType":"ElementaryTypeName","src":"12348:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6532,"mutability":"mutable","name":"owner","nameLocation":"12374:5:14","nodeType":"VariableDeclaration","scope":6542,"src":"12366:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6531,"name":"address","nodeType":"ElementaryTypeName","src":"12366:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6534,"mutability":"mutable","name":"maxLoss","nameLocation":"12389:7:14","nodeType":"VariableDeclaration","scope":6542,"src":"12381:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6533,"name":"uint256","nodeType":"ElementaryTypeName","src":"12381:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6537,"mutability":"mutable","name":"strategies","nameLocation":"12415:10:14","nodeType":"VariableDeclaration","scope":6542,"src":"12398:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6535,"name":"address","nodeType":"ElementaryTypeName","src":"12398:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6536,"nodeType":"ArrayTypeName","src":"12398:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"12331:95:14"},"returnParameters":{"id":6541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6540,"mutability":"mutable","name":"assets","nameLocation":"12453:6:14","nodeType":"VariableDeclaration","scope":6542,"src":"12445:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6539,"name":"uint256","nodeType":"ElementaryTypeName","src":"12445:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12444:16:14"},"scope":6543,"src":"12316:145:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6544,"src":"434:12029:14","usedErrors":[]}],"src":"107:12356:14"},"id":14},"contracts/Interfaces/IFactory.sol":{"ast":{"absolutePath":"contracts/Interfaces/IFactory.sol","exportedSymbols":{"IFactory":[6553]},"id":6554,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":6545,"literals":["solidity","^","0.8",".16"],"nodeType":"PragmaDirective","src":"36:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6553,"linearizedBaseContracts":[6553],"name":"IFactory","nameLocation":"72:8:15","nodeType":"ContractDefinition","nodes":[{"functionSelector":"07d3277f","id":6552,"implemented":false,"kind":"function","modifiers":[],"name":"protocolFeeConfig","nameLocation":"96:17:15","nodeType":"FunctionDefinition","parameters":{"id":6546,"nodeType":"ParameterList","parameters":[],"src":"113:2:15"},"returnParameters":{"id":6551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6552,"src":"139:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6547,"name":"uint16","nodeType":"ElementaryTypeName","src":"139:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":6550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6552,"src":"147:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6549,"name":"address","nodeType":"ElementaryTypeName","src":"147:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"138:17:15"},"scope":6553,"src":"87:69:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6554,"src":"62:96:15","usedErrors":[]}],"src":"36:122:15"},"id":15},"contracts/Interfaces/ISharesManager.sol":{"ast":{"absolutePath":"contracts/Interfaces/ISharesManager.sol","exportedSymbols":{"FeeAssessment":[7743],"ISharesManager":[6854],"RoleStatusChange":[7769],"Rounding":[7772],"ShareManagement":[7750],"StrategyChangeType":[7766],"StrategyParams":[7734],"WithdrawalState":[7763]},"id":6855,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":6555,"literals":["solidity","^","0.8",".16"],"nodeType":"PragmaDirective","src":"36:24:16"},{"absolutePath":"contracts/VaultStructs.sol","file":"../VaultStructs.sol","id":6556,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6855,"sourceUnit":7773,"src":"62:29:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ISharesManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6854,"linearizedBaseContracts":[6854],"name":"ISharesManager","nameLocation":"103:14:16","nodeType":"ContractDefinition","nodes":[{"functionSelector":"dd8aaa4f","id":6565,"implemented":false,"kind":"function","modifiers":[],"name":"spendAllowance","nameLocation":"205:14:16","nodeType":"FunctionDefinition","parameters":{"id":6563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6558,"mutability":"mutable","name":"owner","nameLocation":"228:5:16","nodeType":"VariableDeclaration","scope":6565,"src":"220:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6557,"name":"address","nodeType":"ElementaryTypeName","src":"220:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6560,"mutability":"mutable","name":"spender","nameLocation":"243:7:16","nodeType":"VariableDeclaration","scope":6565,"src":"235:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6559,"name":"address","nodeType":"ElementaryTypeName","src":"235:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6562,"mutability":"mutable","name":"amount","nameLocation":"260:6:16","nodeType":"VariableDeclaration","scope":6565,"src":"252:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6561,"name":"uint256","nodeType":"ElementaryTypeName","src":"252:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"219:48:16"},"returnParameters":{"id":6564,"nodeType":"ParameterList","parameters":[],"src":"276:0:16"},"scope":6854,"src":"196:81:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"beabacc8","id":6574,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"291:8:16","nodeType":"FunctionDefinition","parameters":{"id":6572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6567,"mutability":"mutable","name":"sender","nameLocation":"308:6:16","nodeType":"VariableDeclaration","scope":6574,"src":"300:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6566,"name":"address","nodeType":"ElementaryTypeName","src":"300:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6569,"mutability":"mutable","name":"receiver","nameLocation":"324:8:16","nodeType":"VariableDeclaration","scope":6574,"src":"316:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6568,"name":"address","nodeType":"ElementaryTypeName","src":"316:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6571,"mutability":"mutable","name":"amount","nameLocation":"342:6:16","nodeType":"VariableDeclaration","scope":6574,"src":"334:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6570,"name":"uint256","nodeType":"ElementaryTypeName","src":"334:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"299:50:16"},"returnParameters":{"id":6573,"nodeType":"ParameterList","parameters":[],"src":"358:0:16"},"scope":6854,"src":"282:77:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":6585,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"373:12:16","nodeType":"FunctionDefinition","parameters":{"id":6581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6576,"mutability":"mutable","name":"sender","nameLocation":"394:6:16","nodeType":"VariableDeclaration","scope":6585,"src":"386:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6575,"name":"address","nodeType":"ElementaryTypeName","src":"386:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6578,"mutability":"mutable","name":"receiver","nameLocation":"410:8:16","nodeType":"VariableDeclaration","scope":6585,"src":"402:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6577,"name":"address","nodeType":"ElementaryTypeName","src":"402:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6580,"mutability":"mutable","name":"amount","nameLocation":"428:6:16","nodeType":"VariableDeclaration","scope":6585,"src":"420:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6579,"name":"uint256","nodeType":"ElementaryTypeName","src":"420:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"385:50:16"},"returnParameters":{"id":6584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6585,"src":"454:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6582,"name":"bool","nodeType":"ElementaryTypeName","src":"454:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"453:6:16"},"scope":6854,"src":"364:96:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e1f21c67","id":6596,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"474:7:16","nodeType":"FunctionDefinition","parameters":{"id":6592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6587,"mutability":"mutable","name":"owner","nameLocation":"490:5:16","nodeType":"VariableDeclaration","scope":6596,"src":"482:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6586,"name":"address","nodeType":"ElementaryTypeName","src":"482:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6589,"mutability":"mutable","name":"spender","nameLocation":"505:7:16","nodeType":"VariableDeclaration","scope":6596,"src":"497:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6588,"name":"address","nodeType":"ElementaryTypeName","src":"497:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6591,"mutability":"mutable","name":"amount","nameLocation":"522:6:16","nodeType":"VariableDeclaration","scope":6596,"src":"514:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6590,"name":"uint256","nodeType":"ElementaryTypeName","src":"514:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"481:48:16"},"returnParameters":{"id":6595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6596,"src":"548:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6593,"name":"bool","nodeType":"ElementaryTypeName","src":"548:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"547:6:16"},"scope":6854,"src":"465:89:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6c43a2ca","id":6607,"implemented":false,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"568:17:16","nodeType":"FunctionDefinition","parameters":{"id":6603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6598,"mutability":"mutable","name":"owner","nameLocation":"594:5:16","nodeType":"VariableDeclaration","scope":6607,"src":"586:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6597,"name":"address","nodeType":"ElementaryTypeName","src":"586:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6600,"mutability":"mutable","name":"spender","nameLocation":"609:7:16","nodeType":"VariableDeclaration","scope":6607,"src":"601:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6599,"name":"address","nodeType":"ElementaryTypeName","src":"601:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6602,"mutability":"mutable","name":"amount","nameLocation":"626:6:16","nodeType":"VariableDeclaration","scope":6607,"src":"618:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6601,"name":"uint256","nodeType":"ElementaryTypeName","src":"618:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"585:48:16"},"returnParameters":{"id":6606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6607,"src":"652:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6604,"name":"bool","nodeType":"ElementaryTypeName","src":"652:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"651:6:16"},"scope":6854,"src":"559:99:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d73b1dc9","id":6618,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"672:17:16","nodeType":"FunctionDefinition","parameters":{"id":6614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6609,"mutability":"mutable","name":"owner","nameLocation":"698:5:16","nodeType":"VariableDeclaration","scope":6618,"src":"690:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6608,"name":"address","nodeType":"ElementaryTypeName","src":"690:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6611,"mutability":"mutable","name":"spender","nameLocation":"713:7:16","nodeType":"VariableDeclaration","scope":6618,"src":"705:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6610,"name":"address","nodeType":"ElementaryTypeName","src":"705:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6613,"mutability":"mutable","name":"amount","nameLocation":"730:6:16","nodeType":"VariableDeclaration","scope":6618,"src":"722:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6612,"name":"uint256","nodeType":"ElementaryTypeName","src":"722:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"689:48:16"},"returnParameters":{"id":6617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6618,"src":"756:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6615,"name":"bool","nodeType":"ElementaryTypeName","src":"756:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"755:6:16"},"scope":6854,"src":"663:99:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d505accf","id":6637,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"776:6:16","nodeType":"FunctionDefinition","parameters":{"id":6633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6620,"mutability":"mutable","name":"owner","nameLocation":"791:5:16","nodeType":"VariableDeclaration","scope":6637,"src":"783:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6619,"name":"address","nodeType":"ElementaryTypeName","src":"783:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6622,"mutability":"mutable","name":"spender","nameLocation":"806:7:16","nodeType":"VariableDeclaration","scope":6637,"src":"798:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6621,"name":"address","nodeType":"ElementaryTypeName","src":"798:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6624,"mutability":"mutable","name":"amount","nameLocation":"823:6:16","nodeType":"VariableDeclaration","scope":6637,"src":"815:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6623,"name":"uint256","nodeType":"ElementaryTypeName","src":"815:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6626,"mutability":"mutable","name":"deadline","nameLocation":"839:8:16","nodeType":"VariableDeclaration","scope":6637,"src":"831:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6625,"name":"uint256","nodeType":"ElementaryTypeName","src":"831:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6628,"mutability":"mutable","name":"v","nameLocation":"855:1:16","nodeType":"VariableDeclaration","scope":6637,"src":"849:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6627,"name":"uint8","nodeType":"ElementaryTypeName","src":"849:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6630,"mutability":"mutable","name":"r","nameLocation":"866:1:16","nodeType":"VariableDeclaration","scope":6637,"src":"858:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6629,"name":"bytes32","nodeType":"ElementaryTypeName","src":"858:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6632,"mutability":"mutable","name":"s","nameLocation":"877:1:16","nodeType":"VariableDeclaration","scope":6637,"src":"869:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6631,"name":"bytes32","nodeType":"ElementaryTypeName","src":"869:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"782:97:16"},"returnParameters":{"id":6636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6637,"src":"898:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6634,"name":"bool","nodeType":"ElementaryTypeName","src":"898:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"897:6:16"},"scope":6854,"src":"767:137:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"99167fb4","id":6644,"implemented":false,"kind":"function","modifiers":[],"name":"burnShares","nameLocation":"918:10:16","nodeType":"FunctionDefinition","parameters":{"id":6642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6639,"mutability":"mutable","name":"shares","nameLocation":"937:6:16","nodeType":"VariableDeclaration","scope":6644,"src":"929:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6638,"name":"uint256","nodeType":"ElementaryTypeName","src":"929:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6641,"mutability":"mutable","name":"owner","nameLocation":"953:5:16","nodeType":"VariableDeclaration","scope":6644,"src":"945:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6640,"name":"address","nodeType":"ElementaryTypeName","src":"945:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"928:31:16"},"returnParameters":{"id":6643,"nodeType":"ParameterList","parameters":[],"src":"968:0:16"},"scope":6854,"src":"909:60:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d9a0e97a","id":6649,"implemented":false,"kind":"function","modifiers":[],"name":"unlockedShares","nameLocation":"983:14:16","nodeType":"FunctionDefinition","parameters":{"id":6645,"nodeType":"ParameterList","parameters":[],"src":"997:2:16"},"returnParameters":{"id":6648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6649,"src":"1023:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6646,"name":"uint256","nodeType":"ElementaryTypeName","src":"1023:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1022:9:16"},"scope":6854,"src":"974:58:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":6654,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"1046:11:16","nodeType":"FunctionDefinition","parameters":{"id":6650,"nodeType":"ParameterList","parameters":[],"src":"1057:2:16"},"returnParameters":{"id":6653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6654,"src":"1083:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6651,"name":"uint256","nodeType":"ElementaryTypeName","src":"1083:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1082:9:16"},"scope":6854,"src":"1037:55:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e0bf18ad","id":6657,"implemented":false,"kind":"function","modifiers":[],"name":"burnUnlockedShares","nameLocation":"1106:18:16","nodeType":"FunctionDefinition","parameters":{"id":6655,"nodeType":"ParameterList","parameters":[],"src":"1124:2:16"},"returnParameters":{"id":6656,"nodeType":"ParameterList","parameters":[],"src":"1135:0:16"},"scope":6854,"src":"1097:39:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"01e1d114","id":6662,"implemented":false,"kind":"function","modifiers":[],"name":"totalAssets","nameLocation":"1150:11:16","nodeType":"FunctionDefinition","parameters":{"id":6658,"nodeType":"ParameterList","parameters":[],"src":"1161:2:16"},"returnParameters":{"id":6661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6662,"src":"1187:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6659,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:9:16"},"scope":6854,"src":"1141:55:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7ff00077","id":6672,"implemented":false,"kind":"function","modifiers":[],"name":"convertToAssets","nameLocation":"1210:15:16","nodeType":"FunctionDefinition","parameters":{"id":6668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6664,"mutability":"mutable","name":"shares","nameLocation":"1234:6:16","nodeType":"VariableDeclaration","scope":6672,"src":"1226:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6663,"name":"uint256","nodeType":"ElementaryTypeName","src":"1226:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6667,"mutability":"mutable","name":"rounding","nameLocation":"1251:8:16","nodeType":"VariableDeclaration","scope":6672,"src":"1242:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"},"typeName":{"id":6666,"nodeType":"UserDefinedTypeName","pathNode":{"id":6665,"name":"Rounding","nameLocations":["1242:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":7772,"src":"1242:8:16"},"referencedDeclaration":7772,"src":"1242:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}},"visibility":"internal"}],"src":"1225:35:16"},"returnParameters":{"id":6671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6672,"src":"1284:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6669,"name":"uint256","nodeType":"ElementaryTypeName","src":"1284:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1283:9:16"},"scope":6854,"src":"1201:92:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5d4086af","id":6682,"implemented":false,"kind":"function","modifiers":[],"name":"convertToShares","nameLocation":"1307:15:16","nodeType":"FunctionDefinition","parameters":{"id":6678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6674,"mutability":"mutable","name":"assets","nameLocation":"1331:6:16","nodeType":"VariableDeclaration","scope":6682,"src":"1323:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6673,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6677,"mutability":"mutable","name":"rounding","nameLocation":"1348:8:16","nodeType":"VariableDeclaration","scope":6682,"src":"1339:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"},"typeName":{"id":6676,"nodeType":"UserDefinedTypeName","pathNode":{"id":6675,"name":"Rounding","nameLocations":["1339:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":7772,"src":"1339:8:16"},"referencedDeclaration":7772,"src":"1339:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$7772","typeString":"enum Rounding"}},"visibility":"internal"}],"src":"1322:35:16"},"returnParameters":{"id":6681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6682,"src":"1381:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6679,"name":"uint256","nodeType":"ElementaryTypeName","src":"1381:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1380:9:16"},"scope":6854,"src":"1298:92:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c0349694","id":6691,"implemented":false,"kind":"function","modifiers":[],"name":"erc20SafeApprove","nameLocation":"1404:16:16","nodeType":"FunctionDefinition","parameters":{"id":6689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6684,"mutability":"mutable","name":"token","nameLocation":"1429:5:16","nodeType":"VariableDeclaration","scope":6691,"src":"1421:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6683,"name":"address","nodeType":"ElementaryTypeName","src":"1421:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6686,"mutability":"mutable","name":"spender","nameLocation":"1444:7:16","nodeType":"VariableDeclaration","scope":6691,"src":"1436:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6685,"name":"address","nodeType":"ElementaryTypeName","src":"1436:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6688,"mutability":"mutable","name":"amount","nameLocation":"1461:6:16","nodeType":"VariableDeclaration","scope":6691,"src":"1453:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6687,"name":"uint256","nodeType":"ElementaryTypeName","src":"1453:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1420:48:16"},"returnParameters":{"id":6690,"nodeType":"ParameterList","parameters":[],"src":"1477:0:16"},"scope":6854,"src":"1395:83:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4542abe2","id":6702,"implemented":false,"kind":"function","modifiers":[],"name":"erc20SafeTransferFrom","nameLocation":"1492:21:16","nodeType":"FunctionDefinition","parameters":{"id":6700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6693,"mutability":"mutable","name":"token","nameLocation":"1522:5:16","nodeType":"VariableDeclaration","scope":6702,"src":"1514:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6692,"name":"address","nodeType":"ElementaryTypeName","src":"1514:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6695,"mutability":"mutable","name":"sender","nameLocation":"1537:6:16","nodeType":"VariableDeclaration","scope":6702,"src":"1529:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6694,"name":"address","nodeType":"ElementaryTypeName","src":"1529:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6697,"mutability":"mutable","name":"receiver","nameLocation":"1553:8:16","nodeType":"VariableDeclaration","scope":6702,"src":"1545:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6696,"name":"address","nodeType":"ElementaryTypeName","src":"1545:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6699,"mutability":"mutable","name":"amount","nameLocation":"1571:6:16","nodeType":"VariableDeclaration","scope":6702,"src":"1563:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1563:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1513:65:16"},"returnParameters":{"id":6701,"nodeType":"ParameterList","parameters":[],"src":"1587:0:16"},"scope":6854,"src":"1483:105:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ec6e566e","id":6711,"implemented":false,"kind":"function","modifiers":[],"name":"erc20SafeTransfer","nameLocation":"1602:17:16","nodeType":"FunctionDefinition","parameters":{"id":6709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6704,"mutability":"mutable","name":"token","nameLocation":"1628:5:16","nodeType":"VariableDeclaration","scope":6711,"src":"1620:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6703,"name":"address","nodeType":"ElementaryTypeName","src":"1620:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6706,"mutability":"mutable","name":"receiver","nameLocation":"1643:8:16","nodeType":"VariableDeclaration","scope":6711,"src":"1635:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6705,"name":"address","nodeType":"ElementaryTypeName","src":"1635:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6708,"mutability":"mutable","name":"amount","nameLocation":"1661:6:16","nodeType":"VariableDeclaration","scope":6711,"src":"1653:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6707,"name":"uint256","nodeType":"ElementaryTypeName","src":"1653:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1619:49:16"},"returnParameters":{"id":6710,"nodeType":"ParameterList","parameters":[],"src":"1677:0:16"},"scope":6854,"src":"1593:85:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ca4c1c37","id":6718,"implemented":false,"kind":"function","modifiers":[],"name":"issueShares","nameLocation":"1692:11:16","nodeType":"FunctionDefinition","parameters":{"id":6716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6713,"mutability":"mutable","name":"shares","nameLocation":"1712:6:16","nodeType":"VariableDeclaration","scope":6718,"src":"1704:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6712,"name":"uint256","nodeType":"ElementaryTypeName","src":"1704:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6715,"mutability":"mutable","name":"recipient","nameLocation":"1728:9:16","nodeType":"VariableDeclaration","scope":6718,"src":"1720:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6714,"name":"address","nodeType":"ElementaryTypeName","src":"1720:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1703:35:16"},"returnParameters":{"id":6717,"nodeType":"ParameterList","parameters":[],"src":"1747:0:16"},"scope":6854,"src":"1683:65:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"7659bcc6","id":6727,"implemented":false,"kind":"function","modifiers":[],"name":"issueSharesForAmount","nameLocation":"1762:20:16","nodeType":"FunctionDefinition","parameters":{"id":6723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6720,"mutability":"mutable","name":"amount","nameLocation":"1791:6:16","nodeType":"VariableDeclaration","scope":6727,"src":"1783:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6719,"name":"uint256","nodeType":"ElementaryTypeName","src":"1783:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6722,"mutability":"mutable","name":"recipient","nameLocation":"1807:9:16","nodeType":"VariableDeclaration","scope":6727,"src":"1799:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6721,"name":"address","nodeType":"ElementaryTypeName","src":"1799:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1782:35:16"},"returnParameters":{"id":6726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6727,"src":"1836:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6724,"name":"uint256","nodeType":"ElementaryTypeName","src":"1836:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1835:9:16"},"scope":6854,"src":"1753:92:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"402d267d","id":6734,"implemented":false,"kind":"function","modifiers":[],"name":"maxDeposit","nameLocation":"1859:10:16","nodeType":"FunctionDefinition","parameters":{"id":6730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6729,"mutability":"mutable","name":"receiver","nameLocation":"1878:8:16","nodeType":"VariableDeclaration","scope":6734,"src":"1870:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6728,"name":"address","nodeType":"ElementaryTypeName","src":"1870:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1869:18:16"},"returnParameters":{"id":6733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6734,"src":"1911:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6731,"name":"uint256","nodeType":"ElementaryTypeName","src":"1911:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1910:9:16"},"scope":6854,"src":"1850:70:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"65cb6765","id":6746,"implemented":false,"kind":"function","modifiers":[],"name":"maxWithdraw","nameLocation":"1934:11:16","nodeType":"FunctionDefinition","parameters":{"id":6742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6736,"mutability":"mutable","name":"owner","nameLocation":"1954:5:16","nodeType":"VariableDeclaration","scope":6746,"src":"1946:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6735,"name":"address","nodeType":"ElementaryTypeName","src":"1946:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6738,"mutability":"mutable","name":"_maxLoss","nameLocation":"1969:8:16","nodeType":"VariableDeclaration","scope":6746,"src":"1961:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6737,"name":"uint256","nodeType":"ElementaryTypeName","src":"1961:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6741,"mutability":"mutable","name":"_strategies","nameLocation":"1996:11:16","nodeType":"VariableDeclaration","scope":6746,"src":"1979:28:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6739,"name":"address","nodeType":"ElementaryTypeName","src":"1979:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6740,"nodeType":"ArrayTypeName","src":"1979:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1945:63:16"},"returnParameters":{"id":6745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6746,"src":"2027:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6743,"name":"uint256","nodeType":"ElementaryTypeName","src":"2027:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2026:9:16"},"scope":6854,"src":"1925:111:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8340f549","id":6757,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"2050:7:16","nodeType":"FunctionDefinition","parameters":{"id":6753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6748,"mutability":"mutable","name":"sender","nameLocation":"2066:6:16","nodeType":"VariableDeclaration","scope":6757,"src":"2058:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6747,"name":"address","nodeType":"ElementaryTypeName","src":"2058:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6750,"mutability":"mutable","name":"recipient","nameLocation":"2082:9:16","nodeType":"VariableDeclaration","scope":6757,"src":"2074:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6749,"name":"address","nodeType":"ElementaryTypeName","src":"2074:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6752,"mutability":"mutable","name":"assets","nameLocation":"2101:6:16","nodeType":"VariableDeclaration","scope":6757,"src":"2093:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6751,"name":"uint256","nodeType":"ElementaryTypeName","src":"2093:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2057:51:16"},"returnParameters":{"id":6756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6757,"src":"2127:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6754,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2126:9:16"},"scope":6854,"src":"2041:95:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c6c3bbe6","id":6768,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"2150:4:16","nodeType":"FunctionDefinition","parameters":{"id":6764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6759,"mutability":"mutable","name":"sender","nameLocation":"2163:6:16","nodeType":"VariableDeclaration","scope":6768,"src":"2155:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6758,"name":"address","nodeType":"ElementaryTypeName","src":"2155:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6761,"mutability":"mutable","name":"recipient","nameLocation":"2179:9:16","nodeType":"VariableDeclaration","scope":6768,"src":"2171:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6760,"name":"address","nodeType":"ElementaryTypeName","src":"2171:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6763,"mutability":"mutable","name":"shares","nameLocation":"2198:6:16","nodeType":"VariableDeclaration","scope":6768,"src":"2190:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6762,"name":"uint256","nodeType":"ElementaryTypeName","src":"2190:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2154:51:16"},"returnParameters":{"id":6767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6768,"src":"2224:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6765,"name":"uint256","nodeType":"ElementaryTypeName","src":"2224:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2223:9:16"},"scope":6854,"src":"2141:92:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5a569099","id":6777,"implemented":false,"kind":"function","modifiers":[],"name":"assessShareOfUnrealisedLosses","nameLocation":"2247:29:16","nodeType":"FunctionDefinition","parameters":{"id":6773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6770,"mutability":"mutable","name":"strategy","nameLocation":"2285:8:16","nodeType":"VariableDeclaration","scope":6777,"src":"2277:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6769,"name":"address","nodeType":"ElementaryTypeName","src":"2277:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6772,"mutability":"mutable","name":"assetsNeeded","nameLocation":"2303:12:16","nodeType":"VariableDeclaration","scope":6777,"src":"2295:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6771,"name":"uint256","nodeType":"ElementaryTypeName","src":"2295:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2276:40:16"},"returnParameters":{"id":6776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6777,"src":"2340:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6774,"name":"uint256","nodeType":"ElementaryTypeName","src":"2340:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2339:9:16"},"scope":6854,"src":"2238:111:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b53d0958","id":6784,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawFromStrategy","nameLocation":"2363:20:16","nodeType":"FunctionDefinition","parameters":{"id":6782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6779,"mutability":"mutable","name":"strategy","nameLocation":"2392:8:16","nodeType":"VariableDeclaration","scope":6784,"src":"2384:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6778,"name":"address","nodeType":"ElementaryTypeName","src":"2384:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6781,"mutability":"mutable","name":"assetsToWithdraw","nameLocation":"2410:16:16","nodeType":"VariableDeclaration","scope":6784,"src":"2402:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6780,"name":"uint256","nodeType":"ElementaryTypeName","src":"2402:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2383:44:16"},"returnParameters":{"id":6783,"nodeType":"ParameterList","parameters":[],"src":"2436:0:16"},"scope":6854,"src":"2354:83:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"46b79135","id":6804,"implemented":false,"kind":"function","modifiers":[],"name":"redeem","nameLocation":"2451:6:16","nodeType":"FunctionDefinition","parameters":{"id":6800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6786,"mutability":"mutable","name":"sender","nameLocation":"2466:6:16","nodeType":"VariableDeclaration","scope":6804,"src":"2458:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6785,"name":"address","nodeType":"ElementaryTypeName","src":"2458:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6788,"mutability":"mutable","name":"receiver","nameLocation":"2482:8:16","nodeType":"VariableDeclaration","scope":6804,"src":"2474:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6787,"name":"address","nodeType":"ElementaryTypeName","src":"2474:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6790,"mutability":"mutable","name":"owner","nameLocation":"2500:5:16","nodeType":"VariableDeclaration","scope":6804,"src":"2492:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6789,"name":"address","nodeType":"ElementaryTypeName","src":"2492:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6792,"mutability":"mutable","name":"assets","nameLocation":"2515:6:16","nodeType":"VariableDeclaration","scope":6804,"src":"2507:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6791,"name":"uint256","nodeType":"ElementaryTypeName","src":"2507:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6794,"mutability":"mutable","name":"sharesToBurn","nameLocation":"2531:12:16","nodeType":"VariableDeclaration","scope":6804,"src":"2523:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6793,"name":"uint256","nodeType":"ElementaryTypeName","src":"2523:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6796,"mutability":"mutable","name":"maxLoss","nameLocation":"2553:7:16","nodeType":"VariableDeclaration","scope":6804,"src":"2545:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6795,"name":"uint256","nodeType":"ElementaryTypeName","src":"2545:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6799,"mutability":"mutable","name":"_strategies","nameLocation":"2579:11:16","nodeType":"VariableDeclaration","scope":6804,"src":"2562:28:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6797,"name":"address","nodeType":"ElementaryTypeName","src":"2562:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6798,"nodeType":"ArrayTypeName","src":"2562:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2457:134:16"},"returnParameters":{"id":6803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6804,"src":"2610:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6801,"name":"uint256","nodeType":"ElementaryTypeName","src":"2610:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2609:9:16"},"scope":6854,"src":"2442:177:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0573299b","id":6815,"implemented":false,"kind":"function","modifiers":[],"name":"validateRedeem","nameLocation":"2633:14:16","nodeType":"FunctionDefinition","parameters":{"id":6813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6806,"mutability":"mutable","name":"receiver","nameLocation":"2656:8:16","nodeType":"VariableDeclaration","scope":6815,"src":"2648:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6805,"name":"address","nodeType":"ElementaryTypeName","src":"2648:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6808,"mutability":"mutable","name":"owner","nameLocation":"2674:5:16","nodeType":"VariableDeclaration","scope":6815,"src":"2666:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6807,"name":"address","nodeType":"ElementaryTypeName","src":"2666:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6810,"mutability":"mutable","name":"sharesToBurn","nameLocation":"2689:12:16","nodeType":"VariableDeclaration","scope":6815,"src":"2681:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6809,"name":"uint256","nodeType":"ElementaryTypeName","src":"2681:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6812,"mutability":"mutable","name":"maxLoss","nameLocation":"2711:7:16","nodeType":"VariableDeclaration","scope":6815,"src":"2703:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6811,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2647:72:16"},"returnParameters":{"id":6814,"nodeType":"ParameterList","parameters":[],"src":"2733:0:16"},"scope":6854,"src":"2624:110:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c342cd27","id":6824,"implemented":false,"kind":"function","modifiers":[],"name":"handleAllowance","nameLocation":"2748:15:16","nodeType":"FunctionDefinition","parameters":{"id":6822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6817,"mutability":"mutable","name":"owner","nameLocation":"2772:5:16","nodeType":"VariableDeclaration","scope":6824,"src":"2764:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6816,"name":"address","nodeType":"ElementaryTypeName","src":"2764:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6819,"mutability":"mutable","name":"sender","nameLocation":"2787:6:16","nodeType":"VariableDeclaration","scope":6824,"src":"2779:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6818,"name":"address","nodeType":"ElementaryTypeName","src":"2779:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6821,"mutability":"mutable","name":"sharesToBurn","nameLocation":"2803:12:16","nodeType":"VariableDeclaration","scope":6824,"src":"2795:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6820,"name":"uint256","nodeType":"ElementaryTypeName","src":"2795:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2763:53:16"},"returnParameters":{"id":6823,"nodeType":"ParameterList","parameters":[],"src":"2825:0:16"},"scope":6854,"src":"2739:87:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"84e6c8ff","id":6836,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawAssets","nameLocation":"2840:14:16","nodeType":"FunctionDefinition","parameters":{"id":6830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6826,"mutability":"mutable","name":"assets","nameLocation":"2863:6:16","nodeType":"VariableDeclaration","scope":6836,"src":"2855:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6825,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6829,"mutability":"mutable","name":"_strategies","nameLocation":"2888:11:16","nodeType":"VariableDeclaration","scope":6836,"src":"2871:28:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6827,"name":"address","nodeType":"ElementaryTypeName","src":"2871:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6828,"nodeType":"ArrayTypeName","src":"2871:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2854:46:16"},"returnParameters":{"id":6835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6836,"src":"2919:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6831,"name":"uint256","nodeType":"ElementaryTypeName","src":"2919:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6836,"src":"2928:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6833,"name":"uint256","nodeType":"ElementaryTypeName","src":"2928:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2918:18:16"},"scope":6854,"src":"2831:106:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"28116b69","id":6853,"implemented":false,"kind":"function","modifiers":[],"name":"finalizeRedeem","nameLocation":"2951:14:16","nodeType":"FunctionDefinition","parameters":{"id":6851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6838,"mutability":"mutable","name":"receiver","nameLocation":"2974:8:16","nodeType":"VariableDeclaration","scope":6853,"src":"2966:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6837,"name":"address","nodeType":"ElementaryTypeName","src":"2966:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6840,"mutability":"mutable","name":"owner","nameLocation":"2992:5:16","nodeType":"VariableDeclaration","scope":6853,"src":"2984:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6839,"name":"address","nodeType":"ElementaryTypeName","src":"2984:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6842,"mutability":"mutable","name":"sharesToBurn","nameLocation":"3007:12:16","nodeType":"VariableDeclaration","scope":6853,"src":"2999:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6841,"name":"uint256","nodeType":"ElementaryTypeName","src":"2999:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6844,"mutability":"mutable","name":"assets","nameLocation":"3029:6:16","nodeType":"VariableDeclaration","scope":6853,"src":"3021:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6843,"name":"uint256","nodeType":"ElementaryTypeName","src":"3021:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6846,"mutability":"mutable","name":"requestedAssets","nameLocation":"3045:15:16","nodeType":"VariableDeclaration","scope":6853,"src":"3037:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6845,"name":"uint256","nodeType":"ElementaryTypeName","src":"3037:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6848,"mutability":"mutable","name":"currTotalIdle","nameLocation":"3070:13:16","nodeType":"VariableDeclaration","scope":6853,"src":"3062:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6847,"name":"uint256","nodeType":"ElementaryTypeName","src":"3062:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6850,"mutability":"mutable","name":"maxLoss","nameLocation":"3093:7:16","nodeType":"VariableDeclaration","scope":6853,"src":"3085:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6849,"name":"uint256","nodeType":"ElementaryTypeName","src":"3085:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2965:136:16"},"returnParameters":{"id":6852,"nodeType":"ParameterList","parameters":[],"src":"3110:0:16"},"scope":6854,"src":"2942:169:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6855,"src":"93:3022:16","usedErrors":[]}],"src":"36:3079:16"},"id":16},"contracts/Interfaces/IStrategy.sol":{"ast":{"absolutePath":"contracts/Interfaces/IStrategy.sol","exportedSymbols":{"IStrategy":[6929]},"id":6930,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":6856,"literals":["solidity","^","0.8",".16"],"nodeType":"PragmaDirective","src":"36:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IStrategy","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6929,"linearizedBaseContracts":[6929],"name":"IStrategy","nameLocation":"72:9:17","nodeType":"ContractDefinition","nodes":[{"functionSelector":"ba087652","id":6867,"implemented":false,"kind":"function","modifiers":[],"name":"redeem","nameLocation":"97:6:17","nodeType":"FunctionDefinition","parameters":{"id":6863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6858,"mutability":"mutable","name":"shares","nameLocation":"112:6:17","nodeType":"VariableDeclaration","scope":6867,"src":"104:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6857,"name":"uint256","nodeType":"ElementaryTypeName","src":"104:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6860,"mutability":"mutable","name":"receiver","nameLocation":"128:8:17","nodeType":"VariableDeclaration","scope":6867,"src":"120:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6859,"name":"address","nodeType":"ElementaryTypeName","src":"120:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6862,"mutability":"mutable","name":"owner","nameLocation":"146:5:17","nodeType":"VariableDeclaration","scope":6867,"src":"138:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6861,"name":"address","nodeType":"ElementaryTypeName","src":"138:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"103:49:17"},"returnParameters":{"id":6866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6867,"src":"171:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6864,"name":"uint256","nodeType":"ElementaryTypeName","src":"171:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"170:9:17"},"scope":6929,"src":"88:92:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6e553f65","id":6876,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"194:7:17","nodeType":"FunctionDefinition","parameters":{"id":6872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6869,"mutability":"mutable","name":"assets","nameLocation":"210:6:17","nodeType":"VariableDeclaration","scope":6876,"src":"202:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6868,"name":"uint256","nodeType":"ElementaryTypeName","src":"202:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6871,"mutability":"mutable","name":"receiver","nameLocation":"226:8:17","nodeType":"VariableDeclaration","scope":6876,"src":"218:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6870,"name":"address","nodeType":"ElementaryTypeName","src":"218:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"201:34:17"},"returnParameters":{"id":6875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6876,"src":"254:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6873,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"253:9:17"},"scope":6929,"src":"185:78:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"38d52e0f","id":6881,"implemented":false,"kind":"function","modifiers":[],"name":"asset","nameLocation":"277:5:17","nodeType":"FunctionDefinition","parameters":{"id":6877,"nodeType":"ParameterList","parameters":[],"src":"282:2:17"},"returnParameters":{"id":6880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6881,"src":"308:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6878,"name":"address","nodeType":"ElementaryTypeName","src":"308:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"307:9:17"},"scope":6929,"src":"268:49:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":6888,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"331:9:17","nodeType":"FunctionDefinition","parameters":{"id":6884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6883,"mutability":"mutable","name":"owner","nameLocation":"349:5:17","nodeType":"VariableDeclaration","scope":6888,"src":"341:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6882,"name":"address","nodeType":"ElementaryTypeName","src":"341:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"340:15:17"},"returnParameters":{"id":6887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6888,"src":"379:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6885,"name":"uint256","nodeType":"ElementaryTypeName","src":"379:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"378:9:17"},"scope":6929,"src":"322:66:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"402d267d","id":6895,"implemented":false,"kind":"function","modifiers":[],"name":"maxDeposit","nameLocation":"402:10:17","nodeType":"FunctionDefinition","parameters":{"id":6891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6890,"mutability":"mutable","name":"receiver","nameLocation":"421:8:17","nodeType":"VariableDeclaration","scope":6895,"src":"413:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6889,"name":"address","nodeType":"ElementaryTypeName","src":"413:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"412:18:17"},"returnParameters":{"id":6894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6895,"src":"454:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6892,"name":"uint256","nodeType":"ElementaryTypeName","src":"454:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"453:9:17"},"scope":6929,"src":"393:70:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"01e1d114","id":6900,"implemented":false,"kind":"function","modifiers":[],"name":"totalAssets","nameLocation":"477:11:17","nodeType":"FunctionDefinition","parameters":{"id":6896,"nodeType":"ParameterList","parameters":[],"src":"488:2:17"},"returnParameters":{"id":6899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6900,"src":"514:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6897,"name":"uint256","nodeType":"ElementaryTypeName","src":"514:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"513:9:17"},"scope":6929,"src":"468:55:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"07a2d13a","id":6907,"implemented":false,"kind":"function","modifiers":[],"name":"convertToAssets","nameLocation":"537:15:17","nodeType":"FunctionDefinition","parameters":{"id":6903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6902,"mutability":"mutable","name":"shares","nameLocation":"561:6:17","nodeType":"VariableDeclaration","scope":6907,"src":"553:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6901,"name":"uint256","nodeType":"ElementaryTypeName","src":"553:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"552:16:17"},"returnParameters":{"id":6906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6907,"src":"592:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6904,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"591:9:17"},"scope":6929,"src":"528:73:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c6e6f592","id":6914,"implemented":false,"kind":"function","modifiers":[],"name":"convertToShares","nameLocation":"615:15:17","nodeType":"FunctionDefinition","parameters":{"id":6910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6909,"mutability":"mutable","name":"assets","nameLocation":"639:6:17","nodeType":"VariableDeclaration","scope":6914,"src":"631:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6908,"name":"uint256","nodeType":"ElementaryTypeName","src":"631:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"630:16:17"},"returnParameters":{"id":6913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6914,"src":"670:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6911,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"669:9:17"},"scope":6929,"src":"606:73:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0a28a477","id":6921,"implemented":false,"kind":"function","modifiers":[],"name":"previewWithdraw","nameLocation":"693:15:17","nodeType":"FunctionDefinition","parameters":{"id":6917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6916,"mutability":"mutable","name":"assets","nameLocation":"717:6:17","nodeType":"VariableDeclaration","scope":6921,"src":"709:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6915,"name":"uint256","nodeType":"ElementaryTypeName","src":"709:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"708:16:17"},"returnParameters":{"id":6920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6921,"src":"748:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6918,"name":"uint256","nodeType":"ElementaryTypeName","src":"748:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"747:9:17"},"scope":6929,"src":"684:73:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d905777e","id":6928,"implemented":false,"kind":"function","modifiers":[],"name":"maxRedeem","nameLocation":"771:9:17","nodeType":"FunctionDefinition","parameters":{"id":6924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6923,"mutability":"mutable","name":"owner","nameLocation":"789:5:17","nodeType":"VariableDeclaration","scope":6928,"src":"781:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6922,"name":"address","nodeType":"ElementaryTypeName","src":"781:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"780:15:17"},"returnParameters":{"id":6927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6928,"src":"819:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6925,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:17"},"scope":6929,"src":"762:66:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6930,"src":"62:768:17","usedErrors":[]}],"src":"36:794:17"},"id":17},"contracts/Interfaces/IStrategyManager.sol":{"ast":{"absolutePath":"contracts/Interfaces/IStrategyManager.sol","exportedSymbols":{"IStrategyManager":[6944]},"id":6945,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":6931,"literals":["solidity","^","0.8",".16"],"nodeType":"PragmaDirective","src":"36:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IStrategyManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6944,"linearizedBaseContracts":[6944],"name":"IStrategyManager","nameLocation":"72:16:18","nodeType":"ContractDefinition","nodes":[{"functionSelector":"223e5479","id":6936,"implemented":false,"kind":"function","modifiers":[],"name":"addStrategy","nameLocation":"104:11:18","nodeType":"FunctionDefinition","parameters":{"id":6934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6933,"mutability":"mutable","name":"newStrategy","nameLocation":"124:11:18","nodeType":"VariableDeclaration","scope":6936,"src":"116:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6932,"name":"address","nodeType":"ElementaryTypeName","src":"116:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"115:21:18"},"returnParameters":{"id":6935,"nodeType":"ParameterList","parameters":[],"src":"145:0:18"},"scope":6944,"src":"95:51:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f42c77ae","id":6943,"implemented":false,"kind":"function","modifiers":[],"name":"revokeStrategy","nameLocation":"160:14:18","nodeType":"FunctionDefinition","parameters":{"id":6941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6938,"mutability":"mutable","name":"strategy","nameLocation":"183:8:18","nodeType":"VariableDeclaration","scope":6943,"src":"175:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6937,"name":"address","nodeType":"ElementaryTypeName","src":"175:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6940,"mutability":"mutable","name":"force","nameLocation":"198:5:18","nodeType":"VariableDeclaration","scope":6943,"src":"193:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6939,"name":"bool","nodeType":"ElementaryTypeName","src":"193:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"174:30:18"},"returnParameters":{"id":6942,"nodeType":"ParameterList","parameters":[],"src":"213:0:18"},"scope":6944,"src":"151:63:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6945,"src":"62:154:18","usedErrors":[]}],"src":"36:180:18"},"id":18},"contracts/Interfaces/IVault.sol":{"ast":{"absolutePath":"contracts/Interfaces/IVault.sol","exportedSymbols":{"FeeAssessment":[7743],"IERC4626":[6543],"IVault":[7192],"RoleStatusChange":[7769],"Rounding":[7772],"ShareManagement":[7750],"StrategyChangeType":[7766],"StrategyParams":[7734],"WithdrawalState":[7763]},"id":7193,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":6946,"literals":["solidity","^","0.8",".16"],"nodeType":"PragmaDirective","src":"36:24:19"},{"absolutePath":"contracts/Interfaces/IERC4626.sol","file":"./IERC4626.sol","id":6948,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7193,"sourceUnit":6544,"src":"62:40:19","symbolAliases":[{"foreign":{"id":6947,"name":"IERC4626","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6543,"src":"70:8:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/VaultStructs.sol","file":"../VaultStructs.sol","id":6949,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7193,"sourceUnit":7773,"src":"103:29:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6950,"name":"IERC4626","nameLocations":["154:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":6543,"src":"154:8:19"},"id":6951,"nodeType":"InheritanceSpecifier","src":"154:8:19"}],"canonicalName":"IVault","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":7192,"linearizedBaseContracts":[7192,6543,556,531],"name":"IVault","nameLocation":"144:6:19","nodeType":"ContractDefinition","nodes":[{"functionSelector":"48ea7127","id":6956,"implemented":false,"kind":"function","modifiers":[],"name":"setAccountant","nameLocation":"178:13:19","nodeType":"FunctionDefinition","parameters":{"id":6954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6953,"mutability":"mutable","name":"newAccountant","nameLocation":"200:13:19","nodeType":"VariableDeclaration","scope":6956,"src":"192:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6952,"name":"address","nodeType":"ElementaryTypeName","src":"192:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"191:23:19"},"returnParameters":{"id":6955,"nodeType":"ParameterList","parameters":[],"src":"223:0:19"},"scope":7192,"src":"169:55:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"633f228c","id":6962,"implemented":false,"kind":"function","modifiers":[],"name":"setDefaultQueue","nameLocation":"239:15:19","nodeType":"FunctionDefinition","parameters":{"id":6960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6959,"mutability":"mutable","name":"newDefaultQueue","nameLocation":"272:15:19","nodeType":"VariableDeclaration","scope":6962,"src":"255:32:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6957,"name":"address","nodeType":"ElementaryTypeName","src":"255:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6958,"nodeType":"ArrayTypeName","src":"255:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"254:34:19"},"returnParameters":{"id":6961,"nodeType":"ParameterList","parameters":[],"src":"297:0:19"},"scope":7192,"src":"230:68:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9bbca884","id":6967,"implemented":false,"kind":"function","modifiers":[],"name":"setUseDefaultQueue","nameLocation":"313:18:19","nodeType":"FunctionDefinition","parameters":{"id":6965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6967,"src":"332:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6963,"name":"bool","nodeType":"ElementaryTypeName","src":"332:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"331:6:19"},"returnParameters":{"id":6966,"nodeType":"ParameterList","parameters":[],"src":"346:0:19"},"scope":7192,"src":"304:43:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bdc8144b","id":6972,"implemented":false,"kind":"function","modifiers":[],"name":"setDepositLimit","nameLocation":"362:15:19","nodeType":"FunctionDefinition","parameters":{"id":6970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6969,"mutability":"mutable","name":"depositLimit","nameLocation":"386:12:19","nodeType":"VariableDeclaration","scope":6972,"src":"378:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6968,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"377:22:19"},"returnParameters":{"id":6971,"nodeType":"ParameterList","parameters":[],"src":"408:0:19"},"scope":7192,"src":"353:56:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2d772168","id":6977,"implemented":false,"kind":"function","modifiers":[],"name":"setDepositLimitModule","nameLocation":"424:21:19","nodeType":"FunctionDefinition","parameters":{"id":6975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6974,"mutability":"mutable","name":"newDepositLimitModule","nameLocation":"463:21:19","nodeType":"VariableDeclaration","scope":6977,"src":"455:29:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6973,"name":"address","nodeType":"ElementaryTypeName","src":"455:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"445:45:19"},"returnParameters":{"id":6976,"nodeType":"ParameterList","parameters":[],"src":"499:0:19"},"scope":7192,"src":"415:85:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4bbd71e9","id":6982,"implemented":false,"kind":"function","modifiers":[],"name":"setWithdrawLimitModule","nameLocation":"515:22:19","nodeType":"FunctionDefinition","parameters":{"id":6980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6979,"mutability":"mutable","name":"newWithdrawLimitModule","nameLocation":"555:22:19","nodeType":"VariableDeclaration","scope":6982,"src":"547:30:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6978,"name":"address","nodeType":"ElementaryTypeName","src":"547:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"537:46:19"},"returnParameters":{"id":6981,"nodeType":"ParameterList","parameters":[],"src":"592:0:19"},"scope":7192,"src":"506:87:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8212fd43","id":6987,"implemented":false,"kind":"function","modifiers":[],"name":"setMinimumTotalIdle","nameLocation":"608:19:19","nodeType":"FunctionDefinition","parameters":{"id":6985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6984,"mutability":"mutable","name":"minimumTotalIdle","nameLocation":"636:16:19","nodeType":"VariableDeclaration","scope":6987,"src":"628:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6983,"name":"uint256","nodeType":"ElementaryTypeName","src":"628:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"627:26:19"},"returnParameters":{"id":6986,"nodeType":"ParameterList","parameters":[],"src":"662:0:19"},"scope":7192,"src":"599:64:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"df69b22a","id":6992,"implemented":false,"kind":"function","modifiers":[],"name":"setProfitMaxUnlockTime","nameLocation":"678:22:19","nodeType":"FunctionDefinition","parameters":{"id":6990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6989,"mutability":"mutable","name":"newProfitMaxUnlockTime","nameLocation":"718:22:19","nodeType":"VariableDeclaration","scope":6992,"src":"710:30:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6988,"name":"uint256","nodeType":"ElementaryTypeName","src":"710:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"700:46:19"},"returnParameters":{"id":6991,"nodeType":"ParameterList","parameters":[],"src":"755:0:19"},"scope":7192,"src":"669:87:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a73f7f8a","id":6999,"implemented":false,"kind":"function","modifiers":[],"name":"addRole","nameLocation":"771:7:19","nodeType":"FunctionDefinition","parameters":{"id":6997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6994,"mutability":"mutable","name":"account","nameLocation":"787:7:19","nodeType":"VariableDeclaration","scope":6999,"src":"779:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6993,"name":"address","nodeType":"ElementaryTypeName","src":"779:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6996,"mutability":"mutable","name":"role","nameLocation":"804:4:19","nodeType":"VariableDeclaration","scope":6999,"src":"796:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6995,"name":"bytes32","nodeType":"ElementaryTypeName","src":"796:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"778:31:19"},"returnParameters":{"id":6998,"nodeType":"ParameterList","parameters":[],"src":"818:0:19"},"scope":7192,"src":"762:57:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6853920e","id":7006,"implemented":false,"kind":"function","modifiers":[],"name":"removeRole","nameLocation":"834:10:19","nodeType":"FunctionDefinition","parameters":{"id":7004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7001,"mutability":"mutable","name":"account","nameLocation":"853:7:19","nodeType":"VariableDeclaration","scope":7006,"src":"845:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7000,"name":"address","nodeType":"ElementaryTypeName","src":"845:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7003,"mutability":"mutable","name":"role","nameLocation":"870:4:19","nodeType":"VariableDeclaration","scope":7006,"src":"862:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7002,"name":"bytes32","nodeType":"ElementaryTypeName","src":"862:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"844:31:19"},"returnParameters":{"id":7005,"nodeType":"ParameterList","parameters":[],"src":"884:0:19"},"scope":7192,"src":"825:60:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d538e904","id":7011,"implemented":false,"kind":"function","modifiers":[],"name":"setOpenRole","nameLocation":"900:11:19","nodeType":"FunctionDefinition","parameters":{"id":7009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7008,"mutability":"mutable","name":"role","nameLocation":"920:4:19","nodeType":"VariableDeclaration","scope":7011,"src":"912:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7007,"name":"bytes32","nodeType":"ElementaryTypeName","src":"912:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"911:14:19"},"returnParameters":{"id":7010,"nodeType":"ParameterList","parameters":[],"src":"934:0:19"},"scope":7192,"src":"891:44:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c9a16ea4","id":7016,"implemented":false,"kind":"function","modifiers":[],"name":"closeOpenRole","nameLocation":"950:13:19","nodeType":"FunctionDefinition","parameters":{"id":7014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7013,"mutability":"mutable","name":"role","nameLocation":"972:4:19","nodeType":"VariableDeclaration","scope":7016,"src":"964:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7012,"name":"bytes32","nodeType":"ElementaryTypeName","src":"964:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"963:14:19"},"returnParameters":{"id":7015,"nodeType":"ParameterList","parameters":[],"src":"986:0:19"},"scope":7192,"src":"941:46:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"629b9142","id":7021,"implemented":false,"kind":"function","modifiers":[],"name":"transferRoleManager","nameLocation":"1002:19:19","nodeType":"FunctionDefinition","parameters":{"id":7019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7018,"mutability":"mutable","name":"roleManager","nameLocation":"1030:11:19","nodeType":"VariableDeclaration","scope":7021,"src":"1022:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7017,"name":"address","nodeType":"ElementaryTypeName","src":"1022:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1021:21:19"},"returnParameters":{"id":7020,"nodeType":"ParameterList","parameters":[],"src":"1051:0:19"},"scope":7192,"src":"993:59:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6d020808","id":7024,"implemented":false,"kind":"function","modifiers":[],"name":"acceptRoleManager","nameLocation":"1067:17:19","nodeType":"FunctionDefinition","parameters":{"id":7022,"nodeType":"ParameterList","parameters":[],"src":"1084:2:19"},"returnParameters":{"id":7023,"nodeType":"ParameterList","parameters":[],"src":"1095:0:19"},"scope":7192,"src":"1058:38:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b6cc2d1f","id":7033,"implemented":false,"kind":"function","modifiers":[],"name":"processReport","nameLocation":"1111:13:19","nodeType":"FunctionDefinition","parameters":{"id":7027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7026,"mutability":"mutable","name":"strategy","nameLocation":"1142:8:19","nodeType":"VariableDeclaration","scope":7033,"src":"1134:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7025,"name":"address","nodeType":"ElementaryTypeName","src":"1134:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1124:32:19"},"returnParameters":{"id":7032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7033,"src":"1175:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7028,"name":"uint256","nodeType":"ElementaryTypeName","src":"1175:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7033,"src":"1184:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7030,"name":"uint256","nodeType":"ElementaryTypeName","src":"1184:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1174:18:19"},"scope":7192,"src":"1102:91:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"405977e7","id":7040,"implemented":false,"kind":"function","modifiers":[],"name":"buyDebt","nameLocation":"1208:7:19","nodeType":"FunctionDefinition","parameters":{"id":7038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7035,"mutability":"mutable","name":"strategy","nameLocation":"1224:8:19","nodeType":"VariableDeclaration","scope":7040,"src":"1216:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7034,"name":"address","nodeType":"ElementaryTypeName","src":"1216:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7037,"mutability":"mutable","name":"amount","nameLocation":"1242:6:19","nodeType":"VariableDeclaration","scope":7040,"src":"1234:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7036,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1215:34:19"},"returnParameters":{"id":7039,"nodeType":"ParameterList","parameters":[],"src":"1258:0:19"},"scope":7192,"src":"1199:60:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"223e5479","id":7045,"implemented":false,"kind":"function","modifiers":[],"name":"addStrategy","nameLocation":"1274:11:19","nodeType":"FunctionDefinition","parameters":{"id":7043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7042,"mutability":"mutable","name":"newStrategy","nameLocation":"1294:11:19","nodeType":"VariableDeclaration","scope":7045,"src":"1286:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7041,"name":"address","nodeType":"ElementaryTypeName","src":"1286:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1285:21:19"},"returnParameters":{"id":7044,"nodeType":"ParameterList","parameters":[],"src":"1315:0:19"},"scope":7192,"src":"1265:51:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bb994d48","id":7050,"implemented":false,"kind":"function","modifiers":[],"name":"revokeStrategy","nameLocation":"1331:14:19","nodeType":"FunctionDefinition","parameters":{"id":7048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7047,"mutability":"mutable","name":"strategy","nameLocation":"1354:8:19","nodeType":"VariableDeclaration","scope":7050,"src":"1346:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7046,"name":"address","nodeType":"ElementaryTypeName","src":"1346:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1345:18:19"},"returnParameters":{"id":7049,"nodeType":"ParameterList","parameters":[],"src":"1372:0:19"},"scope":7192,"src":"1322:51:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"16b87ac0","id":7055,"implemented":false,"kind":"function","modifiers":[],"name":"forceRevokeStrategy","nameLocation":"1388:19:19","nodeType":"FunctionDefinition","parameters":{"id":7053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7052,"mutability":"mutable","name":"strategy","nameLocation":"1416:8:19","nodeType":"VariableDeclaration","scope":7055,"src":"1408:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7051,"name":"address","nodeType":"ElementaryTypeName","src":"1408:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1407:18:19"},"returnParameters":{"id":7054,"nodeType":"ParameterList","parameters":[],"src":"1434:0:19"},"scope":7192,"src":"1379:56:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f6d7bfa0","id":7062,"implemented":false,"kind":"function","modifiers":[],"name":"updateMaxDebtForStrategy","nameLocation":"1450:24:19","nodeType":"FunctionDefinition","parameters":{"id":7060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7057,"mutability":"mutable","name":"strategy","nameLocation":"1492:8:19","nodeType":"VariableDeclaration","scope":7062,"src":"1484:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7056,"name":"address","nodeType":"ElementaryTypeName","src":"1484:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7059,"mutability":"mutable","name":"newMaxDebt","nameLocation":"1518:10:19","nodeType":"VariableDeclaration","scope":7062,"src":"1510:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7058,"name":"uint256","nodeType":"ElementaryTypeName","src":"1510:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1474:60:19"},"returnParameters":{"id":7061,"nodeType":"ParameterList","parameters":[],"src":"1543:0:19"},"scope":7192,"src":"1441:103:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"46e6ac49","id":7071,"implemented":false,"kind":"function","modifiers":[],"name":"updateDebt","nameLocation":"1559:10:19","nodeType":"FunctionDefinition","parameters":{"id":7067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7064,"mutability":"mutable","name":"strategy","nameLocation":"1587:8:19","nodeType":"VariableDeclaration","scope":7071,"src":"1579:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7063,"name":"address","nodeType":"ElementaryTypeName","src":"1579:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7066,"mutability":"mutable","name":"targetDebt","nameLocation":"1613:10:19","nodeType":"VariableDeclaration","scope":7071,"src":"1605:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7065,"name":"uint256","nodeType":"ElementaryTypeName","src":"1605:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1569:60:19"},"returnParameters":{"id":7070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7071,"src":"1648:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7068,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:9:19"},"scope":7192,"src":"1550:107:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e5236cc9","id":7074,"implemented":false,"kind":"function","modifiers":[],"name":"shutdownVault","nameLocation":"1672:13:19","nodeType":"FunctionDefinition","parameters":{"id":7072,"nodeType":"ParameterList","parameters":[],"src":"1685:2:19"},"returnParameters":{"id":7073,"nodeType":"ParameterList","parameters":[],"src":"1696:0:19"},"scope":7192,"src":"1663:34:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6504],"functionSelector":"d81a09f6","id":7090,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"1759:8:19","nodeType":"FunctionDefinition","parameters":{"id":7086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7076,"mutability":"mutable","name":"assets","nameLocation":"1785:6:19","nodeType":"VariableDeclaration","scope":7090,"src":"1777:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7075,"name":"uint256","nodeType":"ElementaryTypeName","src":"1777:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7078,"mutability":"mutable","name":"receiver","nameLocation":"1809:8:19","nodeType":"VariableDeclaration","scope":7090,"src":"1801:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7077,"name":"address","nodeType":"ElementaryTypeName","src":"1801:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7080,"mutability":"mutable","name":"owner","nameLocation":"1835:5:19","nodeType":"VariableDeclaration","scope":7090,"src":"1827:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7079,"name":"address","nodeType":"ElementaryTypeName","src":"1827:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7082,"mutability":"mutable","name":"maxLoss","nameLocation":"1858:7:19","nodeType":"VariableDeclaration","scope":7090,"src":"1850:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7081,"name":"uint256","nodeType":"ElementaryTypeName","src":"1850:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7085,"mutability":"mutable","name":"strategies","nameLocation":"1892:10:19","nodeType":"VariableDeclaration","scope":7090,"src":"1875:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7083,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7084,"nodeType":"ArrayTypeName","src":"1875:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1767:141:19"},"returnParameters":{"id":7089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7090,"src":"1927:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7087,"name":"uint256","nodeType":"ElementaryTypeName","src":"1927:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1926:9:19"},"scope":7192,"src":"1750:186:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6542],"functionSelector":"06580f2d","id":7106,"implemented":false,"kind":"function","modifiers":[],"name":"redeem","nameLocation":"1951:6:19","nodeType":"FunctionDefinition","parameters":{"id":7102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7092,"mutability":"mutable","name":"shares","nameLocation":"1975:6:19","nodeType":"VariableDeclaration","scope":7106,"src":"1967:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7091,"name":"uint256","nodeType":"ElementaryTypeName","src":"1967:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7094,"mutability":"mutable","name":"receiver","nameLocation":"1999:8:19","nodeType":"VariableDeclaration","scope":7106,"src":"1991:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7093,"name":"address","nodeType":"ElementaryTypeName","src":"1991:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7096,"mutability":"mutable","name":"owner","nameLocation":"2025:5:19","nodeType":"VariableDeclaration","scope":7106,"src":"2017:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7095,"name":"address","nodeType":"ElementaryTypeName","src":"2017:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7098,"mutability":"mutable","name":"maxLoss","nameLocation":"2048:7:19","nodeType":"VariableDeclaration","scope":7106,"src":"2040:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7097,"name":"uint256","nodeType":"ElementaryTypeName","src":"2040:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7101,"mutability":"mutable","name":"strategies","nameLocation":"2082:10:19","nodeType":"VariableDeclaration","scope":7106,"src":"2065:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7099,"name":"address","nodeType":"ElementaryTypeName","src":"2065:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7100,"nodeType":"ArrayTypeName","src":"2065:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1957:141:19"},"returnParameters":{"id":7105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7106,"src":"2117:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7103,"name":"uint256","nodeType":"ElementaryTypeName","src":"2117:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2116:9:19"},"scope":7192,"src":"1942:184:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"39509351","id":7115,"implemented":false,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"2186:17:19","nodeType":"FunctionDefinition","parameters":{"id":7111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7108,"mutability":"mutable","name":"spender","nameLocation":"2221:7:19","nodeType":"VariableDeclaration","scope":7115,"src":"2213:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7107,"name":"address","nodeType":"ElementaryTypeName","src":"2213:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7110,"mutability":"mutable","name":"amount","nameLocation":"2246:6:19","nodeType":"VariableDeclaration","scope":7115,"src":"2238:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7109,"name":"uint256","nodeType":"ElementaryTypeName","src":"2238:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2203:55:19"},"returnParameters":{"id":7114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7115,"src":"2277:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7112,"name":"bool","nodeType":"ElementaryTypeName","src":"2277:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2276:6:19"},"scope":7192,"src":"2177:106:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a457c2d7","id":7124,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"2298:17:19","nodeType":"FunctionDefinition","parameters":{"id":7120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7117,"mutability":"mutable","name":"spender","nameLocation":"2333:7:19","nodeType":"VariableDeclaration","scope":7124,"src":"2325:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7116,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7119,"mutability":"mutable","name":"amount","nameLocation":"2358:6:19","nodeType":"VariableDeclaration","scope":7124,"src":"2350:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7118,"name":"uint256","nodeType":"ElementaryTypeName","src":"2350:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2315:55:19"},"returnParameters":{"id":7123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7124,"src":"2389:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7121,"name":"bool","nodeType":"ElementaryTypeName","src":"2389:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2388:6:19"},"scope":7192,"src":"2289:106:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d505accf","id":7143,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"2410:6:19","nodeType":"FunctionDefinition","parameters":{"id":7139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7126,"mutability":"mutable","name":"owner","nameLocation":"2434:5:19","nodeType":"VariableDeclaration","scope":7143,"src":"2426:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7125,"name":"address","nodeType":"ElementaryTypeName","src":"2426:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7128,"mutability":"mutable","name":"spender","nameLocation":"2457:7:19","nodeType":"VariableDeclaration","scope":7143,"src":"2449:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7127,"name":"address","nodeType":"ElementaryTypeName","src":"2449:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7130,"mutability":"mutable","name":"amount","nameLocation":"2482:6:19","nodeType":"VariableDeclaration","scope":7143,"src":"2474:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7129,"name":"uint256","nodeType":"ElementaryTypeName","src":"2474:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7132,"mutability":"mutable","name":"deadline","nameLocation":"2506:8:19","nodeType":"VariableDeclaration","scope":7143,"src":"2498:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7131,"name":"uint256","nodeType":"ElementaryTypeName","src":"2498:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7134,"mutability":"mutable","name":"v","nameLocation":"2530:1:19","nodeType":"VariableDeclaration","scope":7143,"src":"2524:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7133,"name":"uint8","nodeType":"ElementaryTypeName","src":"2524:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7136,"mutability":"mutable","name":"r","nameLocation":"2549:1:19","nodeType":"VariableDeclaration","scope":7143,"src":"2541:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2541:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7138,"mutability":"mutable","name":"s","nameLocation":"2568:1:19","nodeType":"VariableDeclaration","scope":7143,"src":"2560:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2416:159:19"},"returnParameters":{"id":7142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7143,"src":"2594:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7140,"name":"bool","nodeType":"ElementaryTypeName","src":"2594:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2593:6:19"},"scope":7192,"src":"2401:199:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6479],"functionSelector":"65cb6765","id":7155,"implemented":false,"kind":"function","modifiers":[],"name":"maxWithdraw","nameLocation":"2615:11:19","nodeType":"FunctionDefinition","parameters":{"id":7151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7145,"mutability":"mutable","name":"owner","nameLocation":"2644:5:19","nodeType":"VariableDeclaration","scope":7155,"src":"2636:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7144,"name":"address","nodeType":"ElementaryTypeName","src":"2636:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7147,"mutability":"mutable","name":"maxLoss","nameLocation":"2667:7:19","nodeType":"VariableDeclaration","scope":7155,"src":"2659:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7146,"name":"uint256","nodeType":"ElementaryTypeName","src":"2659:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7150,"mutability":"mutable","name":"strategies","nameLocation":"2701:10:19","nodeType":"VariableDeclaration","scope":7155,"src":"2684:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7148,"name":"address","nodeType":"ElementaryTypeName","src":"2684:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7149,"nodeType":"ArrayTypeName","src":"2684:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2626:91:19"},"returnParameters":{"id":7154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7155,"src":"2736:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7152,"name":"uint256","nodeType":"ElementaryTypeName","src":"2736:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2735:9:19"},"scope":7192,"src":"2606:139:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6517],"functionSelector":"34b5fab6","id":7167,"implemented":false,"kind":"function","modifiers":[],"name":"maxRedeem","nameLocation":"2760:9:19","nodeType":"FunctionDefinition","parameters":{"id":7163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7157,"mutability":"mutable","name":"owner","nameLocation":"2787:5:19","nodeType":"VariableDeclaration","scope":7167,"src":"2779:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7156,"name":"address","nodeType":"ElementaryTypeName","src":"2779:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7159,"mutability":"mutable","name":"maxLoss","nameLocation":"2810:7:19","nodeType":"VariableDeclaration","scope":7167,"src":"2802:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7158,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7162,"mutability":"mutable","name":"strategies","nameLocation":"2844:10:19","nodeType":"VariableDeclaration","scope":7167,"src":"2827:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7160,"name":"address","nodeType":"ElementaryTypeName","src":"2827:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7161,"nodeType":"ArrayTypeName","src":"2827:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2769:91:19"},"returnParameters":{"id":7166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7167,"src":"2879:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7164,"name":"uint256","nodeType":"ElementaryTypeName","src":"2879:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2878:9:19"},"scope":7192,"src":"2751:137:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d9a0e97a","id":7172,"implemented":false,"kind":"function","modifiers":[],"name":"unlockedShares","nameLocation":"2903:14:19","nodeType":"FunctionDefinition","parameters":{"id":7168,"nodeType":"ParameterList","parameters":[],"src":"2917:2:19"},"returnParameters":{"id":7171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7172,"src":"2943:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7169,"name":"uint256","nodeType":"ElementaryTypeName","src":"2943:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2942:9:19"},"scope":7192,"src":"2894:58:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"99530b06","id":7177,"implemented":false,"kind":"function","modifiers":[],"name":"pricePerShare","nameLocation":"2967:13:19","nodeType":"FunctionDefinition","parameters":{"id":7173,"nodeType":"ParameterList","parameters":[],"src":"2980:2:19"},"returnParameters":{"id":7176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7177,"src":"3006:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7174,"name":"uint256","nodeType":"ElementaryTypeName","src":"3006:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3005:9:19"},"scope":7192,"src":"2958:57:19","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[480],"functionSelector":"18160ddd","id":7182,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3030:11:19","nodeType":"FunctionDefinition","parameters":{"id":7178,"nodeType":"ParameterList","parameters":[],"src":"3041:2:19"},"returnParameters":{"id":7181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7182,"src":"3067:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7179,"name":"uint256","nodeType":"ElementaryTypeName","src":"3067:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3066:9:19"},"scope":7192,"src":"3021:55:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5a569099","id":7191,"implemented":false,"kind":"function","modifiers":[],"name":"assessShareOfUnrealisedLosses","nameLocation":"3091:29:19","nodeType":"FunctionDefinition","parameters":{"id":7187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7184,"mutability":"mutable","name":"strategy","nameLocation":"3138:8:19","nodeType":"VariableDeclaration","scope":7191,"src":"3130:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7183,"name":"address","nodeType":"ElementaryTypeName","src":"3130:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7186,"mutability":"mutable","name":"assetsNeeded","nameLocation":"3164:12:19","nodeType":"VariableDeclaration","scope":7191,"src":"3156:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7185,"name":"uint256","nodeType":"ElementaryTypeName","src":"3156:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3120:62:19"},"returnParameters":{"id":7190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7191,"src":"3206:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7188,"name":"uint256","nodeType":"ElementaryTypeName","src":"3206:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3205:9:19"},"scope":7192,"src":"3082:133:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7193,"src":"134:3083:19","usedErrors":[]}],"src":"36:3181:19"},"id":19},"contracts/Interfaces/IVaultEvents.sol":{"ast":{"absolutePath":"contracts/Interfaces/IVaultEvents.sol","exportedSymbols":{"FeeAssessment":[7743],"IVaultEvents":[7293],"RoleStatusChange":[7769],"Rounding":[7772],"ShareManagement":[7750],"StrategyChangeType":[7766],"StrategyParams":[7734],"WithdrawalState":[7763]},"id":7294,"license":"AGPL 3.0","nodeType":"SourceUnit","nodes":[{"id":7194,"literals":["solidity","^","0.8",".16"],"nodeType":"PragmaDirective","src":"63:24:20"},{"absolutePath":"contracts/VaultStructs.sol","file":"../VaultStructs.sol","id":7195,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7294,"sourceUnit":7773,"src":"89:29:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IVaultEvents","contractDependencies":[],"contractKind":"interface","fullyImplemented":true,"id":7293,"linearizedBaseContracts":[7293],"name":"IVaultEvents","nameLocation":"130:12:20","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"bcf55f13710eed7eda89416c2984da5475fcff67e96fe85e56eed808559a5222","id":7202,"name":"StrategyChanged","nameLocation":"178:15:20","nodeType":"EventDefinition","parameters":{"id":7201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7197,"indexed":true,"mutability":"mutable","name":"strategy","nameLocation":"210:8:20","nodeType":"VariableDeclaration","scope":7202,"src":"194:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7196,"name":"address","nodeType":"ElementaryTypeName","src":"194:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7200,"indexed":false,"mutability":"mutable","name":"changeType","nameLocation":"239:10:20","nodeType":"VariableDeclaration","scope":7202,"src":"220:29:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_StrategyChangeType_$7766","typeString":"enum StrategyChangeType"},"typeName":{"id":7199,"nodeType":"UserDefinedTypeName","pathNode":{"id":7198,"name":"StrategyChangeType","nameLocations":["220:18:20"],"nodeType":"IdentifierPath","referencedDeclaration":7766,"src":"220:18:20"},"referencedDeclaration":7766,"src":"220:18:20","typeDescriptions":{"typeIdentifier":"t_enum$_StrategyChangeType_$7766","typeString":"enum StrategyChangeType"}},"visibility":"internal"}],"src":"193:57:20"},"src":"172:79:20"},{"anonymous":false,"eventSelector":"7f2ad1d3ba35276f35ef140f83e3e0f17b23064fd710113d3f7a5ab30d267811","id":7218,"name":"StrategyReported","nameLocation":"262:16:20","nodeType":"EventDefinition","parameters":{"id":7217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7204,"indexed":true,"mutability":"mutable","name":"strategy","nameLocation":"304:8:20","nodeType":"VariableDeclaration","scope":7218,"src":"288:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7203,"name":"address","nodeType":"ElementaryTypeName","src":"288:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7206,"indexed":false,"mutability":"mutable","name":"gain","nameLocation":"330:4:20","nodeType":"VariableDeclaration","scope":7218,"src":"322:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7205,"name":"uint256","nodeType":"ElementaryTypeName","src":"322:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7208,"indexed":false,"mutability":"mutable","name":"loss","nameLocation":"352:4:20","nodeType":"VariableDeclaration","scope":7218,"src":"344:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7207,"name":"uint256","nodeType":"ElementaryTypeName","src":"344:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7210,"indexed":false,"mutability":"mutable","name":"currentDebt","nameLocation":"374:11:20","nodeType":"VariableDeclaration","scope":7218,"src":"366:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7209,"name":"uint256","nodeType":"ElementaryTypeName","src":"366:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7212,"indexed":false,"mutability":"mutable","name":"protocolFees","nameLocation":"403:12:20","nodeType":"VariableDeclaration","scope":7218,"src":"395:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7211,"name":"uint256","nodeType":"ElementaryTypeName","src":"395:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7214,"indexed":false,"mutability":"mutable","name":"totalFees","nameLocation":"433:9:20","nodeType":"VariableDeclaration","scope":7218,"src":"425:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7213,"name":"uint256","nodeType":"ElementaryTypeName","src":"425:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7216,"indexed":false,"mutability":"mutable","name":"totalRefunds","nameLocation":"460:12:20","nodeType":"VariableDeclaration","scope":7218,"src":"452:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7215,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"278:200:20"},"src":"256:223:20"},{"anonymous":false,"eventSelector":"5e2b8821ad6e0e26207e0cb4d242d07eeb1cbb1cfd853e645bdcd27cc5484f95","id":7226,"name":"DebtUpdated","nameLocation":"520:11:20","nodeType":"EventDefinition","parameters":{"id":7225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7220,"indexed":true,"mutability":"mutable","name":"strategy","nameLocation":"557:8:20","nodeType":"VariableDeclaration","scope":7226,"src":"541:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7219,"name":"address","nodeType":"ElementaryTypeName","src":"541:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7222,"indexed":false,"mutability":"mutable","name":"currentDebt","nameLocation":"583:11:20","nodeType":"VariableDeclaration","scope":7226,"src":"575:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7221,"name":"uint256","nodeType":"ElementaryTypeName","src":"575:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7224,"indexed":false,"mutability":"mutable","name":"newDebt","nameLocation":"612:7:20","nodeType":"VariableDeclaration","scope":7226,"src":"604:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7223,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"531:94:20"},"src":"514:112:20"},{"anonymous":false,"eventSelector":"1395522074be2925cc0fe997dc4fe5d15a507c2a971e00c315e5a2e08c9b0e50","id":7232,"name":"RoleSet","nameLocation":"657:7:20","nodeType":"EventDefinition","parameters":{"id":7231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7228,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"681:7:20","nodeType":"VariableDeclaration","scope":7232,"src":"665:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7227,"name":"address","nodeType":"ElementaryTypeName","src":"665:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7230,"indexed":false,"mutability":"mutable","name":"role","nameLocation":"698:4:20","nodeType":"VariableDeclaration","scope":7232,"src":"690:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"690:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"664:39:20"},"src":"651:53:20"},{"anonymous":false,"eventSelector":"9f6d8ceb5fe3a6380949b0777bd5802511579b6fbbc87194c108a91d372f9527","id":7239,"name":"RoleStatusChanged","nameLocation":"715:17:20","nodeType":"EventDefinition","parameters":{"id":7238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7234,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"749:4:20","nodeType":"VariableDeclaration","scope":7239,"src":"733:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7233,"name":"bytes32","nodeType":"ElementaryTypeName","src":"733:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7237,"indexed":true,"mutability":"mutable","name":"status","nameLocation":"780:6:20","nodeType":"VariableDeclaration","scope":7239,"src":"755:31:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RoleStatusChange_$7769","typeString":"enum RoleStatusChange"},"typeName":{"id":7236,"nodeType":"UserDefinedTypeName","pathNode":{"id":7235,"name":"RoleStatusChange","nameLocations":["755:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":7769,"src":"755:16:20"},"referencedDeclaration":7769,"src":"755:16:20","typeDescriptions":{"typeIdentifier":"t_enum$_RoleStatusChange_$7769","typeString":"enum RoleStatusChange"}},"visibility":"internal"}],"src":"732:55:20"},"src":"709:79:20"},{"anonymous":false,"eventSelector":"ce93baa0b608a7d420822b6b90cfcccb70574363ba4fd26ef5ac17dd465016c4","id":7243,"name":"UpdateRoleManager","nameLocation":"799:17:20","nodeType":"EventDefinition","parameters":{"id":7242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7241,"indexed":true,"mutability":"mutable","name":"roleManager","nameLocation":"833:11:20","nodeType":"VariableDeclaration","scope":7243,"src":"817:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7240,"name":"address","nodeType":"ElementaryTypeName","src":"817:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"816:29:20"},"src":"793:53:20"},{"anonymous":false,"eventSelector":"28709a2dab2a5d5e8688e96159011151c51644ab21839a8a45b449634d7c8b2b","id":7247,"name":"UpdateAccountant","nameLocation":"858:16:20","nodeType":"EventDefinition","parameters":{"id":7246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7245,"indexed":true,"mutability":"mutable","name":"accountant","nameLocation":"891:10:20","nodeType":"VariableDeclaration","scope":7247,"src":"875:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7244,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"874:28:20"},"src":"852:51:20"},{"anonymous":false,"eventSelector":"0bc0cb8c5ccee13e6a2fd26a699f57ad7ff6e454e6aae97ec41cd2eb9ebd63a5","id":7252,"name":"UpdateDefaultQueue","nameLocation":"914:18:20","nodeType":"EventDefinition","parameters":{"id":7251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7250,"indexed":false,"mutability":"mutable","name":"newDefaultQueue","nameLocation":"943:15:20","nodeType":"VariableDeclaration","scope":7252,"src":"933:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7248,"name":"address","nodeType":"ElementaryTypeName","src":"933:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7249,"nodeType":"ArrayTypeName","src":"933:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"932:27:20"},"src":"908:52:20"},{"anonymous":false,"eventSelector":"1f88e73ebc721f227812938fe07a069ec1f7136aafacb397ed460bd15dee13f1","id":7256,"name":"UpdateUseDefaultQueue","nameLocation":"971:21:20","nodeType":"EventDefinition","parameters":{"id":7255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7254,"indexed":false,"mutability":"mutable","name":"useDefaultQueue","nameLocation":"998:15:20","nodeType":"VariableDeclaration","scope":7256,"src":"993:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7253,"name":"bool","nodeType":"ElementaryTypeName","src":"993:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"992:22:20"},"src":"965:50:20"},{"anonymous":false,"eventSelector":"b3eef2123fec1523a6bbc90aceb203000154c1a4974335fe06b544c7534d4b89","id":7264,"name":"UpdatedMaxDebtForStrategy","nameLocation":"1026:25:20","nodeType":"EventDefinition","parameters":{"id":7263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7258,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1077:6:20","nodeType":"VariableDeclaration","scope":7264,"src":"1061:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7257,"name":"address","nodeType":"ElementaryTypeName","src":"1061:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7260,"indexed":true,"mutability":"mutable","name":"strategy","nameLocation":"1109:8:20","nodeType":"VariableDeclaration","scope":7264,"src":"1093:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7259,"name":"address","nodeType":"ElementaryTypeName","src":"1093:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7262,"indexed":false,"mutability":"mutable","name":"newDebt","nameLocation":"1135:7:20","nodeType":"VariableDeclaration","scope":7264,"src":"1127:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7261,"name":"uint256","nodeType":"ElementaryTypeName","src":"1127:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1051:97:20"},"src":"1020:129:20"},{"anonymous":false,"eventSelector":"ae565aab888bca5e19e25a13db7b0c9144305bf55cb0f3f4d724f730e5acdd62","id":7268,"name":"UpdateDepositLimit","nameLocation":"1160:18:20","nodeType":"EventDefinition","parameters":{"id":7267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7266,"indexed":false,"mutability":"mutable","name":"depositLimit","nameLocation":"1187:12:20","nodeType":"VariableDeclaration","scope":7268,"src":"1179:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7265,"name":"uint256","nodeType":"ElementaryTypeName","src":"1179:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1178:22:20"},"src":"1154:47:20"},{"anonymous":false,"eventSelector":"01a4494beed88920b88742cc58f2744e198f55ff192635a1fbabc6be8ffade81","id":7272,"name":"UpdateMinimumTotalIdle","nameLocation":"1212:22:20","nodeType":"EventDefinition","parameters":{"id":7271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7270,"indexed":false,"mutability":"mutable","name":"minimumTotalIdle","nameLocation":"1243:16:20","nodeType":"VariableDeclaration","scope":7272,"src":"1235:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7269,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1234:26:20"},"src":"1206:55:20"},{"anonymous":false,"eventSelector":"f361aed463da6fa20358e45c6209f1d3e16d4eca706e6eab0b0aeb338729c77a","id":7276,"name":"UpdateProfitMaxUnlockTime","nameLocation":"1272:25:20","nodeType":"EventDefinition","parameters":{"id":7275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7274,"indexed":false,"mutability":"mutable","name":"profitMaxUnlockTime","nameLocation":"1306:19:20","nodeType":"VariableDeclaration","scope":7276,"src":"1298:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7273,"name":"uint256","nodeType":"ElementaryTypeName","src":"1298:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1297:29:20"},"src":"1266:61:20"},{"anonymous":false,"eventSelector":"e94e7f88819f66c19b097748cb754149f63b1a176ed425dee1f1ee933e6d09b0","id":7282,"name":"DebtPurchased","nameLocation":"1338:13:20","nodeType":"EventDefinition","parameters":{"id":7281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7278,"indexed":true,"mutability":"mutable","name":"strategy","nameLocation":"1368:8:20","nodeType":"VariableDeclaration","scope":7282,"src":"1352:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7277,"name":"address","nodeType":"ElementaryTypeName","src":"1352:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7280,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1386:6:20","nodeType":"VariableDeclaration","scope":7282,"src":"1378:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7279,"name":"uint256","nodeType":"ElementaryTypeName","src":"1378:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1351:42:20"},"src":"1332:62:20"},{"anonymous":false,"eventSelector":"4426aa1fb73e391071491fcfe21a88b5c38a0a0333a1f6e77161470439704cf8","id":7284,"name":"Shutdown","nameLocation":"1405:8:20","nodeType":"EventDefinition","parameters":{"id":7283,"nodeType":"ParameterList","parameters":[],"src":"1413:2:20"},"src":"1399:17:20"},{"anonymous":false,"eventSelector":"777d215db24fb9fee4ded85c66b422abd7162a1caa6ed3ec4c031f6cd29ada52","id":7288,"name":"UpdateDepositLimitModule","nameLocation":"1461:24:20","nodeType":"EventDefinition","parameters":{"id":7287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7286,"indexed":true,"mutability":"mutable","name":"depositLimitModule","nameLocation":"1502:18:20","nodeType":"VariableDeclaration","scope":7288,"src":"1486:34:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7285,"name":"address","nodeType":"ElementaryTypeName","src":"1486:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1485:36:20"},"src":"1455:67:20"},{"anonymous":false,"eventSelector":"ce6e3f8beda82a13c441d76efd4a6335760f219f38c60502e6680060874e109d","id":7292,"name":"UpdateWithdrawLimitModule","nameLocation":"1533:25:20","nodeType":"EventDefinition","parameters":{"id":7291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7290,"indexed":true,"mutability":"mutable","name":"withdrawLimitModule","nameLocation":"1575:19:20","nodeType":"VariableDeclaration","scope":7292,"src":"1559:35:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7289,"name":"address","nodeType":"ElementaryTypeName","src":"1559:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1558:37:20"},"src":"1527:69:20"}],"scope":7294,"src":"120:1478:20","usedErrors":[]}],"src":"63:1535:20"},"id":20},"contracts/Interfaces/IWithdrawLimitModule.sol":{"ast":{"absolutePath":"contracts/Interfaces/IWithdrawLimitModule.sol","exportedSymbols":{"IWithdrawLimitModule":[7308]},"id":7309,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":7295,"literals":["solidity","^","0.8",".16"],"nodeType":"PragmaDirective","src":"36:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"IWithdrawLimitModule","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":7308,"linearizedBaseContracts":[7308],"name":"IWithdrawLimitModule","nameLocation":"72:20:21","nodeType":"ContractDefinition","nodes":[{"functionSelector":"2319b8cf","id":7307,"implemented":false,"kind":"function","modifiers":[],"name":"availableWithdrawLimit","nameLocation":"108:22:21","nodeType":"FunctionDefinition","parameters":{"id":7303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7297,"mutability":"mutable","name":"owner","nameLocation":"139:5:21","nodeType":"VariableDeclaration","scope":7307,"src":"131:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7296,"name":"address","nodeType":"ElementaryTypeName","src":"131:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7299,"mutability":"mutable","name":"maxLoss","nameLocation":"154:7:21","nodeType":"VariableDeclaration","scope":7307,"src":"146:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7298,"name":"uint256","nodeType":"ElementaryTypeName","src":"146:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7302,"mutability":"mutable","name":"strategies","nameLocation":"182:10:21","nodeType":"VariableDeclaration","scope":7307,"src":"163:29:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7300,"name":"address","nodeType":"ElementaryTypeName","src":"163:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7301,"nodeType":"ArrayTypeName","src":"163:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"130:63:21"},"returnParameters":{"id":7306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7307,"src":"212:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7304,"name":"uint256","nodeType":"ElementaryTypeName","src":"212:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"211:9:21"},"scope":7308,"src":"99:122:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7309,"src":"62:161:21","usedErrors":[]}],"src":"36:187:21"},"id":21},"contracts/StrategyManager.sol":{"ast":{"absolutePath":"contracts/StrategyManager.sol","exportedSymbols":{"FeeAssessment":[7743],"IERC20":[531],"IStrategy":[6929],"IStrategyManager":[6944],"IVaultEvents":[7293],"RoleStatusChange":[7769],"Rounding":[7772],"ShareManagement":[7750],"StrategyChangeType":[7766],"StrategyManager":[7555],"StrategyParams":[7734],"VaultStorage":[7723],"WithdrawalState":[7763]},"id":7556,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":7310,"literals":["solidity","^","0.8",".16"],"nodeType":"PragmaDirective","src":"39:24:22"},{"absolutePath":"contracts/VaultStorage.sol","file":"./VaultStorage.sol","id":7311,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7556,"sourceUnit":7724,"src":"65:28:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Interfaces/IVaultEvents.sol","file":"./Interfaces/IVaultEvents.sol","id":7312,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7556,"sourceUnit":7294,"src":"94:39:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Interfaces/IStrategyManager.sol","file":"./Interfaces/IStrategyManager.sol","id":7313,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7556,"sourceUnit":6945,"src":"134:43:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Interfaces/IStrategy.sol","file":"./Interfaces/IStrategy.sol","id":7314,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7556,"sourceUnit":6930,"src":"178:36:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7316,"name":"VaultStorage","nameLocations":["279:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":7723,"src":"279:12:22"},"id":7317,"nodeType":"InheritanceSpecifier","src":"279:12:22"},{"baseName":{"id":7318,"name":"IVaultEvents","nameLocations":["293:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":7293,"src":"293:12:22"},"id":7319,"nodeType":"InheritanceSpecifier","src":"293:12:22"},{"baseName":{"id":7320,"name":"IStrategyManager","nameLocations":["307:16:22"],"nodeType":"IdentifierPath","referencedDeclaration":6944,"src":"307:16:22"},"id":7321,"nodeType":"InheritanceSpecifier","src":"307:16:22"}],"canonicalName":"StrategyManager","contractDependencies":[],"contractKind":"contract","documentation":{"id":7315,"nodeType":"StructuredDocumentation","src":"216:33:22","text":"@title STRATEGY MANAGEMENT"},"fullyImplemented":true,"id":7555,"linearizedBaseContracts":[7555,6944,7293,7723],"name":"StrategyManager","nameLocation":"260:15:22","nodeType":"ContractDefinition","nodes":[{"errorSelector":"d92e233d","id":7323,"name":"ZeroAddress","nameLocation":"419:11:22","nodeType":"ErrorDefinition","parameters":{"id":7322,"nodeType":"ParameterList","parameters":[],"src":"430:2:22"},"src":"413:20:22"},{"errorSelector":"c6378420","id":7325,"name":"InactiveStrategy","nameLocation":"444:16:22","nodeType":"ErrorDefinition","parameters":{"id":7324,"nodeType":"ParameterList","parameters":[],"src":"460:2:22"},"src":"438:25:22"},{"errorSelector":"c891add2","id":7327,"name":"InvalidAsset","nameLocation":"474:12:22","nodeType":"ErrorDefinition","parameters":{"id":7326,"nodeType":"ParameterList","parameters":[],"src":"486:2:22"},"src":"468:21:22"},{"errorSelector":"c976754d","id":7329,"name":"StrategyAlreadyActive","nameLocation":"500:21:22","nodeType":"ErrorDefinition","parameters":{"id":7328,"nodeType":"ParameterList","parameters":[],"src":"521:2:22"},"src":"494:30:22"},{"errorSelector":"d518e0bc","id":7331,"name":"StrategyHasDebt","nameLocation":"535:15:22","nodeType":"ErrorDefinition","parameters":{"id":7330,"nodeType":"ParameterList","parameters":[],"src":"550:2:22"},"src":"529:24:22"},{"constant":false,"functionSelector":"4800d97f","id":7334,"mutability":"immutable","name":"ASSET","nameLocation":"657:5:22","nodeType":"VariableDeclaration","scope":7555,"src":"633:29:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"},"typeName":{"id":7333,"nodeType":"UserDefinedTypeName","pathNode":{"id":7332,"name":"IERC20","nameLocations":["633:6:22"],"nodeType":"IdentifierPath","referencedDeclaration":531,"src":"633:6:22"},"referencedDeclaration":531,"src":"633:6:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}},"visibility":"public"},{"body":{"id":7344,"nodeType":"Block","src":"710:31:22","statements":[{"expression":{"id":7342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7340,"name":"ASSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7334,"src":"720:5:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7341,"name":"_asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7337,"src":"728:6:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}},"src":"720:14:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}},"id":7343,"nodeType":"ExpressionStatement","src":"720:14:22"}]},"id":7345,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7337,"mutability":"mutable","name":"_asset","nameLocation":"697:6:22","nodeType":"VariableDeclaration","scope":7345,"src":"690:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"},"typeName":{"id":7336,"nodeType":"UserDefinedTypeName","pathNode":{"id":7335,"name":"IERC20","nameLocations":["690:6:22"],"nodeType":"IdentifierPath","referencedDeclaration":531,"src":"690:6:22"},"referencedDeclaration":531,"src":"690:6:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"680:29:22"},"returnParameters":{"id":7339,"nodeType":"ParameterList","parameters":[],"src":"710:0:22"},"scope":7555,"src":"669:72:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[6936],"body":{"id":7431,"nodeType":"Block","src":"808:903:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7351,"name":"newStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7347,"src":"822:11:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"845:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"837:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7352,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:22","typeDescriptions":{}}},"id":7355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"837:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"822:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7357,"name":"newStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7347,"src":"851:11:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":7360,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"874:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_StrategyManager_$7555","typeString":"contract StrategyManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_StrategyManager_$7555","typeString":"contract StrategyManager"}],"id":7359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"866:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7358,"name":"address","nodeType":"ElementaryTypeName","src":"866:7:22","typeDescriptions":{}}},"id":7361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"866:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"851:28:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"822:57:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7368,"nodeType":"IfStatement","src":"818:108:22","trueBody":{"id":7367,"nodeType":"Block","src":"881:45:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7364,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7323,"src":"902:11:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"902:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7366,"nodeType":"RevertStatement","src":"895:20:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":7370,"name":"newStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7347,"src":"949:11:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7369,"name":"IStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"939:9:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStrategy_$6929_$","typeString":"type(contract IStrategy)"}},"id":7371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"939:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$6929","typeString":"contract IStrategy"}},"id":7372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"962:5:22","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":6881,"src":"939:28:22","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":7373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"939:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":7376,"name":"ASSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7334,"src":"981:5:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$531","typeString":"contract IERC20"}],"id":7375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"973:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7374,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:22","typeDescriptions":{}}},"id":7377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"973:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"939:48:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7383,"nodeType":"IfStatement","src":"935:100:22","trueBody":{"id":7382,"nodeType":"Block","src":"989:46:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7379,"name":"InvalidAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7327,"src":"1010:12:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1010:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7381,"nodeType":"RevertStatement","src":"1003:21:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7384,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"1048:10:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":7386,"indexExpression":{"id":7385,"name":"newStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7347,"src":"1059:11:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1048:23:22","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":7387,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1072:10:22","memberName":"activation","nodeType":"MemberAccess","referencedDeclaration":7727,"src":"1048:34:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1086:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1048:39:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7394,"nodeType":"IfStatement","src":"1044:100:22","trueBody":{"id":7393,"nodeType":"Block","src":"1089:55:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7390,"name":"StrategyAlreadyActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7329,"src":"1110:21:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1110:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7392,"nodeType":"RevertStatement","src":"1103:30:22"}]}},{"expression":{"id":7406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7395,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"1202:10:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":7397,"indexExpression":{"id":7396,"name":"newStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7347,"src":"1213:11:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1202:23:22","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":7399,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1269:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1275:9:22","memberName":"timestamp","nodeType":"MemberAccess","src":"1269:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7401,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1310:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1316:9:22","memberName":"timestamp","nodeType":"MemberAccess","src":"1310:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":7403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1352:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":7404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1376:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7398,"name":"StrategyParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7734,"src":"1228:14:22","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_StrategyParams_$7734_storage_ptr_$","typeString":"type(struct StrategyParams storage pointer)"}},"id":7405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1257:10:22","1298:10:22","1339:11:22","1367:7:22"],"names":["activation","lastReport","currentDebt","maxDebt"],"nodeType":"FunctionCall","src":"1228:160:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_memory_ptr","typeString":"struct StrategyParams memory"}},"src":"1202:186:22","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":7407,"nodeType":"ExpressionStatement","src":"1202:186:22"},{"assignments":[7409],"declarations":[{"constant":false,"id":7409,"mutability":"mutable","name":"defaultQueueLength","nameLocation":"1468:18:22","nodeType":"VariableDeclaration","scope":7431,"src":"1460:26:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7408,"name":"uint256","nodeType":"ElementaryTypeName","src":"1460:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7412,"initialValue":{"expression":{"id":7410,"name":"defaultQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"1489:12:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1502:6:22","memberName":"length","nodeType":"MemberAccess","src":"1489:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1460:48:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7413,"name":"defaultQueueLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7409,"src":"1522:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7414,"name":"MAX_QUEUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7562,"src":"1543:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1522:30:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7424,"nodeType":"IfStatement","src":"1518:109:22","trueBody":{"id":7423,"nodeType":"Block","src":"1554:73:22","statements":[{"expression":{"id":7421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7416,"name":"defaultQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"1568:12:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7419,"indexExpression":{"id":7418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1581:20:22","subExpression":{"id":7417,"name":"defaultQueueLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7409,"src":"1581:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1568:34:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7420,"name":"newStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7347,"src":"1605:11:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1568:48:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7422,"nodeType":"ExpressionStatement","src":"1568:48:22"}]}},{"eventCall":{"arguments":[{"id":7426,"name":"newStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7347,"src":"1666:11:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7427,"name":"StrategyChangeType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7766,"src":"1679:18:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_StrategyChangeType_$7766_$","typeString":"type(enum StrategyChangeType)"}},"id":7428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1698:5:22","memberName":"ADDED","nodeType":"MemberAccess","referencedDeclaration":7764,"src":"1679:24:22","typeDescriptions":{"typeIdentifier":"t_enum$_StrategyChangeType_$7766","typeString":"enum StrategyChangeType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_StrategyChangeType_$7766","typeString":"enum StrategyChangeType"}],"id":7425,"name":"StrategyChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7202,"src":"1650:15:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_enum$_StrategyChangeType_$7766_$returns$__$","typeString":"function (address,enum StrategyChangeType)"}},"id":7429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1650:54:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7430,"nodeType":"EmitStatement","src":"1645:59:22"}]},"functionSelector":"223e5479","id":7432,"implemented":true,"kind":"function","modifiers":[],"name":"addStrategy","nameLocation":"757:11:22","nodeType":"FunctionDefinition","overrides":{"id":7349,"nodeType":"OverrideSpecifier","overrides":[],"src":"799:8:22"},"parameters":{"id":7348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7347,"mutability":"mutable","name":"newStrategy","nameLocation":"777:11:22","nodeType":"VariableDeclaration","scope":7432,"src":"769:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7346,"name":"address","nodeType":"ElementaryTypeName","src":"769:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"768:21:22"},"returnParameters":{"id":7350,"nodeType":"ParameterList","parameters":[],"src":"808:0:22"},"scope":7555,"src":"748:963:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6943],"body":{"id":7553,"nodeType":"Block","src":"1789:1427:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7440,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"1803:10:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":7442,"indexExpression":{"id":7441,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"1814:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1803:20:22","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":7443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1824:10:22","memberName":"activation","nodeType":"MemberAccess","referencedDeclaration":7727,"src":"1803:31:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1838:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1803:36:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7450,"nodeType":"IfStatement","src":"1799:92:22","trueBody":{"id":7449,"nodeType":"Block","src":"1841:50:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7446,"name":"InactiveStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7325,"src":"1862:16:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1862:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7448,"nodeType":"RevertStatement","src":"1855:25:22"}]}},{"assignments":[7452],"declarations":[{"constant":false,"id":7452,"mutability":"mutable","name":"loss","nameLocation":"1980:4:22","nodeType":"VariableDeclaration","scope":7553,"src":"1972:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7451,"name":"uint256","nodeType":"ElementaryTypeName","src":"1972:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7454,"initialValue":{"hexValue":"30","id":7453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1987:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1972:16:22"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7455,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"2002:10:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":7457,"indexExpression":{"id":7456,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"2013:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2002:20:22","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":7458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2023:11:22","memberName":"currentDebt","nodeType":"MemberAccess","referencedDeclaration":7731,"src":"2002:32:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2038:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2002:37:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":7462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2043:6:22","subExpression":{"id":7461,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7436,"src":"2044:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2002:47:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7468,"nodeType":"IfStatement","src":"1998:102:22","trueBody":{"id":7467,"nodeType":"Block","src":"2051:49:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7464,"name":"StrategyHasDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7331,"src":"2072:15:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2072:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7466,"nodeType":"RevertStatement","src":"2065:24:22"}]}},{"expression":{"id":7474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7469,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7452,"src":"2171:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":7470,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"2178:10:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":7472,"indexExpression":{"id":7471,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"2189:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2178:20:22","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":7473,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2199:11:22","memberName":"currentDebt","nodeType":"MemberAccess","referencedDeclaration":7731,"src":"2178:32:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2171:39:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7475,"nodeType":"ExpressionStatement","src":"2171:39:22"},{"expression":{"id":7478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7476,"name":"totalDebtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"2256:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7477,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7452,"src":"2275:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2256:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7479,"nodeType":"ExpressionStatement","src":"2256:23:22"},{"eventCall":{"arguments":[{"id":7481,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"2320:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":7482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2330:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7483,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7452,"src":"2333:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":7484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2339:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":7485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2342:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":7486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2345:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":7487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2348:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7480,"name":"StrategyReported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7218,"src":"2303:16:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256,uint256,uint256,uint256)"}},"id":7488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:47:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7489,"nodeType":"EmitStatement","src":"2298:52:22"},{"expression":{"id":7499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7490,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"2437:10:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams storage ref)"}},"id":7492,"indexExpression":{"id":7491,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"2448:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2437:20:22","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":7494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2501:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":7495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2528:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":7496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2556:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":7497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2580:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7493,"name":"StrategyParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7734,"src":"2460:14:22","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_StrategyParams_$7734_storage_ptr_$","typeString":"type(struct StrategyParams storage pointer)"}},"id":7498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2489:10:22","2516:10:22","2543:11:22","2571:7:22"],"names":["activation","lastReport","currentDebt","maxDebt"],"nodeType":"FunctionCall","src":"2460:132:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_memory_ptr","typeString":"struct StrategyParams memory"}},"src":"2437:155:22","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage","typeString":"struct StrategyParams storage ref"}},"id":7500,"nodeType":"ExpressionStatement","src":"2437:155:22"},{"assignments":[7505],"declarations":[{"constant":false,"id":7505,"mutability":"mutable","name":"newQueue","nameLocation":"2678:8:22","nodeType":"VariableDeclaration","scope":7553,"src":"2661:25:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7503,"name":"address","nodeType":"ElementaryTypeName","src":"2661:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7504,"nodeType":"ArrayTypeName","src":"2661:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":7506,"nodeType":"VariableDeclarationStatement","src":"2661:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7507,"name":"defaultQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"2700:12:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2713:6:22","memberName":"length","nodeType":"MemberAccess","src":"2700:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2722:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2700:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7542,"nodeType":"IfStatement","src":"2696:356:22","trueBody":{"id":7541,"nodeType":"Block","src":"2725:327:22","statements":[{"body":{"id":7539,"nodeType":"Block","src":"2786:256:22","statements":[{"assignments":[7523],"declarations":[{"constant":false,"id":7523,"mutability":"mutable","name":"_strategy","nameLocation":"2812:9:22","nodeType":"VariableDeclaration","scope":7539,"src":"2804:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7522,"name":"address","nodeType":"ElementaryTypeName","src":"2804:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7527,"initialValue":{"baseExpression":{"id":7524,"name":"defaultQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"2824:12:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7526,"indexExpression":{"id":7525,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"2837:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2824:15:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2804:35:22"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7528,"name":"_strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7523,"src":"2941:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7529,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"2954:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2941:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7538,"nodeType":"IfStatement","src":"2937:91:22","trueBody":{"id":7537,"nodeType":"Block","src":"2964:64:22","statements":[{"expression":{"id":7535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7531,"name":"newQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7505,"src":"2986:8:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":7533,"indexExpression":{"id":7532,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"2995:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2986:11:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7534,"name":"_strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7523,"src":"3000:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2986:23:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7536,"nodeType":"ExpressionStatement","src":"2986:23:22"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7515,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"2756:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7516,"name":"defaultQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"2760:12:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2773:6:22","memberName":"length","nodeType":"MemberAccess","src":"2760:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2756:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7540,"initializationExpression":{"assignments":[7512],"declarations":[{"constant":false,"id":7512,"mutability":"mutable","name":"i","nameLocation":"2749:1:22","nodeType":"VariableDeclaration","scope":7540,"src":"2744:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7511,"name":"uint","nodeType":"ElementaryTypeName","src":"2744:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7514,"initialValue":{"hexValue":"30","id":7513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2753:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2744:10:22"},"loopExpression":{"expression":{"id":7520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2781:3:22","subExpression":{"id":7519,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"2781:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7521,"nodeType":"ExpressionStatement","src":"2781:3:22"},"nodeType":"ForStatement","src":"2739:303:22"}]}},{"expression":{"id":7545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7543,"name":"defaultQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"3117:12:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7544,"name":"newQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7505,"src":"3132:8:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"3117:23:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7546,"nodeType":"ExpressionStatement","src":"3117:23:22"},{"eventCall":{"arguments":[{"id":7548,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"3172:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7549,"name":"StrategyChangeType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7766,"src":"3182:18:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_StrategyChangeType_$7766_$","typeString":"type(enum StrategyChangeType)"}},"id":7550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3201:7:22","memberName":"REVOKED","nodeType":"MemberAccess","referencedDeclaration":7765,"src":"3182:26:22","typeDescriptions":{"typeIdentifier":"t_enum$_StrategyChangeType_$7766","typeString":"enum StrategyChangeType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_StrategyChangeType_$7766","typeString":"enum StrategyChangeType"}],"id":7547,"name":"StrategyChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7202,"src":"3156:15:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_enum$_StrategyChangeType_$7766_$returns$__$","typeString":"function (address,enum StrategyChangeType)"}},"id":7551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3156:53:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7552,"nodeType":"EmitStatement","src":"3151:58:22"}]},"functionSelector":"f42c77ae","id":7554,"implemented":true,"kind":"function","modifiers":[],"name":"revokeStrategy","nameLocation":"1726:14:22","nodeType":"FunctionDefinition","overrides":{"id":7438,"nodeType":"OverrideSpecifier","overrides":[],"src":"1780:8:22"},"parameters":{"id":7437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7434,"mutability":"mutable","name":"strategy","nameLocation":"1749:8:22","nodeType":"VariableDeclaration","scope":7554,"src":"1741:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7433,"name":"address","nodeType":"ElementaryTypeName","src":"1741:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7436,"mutability":"mutable","name":"force","nameLocation":"1764:5:22","nodeType":"VariableDeclaration","scope":7554,"src":"1759:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7435,"name":"bool","nodeType":"ElementaryTypeName","src":"1759:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1740:30:22"},"returnParameters":{"id":7439,"nodeType":"ParameterList","parameters":[],"src":"1789:0:22"},"scope":7555,"src":"1717:1499:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7556,"src":"251:2967:22","usedErrors":[7323,7325,7327,7329,7331]}],"src":"39:3184:22"},"id":22},"contracts/VaultStorage.sol":{"ast":{"absolutePath":"contracts/VaultStorage.sol","exportedSymbols":{"FeeAssessment":[7743],"IERC20":[531],"RoleStatusChange":[7769],"Rounding":[7772],"ShareManagement":[7750],"StrategyChangeType":[7766],"StrategyParams":[7734],"VaultStorage":[7723],"WithdrawalState":[7763]},"id":7724,"license":"AGPL 3.0","nodeType":"SourceUnit","nodes":[{"id":7557,"literals":["solidity","^","0.8",".16"],"nodeType":"PragmaDirective","src":"63:24:23"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":7558,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7724,"sourceUnit":532,"src":"89:56:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/VaultStructs.sol","file":"./VaultStructs.sol","id":7559,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7724,"sourceUnit":7773,"src":"146:28:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"VaultStorage","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7723,"linearizedBaseContracts":[7723],"name":"VaultStorage","nameLocation":"185:12:23","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"3f7b5e40","id":7562,"mutability":"constant","name":"MAX_QUEUE","nameLocation":"296:9:23","nodeType":"VariableDeclaration","scope":7723,"src":"272:38:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7560,"name":"uint256","nodeType":"ElementaryTypeName","src":"272:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130","id":7561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"308:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"public"},{"constant":true,"functionSelector":"fd967f47","id":7565,"mutability":"constant","name":"MAX_BPS","nameLocation":"369:7:23","nodeType":"VariableDeclaration","scope":7723,"src":"345:39:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7563,"name":"uint256","nodeType":"ElementaryTypeName","src":"345:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":7564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"379:5:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"public"},{"constant":true,"functionSelector":"36fba084","id":7568,"mutability":"constant","name":"MAX_BPS_EXTENDED","nameLocation":"463:16:23","nodeType":"VariableDeclaration","scope":7723,"src":"439:56:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7566,"name":"uint256","nodeType":"ElementaryTypeName","src":"439:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31303030303030303030303030","id":7567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"482:13:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1000000000000"},"visibility":"public"},{"constant":true,"functionSelector":"77e3b267","id":7571,"mutability":"constant","name":"API_VERSION","nameLocation":"558:11:23","nodeType":"VariableDeclaration","scope":7723,"src":"535:44:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7569,"name":"string","nodeType":"ElementaryTypeName","src":"535:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"312e302e30","id":7570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"572:7:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c","typeString":"literal_string \"1.0.0\""},"value":"1.0.0"},"visibility":"public"},{"constant":false,"id":7573,"mutability":"mutable","name":"strategyManager","nameLocation":"603:15:23","nodeType":"VariableDeclaration","scope":7723,"src":"586:32:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7572,"name":"address","nodeType":"ElementaryTypeName","src":"586:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"functionSelector":"39ebf823","id":7578,"mutability":"mutable","name":"strategies","nameLocation":"780:10:23","nodeType":"VariableDeclaration","scope":7723,"src":"738:52:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams)"},"typeName":{"id":7577,"keyType":{"id":7574,"name":"address","nodeType":"ElementaryTypeName","src":"746:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"738:34:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StrategyParams_$7734_storage_$","typeString":"mapping(address => struct StrategyParams)"},"valueType":{"id":7576,"nodeType":"UserDefinedTypeName","pathNode":{"id":7575,"name":"StrategyParams","nameLocations":["757:14:23"],"nodeType":"IdentifierPath","referencedDeclaration":7734,"src":"757:14:23"},"referencedDeclaration":7734,"src":"757:14:23","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyParams_$7734_storage_ptr","typeString":"struct StrategyParams"}}},"visibility":"public"},{"constant":false,"functionSelector":"ff1e7f08","id":7581,"mutability":"mutable","name":"defaultQueue","nameLocation":"859:12:23","nodeType":"VariableDeclaration","scope":7723,"src":"842:29:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":7579,"name":"address","nodeType":"ElementaryTypeName","src":"842:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7580,"nodeType":"ArrayTypeName","src":"842:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"bbe4eb49","id":7583,"mutability":"mutable","name":"useDefaultQueue","nameLocation":"964:15:23","nodeType":"VariableDeclaration","scope":7723,"src":"952:27:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7582,"name":"bool","nodeType":"ElementaryTypeName","src":"952:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"id":7587,"mutability":"mutable","name":"_balanceOf","nameLocation":"1067:10:23","nodeType":"VariableDeclaration","scope":7723,"src":"1030:47:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":7586,"keyType":{"id":7584,"name":"address","nodeType":"ElementaryTypeName","src":"1038:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1030:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":7585,"name":"uint256","nodeType":"ElementaryTypeName","src":"1049:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":7593,"mutability":"mutable","name":"_allowance","nameLocation":"1184:10:23","nodeType":"VariableDeclaration","scope":7723,"src":"1127:67:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":7592,"keyType":{"id":7588,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1127:47:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":7591,"keyType":{"id":7589,"name":"address","nodeType":"ElementaryTypeName","src":"1154:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1146:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":7590,"name":"uint256","nodeType":"ElementaryTypeName","src":"1165:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"internal"},{"constant":false,"functionSelector":"f828f50b","id":7595,"mutability":"mutable","name":"totalSupplyAmount","nameLocation":"1363:17:23","nodeType":"VariableDeclaration","scope":7723,"src":"1348:32:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7594,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"c8dffa95","id":7597,"mutability":"mutable","name":"totalDebtAmount","nameLocation":"1471:15:23","nodeType":"VariableDeclaration","scope":7723,"src":"1456:30:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7596,"name":"uint256","nodeType":"ElementaryTypeName","src":"1456:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"3cd7b5ab","id":7599,"mutability":"mutable","name":"totalIdleAmount","nameLocation":"1622:15:23","nodeType":"VariableDeclaration","scope":7723,"src":"1607:30:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7598,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"0835a3fc","id":7601,"mutability":"mutable","name":"minimumTotalIdle","nameLocation":"1766:16:23","nodeType":"VariableDeclaration","scope":7723,"src":"1751:31:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7600,"name":"uint256","nodeType":"ElementaryTypeName","src":"1751:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ecf70858","id":7603,"mutability":"mutable","name":"depositLimit","nameLocation":"1916:12:23","nodeType":"VariableDeclaration","scope":7723,"src":"1901:27:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7602,"name":"uint256","nodeType":"ElementaryTypeName","src":"1901:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"4fb3ccc5","id":7605,"mutability":"mutable","name":"accountant","nameLocation":"2005:10:23","nodeType":"VariableDeclaration","scope":7723,"src":"1990:25:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7604,"name":"address","nodeType":"ElementaryTypeName","src":"1990:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"9e34e348","id":7607,"mutability":"mutable","name":"depositLimitModule","nameLocation":"2082:18:23","nodeType":"VariableDeclaration","scope":7723,"src":"2067:33:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7606,"name":"address","nodeType":"ElementaryTypeName","src":"2067:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"91986003","id":7609,"mutability":"mutable","name":"withdrawLimitModule","nameLocation":"2168:19:23","nodeType":"VariableDeclaration","scope":7723,"src":"2153:34:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7608,"name":"address","nodeType":"ElementaryTypeName","src":"2153:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"99374642","id":7613,"mutability":"mutable","name":"roles","nameLocation":"2277:5:23","nodeType":"VariableDeclaration","scope":7723,"src":"2242:40:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"},"typeName":{"id":7612,"keyType":{"id":7610,"name":"address","nodeType":"ElementaryTypeName","src":"2250:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2242:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"},"valueType":{"id":7611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2261:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"public"},{"constant":false,"functionSelector":"53a66132","id":7617,"mutability":"mutable","name":"openRoles","nameLocation":"2424:9:23","nodeType":"VariableDeclaration","scope":7723,"src":"2392:41:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":7616,"keyType":{"id":7614,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2400:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2392:24:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueType":{"id":7615,"name":"bool","nodeType":"ElementaryTypeName","src":"2411:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"00435da5","id":7619,"mutability":"mutable","name":"roleManager","nameLocation":"2514:11:23","nodeType":"VariableDeclaration","scope":7723,"src":"2499:26:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7618,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"b3c187f2","id":7621,"mutability":"mutable","name":"futureRoleManager","nameLocation":"2646:17:23","nodeType":"VariableDeclaration","scope":7723,"src":"2631:32:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7620,"name":"address","nodeType":"ElementaryTypeName","src":"2631:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"fc0e74d1","id":7623,"mutability":"mutable","name":"shutdown","nameLocation":"2784:8:23","nodeType":"VariableDeclaration","scope":7723,"src":"2772:20:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7622,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"0952864e","id":7625,"mutability":"mutable","name":"profitMaxUnlockTime","nameLocation":"2865:19:23","nodeType":"VariableDeclaration","scope":7723,"src":"2850:34:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7624,"name":"uint256","nodeType":"ElementaryTypeName","src":"2850:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"2d632692","id":7627,"mutability":"mutable","name":"fullProfitUnlockDate","nameLocation":"2969:20:23","nodeType":"VariableDeclaration","scope":7723,"src":"2954:35:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7626,"name":"uint256","nodeType":"ElementaryTypeName","src":"2954:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"5141eebb","id":7629,"mutability":"mutable","name":"profitUnlockingRate","nameLocation":"3066:19:23","nodeType":"VariableDeclaration","scope":7723,"src":"3051:34:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7628,"name":"uint256","nodeType":"ElementaryTypeName","src":"3051:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8afca8f0","id":7631,"mutability":"mutable","name":"lastProfitUpdate","nameLocation":"3166:16:23","nodeType":"VariableDeclaration","scope":7723,"src":"3151:31:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7630,"name":"uint256","nodeType":"ElementaryTypeName","src":"3151:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"7ecebe00","id":7635,"mutability":"mutable","name":"nonces","nameLocation":"3271:6:23","nodeType":"VariableDeclaration","scope":7723,"src":"3236:41:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":7634,"keyType":{"id":7632,"name":"address","nodeType":"ElementaryTypeName","src":"3244:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3236:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":7633,"name":"uint256","nodeType":"ElementaryTypeName","src":"3255:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":true,"functionSelector":"c0993eea","id":7640,"mutability":"constant","name":"DOMAIN_TYPE_HASH","nameLocation":"3307:16:23","nodeType":"VariableDeclaration","scope":7723,"src":"3283:138:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7636,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3283:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":7638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3336:84:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":7637,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3326:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3326:95:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"3644e515","id":7642,"mutability":"mutable","name":"DOMAIN_SEPARATOR","nameLocation":"3442:16:23","nodeType":"VariableDeclaration","scope":7723,"src":"3427:31:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7641,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3427:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"4d4bb197","id":7647,"mutability":"constant","name":"PERMIT_TYPE_HASH","nameLocation":"3488:16:23","nodeType":"VariableDeclaration","scope":7723,"src":"3464:138:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7643,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3464:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":7645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3517:84:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":7644,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3507:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3507:95:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"652da324","id":7652,"mutability":"constant","name":"ACCOUNTANT_MANAGER","nameLocation":"3646:18:23","nodeType":"VariableDeclaration","scope":7723,"src":"3622:76:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7648,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3622:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4143434f554e54414e545f4d414e41474552","id":7650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3677:20:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_cd9f023a942ee35097ead74b2505bea9f2c5d47465db92dd195cf7f01a41cfe1","typeString":"literal_string \"ACCOUNTANT_MANAGER\""},"value":"ACCOUNTANT_MANAGER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_cd9f023a942ee35097ead74b2505bea9f2c5d47465db92dd195cf7f01a41cfe1","typeString":"literal_string \"ACCOUNTANT_MANAGER\""}],"id":7649,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3667:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3667:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"4cfe51dc","id":7657,"mutability":"constant","name":"QUEUE_MANAGER","nameLocation":"3728:13:23","nodeType":"VariableDeclaration","scope":7723,"src":"3704:66:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7653,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3704:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"51554555455f4d414e41474552","id":7655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3754:15:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_862f91c9d89d6135b19873b921c90b702cb2e175c371b8430026b9577e691119","typeString":"literal_string \"QUEUE_MANAGER\""},"value":"QUEUE_MANAGER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_862f91c9d89d6135b19873b921c90b702cb2e175c371b8430026b9577e691119","typeString":"literal_string \"QUEUE_MANAGER\""}],"id":7654,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3744:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3744:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"a98222c4","id":7662,"mutability":"constant","name":"DEPOSIT_LIMIT_MANAGER","nameLocation":"3800:21:23","nodeType":"VariableDeclaration","scope":7723,"src":"3776:82:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7658,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3776:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4445504f5349545f4c494d49545f4d414e41474552","id":7660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3834:23:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_2f0dbbe8c2c0170206c50ec0cafa1c0dbd03e73e67c2a960178df30a0a30ee2e","typeString":"literal_string \"DEPOSIT_LIMIT_MANAGER\""},"value":"DEPOSIT_LIMIT_MANAGER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_2f0dbbe8c2c0170206c50ec0cafa1c0dbd03e73e67c2a960178df30a0a30ee2e","typeString":"literal_string \"DEPOSIT_LIMIT_MANAGER\""}],"id":7659,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3824:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3824:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"4ce1d38a","id":7667,"mutability":"constant","name":"WITHDRAW_LIMIT_MANAGER","nameLocation":"3888:22:23","nodeType":"VariableDeclaration","scope":7723,"src":"3864:84:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3864:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"57495448445241575f4c494d49545f4d414e41474552","id":7665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3923:24:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_69d1171ac0a63777a6733cda21aec9ed3d48a4fd11f273c934a691dec5e5589c","typeString":"literal_string \"WITHDRAW_LIMIT_MANAGER\""},"value":"WITHDRAW_LIMIT_MANAGER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_69d1171ac0a63777a6733cda21aec9ed3d48a4fd11f273c934a691dec5e5589c","typeString":"literal_string \"WITHDRAW_LIMIT_MANAGER\""}],"id":7664,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3913:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3913:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"0ad283d0","id":7672,"mutability":"constant","name":"MINIMUM_IDLE_MANAGER","nameLocation":"3978:20:23","nodeType":"VariableDeclaration","scope":7723,"src":"3954:80:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7668,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3954:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e494d554d5f49444c455f4d414e41474552","id":7670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4011:22:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_c723f4dd6268e1c374639e36d629c765285ee7003913389d582c300f186dde97","typeString":"literal_string \"MINIMUM_IDLE_MANAGER\""},"value":"MINIMUM_IDLE_MANAGER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c723f4dd6268e1c374639e36d629c765285ee7003913389d582c300f186dde97","typeString":"literal_string \"MINIMUM_IDLE_MANAGER\""}],"id":7669,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4001:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4001:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"d4ae064f","id":7677,"mutability":"constant","name":"PROFIT_UNLOCK_MANAGER","nameLocation":"4064:21:23","nodeType":"VariableDeclaration","scope":7723,"src":"4040:82:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7673,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4040:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"50524f4649545f554e4c4f434b5f4d414e41474552","id":7675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4098:23:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_a18eaea71a088b547b8c932b48861853b3434d9a3240b94466c607e28b696595","typeString":"literal_string \"PROFIT_UNLOCK_MANAGER\""},"value":"PROFIT_UNLOCK_MANAGER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a18eaea71a088b547b8c932b48861853b3434d9a3240b94466c607e28b696595","typeString":"literal_string \"PROFIT_UNLOCK_MANAGER\""}],"id":7674,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4088:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4088:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"f5b944eb","id":7682,"mutability":"constant","name":"ROLE_MANAGER","nameLocation":"4152:12:23","nodeType":"VariableDeclaration","scope":7723,"src":"4128:64:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7678,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4128:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"524f4c455f4d414e41474552","id":7680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4177:14:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_f206625bad3d9112d5609b8d356e6fbd514cd1f69980d4ce2b3e6e68e1789ace","typeString":"literal_string \"ROLE_MANAGER\""},"value":"ROLE_MANAGER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f206625bad3d9112d5609b8d356e6fbd514cd1f69980d4ce2b3e6e68e1789ace","typeString":"literal_string \"ROLE_MANAGER\""}],"id":7679,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4167:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4167:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"03dcd12c","id":7687,"mutability":"constant","name":"REPORTING_MANAGER","nameLocation":"4222:17:23","nodeType":"VariableDeclaration","scope":7723,"src":"4198:74:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7683,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4198:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5245504f5254494e475f4d414e41474552","id":7685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4252:19:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_633076a97f32ae349b28772e7b1483f67a926f150cbc501d02bdbd77389325ab","typeString":"literal_string \"REPORTING_MANAGER\""},"value":"REPORTING_MANAGER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_633076a97f32ae349b28772e7b1483f67a926f150cbc501d02bdbd77389325ab","typeString":"literal_string \"REPORTING_MANAGER\""}],"id":7684,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4242:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4242:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"ab5b4d49","id":7692,"mutability":"constant","name":"DEBT_PURCHASER","nameLocation":"4302:14:23","nodeType":"VariableDeclaration","scope":7723,"src":"4278:68:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7688,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4278:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"444542545f505552434841534552","id":7690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4329:16:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_900d80def0427daac599092fcb16b21808ec68dd9a2e1eae89d1e8db21357375","typeString":"literal_string \"DEBT_PURCHASER\""},"value":"DEBT_PURCHASER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_900d80def0427daac599092fcb16b21808ec68dd9a2e1eae89d1e8db21357375","typeString":"literal_string \"DEBT_PURCHASER\""}],"id":7689,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4319:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4319:27:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"c065ca07","id":7697,"mutability":"constant","name":"ADD_STRATEGY_MANAGER","nameLocation":"4376:20:23","nodeType":"VariableDeclaration","scope":7723,"src":"4352:80:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4352:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4144445f53545241544547595f4d414e41474552","id":7695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4409:22:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a0e761830cc61f2707ea7bb138008bf9dda7f7d34c77736d0a116604e95ea16","typeString":"literal_string \"ADD_STRATEGY_MANAGER\""},"value":"ADD_STRATEGY_MANAGER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_2a0e761830cc61f2707ea7bb138008bf9dda7f7d34c77736d0a116604e95ea16","typeString":"literal_string \"ADD_STRATEGY_MANAGER\""}],"id":7694,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4399:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"9f3988f3","id":7702,"mutability":"constant","name":"REVOKE_STRATEGY_MANAGER","nameLocation":"4462:23:23","nodeType":"VariableDeclaration","scope":7723,"src":"4438:86:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7698,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4438:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5245564f4b455f53545241544547595f4d414e41474552","id":7700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4498:25:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f430d649a8640e48ff9bfbc353b3f99ed630163857821b3b4075e3871dafbf5","typeString":"literal_string \"REVOKE_STRATEGY_MANAGER\""},"value":"REVOKE_STRATEGY_MANAGER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6f430d649a8640e48ff9bfbc353b3f99ed630163857821b3b4075e3871dafbf5","typeString":"literal_string \"REVOKE_STRATEGY_MANAGER\""}],"id":7699,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4488:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4488:36:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"5bf6b4fb","id":7707,"mutability":"constant","name":"FORCE_REVOKE_MANAGER","nameLocation":"4554:20:23","nodeType":"VariableDeclaration","scope":7723,"src":"4530:80:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7703,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4530:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"464f5243455f5245564f4b455f4d414e41474552","id":7705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4587:22:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_ea672c1c09cd95c51af9509f646f3615ff0071aae8652bd821471ee9037fd72c","typeString":"literal_string \"FORCE_REVOKE_MANAGER\""},"value":"FORCE_REVOKE_MANAGER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ea672c1c09cd95c51af9509f646f3615ff0071aae8652bd821471ee9037fd72c","typeString":"literal_string \"FORCE_REVOKE_MANAGER\""}],"id":7704,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4577:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4577:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"f1daeba8","id":7712,"mutability":"constant","name":"MAX_DEBT_MANAGER","nameLocation":"4640:16:23","nodeType":"VariableDeclaration","scope":7723,"src":"4616:72:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4616:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d41585f444542545f4d414e41474552","id":7710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4669:18:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_7cbb3cdf689b8ea3e9d265f66bc4e0a99069268217017d38d2a5a559abc62719","typeString":"literal_string \"MAX_DEBT_MANAGER\""},"value":"MAX_DEBT_MANAGER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_7cbb3cdf689b8ea3e9d265f66bc4e0a99069268217017d38d2a5a559abc62719","typeString":"literal_string \"MAX_DEBT_MANAGER\""}],"id":7709,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4659:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4659:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"c8d74b60","id":7717,"mutability":"constant","name":"DEBT_MANAGER","nameLocation":"4718:12:23","nodeType":"VariableDeclaration","scope":7723,"src":"4694:64:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7713,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4694:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"444542545f4d414e41474552","id":7715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4743:14:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_152ebba56b9738ee3d8baea1b76fa31dcdcd79b1929bfea7d58ee12cfdf1a653","typeString":"literal_string \"DEBT_MANAGER\""},"value":"DEBT_MANAGER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_152ebba56b9738ee3d8baea1b76fa31dcdcd79b1929bfea7d58ee12cfdf1a653","typeString":"literal_string \"DEBT_MANAGER\""}],"id":7714,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4733:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4733:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"fec61f06","id":7722,"mutability":"constant","name":"EMERGENCY_MANAGER","nameLocation":"4788:17:23","nodeType":"VariableDeclaration","scope":7723,"src":"4764:74:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7718,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4764:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454d455247454e43595f4d414e41474552","id":7720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4818:19:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d45f7ccff42f059d4e47c3f027c444272257266f7e88b981e142f0aa38fbfd78","typeString":"literal_string \"EMERGENCY_MANAGER\""},"value":"EMERGENCY_MANAGER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d45f7ccff42f059d4e47c3f027c444272257266f7e88b981e142f0aa38fbfd78","typeString":"literal_string \"EMERGENCY_MANAGER\""}],"id":7719,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4808:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4808:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"}],"scope":7724,"src":"176:4674:23","usedErrors":[]}],"src":"63:4787:23"},"id":23},"contracts/VaultStructs.sol":{"ast":{"absolutePath":"contracts/VaultStructs.sol","exportedSymbols":{"FeeAssessment":[7743],"RoleStatusChange":[7769],"Rounding":[7772],"ShareManagement":[7750],"StrategyChangeType":[7766],"StrategyParams":[7734],"WithdrawalState":[7763]},"id":7773,"license":"AGPL 3.0","nodeType":"SourceUnit","nodes":[{"id":7725,"literals":["solidity","^","0.8",".16"],"nodeType":"PragmaDirective","src":"63:24:24"},{"canonicalName":"StrategyParams","id":7734,"members":[{"constant":false,"id":7727,"mutability":"mutable","name":"activation","nameLocation":"125:10:24","nodeType":"VariableDeclaration","scope":7734,"src":"117:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7726,"name":"uint256","nodeType":"ElementaryTypeName","src":"117:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7729,"mutability":"mutable","name":"lastReport","nameLocation":"149:10:24","nodeType":"VariableDeclaration","scope":7734,"src":"141:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7728,"name":"uint256","nodeType":"ElementaryTypeName","src":"141:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7731,"mutability":"mutable","name":"currentDebt","nameLocation":"173:11:24","nodeType":"VariableDeclaration","scope":7734,"src":"165:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7730,"name":"uint256","nodeType":"ElementaryTypeName","src":"165:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7733,"mutability":"mutable","name":"maxDebt","nameLocation":"198:7:24","nodeType":"VariableDeclaration","scope":7734,"src":"190:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7732,"name":"uint256","nodeType":"ElementaryTypeName","src":"190:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StrategyParams","nameLocation":"96:14:24","nodeType":"StructDefinition","scope":7773,"src":"89:119:24","visibility":"public"},{"canonicalName":"FeeAssessment","id":7743,"members":[{"constant":false,"id":7736,"mutability":"mutable","name":"totalFees","nameLocation":"245:9:24","nodeType":"VariableDeclaration","scope":7743,"src":"237:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7735,"name":"uint256","nodeType":"ElementaryTypeName","src":"237:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7738,"mutability":"mutable","name":"totalRefunds","nameLocation":"268:12:24","nodeType":"VariableDeclaration","scope":7743,"src":"260:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7737,"name":"uint256","nodeType":"ElementaryTypeName","src":"260:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7740,"mutability":"mutable","name":"protocolFees","nameLocation":"294:12:24","nodeType":"VariableDeclaration","scope":7743,"src":"286:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7739,"name":"uint256","nodeType":"ElementaryTypeName","src":"286:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7742,"mutability":"mutable","name":"protocolFeeRecipient","nameLocation":"320:20:24","nodeType":"VariableDeclaration","scope":7743,"src":"312:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7741,"name":"address","nodeType":"ElementaryTypeName","src":"312:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"FeeAssessment","nameLocation":"217:13:24","nodeType":"StructDefinition","scope":7773,"src":"210:133:24","visibility":"public"},{"canonicalName":"ShareManagement","id":7750,"members":[{"constant":false,"id":7745,"mutability":"mutable","name":"sharesToBurn","nameLocation":"382:12:24","nodeType":"VariableDeclaration","scope":7750,"src":"374:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7744,"name":"uint256","nodeType":"ElementaryTypeName","src":"374:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7747,"mutability":"mutable","name":"accountantFeesShares","nameLocation":"408:20:24","nodeType":"VariableDeclaration","scope":7750,"src":"400:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7746,"name":"uint256","nodeType":"ElementaryTypeName","src":"400:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7749,"mutability":"mutable","name":"protocolFeesShares","nameLocation":"442:18:24","nodeType":"VariableDeclaration","scope":7750,"src":"434:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7748,"name":"uint256","nodeType":"ElementaryTypeName","src":"434:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ShareManagement","nameLocation":"352:15:24","nodeType":"StructDefinition","scope":7773,"src":"345:118:24","visibility":"public"},{"canonicalName":"WithdrawalState","id":7763,"members":[{"constant":false,"id":7752,"mutability":"mutable","name":"requestedAssets","nameLocation":"502:15:24","nodeType":"VariableDeclaration","scope":7763,"src":"494:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7751,"name":"uint256","nodeType":"ElementaryTypeName","src":"494:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7754,"mutability":"mutable","name":"currTotalIdle","nameLocation":"531:13:24","nodeType":"VariableDeclaration","scope":7763,"src":"523:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7753,"name":"uint256","nodeType":"ElementaryTypeName","src":"523:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7756,"mutability":"mutable","name":"currTotalDebt","nameLocation":"558:13:24","nodeType":"VariableDeclaration","scope":7763,"src":"550:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7755,"name":"uint256","nodeType":"ElementaryTypeName","src":"550:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7758,"mutability":"mutable","name":"assetsNeeded","nameLocation":"585:12:24","nodeType":"VariableDeclaration","scope":7763,"src":"577:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7757,"name":"uint256","nodeType":"ElementaryTypeName","src":"577:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7760,"mutability":"mutable","name":"previousBalance","nameLocation":"611:15:24","nodeType":"VariableDeclaration","scope":7763,"src":"603:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7759,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7762,"mutability":"mutable","name":"unrealisedLossesShare","nameLocation":"640:21:24","nodeType":"VariableDeclaration","scope":7763,"src":"632:29:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7761,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"WithdrawalState","nameLocation":"472:15:24","nodeType":"StructDefinition","scope":7773,"src":"465:199:24","visibility":"public"},{"canonicalName":"StrategyChangeType","id":7766,"members":[{"id":7764,"name":"ADDED","nameLocation":"705:5:24","nodeType":"EnumValue","src":"705:5:24"},{"id":7765,"name":"REVOKED","nameLocation":"760:7:24","nodeType":"EnumValue","src":"760:7:24"}],"name":"StrategyChangeType","nameLocation":"680:18:24","nodeType":"EnumDefinition","src":"675:140:24"},{"canonicalName":"RoleStatusChange","id":7769,"members":[{"id":7767,"name":"OPENED","nameLocation":"845:6:24","nodeType":"EnumValue","src":"845:6:24"},{"id":7768,"name":"CLOSED","nameLocation":"896:6:24","nodeType":"EnumValue","src":"896:6:24"}],"name":"RoleStatusChange","nameLocation":"822:16:24","nodeType":"EnumDefinition","src":"817:126:24"},{"canonicalName":"Rounding","id":7772,"members":[{"id":7770,"name":"ROUND_DOWN","nameLocation":"965:10:24","nodeType":"EnumValue","src":"965:10:24"},{"id":7771,"name":"ROUND_UP","nameLocation":"1042:8:24","nodeType":"EnumValue","src":"1042:8:24"}],"name":"Rounding","nameLocation":"950:8:24","nodeType":"EnumDefinition","src":"945:166:24"}],"src":"63:1048:24"},"id":24}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.","kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/Strings.sol\\\";\\nimport \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\\n     *\\n     * Format of the revert message is described in {_checkRole}.\\n     *\\n     * _Available since v4.6._\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        Strings.toHexString(account),\\n                        \\\" is missing role \\\",\\n                        Strings.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * May emit a {RoleGranted} event.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":24,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"_roles","offset":0,"slot":"0","type":"t_mapping(t_bytes32,t_struct(RoleData)19_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(RoleData)19_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)19_storage"},"t_struct(RoleData)19_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":16,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":18,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"External interface of AccessControl declared to support ERC165 detection.","events":{"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"}},"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":399,"contract":"@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220390c9666d1d57f33ab2c82a29bdb2af81add1abd01166272a586788d95e4f9d464736f6c63430008100033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xC SWAP7 PUSH7 0xD1D57F33AB2C82 LOG2 SWAP12 0xDB 0x2A 0xF8 BYTE 0xDD BYTE 0xBD ADD AND PUSH3 0x72A586 PUSH25 0x8D95E4F9D464736F6C63430008100033000000000000000000 ","sourceMap":"220:2559:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;220:2559:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220390c9666d1d57f33ab2c82a29bdb2af81add1abd01166272a586788d95e4f9d464736f6c63430008100033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xC SWAP7 PUSH7 0xD1D57F33AB2C82 LOG2 SWAP12 0xDB 0x2A 0xF8 BYTE 0xDD BYTE 0xBD ADD AND PUSH3 0x72A586 PUSH25 0x8D95E4F9D464736F6C63430008100033000000000000000000 ","sourceMap":"220:2559:6:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"equal(string memory,string memory)":"infinite","toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(int256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ce3f4435f3590ccf1fe3cab6e3de217af87c0428a4bd4f8f4bd42bde18f6ee0264736f6c63430008100033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE EXTCODEHASH DIFFICULTY CALLDATALOAD RETURN MSIZE 0xC 0xCF 0x1F 0xE3 0xCA 0xB6 0xE3 0xDE 0x21 PUSH27 0xF87C0428A4BD4F8F4BD42BDE18F6EE0264736F6C63430008100033 ","sourceMap":"202:12582:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12582:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ce3f4435f3590ccf1fe3cab6e3de217af87c0428a4bd4f8f4bd42bde18f6ee0264736f6c63430008100033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE EXTCODEHASH DIFFICULTY CALLDATALOAD RETURN MSIZE 0xC 0xCF 0x1F 0xE3 0xCA 0xB6 0xE3 0xDE 0x21 PUSH27 0xF87C0428A4BD4F8F4BD42BDE18F6EE0264736F6C63430008100033 ","sourceMap":"202:12582:9:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"devdoc":{"details":"Standard signed math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dc6db3b2368e9cbc12c40ef78a7bc53fd69541638545b8555e37f843132e373764736f6c63430008100033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC PUSH14 0xB3B2368E9CBC12C40EF78A7BC53F 0xD6 SWAP6 COINBASE PUSH4 0x8545B855 0x5E CALLDATACOPY 0xF8 NUMBER SGT 0x2E CALLDATACOPY CALLDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ","sourceMap":"215:1047:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1047:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dc6db3b2368e9cbc12c40ef78a7bc53fd69541638545b8555e37f843132e373764736f6c63430008100033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC PUSH14 0xB3B2368E9CBC12C40EF78A7BC53F 0xD6 SWAP6 COINBASE PUSH4 0x8545B855 0x5E CALLDATACOPY 0xF8 NUMBER SGT 0x2E CALLDATACOPY CALLDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ","sourceMap":"215:1047:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"abs(int256)":"infinite","average(int256,int256)":"infinite","max(int256,int256)":"infinite","min(int256,int256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/FathomVault.sol":{"FathomVault":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"_asset","type":"address"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"address","name":"_roleManager","type":"address"},{"internalType":"uint256","name":"_profitMaxUnlockTime","type":"uint256"},{"internalType":"address","name":"_strategyManagerAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"CallerIsNotTheFutureRoleManager","type":"error"},{"inputs":[],"name":"DebtDidntChange","type":"error"},{"inputs":[],"name":"DebtHigherThanMaxDebt","type":"error"},{"inputs":[],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[],"name":"ERC20PermitExpired","type":"error"},{"inputs":[],"name":"ERC20PermitInvalidSignature","type":"error"},{"inputs":[],"name":"ExceedDepositLimit","type":"error"},{"inputs":[],"name":"InactiveStrategy","type":"error"},{"inputs":[],"name":"InsufficientAssets","type":"error"},{"inputs":[],"name":"InsufficientFunds","type":"error"},{"inputs":[],"name":"InsufficientShares","type":"error"},{"inputs":[],"name":"InvalidAsset","type":"error"},{"inputs":[],"name":"InvalidAssetDecimals","type":"error"},{"inputs":[],"name":"MaxLoss","type":"error"},{"inputs":[],"name":"ProfitUnlockTimeTooLong","type":"error"},{"inputs":[],"name":"StrategyAlreadyActive","type":"error"},{"inputs":[],"name":"StrategyDebtIsLessThanAssetsNeeded","type":"error"},{"inputs":[],"name":"StrategyHasDebt","type":"error"},{"inputs":[],"name":"StrategyHasUnrealisedLosses","type":"error"},{"inputs":[],"name":"StrategyIsShutdown","type":"error"},{"inputs":[],"name":"TooMuchLoss","type":"error"},{"inputs":[],"name":"UsingDepositLimit","type":"error"},{"inputs":[],"name":"UsingModule","type":"error"},{"inputs":[],"name":"ZeroAddress","type":"error"},{"inputs":[],"name":"ZeroValue","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"strategy","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"DebtPurchased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"strategy","type":"address"},{"indexed":false,"internalType":"uint256","name":"currentDebt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newDebt","type":"uint256"}],"name":"DebtUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"RoleSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"enum RoleStatusChange","name":"status","type":"uint8"}],"name":"RoleStatusChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"Shutdown","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"strategy","type":"address"},{"indexed":false,"internalType":"enum StrategyChangeType","name":"changeType","type":"uint8"}],"name":"StrategyChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"strategy","type":"address"},{"indexed":false,"internalType":"uint256","name":"gain","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"loss","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"currentDebt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"protocolFees","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalFees","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalRefunds","type":"uint256"}],"name":"StrategyReported","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"accountant","type":"address"}],"name":"UpdateAccountant","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address[]","name":"newDefaultQueue","type":"address[]"}],"name":"UpdateDefaultQueue","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"depositLimit","type":"uint256"}],"name":"UpdateDepositLimit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"depositLimitModule","type":"address"}],"name":"UpdateDepositLimitModule","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"minimumTotalIdle","type":"uint256"}],"name":"UpdateMinimumTotalIdle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"profitMaxUnlockTime","type":"uint256"}],"name":"UpdateProfitMaxUnlockTime","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"roleManager","type":"address"}],"name":"UpdateRoleManager","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"useDefaultQueue","type":"bool"}],"name":"UpdateUseDefaultQueue","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"withdrawLimitModule","type":"address"}],"name":"UpdateWithdrawLimitModule","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"strategy","type":"address"},{"indexed":false,"internalType":"uint256","name":"newDebt","type":"uint256"}],"name":"UpdatedMaxDebtForStrategy","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"receiver","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"ACCOUNTANT_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ADD_STRATEGY_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"API_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ASSET","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEBT_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEBT_PURCHASER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DECIMALS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEPOSIT_LIMIT_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_TYPE_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EMERGENCY_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FACTORY","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FORCE_REVOKE_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_BPS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_BPS_EXTENDED","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_DEBT_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_QUEUE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINIMUM_IDLE_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ONE_YEAR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERMIT_TYPE_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROFIT_UNLOCK_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"QUEUE_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REPORTING_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REVOKE_STRATEGY_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ROLE_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WITHDRAW_LIMIT_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptRoleManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"accountant","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"addRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newStrategy","type":"address"}],"name":"addStrategy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"strategy","type":"address"},{"internalType":"uint256","name":"assetsNeeded","type":"uint256"}],"name":"assessShareOfUnrealisedLosses","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"asset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"strategy","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"buyDebt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"closeOpenRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"convertToAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"convertToShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"defaultQueue","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"depositLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"depositLimitModule","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"strategy","type":"address"}],"name":"forceRevokeStrategy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"fullProfitUnlockDate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"futureRoleManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lastProfitUpdate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"maxDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"maxMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"maxLoss","type":"uint256"},{"internalType":"address[]","name":"_strategies","type":"address[]"}],"name":"maxRedeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"maxLoss","type":"uint256"},{"internalType":"address[]","name":"_strategies","type":"address[]"}],"name":"maxWithdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"minimumTotalIdle","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"openRoles","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewRedeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewWithdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pricePerShare","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"strategy","type":"address"}],"name":"processReport","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"profitMaxUnlockTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"profitUnlockingRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"maxLoss","type":"uint256"},{"internalType":"address[]","name":"_strategies","type":"address[]"}],"name":"redeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"removeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"strategy","type":"address"}],"name":"revokeStrategy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"roleManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"roles","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newAccountant","type":"address"}],"name":"setAccountant","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"newDefaultQueue","type":"address[]"}],"name":"setDefaultQueue","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_depositLimit","type":"uint256"}],"name":"setDepositLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_depositLimitModule","type":"address"}],"name":"setDepositLimitModule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_minimumTotalIdle","type":"uint256"}],"name":"setMinimumTotalIdle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"setOpenRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newProfitMaxUnlockTime","type":"uint256"}],"name":"setProfitMaxUnlockTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_useDefaultQueue","type":"bool"}],"name":"setUseDefaultQueue","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_withdrawLimitModule","type":"address"}],"name":"setWithdrawLimitModule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"shutdown","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"shutdownVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"strategies","outputs":[{"internalType":"uint256","name":"activation","type":"uint256"},{"internalType":"uint256","name":"lastReport","type":"uint256"},{"internalType":"uint256","name":"currentDebt","type":"uint256"},{"internalType":"uint256","name":"maxDebt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalDebtAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalIdleAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupplyAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newRoleManager","type":"address"}],"name":"transferRoleManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockedShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"strategy","type":"address"},{"internalType":"uint256","name":"targetDebt","type":"uint256"}],"name":"updateDebt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"strategy","type":"address"},{"internalType":"uint256","name":"newMaxDebt","type":"uint256"}],"name":"updateMaxDebtForStrategy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"useDefaultQueue","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"maxLoss","type":"uint256"},{"internalType":"address[]","name":"_strategies","type":"address[]"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawLimitModule","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"asset()":{"details":"Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert."},"convertToAssets(uint256)":{"details":"Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and from."},"convertToShares(uint256)":{"details":"Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and from."},"decimals()":{"details":"Returns the decimals places of the token."},"deposit(uint256,address)":{"details":"Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   deposit execution, and are accounted for during deposit. - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."},"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"maxDeposit(address)":{"details":"Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver, through a deposit call. - MUST return a limited value if receiver is subject to some deposit limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited. - MUST NOT revert."},"maxMint(address)":{"details":"Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call. - MUST return a limited value if receiver is subject to some mint limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted. - MUST NOT revert."},"mint(uint256,address)":{"details":"Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint   execution, and are accounted for during mint. - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."},"previewDeposit(uint256)":{"details":"Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called   in the same transaction. - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the   deposit would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing."},"previewMint(uint256)":{"details":"Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the   same transaction. - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint   would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting."},"previewRedeem(uint256)":{"details":"Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the   same transaction. - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the   redemption would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by redeeming."},"previewWithdraw(uint256)":{"details":"Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if   called   in the same transaction. - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though   the withdrawal would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"totalAssets()":{"details":"Returns the total amount of the underlying asset that is “managed” by Vault. - SHOULD include any compounding that occurs from yield. - MUST be inclusive of any fees that are charged against assets in the Vault. - MUST NOT revert."}},"stateVariables":{"name":{"details":"Returns the name of the token."},"symbol":{"details":"Returns the symbol of the token."}},"title":"Yearn V3 Vault","version":1},"evm":{"bytecode":{"functionDebugData":{"@_2015":{"entryPoint":null,"id":2015,"parameterSlots":6,"returnSlots":0},"@_407":{"entryPoint":null,"id":407,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":772,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":904,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IERC20_$531_fromMemory":{"entryPoint":576,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":845,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":924,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8_fromMemory":{"entryPoint":1155,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IERC20_$531t_string_memory_ptrt_string_memory_ptrt_addresst_uint256t_address_fromMemory":{"entryPoint":937,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_uint8_fromMemory":{"entryPoint":1168,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1674,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":1666,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":1685,"id":null,"parameterSlots":6,"returnSlots":1},"allocate_memory":{"entryPoint":658,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":689,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1390,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":518,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IERC20_$531":{"entryPoint":537,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1355,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1275,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1458,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":734,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1227,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":611,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":1205,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":589,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1335,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1292,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":893,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IERC20_$531":{"entryPoint":550,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":917,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":1145,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:12305:25","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:25","statements":[{"nodeType":"YulAssignment","src":"57:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:25"},"nodeType":"YulFunctionCall","src":"67:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:25","type":""}],"src":"7:75:25"},{"body":{"nodeType":"YulBlock","src":"177:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:25"},"nodeType":"YulFunctionCall","src":"187:12:25"},"nodeType":"YulExpressionStatement","src":"187:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:25"},{"body":{"nodeType":"YulBlock","src":"300:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:25"},"nodeType":"YulFunctionCall","src":"310:12:25"},"nodeType":"YulExpressionStatement","src":"310:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:25"},{"body":{"nodeType":"YulBlock","src":"379:81:25","statements":[{"nodeType":"YulAssignment","src":"389:65:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:25"},"nodeType":"YulFunctionCall","src":"400:54:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:25"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:25","type":""}],"src":"334:126:25"},{"body":{"nodeType":"YulBlock","src":"511:51:25","statements":[{"nodeType":"YulAssignment","src":"521:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:25"},"nodeType":"YulFunctionCall","src":"532:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:25"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:25","type":""}],"src":"466:96:25"},{"body":{"nodeType":"YulBlock","src":"627:51:25","statements":[{"nodeType":"YulAssignment","src":"637:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"666:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"648:17:25"},"nodeType":"YulFunctionCall","src":"648:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"637:7:25"}]}]},"name":"cleanup_t_contract$_IERC20_$531","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"609:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"619:7:25","type":""}],"src":"568:110:25"},{"body":{"nodeType":"YulBlock","src":"741:93:25","statements":[{"body":{"nodeType":"YulBlock","src":"812:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"821:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"824:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"814:6:25"},"nodeType":"YulFunctionCall","src":"814:12:25"},"nodeType":"YulExpressionStatement","src":"814:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"764:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"803:5:25"}],"functionName":{"name":"cleanup_t_contract$_IERC20_$531","nodeType":"YulIdentifier","src":"771:31:25"},"nodeType":"YulFunctionCall","src":"771:38:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"761:2:25"},"nodeType":"YulFunctionCall","src":"761:49:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"754:6:25"},"nodeType":"YulFunctionCall","src":"754:57:25"},"nodeType":"YulIf","src":"751:77:25"}]},"name":"validator_revert_t_contract$_IERC20_$531","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"734:5:25","type":""}],"src":"684:150:25"},{"body":{"nodeType":"YulBlock","src":"917:94:25","statements":[{"nodeType":"YulAssignment","src":"927:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"942:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"936:5:25"},"nodeType":"YulFunctionCall","src":"936:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"927:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"999:5:25"}],"functionName":{"name":"validator_revert_t_contract$_IERC20_$531","nodeType":"YulIdentifier","src":"958:40:25"},"nodeType":"YulFunctionCall","src":"958:47:25"},"nodeType":"YulExpressionStatement","src":"958:47:25"}]},"name":"abi_decode_t_contract$_IERC20_$531_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"895:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"903:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"911:5:25","type":""}],"src":"840:171:25"},{"body":{"nodeType":"YulBlock","src":"1106:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1123:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1126:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1116:6:25"},"nodeType":"YulFunctionCall","src":"1116:12:25"},"nodeType":"YulExpressionStatement","src":"1116:12:25"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1017:117:25"},{"body":{"nodeType":"YulBlock","src":"1229:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1246:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1249:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1239:6:25"},"nodeType":"YulFunctionCall","src":"1239:12:25"},"nodeType":"YulExpressionStatement","src":"1239:12:25"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"1140:117:25"},{"body":{"nodeType":"YulBlock","src":"1311:54:25","statements":[{"nodeType":"YulAssignment","src":"1321:38:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1339:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"1346:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1335:3:25"},"nodeType":"YulFunctionCall","src":"1335:14:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1355:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1351:3:25"},"nodeType":"YulFunctionCall","src":"1351:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1331:3:25"},"nodeType":"YulFunctionCall","src":"1331:28:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1321:6:25"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1294:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1304:6:25","type":""}],"src":"1263:102:25"},{"body":{"nodeType":"YulBlock","src":"1399:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1416:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1419:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1409:6:25"},"nodeType":"YulFunctionCall","src":"1409:88:25"},"nodeType":"YulExpressionStatement","src":"1409:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1513:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1516:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1506:6:25"},"nodeType":"YulFunctionCall","src":"1506:15:25"},"nodeType":"YulExpressionStatement","src":"1506:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1537:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1540:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1530:6:25"},"nodeType":"YulFunctionCall","src":"1530:15:25"},"nodeType":"YulExpressionStatement","src":"1530:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1371:180:25"},{"body":{"nodeType":"YulBlock","src":"1600:238:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1610:58:25","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1632:6:25"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1662:4:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1640:21:25"},"nodeType":"YulFunctionCall","src":"1640:27:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1628:3:25"},"nodeType":"YulFunctionCall","src":"1628:40:25"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1614:10:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"1779:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1781:16:25"},"nodeType":"YulFunctionCall","src":"1781:18:25"},"nodeType":"YulExpressionStatement","src":"1781:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1722:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"1734:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1719:2:25"},"nodeType":"YulFunctionCall","src":"1719:34:25"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1758:10:25"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1770:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1755:2:25"},"nodeType":"YulFunctionCall","src":"1755:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1716:2:25"},"nodeType":"YulFunctionCall","src":"1716:62:25"},"nodeType":"YulIf","src":"1713:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1817:2:25","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1821:10:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1810:6:25"},"nodeType":"YulFunctionCall","src":"1810:22:25"},"nodeType":"YulExpressionStatement","src":"1810:22:25"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1586:6:25","type":""},{"name":"size","nodeType":"YulTypedName","src":"1594:4:25","type":""}],"src":"1557:281:25"},{"body":{"nodeType":"YulBlock","src":"1885:88:25","statements":[{"nodeType":"YulAssignment","src":"1895:30:25","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1905:18:25"},"nodeType":"YulFunctionCall","src":"1905:20:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1895:6:25"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1954:6:25"},{"name":"size","nodeType":"YulIdentifier","src":"1962:4:25"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1934:19:25"},"nodeType":"YulFunctionCall","src":"1934:33:25"},"nodeType":"YulExpressionStatement","src":"1934:33:25"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1869:4:25","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1878:6:25","type":""}],"src":"1844:129:25"},{"body":{"nodeType":"YulBlock","src":"2046:241:25","statements":[{"body":{"nodeType":"YulBlock","src":"2151:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2153:16:25"},"nodeType":"YulFunctionCall","src":"2153:18:25"},"nodeType":"YulExpressionStatement","src":"2153:18:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2123:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"2131:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:25"},"nodeType":"YulFunctionCall","src":"2120:30:25"},"nodeType":"YulIf","src":"2117:56:25"},{"nodeType":"YulAssignment","src":"2183:37:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2213:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2191:21:25"},"nodeType":"YulFunctionCall","src":"2191:29:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2183:4:25"}]},{"nodeType":"YulAssignment","src":"2257:23:25","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2269:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"2275:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2265:3:25"},"nodeType":"YulFunctionCall","src":"2265:15:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2257:4:25"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2030:6:25","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2041:4:25","type":""}],"src":"1979:308:25"},{"body":{"nodeType":"YulBlock","src":"2355:184:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2365:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"2374:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2369:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"2434:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2459:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"2464:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2455:3:25"},"nodeType":"YulFunctionCall","src":"2455:11:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2478:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"2483:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2474:3:25"},"nodeType":"YulFunctionCall","src":"2474:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2468:5:25"},"nodeType":"YulFunctionCall","src":"2468:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2448:6:25"},"nodeType":"YulFunctionCall","src":"2448:39:25"},"nodeType":"YulExpressionStatement","src":"2448:39:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2395:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"2398:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2392:2:25"},"nodeType":"YulFunctionCall","src":"2392:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2406:19:25","statements":[{"nodeType":"YulAssignment","src":"2408:15:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2417:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"2420:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:25"},"nodeType":"YulFunctionCall","src":"2413:10:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2408:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"2388:3:25","statements":[]},"src":"2384:113:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2517:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2522:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2513:3:25"},"nodeType":"YulFunctionCall","src":"2513:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"2531:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2506:6:25"},"nodeType":"YulFunctionCall","src":"2506:27:25"},"nodeType":"YulExpressionStatement","src":"2506:27:25"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2337:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2342:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"2347:6:25","type":""}],"src":"2293:246:25"},{"body":{"nodeType":"YulBlock","src":"2640:339:25","statements":[{"nodeType":"YulAssignment","src":"2650:75:25","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2717:6:25"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2675:41:25"},"nodeType":"YulFunctionCall","src":"2675:49:25"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2659:15:25"},"nodeType":"YulFunctionCall","src":"2659:66:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2650:5:25"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2741:5:25"},{"name":"length","nodeType":"YulIdentifier","src":"2748:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2734:6:25"},"nodeType":"YulFunctionCall","src":"2734:21:25"},"nodeType":"YulExpressionStatement","src":"2734:21:25"},{"nodeType":"YulVariableDeclaration","src":"2764:27:25","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2779:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"2786:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2775:3:25"},"nodeType":"YulFunctionCall","src":"2775:16:25"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2768:3:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"2829:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2831:77:25"},"nodeType":"YulFunctionCall","src":"2831:79:25"},"nodeType":"YulExpressionStatement","src":"2831:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2810:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2815:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2806:3:25"},"nodeType":"YulFunctionCall","src":"2806:16:25"},{"name":"end","nodeType":"YulIdentifier","src":"2824:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2803:2:25"},"nodeType":"YulFunctionCall","src":"2803:25:25"},"nodeType":"YulIf","src":"2800:112:25"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2956:3:25"},{"name":"dst","nodeType":"YulIdentifier","src":"2961:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"2966:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2921:34:25"},"nodeType":"YulFunctionCall","src":"2921:52:25"},"nodeType":"YulExpressionStatement","src":"2921:52:25"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2613:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"2618:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"2626:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2634:5:25","type":""}],"src":"2545:434:25"},{"body":{"nodeType":"YulBlock","src":"3072:282:25","statements":[{"body":{"nodeType":"YulBlock","src":"3121:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"3123:77:25"},"nodeType":"YulFunctionCall","src":"3123:79:25"},"nodeType":"YulExpressionStatement","src":"3123:79:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3100:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"3108:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3096:3:25"},"nodeType":"YulFunctionCall","src":"3096:17:25"},{"name":"end","nodeType":"YulIdentifier","src":"3115:3:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3092:3:25"},"nodeType":"YulFunctionCall","src":"3092:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3085:6:25"},"nodeType":"YulFunctionCall","src":"3085:35:25"},"nodeType":"YulIf","src":"3082:122:25"},{"nodeType":"YulVariableDeclaration","src":"3213:27:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3233:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3227:5:25"},"nodeType":"YulFunctionCall","src":"3227:13:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3217:6:25","type":""}]},{"nodeType":"YulAssignment","src":"3249:99:25","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3321:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"3329:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3317:3:25"},"nodeType":"YulFunctionCall","src":"3317:17:25"},{"name":"length","nodeType":"YulIdentifier","src":"3336:6:25"},{"name":"end","nodeType":"YulIdentifier","src":"3344:3:25"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3258:58:25"},"nodeType":"YulFunctionCall","src":"3258:90:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3249:5:25"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3050:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"3058:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3066:5:25","type":""}],"src":"2999:355:25"},{"body":{"nodeType":"YulBlock","src":"3403:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"3460:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3472:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3462:6:25"},"nodeType":"YulFunctionCall","src":"3462:12:25"},"nodeType":"YulExpressionStatement","src":"3462:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3426:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3451:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3433:17:25"},"nodeType":"YulFunctionCall","src":"3433:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3423:2:25"},"nodeType":"YulFunctionCall","src":"3423:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3416:6:25"},"nodeType":"YulFunctionCall","src":"3416:43:25"},"nodeType":"YulIf","src":"3413:63:25"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3396:5:25","type":""}],"src":"3360:122:25"},{"body":{"nodeType":"YulBlock","src":"3551:80:25","statements":[{"nodeType":"YulAssignment","src":"3561:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3576:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3570:5:25"},"nodeType":"YulFunctionCall","src":"3570:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3561:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3619:5:25"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3592:26:25"},"nodeType":"YulFunctionCall","src":"3592:33:25"},"nodeType":"YulExpressionStatement","src":"3592:33:25"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3529:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"3537:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3545:5:25","type":""}],"src":"3488:143:25"},{"body":{"nodeType":"YulBlock","src":"3682:32:25","statements":[{"nodeType":"YulAssignment","src":"3692:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"3703:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3692:7:25"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3664:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3674:7:25","type":""}],"src":"3637:77:25"},{"body":{"nodeType":"YulBlock","src":"3763:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"3820:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3829:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3832:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3822:6:25"},"nodeType":"YulFunctionCall","src":"3822:12:25"},"nodeType":"YulExpressionStatement","src":"3822:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3786:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3811:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3793:17:25"},"nodeType":"YulFunctionCall","src":"3793:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3783:2:25"},"nodeType":"YulFunctionCall","src":"3783:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3776:6:25"},"nodeType":"YulFunctionCall","src":"3776:43:25"},"nodeType":"YulIf","src":"3773:63:25"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3756:5:25","type":""}],"src":"3720:122:25"},{"body":{"nodeType":"YulBlock","src":"3911:80:25","statements":[{"nodeType":"YulAssignment","src":"3921:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3936:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3930:5:25"},"nodeType":"YulFunctionCall","src":"3930:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3921:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3979:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3952:26:25"},"nodeType":"YulFunctionCall","src":"3952:33:25"},"nodeType":"YulExpressionStatement","src":"3952:33:25"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3889:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"3897:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3905:5:25","type":""}],"src":"3848:143:25"},{"body":{"nodeType":"YulBlock","src":"4193:1312:25","statements":[{"body":{"nodeType":"YulBlock","src":"4240:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4242:77:25"},"nodeType":"YulFunctionCall","src":"4242:79:25"},"nodeType":"YulExpressionStatement","src":"4242:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4214:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"4223:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4210:3:25"},"nodeType":"YulFunctionCall","src":"4210:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"4235:3:25","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4206:3:25"},"nodeType":"YulFunctionCall","src":"4206:33:25"},"nodeType":"YulIf","src":"4203:120:25"},{"nodeType":"YulBlock","src":"4333:142:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4348:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4362:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4352:6:25","type":""}]},{"nodeType":"YulAssignment","src":"4377:88:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4437:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"4448:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4433:3:25"},"nodeType":"YulFunctionCall","src":"4433:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4457:7:25"}],"functionName":{"name":"abi_decode_t_contract$_IERC20_$531_fromMemory","nodeType":"YulIdentifier","src":"4387:45:25"},"nodeType":"YulFunctionCall","src":"4387:78:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4377:6:25"}]}]},{"nodeType":"YulBlock","src":"4485:292:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4500:39:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4524:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4535:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4520:3:25"},"nodeType":"YulFunctionCall","src":"4520:18:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4514:5:25"},"nodeType":"YulFunctionCall","src":"4514:25:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4504:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"4586:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4588:77:25"},"nodeType":"YulFunctionCall","src":"4588:79:25"},"nodeType":"YulExpressionStatement","src":"4588:79:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4558:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"4566:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4555:2:25"},"nodeType":"YulFunctionCall","src":"4555:30:25"},"nodeType":"YulIf","src":"4552:117:25"},{"nodeType":"YulAssignment","src":"4683:84:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4739:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"4750:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4735:3:25"},"nodeType":"YulFunctionCall","src":"4735:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4759:7:25"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4693:41:25"},"nodeType":"YulFunctionCall","src":"4693:74:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4683:6:25"}]}]},{"nodeType":"YulBlock","src":"4787:292:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4802:39:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4837:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:25"},"nodeType":"YulFunctionCall","src":"4822:18:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4816:5:25"},"nodeType":"YulFunctionCall","src":"4816:25:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4806:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"4888:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4890:77:25"},"nodeType":"YulFunctionCall","src":"4890:79:25"},"nodeType":"YulExpressionStatement","src":"4890:79:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4860:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"4868:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4857:2:25"},"nodeType":"YulFunctionCall","src":"4857:30:25"},"nodeType":"YulIf","src":"4854:117:25"},{"nodeType":"YulAssignment","src":"4985:84:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5041:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5052:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5037:3:25"},"nodeType":"YulFunctionCall","src":"5037:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5061:7:25"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4995:41:25"},"nodeType":"YulFunctionCall","src":"4995:74:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4985:6:25"}]}]},{"nodeType":"YulBlock","src":"5089:129:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5104:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5118:2:25","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5108:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5134:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5180:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5191:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5176:3:25"},"nodeType":"YulFunctionCall","src":"5176:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5200:7:25"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"5144:31:25"},"nodeType":"YulFunctionCall","src":"5144:64:25"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5134:6:25"}]}]},{"nodeType":"YulBlock","src":"5228:130:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5243:17:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5257:3:25","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5247:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5274:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5320:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5331:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5316:3:25"},"nodeType":"YulFunctionCall","src":"5316:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5340:7:25"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"5284:31:25"},"nodeType":"YulFunctionCall","src":"5284:64:25"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5274:6:25"}]}]},{"nodeType":"YulBlock","src":"5368:130:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5383:17:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5397:3:25","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5387:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5414:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5460:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5471:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5456:3:25"},"nodeType":"YulFunctionCall","src":"5456:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5480:7:25"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"5424:31:25"},"nodeType":"YulFunctionCall","src":"5424:64:25"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"5414:6:25"}]}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$531t_string_memory_ptrt_string_memory_ptrt_addresst_uint256t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4123:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4134:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4146:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4154:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4162:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4170:6:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4178:6:25","type":""},{"name":"value5","nodeType":"YulTypedName","src":"4186:6:25","type":""}],"src":"3997:1508:25"},{"body":{"nodeType":"YulBlock","src":"5554:43:25","statements":[{"nodeType":"YulAssignment","src":"5564:27:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5579:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"5586:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5575:3:25"},"nodeType":"YulFunctionCall","src":"5575:16:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5564:7:25"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5536:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5546:7:25","type":""}],"src":"5511:86:25"},{"body":{"nodeType":"YulBlock","src":"5644:77:25","statements":[{"body":{"nodeType":"YulBlock","src":"5699:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5708:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5711:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5701:6:25"},"nodeType":"YulFunctionCall","src":"5701:12:25"},"nodeType":"YulExpressionStatement","src":"5701:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5667:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5690:5:25"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"5674:15:25"},"nodeType":"YulFunctionCall","src":"5674:22:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5664:2:25"},"nodeType":"YulFunctionCall","src":"5664:33:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5657:6:25"},"nodeType":"YulFunctionCall","src":"5657:41:25"},"nodeType":"YulIf","src":"5654:61:25"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5637:5:25","type":""}],"src":"5603:118:25"},{"body":{"nodeType":"YulBlock","src":"5788:78:25","statements":[{"nodeType":"YulAssignment","src":"5798:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5813:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5807:5:25"},"nodeType":"YulFunctionCall","src":"5807:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5798:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5854:5:25"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"5829:24:25"},"nodeType":"YulFunctionCall","src":"5829:31:25"},"nodeType":"YulExpressionStatement","src":"5829:31:25"}]},"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5766:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"5774:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5782:5:25","type":""}],"src":"5727:139:25"},{"body":{"nodeType":"YulBlock","src":"5947:272:25","statements":[{"body":{"nodeType":"YulBlock","src":"5993:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5995:77:25"},"nodeType":"YulFunctionCall","src":"5995:79:25"},"nodeType":"YulExpressionStatement","src":"5995:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5968:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"5977:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5964:3:25"},"nodeType":"YulFunctionCall","src":"5964:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"5989:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5960:3:25"},"nodeType":"YulFunctionCall","src":"5960:32:25"},"nodeType":"YulIf","src":"5957:119:25"},{"nodeType":"YulBlock","src":"6086:126:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6101:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6115:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6105:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6130:72:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6174:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6185:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6170:3:25"},"nodeType":"YulFunctionCall","src":"6170:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6194:7:25"}],"functionName":{"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulIdentifier","src":"6140:29:25"},"nodeType":"YulFunctionCall","src":"6140:62:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6130:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5917:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5928:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5940:6:25","type":""}],"src":"5872:347:25"},{"body":{"nodeType":"YulBlock","src":"6284:40:25","statements":[{"nodeType":"YulAssignment","src":"6295:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6311:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6305:5:25"},"nodeType":"YulFunctionCall","src":"6305:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6295:6:25"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6267:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6277:6:25","type":""}],"src":"6225:99:25"},{"body":{"nodeType":"YulBlock","src":"6358:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6375:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6378:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6368:6:25"},"nodeType":"YulFunctionCall","src":"6368:88:25"},"nodeType":"YulExpressionStatement","src":"6368:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6472:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6475:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6465:6:25"},"nodeType":"YulFunctionCall","src":"6465:15:25"},"nodeType":"YulExpressionStatement","src":"6465:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6496:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6499:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6489:6:25"},"nodeType":"YulFunctionCall","src":"6489:15:25"},"nodeType":"YulExpressionStatement","src":"6489:15:25"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"6330:180:25"},{"body":{"nodeType":"YulBlock","src":"6567:269:25","statements":[{"nodeType":"YulAssignment","src":"6577:22:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6591:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"6597:1:25","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6587:3:25"},"nodeType":"YulFunctionCall","src":"6587:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6577:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"6608:38:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6638:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"6644:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6634:3:25"},"nodeType":"YulFunctionCall","src":"6634:12:25"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"6612:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"6685:51:25","statements":[{"nodeType":"YulAssignment","src":"6699:27:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6713:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"6721:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6709:3:25"},"nodeType":"YulFunctionCall","src":"6709:17:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6699:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6665:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6658:6:25"},"nodeType":"YulFunctionCall","src":"6658:26:25"},"nodeType":"YulIf","src":"6655:81:25"},{"body":{"nodeType":"YulBlock","src":"6788:42:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6802:16:25"},"nodeType":"YulFunctionCall","src":"6802:18:25"},"nodeType":"YulExpressionStatement","src":"6802:18:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6752:18:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6775:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"6783:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6772:2:25"},"nodeType":"YulFunctionCall","src":"6772:14:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6749:2:25"},"nodeType":"YulFunctionCall","src":"6749:38:25"},"nodeType":"YulIf","src":"6746:84:25"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6551:4:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6560:6:25","type":""}],"src":"6516:320:25"},{"body":{"nodeType":"YulBlock","src":"6896:87:25","statements":[{"nodeType":"YulAssignment","src":"6906:11:25","value":{"name":"ptr","nodeType":"YulIdentifier","src":"6914:3:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"6906:4:25"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6934:1:25","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"6937:3:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6927:6:25"},"nodeType":"YulFunctionCall","src":"6927:14:25"},"nodeType":"YulExpressionStatement","src":"6927:14:25"},{"nodeType":"YulAssignment","src":"6950:26:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6968:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6971:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"6958:9:25"},"nodeType":"YulFunctionCall","src":"6958:18:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"6950:4:25"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"6883:3:25","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"6891:4:25","type":""}],"src":"6842:141:25"},{"body":{"nodeType":"YulBlock","src":"7033:49:25","statements":[{"nodeType":"YulAssignment","src":"7043:33:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7061:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"7068:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7057:3:25"},"nodeType":"YulFunctionCall","src":"7057:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"7073:2:25","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7053:3:25"},"nodeType":"YulFunctionCall","src":"7053:23:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7043:6:25"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7016:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7026:6:25","type":""}],"src":"6989:93:25"},{"body":{"nodeType":"YulBlock","src":"7141:54:25","statements":[{"nodeType":"YulAssignment","src":"7151:37:25","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"7176:4:25"},{"name":"value","nodeType":"YulIdentifier","src":"7182:5:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7172:3:25"},"nodeType":"YulFunctionCall","src":"7172:16:25"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"7151:8:25"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"7116:4:25","type":""},{"name":"value","nodeType":"YulTypedName","src":"7122:5:25","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"7132:8:25","type":""}],"src":"7088:107:25"},{"body":{"nodeType":"YulBlock","src":"7277:317:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7287:35:25","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"7308:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"7320:1:25","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7304:3:25"},"nodeType":"YulFunctionCall","src":"7304:18:25"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"7291:9:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7331:109:25","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"7362:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7373:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"7343:18:25"},"nodeType":"YulFunctionCall","src":"7343:97:25"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"7335:4:25","type":""}]},{"nodeType":"YulAssignment","src":"7449:51:25","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"7480:9:25"},{"name":"toInsert","nodeType":"YulIdentifier","src":"7491:8:25"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"7461:18:25"},"nodeType":"YulFunctionCall","src":"7461:39:25"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"7449:8:25"}]},{"nodeType":"YulAssignment","src":"7509:30:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7522:5:25"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"7533:4:25"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7529:3:25"},"nodeType":"YulFunctionCall","src":"7529:9:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7518:3:25"},"nodeType":"YulFunctionCall","src":"7518:21:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7509:5:25"}]},{"nodeType":"YulAssignment","src":"7548:40:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7561:5:25"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"7572:8:25"},{"name":"mask","nodeType":"YulIdentifier","src":"7582:4:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7568:3:25"},"nodeType":"YulFunctionCall","src":"7568:19:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7558:2:25"},"nodeType":"YulFunctionCall","src":"7558:30:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7548:6:25"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7238:5:25","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"7245:10:25","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"7257:8:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7270:6:25","type":""}],"src":"7201:393:25"},{"body":{"nodeType":"YulBlock","src":"7632:28:25","statements":[{"nodeType":"YulAssignment","src":"7642:12:25","value":{"name":"value","nodeType":"YulIdentifier","src":"7649:5:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7642:3:25"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7618:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7628:3:25","type":""}],"src":"7600:60:25"},{"body":{"nodeType":"YulBlock","src":"7726:82:25","statements":[{"nodeType":"YulAssignment","src":"7736:66:25","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7794:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7776:17:25"},"nodeType":"YulFunctionCall","src":"7776:24:25"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"7767:8:25"},"nodeType":"YulFunctionCall","src":"7767:34:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7749:17:25"},"nodeType":"YulFunctionCall","src":"7749:53:25"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"7736:9:25"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7706:5:25","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"7716:9:25","type":""}],"src":"7666:142:25"},{"body":{"nodeType":"YulBlock","src":"7861:28:25","statements":[{"nodeType":"YulAssignment","src":"7871:12:25","value":{"name":"value","nodeType":"YulIdentifier","src":"7878:5:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7871:3:25"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7847:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7857:3:25","type":""}],"src":"7814:75:25"},{"body":{"nodeType":"YulBlock","src":"7971:193:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7981:63:25","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"8036:7:25"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8005:30:25"},"nodeType":"YulFunctionCall","src":"8005:39:25"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"7985:16:25","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8060:4:25"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8100:4:25"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8094:5:25"},"nodeType":"YulFunctionCall","src":"8094:11:25"},{"name":"offset","nodeType":"YulIdentifier","src":"8107:6:25"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"8139:16:25"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"8115:23:25"},"nodeType":"YulFunctionCall","src":"8115:41:25"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"8066:27:25"},"nodeType":"YulFunctionCall","src":"8066:91:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8053:6:25"},"nodeType":"YulFunctionCall","src":"8053:105:25"},"nodeType":"YulExpressionStatement","src":"8053:105:25"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7948:4:25","type":""},{"name":"offset","nodeType":"YulTypedName","src":"7954:6:25","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"7962:7:25","type":""}],"src":"7895:269:25"},{"body":{"nodeType":"YulBlock","src":"8219:24:25","statements":[{"nodeType":"YulAssignment","src":"8229:8:25","value":{"kind":"number","nodeType":"YulLiteral","src":"8236:1:25","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8229:3:25"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"8215:3:25","type":""}],"src":"8170:73:25"},{"body":{"nodeType":"YulBlock","src":"8302:136:25","statements":[{"nodeType":"YulVariableDeclaration","src":"8312:46:25","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"8326:30:25"},"nodeType":"YulFunctionCall","src":"8326:32:25"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"8316:6:25","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8411:4:25"},{"name":"offset","nodeType":"YulIdentifier","src":"8417:6:25"},{"name":"zero_0","nodeType":"YulIdentifier","src":"8425:6:25"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8367:43:25"},"nodeType":"YulFunctionCall","src":"8367:65:25"},"nodeType":"YulExpressionStatement","src":"8367:65:25"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"8288:4:25","type":""},{"name":"offset","nodeType":"YulTypedName","src":"8294:6:25","type":""}],"src":"8249:189:25"},{"body":{"nodeType":"YulBlock","src":"8494:136:25","statements":[{"body":{"nodeType":"YulBlock","src":"8561:63:25","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8605:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"8612:1:25","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"8575:29:25"},"nodeType":"YulFunctionCall","src":"8575:39:25"},"nodeType":"YulExpressionStatement","src":"8575:39:25"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8514:5:25"},{"name":"end","nodeType":"YulIdentifier","src":"8521:3:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8511:2:25"},"nodeType":"YulFunctionCall","src":"8511:14:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8526:26:25","statements":[{"nodeType":"YulAssignment","src":"8528:22:25","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8541:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"8548:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8537:3:25"},"nodeType":"YulFunctionCall","src":"8537:13:25"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"8528:5:25"}]}]},"pre":{"nodeType":"YulBlock","src":"8508:2:25","statements":[]},"src":"8504:120:25"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"8482:5:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"8489:3:25","type":""}],"src":"8444:186:25"},{"body":{"nodeType":"YulBlock","src":"8715:464:25","statements":[{"body":{"nodeType":"YulBlock","src":"8741:431:25","statements":[{"nodeType":"YulVariableDeclaration","src":"8755:54:25","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8803:5:25"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"8771:31:25"},"nodeType":"YulFunctionCall","src":"8771:38:25"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"8759:8:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8822:63:25","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"8845:8:25"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"8873:10:25"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"8855:17:25"},"nodeType":"YulFunctionCall","src":"8855:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8841:3:25"},"nodeType":"YulFunctionCall","src":"8841:44:25"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"8826:11:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"9042:27:25","statements":[{"nodeType":"YulAssignment","src":"9044:23:25","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"9059:8:25"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"9044:11:25"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"9026:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"9038:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9023:2:25"},"nodeType":"YulFunctionCall","src":"9023:18:25"},"nodeType":"YulIf","src":"9020:49:25"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"9111:11:25"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"9128:8:25"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"9156:3:25"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"9138:17:25"},"nodeType":"YulFunctionCall","src":"9138:22:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9124:3:25"},"nodeType":"YulFunctionCall","src":"9124:37:25"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"9082:28:25"},"nodeType":"YulFunctionCall","src":"9082:80:25"},"nodeType":"YulExpressionStatement","src":"9082:80:25"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"8732:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"8737:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8729:2:25"},"nodeType":"YulFunctionCall","src":"8729:11:25"},"nodeType":"YulIf","src":"8726:446:25"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"8691:5:25","type":""},{"name":"len","nodeType":"YulTypedName","src":"8698:3:25","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"8703:10:25","type":""}],"src":"8636:543:25"},{"body":{"nodeType":"YulBlock","src":"9248:54:25","statements":[{"nodeType":"YulAssignment","src":"9258:37:25","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"9283:4:25"},{"name":"value","nodeType":"YulIdentifier","src":"9289:5:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9279:3:25"},"nodeType":"YulFunctionCall","src":"9279:16:25"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"9258:8:25"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"9223:4:25","type":""},{"name":"value","nodeType":"YulTypedName","src":"9229:5:25","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"9239:8:25","type":""}],"src":"9185:117:25"},{"body":{"nodeType":"YulBlock","src":"9359:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9369:68:25","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9418:1:25","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"9421:5:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9414:3:25"},"nodeType":"YulFunctionCall","src":"9414:13:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9433:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9429:3:25"},"nodeType":"YulFunctionCall","src":"9429:6:25"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"9385:28:25"},"nodeType":"YulFunctionCall","src":"9385:51:25"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9381:3:25"},"nodeType":"YulFunctionCall","src":"9381:56:25"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"9373:4:25","type":""}]},{"nodeType":"YulAssignment","src":"9446:25:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9460:4:25"},{"name":"mask","nodeType":"YulIdentifier","src":"9466:4:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9456:3:25"},"nodeType":"YulFunctionCall","src":"9456:15:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"9446:6:25"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"9336:4:25","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"9342:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"9352:6:25","type":""}],"src":"9308:169:25"},{"body":{"nodeType":"YulBlock","src":"9563:214:25","statements":[{"nodeType":"YulAssignment","src":"9696:37:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9723:4:25"},{"name":"len","nodeType":"YulIdentifier","src":"9729:3:25"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"9704:18:25"},"nodeType":"YulFunctionCall","src":"9704:29:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9696:4:25"}]},{"nodeType":"YulAssignment","src":"9742:29:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9753:4:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9763:1:25","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"9766:3:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9759:3:25"},"nodeType":"YulFunctionCall","src":"9759:11:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9750:2:25"},"nodeType":"YulFunctionCall","src":"9750:21:25"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"9742:4:25"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"9544:4:25","type":""},{"name":"len","nodeType":"YulTypedName","src":"9550:3:25","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"9558:4:25","type":""}],"src":"9482:295:25"},{"body":{"nodeType":"YulBlock","src":"9874:1303:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9885:51:25","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9932:3:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9899:32:25"},"nodeType":"YulFunctionCall","src":"9899:37:25"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"9889:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"10021:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10023:16:25"},"nodeType":"YulFunctionCall","src":"10023:18:25"},"nodeType":"YulExpressionStatement","src":"10023:18:25"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9993:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"10001:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9990:2:25"},"nodeType":"YulFunctionCall","src":"9990:30:25"},"nodeType":"YulIf","src":"9987:56:25"},{"nodeType":"YulVariableDeclaration","src":"10053:52:25","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10099:4:25"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"10093:5:25"},"nodeType":"YulFunctionCall","src":"10093:11:25"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"10067:25:25"},"nodeType":"YulFunctionCall","src":"10067:38:25"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"10057:6:25","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10198:4:25"},{"name":"oldLen","nodeType":"YulIdentifier","src":"10204:6:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"10212:6:25"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"10152:45:25"},"nodeType":"YulFunctionCall","src":"10152:67:25"},"nodeType":"YulExpressionStatement","src":"10152:67:25"},{"nodeType":"YulVariableDeclaration","src":"10229:18:25","value":{"kind":"number","nodeType":"YulLiteral","src":"10246:1:25","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"10233:9:25","type":""}]},{"nodeType":"YulAssignment","src":"10257:17:25","value":{"kind":"number","nodeType":"YulLiteral","src":"10270:4:25","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"10257:9:25"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"10321:611:25","statements":[{"nodeType":"YulVariableDeclaration","src":"10335:37:25","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"10354:6:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10366:4:25","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10362:3:25"},"nodeType":"YulFunctionCall","src":"10362:9:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10350:3:25"},"nodeType":"YulFunctionCall","src":"10350:22:25"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"10339:7:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10386:51:25","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10432:4:25"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"10400:31:25"},"nodeType":"YulFunctionCall","src":"10400:37:25"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"10390:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10450:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"10459:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10454:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"10518:163:25","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10543:6:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10561:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10566:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10557:3:25"},"nodeType":"YulFunctionCall","src":"10557:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10551:5:25"},"nodeType":"YulFunctionCall","src":"10551:26:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10536:6:25"},"nodeType":"YulFunctionCall","src":"10536:42:25"},"nodeType":"YulExpressionStatement","src":"10536:42:25"},{"nodeType":"YulAssignment","src":"10595:24:25","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10609:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"10617:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10605:3:25"},"nodeType":"YulFunctionCall","src":"10605:14:25"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10595:6:25"}]},{"nodeType":"YulAssignment","src":"10636:31:25","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"10653:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10664:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10649:3:25"},"nodeType":"YulFunctionCall","src":"10649:18:25"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"10636:9:25"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10484:1:25"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"10487:7:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10481:2:25"},"nodeType":"YulFunctionCall","src":"10481:14:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10496:21:25","statements":[{"nodeType":"YulAssignment","src":"10498:17:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10507:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"10510:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10503:3:25"},"nodeType":"YulFunctionCall","src":"10503:12:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10498:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"10477:3:25","statements":[]},"src":"10473:208:25"},{"body":{"nodeType":"YulBlock","src":"10717:156:25","statements":[{"nodeType":"YulVariableDeclaration","src":"10735:43:25","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10762:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10767:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10758:3:25"},"nodeType":"YulFunctionCall","src":"10758:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10752:5:25"},"nodeType":"YulFunctionCall","src":"10752:26:25"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"10739:9:25","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10802:6:25"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"10829:9:25"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"10844:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"10852:4:25","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10840:3:25"},"nodeType":"YulFunctionCall","src":"10840:17:25"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"10810:18:25"},"nodeType":"YulFunctionCall","src":"10810:48:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10795:6:25"},"nodeType":"YulFunctionCall","src":"10795:64:25"},"nodeType":"YulExpressionStatement","src":"10795:64:25"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"10700:7:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"10709:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10697:2:25"},"nodeType":"YulFunctionCall","src":"10697:19:25"},"nodeType":"YulIf","src":"10694:179:25"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10893:4:25"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"10907:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"10915:1:25","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10903:3:25"},"nodeType":"YulFunctionCall","src":"10903:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"10919:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10899:3:25"},"nodeType":"YulFunctionCall","src":"10899:22:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10886:6:25"},"nodeType":"YulFunctionCall","src":"10886:36:25"},"nodeType":"YulExpressionStatement","src":"10886:36:25"}]},"nodeType":"YulCase","src":"10314:618:25","value":{"kind":"number","nodeType":"YulLiteral","src":"10319:1:25","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"10949:222:25","statements":[{"nodeType":"YulVariableDeclaration","src":"10963:14:25","value":{"kind":"number","nodeType":"YulLiteral","src":"10976:1:25","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10967:5:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"11000:67:25","statements":[{"nodeType":"YulAssignment","src":"11018:35:25","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11037:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"11042:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11033:3:25"},"nodeType":"YulFunctionCall","src":"11033:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11027:5:25"},"nodeType":"YulFunctionCall","src":"11027:26:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11018:5:25"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"10993:6:25"},"nodeType":"YulIf","src":"10990:77:25"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11087:4:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11146:5:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"11153:6:25"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"11093:52:25"},"nodeType":"YulFunctionCall","src":"11093:67:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"11080:6:25"},"nodeType":"YulFunctionCall","src":"11080:81:25"},"nodeType":"YulExpressionStatement","src":"11080:81:25"}]},"nodeType":"YulCase","src":"10941:230:25","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"10294:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"10302:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10291:2:25"},"nodeType":"YulFunctionCall","src":"10291:14:25"},"nodeType":"YulSwitch","src":"10284:887:25"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"9863:4:25","type":""},{"name":"src","nodeType":"YulTypedName","src":"9869:3:25","type":""}],"src":"9782:1395:25"},{"body":{"nodeType":"YulBlock","src":"11228:32:25","statements":[{"nodeType":"YulAssignment","src":"11238:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"11249:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11238:7:25"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11210:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11220:7:25","type":""}],"src":"11183:77:25"},{"body":{"nodeType":"YulBlock","src":"11331:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11348:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11371:5:25"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"11353:17:25"},"nodeType":"YulFunctionCall","src":"11353:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11341:6:25"},"nodeType":"YulFunctionCall","src":"11341:37:25"},"nodeType":"YulExpressionStatement","src":"11341:37:25"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11319:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11326:3:25","type":""}],"src":"11266:118:25"},{"body":{"nodeType":"YulBlock","src":"11455:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11472:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11495:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11477:17:25"},"nodeType":"YulFunctionCall","src":"11477:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11465:6:25"},"nodeType":"YulFunctionCall","src":"11465:37:25"},"nodeType":"YulExpressionStatement","src":"11465:37:25"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11443:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11450:3:25","type":""}],"src":"11390:118:25"},{"body":{"nodeType":"YulBlock","src":"11579:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11596:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11619:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"11601:17:25"},"nodeType":"YulFunctionCall","src":"11601:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11589:6:25"},"nodeType":"YulFunctionCall","src":"11589:37:25"},"nodeType":"YulExpressionStatement","src":"11589:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11567:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11574:3:25","type":""}],"src":"11514:118:25"},{"body":{"nodeType":"YulBlock","src":"11848:454:25","statements":[{"nodeType":"YulAssignment","src":"11858:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11870:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11881:3:25","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11866:3:25"},"nodeType":"YulFunctionCall","src":"11866:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11858:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11939:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11952:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11963:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11948:3:25"},"nodeType":"YulFunctionCall","src":"11948:17:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"11895:43:25"},"nodeType":"YulFunctionCall","src":"11895:71:25"},"nodeType":"YulExpressionStatement","src":"11895:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12020:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12033:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12044:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12029:3:25"},"nodeType":"YulFunctionCall","src":"12029:18:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"11976:43:25"},"nodeType":"YulFunctionCall","src":"11976:72:25"},"nodeType":"YulExpressionStatement","src":"11976:72:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12102:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12115:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12126:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12111:3:25"},"nodeType":"YulFunctionCall","src":"12111:18:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"12058:43:25"},"nodeType":"YulFunctionCall","src":"12058:72:25"},"nodeType":"YulExpressionStatement","src":"12058:72:25"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"12184:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12197:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12208:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12193:3:25"},"nodeType":"YulFunctionCall","src":"12193:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12140:43:25"},"nodeType":"YulFunctionCall","src":"12140:72:25"},"nodeType":"YulExpressionStatement","src":"12140:72:25"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"12266:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12279:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12290:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12275:3:25"},"nodeType":"YulFunctionCall","src":"12275:19:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12222:43:25"},"nodeType":"YulFunctionCall","src":"12222:73:25"},"nodeType":"YulExpressionStatement","src":"12222:73:25"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11788:9:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11800:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11808:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11816:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11824:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11832:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11843:4:25","type":""}],"src":"11638:664:25"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$531(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$531(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$531(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$531_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$531(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$531t_string_memory_ptrt_string_memory_ptrt_addresst_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$531_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x100 PUSH1 0x40 MSTORE PUSH4 0x1E18558 PUSH1 0xE0 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x6761 CODESIZE SUB DUP1 PUSH3 0x6761 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x3D SWAP2 PUSH3 0x3A9 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xB2 SWAP2 SWAP1 PUSH3 0x490 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA0 DUP2 SWAP1 MSTORE PUSH2 0x100 GT PUSH3 0xDC JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2364765 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0xC0 MSTORE PUSH4 0x1E18558 DUP3 GT ISZERO PUSH3 0x106 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFDFBB0B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x14 DUP3 SWAP1 SSTORE PUSH1 0x1A PUSH3 0x119 DUP7 DUP3 PUSH3 0x5B2 JUMP JUMPDEST POP PUSH1 0x1B PUSH3 0x128 DUP6 DUP3 PUSH3 0x5B2 JUMP JUMPDEST POP PUSH1 0x12 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE DUP5 MLOAD PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x312E302E3 PUSH1 0xDC SHL SWAP1 DUP5 ADD MSTORE MLOAD PUSH3 0x1BF SWAP3 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F SWAP3 SWAP2 PUSH32 0x6C015BD22B4C69690933C1058878EBDFEF31F9AAAE40BBE86D8A09FE1B2972C SWAP2 CHAINID SWAP2 ADDRESS SWAP2 ADD PUSH3 0x695 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x19 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH3 0x6EB SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x213 DUP3 PUSH3 0x206 JUMP JUMPDEST PUSH3 0x231 DUP2 PUSH3 0x219 JUMP JUMPDEST DUP2 EQ PUSH3 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 MLOAD PUSH3 0x213 DUP2 PUSH3 0x226 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH3 0x28B JUMPI PUSH3 0x28B PUSH3 0x24D JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x29E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH3 0x2AC DUP3 DUP3 PUSH3 0x263 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH3 0x2CD JUMPI PUSH3 0x2CD PUSH3 0x24D JUMP JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2FB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x2E1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH3 0x31B PUSH3 0x315 DUP5 PUSH3 0x2B1 JUMP JUMPDEST PUSH3 0x292 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x338 JUMPI PUSH3 0x338 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x345 DUP5 DUP3 DUP6 PUSH3 0x2DE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x363 JUMPI PUSH3 0x363 PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x375 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x304 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH3 0x231 DUP2 PUSH3 0x206 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x213 DUP2 PUSH3 0x37D JUMP JUMPDEST DUP1 PUSH3 0x231 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x213 DUP2 PUSH3 0x395 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x3C7 JUMPI PUSH3 0x3C7 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x3D5 DUP10 DUP10 PUSH3 0x240 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x3F6 JUMPI PUSH3 0x3F6 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x404 DUP10 DUP3 DUP11 ADD PUSH3 0x34D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x425 JUMPI PUSH3 0x425 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x433 DUP10 DUP3 DUP11 ADD PUSH3 0x34D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x446 DUP10 DUP3 DUP11 ADD PUSH3 0x388 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH3 0x459 DUP10 DUP3 DUP11 ADD PUSH3 0x39C JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH3 0x46C DUP10 DUP3 DUP11 ADD PUSH3 0x388 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0xFF DUP2 AND PUSH3 0x231 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x213 DUP2 PUSH3 0x479 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x4A7 JUMPI PUSH3 0x4A7 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x375 DUP5 DUP5 PUSH3 0x483 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x4E0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4F5 JUMPI PUSH3 0x4F5 PUSH3 0x4B5 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x213 PUSH3 0x509 DUP4 DUP2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH3 0x517 DUP4 PUSH3 0x4FB JUMP JUMPDEST DUP2 SLOAD PUSH1 0x8 DUP5 MUL DUP3 DUP2 SHL PUSH1 0x0 NOT SWAP1 SWAP2 SHL SWAP1 DUP2 AND SWAP1 NOT SWAP1 SWAP2 AND OR DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x546 DUP2 DUP5 DUP5 PUSH3 0x50C JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x56A JUMPI PUSH3 0x561 PUSH1 0x0 DUP3 PUSH3 0x537 JUMP JUMPDEST PUSH1 0x1 ADD PUSH3 0x54B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x546 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x20 PUSH1 0x1F DUP6 ADD DIV DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x597 JUMPI POP DUP1 JUMPDEST PUSH3 0x5AB PUSH1 0x20 PUSH1 0x1F DUP7 ADD DIV DUP4 ADD DUP3 PUSH3 0x54B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x5CE JUMPI PUSH3 0x5CE PUSH3 0x24D JUMP JUMPDEST PUSH3 0x5DA DUP3 SLOAD PUSH3 0x4CB JUMP JUMPDEST PUSH3 0x5E7 DUP3 DUP3 DUP6 PUSH3 0x56E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x61E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x605 JUMPI POP DUP6 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x8 DUP7 MUL SHR NOT DUP2 AND PUSH1 0x2 DUP7 MUL OR DUP7 SSTORE POP PUSH3 0x67A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x650 JUMPI DUP9 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH3 0x62E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x66D JUMPI DUP5 DUP10 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x1F DUP10 AND PUSH1 0x8 MUL SHR NOT AND DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP1 JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x684 DUP2 PUSH3 0x206 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD PUSH3 0x6A5 DUP3 DUP9 PUSH3 0x682 JUMP JUMPDEST PUSH3 0x6B4 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x682 JUMP JUMPDEST PUSH3 0x6C3 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x682 JUMP JUMPDEST PUSH3 0x6D2 PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x682 JUMP JUMPDEST PUSH3 0x6E1 PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x68A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x5FB0 PUSH3 0x7B1 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x5E2 ADD MSTORE PUSH2 0x1AEF ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x666 ADD MSTORE PUSH2 0x474D ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x68D ADD MSTORE DUP2 DUP2 PUSH2 0x6C4 ADD MSTORE PUSH2 0x1799 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x72D ADD MSTORE DUP2 DUP2 PUSH2 0x7FA ADD MSTORE DUP2 DUP2 PUSH2 0x1204 ADD MSTORE DUP2 DUP2 PUSH2 0x2AB9 ADD MSTORE DUP2 DUP2 PUSH2 0x2B55 ADD MSTORE DUP2 DUP2 PUSH2 0x2D70 ADD MSTORE DUP2 DUP2 PUSH2 0x2DB0 ADD MSTORE DUP2 DUP2 PUSH2 0x2EB5 ADD MSTORE DUP2 DUP2 PUSH2 0x2F32 ADD MSTORE DUP2 DUP2 PUSH2 0x31BF ADD MSTORE DUP2 DUP2 PUSH2 0x3384 ADD MSTORE DUP2 DUP2 PUSH2 0x3A5A ADD MSTORE DUP2 DUP2 PUSH2 0x3E66 ADD MSTORE DUP2 DUP2 PUSH2 0x40F0 ADD MSTORE DUP2 DUP2 PUSH2 0x48D1 ADD MSTORE DUP2 DUP2 PUSH2 0x4965 ADD MSTORE PUSH2 0x49B0 ADD MSTORE PUSH2 0x5FB0 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D020808 GT PUSH2 0x281 JUMPI DUP1 PUSH4 0x6D020808 EQ PUSH2 0x956 JUMPI DUP1 PUSH4 0x6E553F65 EQ PUSH2 0x95E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x971 JUMPI DUP1 PUSH4 0x77E3B267 EQ PUSH2 0x984 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x9A8 JUMPI DUP1 PUSH4 0x8212FD43 EQ PUSH2 0x9C8 JUMPI DUP1 PUSH4 0x8AFCA8F0 EQ PUSH2 0x9DB JUMPI DUP1 PUSH4 0x91986003 EQ PUSH2 0x9E4 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x9F7 JUMPI DUP1 PUSH4 0x94BF804D EQ PUSH2 0xA0A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xA1D JUMPI DUP1 PUSH4 0x99374642 EQ PUSH2 0xA25 JUMPI DUP1 PUSH4 0x99530B06 EQ PUSH2 0xA45 JUMPI DUP1 PUSH4 0x9BBCA884 EQ PUSH2 0xA4D JUMPI DUP1 PUSH4 0x9E34E348 EQ PUSH2 0xA60 JUMPI DUP1 PUSH4 0x9F3988F3 EQ PUSH2 0xA73 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0xA88 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0xA90 JUMPI DUP1 PUSH4 0xA73F7F8A EQ PUSH2 0xAA3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xAB6 JUMPI DUP1 PUSH4 0xA98222C4 EQ PUSH2 0xAC9 JUMPI DUP1 PUSH4 0xAB5B4D49 EQ PUSH2 0xADE JUMPI DUP1 PUSH4 0xB3C187F2 EQ PUSH2 0xAF3 JUMPI DUP1 PUSH4 0xB3D7F6B9 EQ PUSH2 0xB06 JUMPI DUP1 PUSH4 0xB6CC2D1F EQ PUSH2 0xB19 JUMPI DUP1 PUSH4 0xBB994D48 EQ PUSH2 0xB3A JUMPI DUP1 PUSH4 0xBBE4EB49 EQ PUSH2 0xB4D JUMPI DUP1 PUSH4 0xBDC8144B EQ PUSH2 0xB5A JUMPI DUP1 PUSH4 0xC065CA07 EQ PUSH2 0xB6D JUMPI DUP1 PUSH4 0xC0993EEA EQ PUSH2 0xB82 JUMPI DUP1 PUSH4 0xC63D75B6 EQ PUSH2 0xBA9 JUMPI DUP1 PUSH4 0xC6E6F592 EQ PUSH2 0xBBC JUMPI DUP1 PUSH4 0xC8D74B60 EQ PUSH2 0xBCF JUMPI DUP1 PUSH4 0xC8DFFA95 EQ PUSH2 0xBE4 JUMPI DUP1 PUSH4 0xC9A16EA4 EQ PUSH2 0xBED JUMPI DUP1 PUSH4 0xD4AE064F EQ PUSH2 0xC00 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0xC15 JUMPI DUP1 PUSH4 0xD538E904 EQ PUSH2 0xC28 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0xC3B JUMPI DUP1 PUSH4 0xD81A09F6 EQ PUSH2 0xC4E JUMPI DUP1 PUSH4 0xD9A0E97A EQ PUSH2 0xC61 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xC69 JUMPI DUP1 PUSH4 0xDF69B22A EQ PUSH2 0xCA2 JUMPI DUP1 PUSH4 0xE5236CC9 EQ PUSH2 0xCB5 JUMPI DUP1 PUSH4 0xECF70858 EQ PUSH2 0xCBD JUMPI DUP1 PUSH4 0xEF8B30F7 EQ PUSH2 0xBBC JUMPI DUP1 PUSH4 0xF1DAEBA8 EQ PUSH2 0xCC6 JUMPI DUP1 PUSH4 0xF5B944EB EQ PUSH2 0xCDB JUMPI DUP1 PUSH4 0xF6D7BFA0 EQ PUSH2 0xCF0 JUMPI DUP1 PUSH4 0xF828F50B EQ PUSH2 0xD03 JUMPI DUP1 PUSH4 0xFC0E74D1 EQ PUSH2 0xD0C JUMPI DUP1 PUSH4 0xFD967F47 EQ PUSH2 0xD20 JUMPI DUP1 PUSH4 0xFEC61F06 EQ PUSH2 0xD29 JUMPI DUP1 PUSH4 0xFF1E7F08 EQ PUSH2 0xD3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x435DA5 EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0x1E1D114 EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x50B JUMPI DUP1 PUSH4 0x3DCD12C EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0x6580F2D EQ PUSH2 0x540 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0x7A2D13A EQ PUSH2 0x568 JUMPI DUP1 PUSH4 0x835A3FC EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0x952864E EQ PUSH2 0x584 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x58D JUMPI DUP1 PUSH4 0xA28A477 EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0xAD283D0 EQ PUSH2 0x5B3 JUMPI DUP1 PUSH4 0x16B87AC0 EQ PUSH2 0x5C8 JUMPI DUP1 PUSH4 0x16D3BFBB EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x604 JUMPI DUP1 PUSH4 0x223E5479 EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x61F JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x632 JUMPI DUP1 PUSH4 0x2D632692 EQ PUSH2 0x645 JUMPI DUP1 PUSH4 0x2D772168 EQ PUSH2 0x64E JUMPI DUP1 PUSH4 0x2DD31000 EQ PUSH2 0x661 JUMPI DUP1 PUSH4 0x2E0F2625 EQ PUSH2 0x688 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x6AF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x6C2 JUMPI DUP1 PUSH4 0x34B5FAB6 EQ PUSH2 0x6F0 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x703 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x70C JUMPI DUP1 PUSH4 0x36FBA084 EQ PUSH2 0x71F JUMPI DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x72B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x751 JUMPI DUP1 PUSH4 0x39EBF823 EQ PUSH2 0x764 JUMPI DUP1 PUSH4 0x3CD7B5AB EQ PUSH2 0x7AB JUMPI DUP1 PUSH4 0x3F7B5E40 EQ PUSH2 0x7B4 JUMPI DUP1 PUSH4 0x402D267D EQ PUSH2 0x7BC JUMPI DUP1 PUSH4 0x405977E7 EQ PUSH2 0x7CF JUMPI DUP1 PUSH4 0x46E6AC49 EQ PUSH2 0x7E2 JUMPI DUP1 PUSH4 0x4800D97F EQ PUSH2 0x7F5 JUMPI DUP1 PUSH4 0x48EA7127 EQ PUSH2 0x829 JUMPI DUP1 PUSH4 0x4BBD71E9 EQ PUSH2 0x83C JUMPI DUP1 PUSH4 0x4CDAD506 EQ PUSH2 0x568 JUMPI DUP1 PUSH4 0x4CE1D38A EQ PUSH2 0x84F JUMPI DUP1 PUSH4 0x4CFE51DC EQ PUSH2 0x864 JUMPI DUP1 PUSH4 0x4D4BB197 EQ PUSH2 0x879 JUMPI DUP1 PUSH4 0x4FB3CCC5 EQ PUSH2 0x88E JUMPI DUP1 PUSH4 0x5141EEBB EQ PUSH2 0x8A1 JUMPI DUP1 PUSH4 0x53A66132 EQ PUSH2 0x8AA JUMPI DUP1 PUSH4 0x5A569099 EQ PUSH2 0x8CD JUMPI DUP1 PUSH4 0x5BF6B4FB EQ PUSH2 0x8E0 JUMPI DUP1 PUSH4 0x629B9142 EQ PUSH2 0x8F5 JUMPI DUP1 PUSH4 0x633F228C EQ PUSH2 0x908 JUMPI DUP1 PUSH4 0x652DA324 EQ PUSH2 0x91B JUMPI DUP1 PUSH4 0x65CB6765 EQ PUSH2 0x930 JUMPI DUP1 PUSH4 0x6853920E EQ PUSH2 0x943 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x12 SLOAD PUSH2 0x4E0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4ED SWAP2 SWAP1 PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FE PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4ED SWAP2 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH2 0x51E PUSH2 0x519 CALLDATASIZE PUSH1 0x4 PUSH2 0x4EFA JUMP JUMPDEST PUSH2 0xD60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4ED SWAP2 SWAP1 PUSH2 0x4F23 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x54E CALLDATASIZE PUSH1 0x4 PUSH2 0x5066 JUMP JUMPDEST PUSH2 0xD97 JUMP JUMPDEST PUSH2 0x55B PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4ED SWAP2 SWAP1 PUSH2 0x5150 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x576 CALLDATASIZE PUSH1 0x4 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0xE62 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x51E PUSH2 0x59B CALLDATASIZE PUSH1 0x4 PUSH2 0x5182 JUMP JUMPDEST PUSH2 0xE6F JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x5AE CALLDATASIZE PUSH1 0x4 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0xE83 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5D1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x5D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x51BF JUMP JUMPDEST PUSH2 0xE90 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4FE PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0xEB7 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x61A CALLDATASIZE PUSH1 0x4 PUSH2 0x51BF JUMP JUMPDEST PUSH2 0xEC1 JUMP JUMPDEST PUSH2 0x51E PUSH2 0x62D CALLDATASIZE PUSH1 0x4 PUSH2 0x51E0 JUMP JUMPDEST PUSH2 0xEE2 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x640 CALLDATASIZE PUSH1 0x4 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0xF33 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x65C CALLDATASIZE PUSH1 0x4 PUSH2 0x51BF JUMP JUMPDEST PUSH2 0xF48 JUMP JUMPDEST PUSH2 0x4E0 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x6BD CALLDATASIZE PUSH1 0x4 PUSH2 0x5230 JUMP JUMPDEST PUSH2 0xFEC JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH2 0x4ED SWAP2 SWAP1 PUSH2 0x526C JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x6FE CALLDATASIZE PUSH1 0x4 PUSH2 0x527A JUMP JUMPDEST PUSH2 0x100D JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x71A CALLDATASIZE PUSH1 0x4 PUSH2 0x5230 JUMP JUMPDEST PUSH2 0x105B JUMP JUMPDEST PUSH2 0x4FE PUSH5 0xE8D4A51000 DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x51E PUSH2 0x75F CALLDATASIZE PUSH1 0x4 PUSH2 0x5182 JUMP JUMPDEST PUSH2 0x1096 JUMP JUMPDEST PUSH2 0x79B PUSH2 0x772 CALLDATASIZE PUSH1 0x4 PUSH2 0x51BF JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP3 SWAP1 SWAP4 ADD SLOAD SWAP1 SWAP3 SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4ED SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x52DA JUMP JUMPDEST PUSH2 0x4FE PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0xA DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x7CA CALLDATASIZE PUSH1 0x4 PUSH2 0x51BF JUMP JUMPDEST PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x7DD CALLDATASIZE PUSH1 0x4 PUSH2 0x5182 JUMP JUMPDEST PUSH2 0x10AE JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x7F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5182 JUMP JUMPDEST PUSH2 0x131E JUMP JUMPDEST PUSH2 0x81C PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4ED SWAP2 SWAP1 PUSH2 0x5347 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x837 CALLDATASIZE PUSH1 0x4 PUSH2 0x51BF JUMP JUMPDEST PUSH2 0x135C JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x84A CALLDATASIZE PUSH1 0x4 PUSH2 0x51BF JUMP JUMPDEST PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5F5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5D9B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5E5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x4E0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x51E PUSH2 0x8B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x5161 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x8DB CALLDATASIZE PUSH1 0x4 PUSH2 0x5182 JUMP JUMPDEST PUSH2 0x1422 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5D7B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x903 CALLDATASIZE PUSH1 0x4 PUSH2 0x51BF JUMP JUMPDEST PUSH2 0x1468 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x916 CALLDATASIZE PUSH1 0x4 PUSH2 0x539F JUMP JUMPDEST PUSH2 0x14A3 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CDB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x93E CALLDATASIZE PUSH1 0x4 PUSH2 0x527A JUMP JUMPDEST PUSH2 0x1588 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x951 CALLDATASIZE PUSH1 0x4 PUSH2 0x5182 JUMP JUMPDEST PUSH2 0x1595 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x96C CALLDATASIZE PUSH1 0x4 PUSH2 0x5230 JUMP JUMPDEST PUSH2 0x1672 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x97F CALLDATASIZE PUSH1 0x4 PUSH2 0x51BF JUMP JUMPDEST PUSH2 0x1692 JUMP JUMPDEST PUSH2 0x55B PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x312E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x9B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x51BF JUMP JUMPDEST PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x9D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x16EB JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x4E0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x51E PUSH2 0xA05 CALLDATASIZE PUSH1 0x4 PUSH2 0x5230 JUMP JUMPDEST PUSH2 0x1744 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0xA18 CALLDATASIZE PUSH1 0x4 PUSH2 0x5230 JUMP JUMPDEST PUSH2 0x176D JUMP JUMPDEST PUSH2 0x55B PUSH2 0x1782 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0xA33 CALLDATASIZE PUSH1 0x4 PUSH2 0x51BF JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x178F JUMP JUMPDEST PUSH2 0x5DB PUSH2 0xA5B CALLDATASIZE PUSH1 0x4 PUSH2 0x53F9 JUMP JUMPDEST PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x4E0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5E9B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x51E PUSH2 0xA9E CALLDATASIZE PUSH1 0x4 PUSH2 0x5182 JUMP JUMPDEST PUSH2 0x181C JUMP JUMPDEST PUSH2 0x5DB PUSH2 0xAB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x5182 JUMP JUMPDEST PUSH2 0x1829 JUMP JUMPDEST PUSH2 0x51E PUSH2 0xAC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x5182 JUMP JUMPDEST PUSH2 0x184B JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5EBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH2 0x4E0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0xB14 CALLDATASIZE PUSH1 0x4 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x189D JUMP JUMPDEST PUSH2 0xB2C PUSH2 0xB27 CALLDATASIZE PUSH1 0x4 PUSH2 0x51BF JUMP JUMPDEST PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4ED SWAP3 SWAP2 SWAP1 PUSH2 0x541A JUMP JUMPDEST PUSH2 0x5DB PUSH2 0xB48 CALLDATASIZE PUSH1 0x4 PUSH2 0x51BF JUMP JUMPDEST PUSH2 0x18E9 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x51E SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0xB68 CALLDATASIZE PUSH1 0x4 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x190C JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5DDB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0xBB7 CALLDATASIZE PUSH1 0x4 PUSH2 0x51BF JUMP JUMPDEST PUSH2 0x19A0 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0xBCA CALLDATASIZE PUSH1 0x4 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x19B9 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0xBFB CALLDATASIZE PUSH1 0x4 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x19C6 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5EDB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x51E PUSH2 0xC23 CALLDATASIZE PUSH1 0x4 PUSH2 0x5449 JUMP JUMPDEST PUSH2 0x1A26 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0xC36 CALLDATASIZE PUSH1 0x4 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0xC49 CALLDATASIZE PUSH1 0x4 PUSH2 0x5230 JUMP JUMPDEST PUSH2 0x1A7B JUMP JUMPDEST PUSH2 0x4FE PUSH2 0xC5C CALLDATASIZE PUSH1 0x4 PUSH2 0x5066 JUMP JUMPDEST PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x1ACB JUMP JUMPDEST PUSH2 0x4FE PUSH2 0xC77 CALLDATASIZE PUSH1 0x4 PUSH2 0x54E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0xCB0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x1AD5 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x1B8F JUMP JUMPDEST PUSH2 0x4FE PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5E1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5DFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0xCFE CALLDATASIZE PUSH1 0x4 PUSH2 0x5182 JUMP JUMPDEST PUSH2 0x1C93 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH2 0x51E SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5D5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x4E0 PUSH2 0xD4C CALLDATASIZE PUSH1 0x4 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD5B PUSH2 0x1D6A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xD91 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA1 PUSH2 0x1D7C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAE DUP8 PUSH1 0x0 PUSH2 0x1DA5 JUMP JUMPDEST SWAP1 POP PUSH2 0xDBF CALLER DUP8 DUP8 DUP5 DUP12 DUP10 DUP10 PUSH2 0x1E3B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDCB PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1A DUP1 SLOAD PUSH2 0xDE1 SWAP1 PUSH2 0x5520 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE0D SWAP1 PUSH2 0x5520 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE5A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE2F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE5A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE3D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD91 DUP3 PUSH1 0x0 PUSH2 0x1DA5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7C CALLER DUP5 DUP5 PUSH2 0x1ED8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD91 DUP3 PUSH1 0x1 PUSH2 0x1F70 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5D7B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xEA8 DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH2 0xEB3 DUP3 PUSH1 0x1 PUSH2 0x202B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD5B PUSH2 0x2093 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5DDB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xED9 DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH2 0xEB3 DUP3 PUSH2 0x20AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADDRESS EQ DUP1 PUSH2 0xF02 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO JUMPDEST ISZERO PUSH2 0xF20 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF2B DUP5 DUP5 DUP5 PUSH2 0x210F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xF60 DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0xF8F JUMPI PUSH1 0x40 MLOAD PUSH4 0xF3C3867 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT PUSH1 0xC SLOAD EQ PUSH2 0xFB3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4E414185 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5D3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xFF5 DUP3 PUSH2 0xF33 JUMP JUMPDEST PUSH2 0xFFE DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x1008 DUP4 DUP4 PUSH2 0x2131 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x101B DUP6 DUP6 DUP6 PUSH2 0x21B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x102A DUP3 PUSH1 0x1 PUSH2 0x1F70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x1051 SWAP1 DUP3 SWAP1 PUSH2 0x257F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x108C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1083 SWAP1 PUSH2 0x554C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEB3 DUP3 DUP3 PUSH2 0x2595 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7C CALLER DUP5 DUP5 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD91 DUP3 PUSH2 0x2648 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5EBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x10C6 DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x10CE PUSH2 0x1D7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x1106 JUMPI PUSH1 0x40 MLOAD PUSH4 0x631BC21 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP1 ISZERO DUP1 PUSH2 0x112D JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x114B JUMPI PUSH1 0x40 MLOAD PUSH4 0x7C946ED7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP4 GT ISZERO PUSH2 0x1157 JUMPI DUP1 SWAP3 POP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1187 SWAP2 SWAP1 PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11C8 SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST PUSH2 0x11D2 SWAP2 SWAP1 PUSH2 0x55E1 JUMP JUMPDEST PUSH2 0x11DC SWAP2 SWAP1 PUSH2 0x5616 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x11FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x7C946ED7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x122B PUSH32 0x0 CALLER ADDRESS DUP8 PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x1256 SWAP1 DUP5 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x126F SWAP2 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1288 SWAP2 SWAP1 PUSH2 0x563D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5F1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x12B1 DUP8 DUP3 PUSH2 0x562A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12BF SWAP3 SWAP2 SWAP1 PUSH2 0x541A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x12D2 DUP6 CALLER DUP4 PUSH2 0x2802 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xE94E7F88819F66C19B097748CB754149F63B1A176ED425DEE1F1EE933E6D09B0 DUP6 PUSH1 0x40 MLOAD PUSH2 0x130B SWAP2 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x1008 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1338 DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x1340 PUSH2 0x1D7C JUMP JUMPDEST PUSH2 0x134A DUP5 DUP5 PUSH2 0x28CA JUMP JUMPDEST SWAP2 POP PUSH2 0x1355 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CDB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1374 DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x28709A2DAB2A5D5E8688E96159011151C51644AB21839A8A45B449634D7C8B2B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5F5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x13D7 DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE6E3F8BEDA82A13C441D76EFD4A6335760F219F38C60502E6680060874E109D SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD DUP3 GT ISZERO PUSH2 0x145E JUMPI PUSH1 0x40 MLOAD PUSH4 0x37DEAE07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE7C DUP4 DUP4 PUSH2 0x2FF7 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5DFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1480 DUP2 PUSH2 0x201E JUMP JUMPDEST POP PUSH1 0x13 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5D9B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x14BB DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x153C JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x14DA JUMPI PUSH2 0x14DA PUSH2 0x5650 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x14EF SWAP2 SWAP1 PUSH2 0x51BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SUB PUSH2 0x1529 JUMPI PUSH1 0x40 MLOAD PUSH4 0x631BC21 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 PUSH2 0x1534 DUP2 PUSH2 0x5666 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x14BE JUMP JUMPDEST POP PUSH2 0x1549 PUSH1 0x4 DUP5 DUP5 PUSH2 0x4DC6 JUMP JUMPDEST POP PUSH32 0xBC0CB8C5CCEE13E6A2FD26A699F57AD7FF6E454E6AAE97EC41CD2EB9EBD63A5 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x157B SWAP3 SWAP2 SWAP1 PUSH2 0x56EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF2B DUP5 DUP5 DUP5 PUSH2 0x21B5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5DFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x15AD DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x15B7 DUP3 DUP5 PUSH2 0x2595 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x1395522074BE2925CC0FE997DC4FE5D15A507C2A971E00C315E5A2E08C9B0E50 DUP4 PUSH1 0x40 MLOAD PUSH2 0x15F0 SWAP2 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1628 JUMPI PUSH1 0x40 MLOAD PUSH4 0x967642D9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x12 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x13 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE93BAA0B608A7D420822B6B90CFCCCB70574363BA4FD26EF5AC17DD465016C4 SWAP1 PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x167C PUSH2 0x1D7C JUMP JUMPDEST PUSH2 0x1687 CALLER DUP4 DUP6 PUSH2 0x314D JUMP JUMPDEST SWAP1 POP PUSH2 0xD91 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x16CF JUMPI PUSH2 0x16AC PUSH2 0x32A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD91 SWAP2 SWAP1 PUSH2 0x562A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5D1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1703 DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH1 0xB DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x1A4494BEED88920B88742CC58F2744E198F55FF192635A1FBABC6BE8FFADE81 SWAP1 PUSH2 0x1738 SWAP1 DUP5 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1777 PUSH2 0x1D7C JUMP JUMPDEST PUSH2 0x1687 CALLER DUP4 DUP6 PUSH2 0x3303 JUMP JUMPDEST PUSH1 0x1B DUP1 SLOAD PUSH2 0xDE1 SWAP1 PUSH2 0x5520 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD5B PUSH2 0x17BF PUSH32 0x0 PUSH1 0xA PUSH2 0x580B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5D9B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x17DE DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 ISZERO ISZERO OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x1F88E73EBC721F227812938FE07A069EC1F7136AAFACB397ED460BD15DEE13F1 SWAP1 PUSH2 0x1738 SWAP1 DUP5 SWAP1 PUSH2 0x4F23 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7C CALLER DUP5 DUP5 PUSH2 0x3456 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5DFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1841 DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x15B7 DUP3 DUP5 PUSH2 0x2131 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADDRESS EQ DUP1 PUSH2 0x186B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO JUMPDEST ISZERO PUSH2 0x1889 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1894 CALLER DUP5 DUP5 PUSH2 0x348B JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD91 DUP3 PUSH1 0x1 PUSH2 0x1DA5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x18C5 DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x18CD PUSH2 0x1D7C JUMP JUMPDEST PUSH2 0x18D6 DUP5 PUSH2 0x3588 JUMP JUMPDEST SWAP3 POP SWAP3 POP PUSH2 0x18E3 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5E9B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1901 DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH2 0xEB3 DUP3 PUSH1 0x0 PUSH2 0x202B JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1924 DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x1953 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF3C3867 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x197D JUMPI PUSH1 0x40 MLOAD PUSH4 0x64B99911 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5DBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x1738 SWAP1 DUP5 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x19AC DUP4 PUSH2 0x2648 JUMP JUMPDEST SWAP1 POP PUSH2 0xE7C DUP2 PUSH1 0x0 PUSH2 0x1F70 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD91 DUP3 PUSH1 0x0 PUSH2 0x1F70 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5DFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x19DE DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 JUMPDEST PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH32 0x9F6D8CEB5FE3A6380949B0777BD5802511579B6FBBC87194C108A91D372F9527 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A37 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x36BC JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5DFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1A5D DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x1A84 DUP3 PUSH2 0xF33 JUMP JUMPDEST PUSH2 0x1A8D DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x1008 DUP4 DUP4 PUSH2 0x2595 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AA1 PUSH2 0x1D7C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AAE DUP8 PUSH1 0x1 PUSH2 0x1F70 JUMP JUMPDEST SWAP1 POP PUSH2 0x1ABF CALLER DUP8 DUP8 DUP11 DUP6 DUP10 DUP10 PUSH2 0x1E3B JUMP JUMPDEST POP SWAP1 POP PUSH2 0xDCB PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD5B PUSH2 0x32A5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5EDB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1AED DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH32 0x0 DUP3 GT ISZERO PUSH2 0x1B2E JUMPI PUSH1 0x40 MLOAD PUSH4 0xFDFBB0B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x1B5A JUMPI ADDRESS PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1B4F SWAP2 PUSH2 0x38AC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x16 DUP2 SWAP1 SSTORE PUSH1 0x15 SSTORE JUMPDEST PUSH1 0x14 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xF361AED463DA6FA20358E45C6209F1D3E16D4ECA706E6EAB0B0AEB338729C77A SWAP1 PUSH2 0x1738 SWAP1 DUP5 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5D5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1BA7 DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x1BD6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x631BC21 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1C24 JUMPI PUSH1 0xE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5D3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP3 SWAP1 LOG2 JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5DBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x1C47 SWAP2 PUSH2 0x5845 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1C67 CALLER PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1829 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x4426AA1FB73E391071491FCFE21A88B5C38A0A0333A1F6E77161470439704CF8 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5E1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1CAB DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x1CE3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x631BC21 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 ADD DUP5 SWAP1 SSTORE MLOAD CALLER SWAP1 PUSH32 0xB3EEF2123FEC1523A6BBC90ACEB203000154C1A4974335FE06B544C7534D4B89 SWAP1 PUSH2 0x1D33 SWAP1 DUP7 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1D50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH2 0xD5B SWAP2 SWAP1 PUSH2 0x563D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1D9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1083 SWAP1 PUSH2 0x588A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP4 EQ DUP1 PUSH2 0x1DB5 JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x1DC1 JUMPI POP DUP2 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DCB PUSH2 0x2093 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x1DDE JUMPI DUP4 SWAP2 POP POP PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DE8 PUSH2 0x1D6A JUMP JUMPDEST PUSH2 0x1DF2 SWAP1 DUP7 PUSH2 0x55E1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E00 DUP4 DUP4 PUSH2 0x5616 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP6 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1E16 JUMPI PUSH2 0x1E16 PUSH2 0x581A JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x1E2B JUMPI POP PUSH2 0x1E28 DUP4 DUP4 PUSH2 0x589A JUMP JUMPDEST ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xDCB JUMPI PUSH2 0x1051 PUSH1 0x1 DUP3 PUSH2 0x563D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E49 DUP8 DUP8 DUP7 DUP7 PUSH2 0x3963 JUMP JUMPDEST PUSH2 0x1E54 DUP7 DUP10 DUP7 PUSH2 0x3A07 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1E61 DUP8 DUP6 PUSH2 0x3A2B JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1E74 DUP10 DUP10 DUP9 DUP11 DUP7 DUP7 DUP12 PUSH2 0x407F JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xFBDE797D201C681B91056529119E0B02407C7BB96A4A2C75C01FC9667232C8DB DUP6 DUP11 PUSH1 0x40 MLOAD PUSH2 0x1EC3 SWAP3 SWAP2 SWAP1 PUSH2 0x541A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 PUSH2 0x1EF7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO JUMPDEST ISZERO PUSH2 0x1F15 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP9 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5E7B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x1F5E SWAP1 DUP7 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP4 EQ DUP1 PUSH2 0x1F80 JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x1F8C JUMPI POP DUP2 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F96 PUSH2 0x2093 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1FA2 PUSH2 0x1D6A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x1FC9 JUMPI DUP2 PUSH1 0x0 SUB PUSH2 0x1FBE JUMPI DUP5 SWAP3 POP POP POP PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x0 SWAP3 POP POP POP PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD5 DUP4 DUP8 PUSH2 0x55E1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1FE3 DUP4 DUP4 PUSH2 0x5616 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP7 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1FF9 JUMPI PUSH2 0x1FF9 PUSH2 0x581A JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x200E JUMPI POP PUSH2 0x200B DUP4 DUP4 PUSH2 0x589A JUMP JUMPDEST ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1051 JUMPI PUSH2 0x1A3A PUSH1 0x1 DUP3 PUSH2 0x563D JUMP JUMPDEST PUSH2 0x2028 DUP2 CALLER PUSH2 0x411F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7A163BD7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xF42C77AE SWAP1 PUSH2 0x205D SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x58AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2077 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x208B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x209D PUSH2 0x32A5 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0xD5B SWAP2 SWAP1 PUSH2 0x562A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x223E5479 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x223E5479 SWAP1 PUSH2 0x20DA SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2108 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x211C DUP5 CALLER DUP5 PUSH2 0x4178 JUMP JUMPDEST PUSH2 0x2127 DUP5 DUP5 DUP5 PUSH2 0x348B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x213B DUP3 DUP3 PUSH2 0x1744 JUMP JUMPDEST PUSH2 0xEB3 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x2171 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x21DA SWAP1 DUP3 PUSH2 0x1DA5 JUMP JUMPDEST PUSH1 0xF SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x227C JUMPI PUSH1 0xF SLOAD PUSH1 0x40 MLOAD PUSH4 0x2319B8CF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2319B8CF SWAP1 PUSH2 0x2223 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x5907 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2242 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2266 SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2274 JUMPI DUP1 SWAP2 POP JUMPDEST POP SWAP1 POP PUSH2 0xE7C JUMP JUMPDEST PUSH1 0xA SLOAD DUP1 DUP3 GT ISZERO PUSH2 0x2576 JUMPI DUP4 MLOAD DUP2 SWAP1 PUSH1 0x0 SWAP1 DUP2 SWAP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x22A1 JUMPI POP PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x2305 JUMPI PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x22FB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x22DD JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x2307 JUMP JUMPDEST DUP7 JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x256F JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2329 JUMPI PUSH2 0x2329 PUSH2 0x5650 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x3 PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x0 SUB PUSH2 0x237C JUMPI PUSH1 0x40 MLOAD PUSH4 0x631BC21 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x23AC PUSH2 0x238B DUP8 DUP11 PUSH2 0x562A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x257F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x23BA DUP4 DUP4 PUSH2 0x2FF7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7A2D13A DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD905777E ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F9 SWAP2 SWAP1 PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2416 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x243A SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2456 SWAP2 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2473 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2497 SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST SWAP1 POP PUSH2 0x24A3 DUP3 DUP5 PUSH2 0x562A JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x24CE JUMPI DUP3 PUSH2 0x24B5 DUP3 DUP5 PUSH2 0x55E1 JUMP JUMPDEST PUSH2 0x24BF SWAP2 SWAP1 PUSH2 0x5616 JUMP JUMPDEST SWAP2 POP PUSH2 0x24CB DUP3 DUP3 PUSH2 0x563D JUMP JUMPDEST SWAP3 POP JUMPDEST DUP3 PUSH1 0x0 SUB PUSH2 0x24DF JUMPI POP POP POP POP PUSH2 0x255D JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x24F0 JUMPI POP PUSH2 0x2710 DUP14 LT JUMPDEST ISZERO PUSH2 0x2530 JUMPI PUSH2 0x2710 DUP14 PUSH2 0x2503 DUP6 DUP12 PUSH2 0x563D JUMP JUMPDEST PUSH2 0x250D SWAP2 SWAP1 PUSH2 0x55E1 JUMP JUMPDEST PUSH2 0x2517 SWAP2 SWAP1 PUSH2 0x5616 JUMP JUMPDEST PUSH2 0x2521 DUP4 DUP10 PUSH2 0x563D JUMP JUMPDEST GT ISZERO PUSH2 0x2530 JUMPI POP POP POP POP PUSH2 0x256F JUMP JUMPDEST PUSH2 0x253A DUP4 DUP10 PUSH2 0x563D JUMP JUMPDEST SWAP8 POP DUP10 DUP9 LT PUSH2 0x254C JUMPI POP POP POP POP PUSH2 0x256F JUMP JUMPDEST PUSH2 0x2556 DUP3 DUP9 PUSH2 0x563D JUMP JUMPDEST SWAP7 POP POP POP POP POP JUMPDEST DUP1 PUSH2 0x2567 DUP2 PUSH2 0x5666 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x230C JUMP JUMPDEST POP SWAP2 SWAP4 POP POP POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x258E JUMPI DUP2 PUSH2 0xE7C JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x259F DUP3 DUP3 PUSH2 0x1744 JUMP JUMPDEST ISZERO PUSH2 0xEB3 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x262F SWAP1 DUP5 SWAP1 PUSH2 0x563D JUMP JUMPDEST SWAP1 POP PUSH2 0x263C DUP6 DUP6 DUP4 PUSH2 0x1ED8 JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ DUP1 PUSH2 0x2668 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST ISZERO PUSH2 0x2675 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x26F4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23551789 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x46AA2F12 SWAP1 PUSH2 0x26B3 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE7C SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26FE PUSH2 0x1D6A JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 SWAP2 POP DUP1 DUP3 LT PUSH2 0x2716 JUMPI POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xDCB DUP3 DUP3 PUSH2 0x562A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 PUSH2 0x273D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO JUMPDEST DUP1 PUSH2 0x274F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST ISZERO PUSH2 0x276D JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x279D SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x5934 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27E0 SWAP2 SWAP1 PUSH2 0x5967 JUMP JUMPDEST PUSH2 0x27FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1083 SWAP1 PUSH2 0x59AE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 PUSH2 0x281F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST ISZERO PUSH2 0x283D JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x286B SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x59BE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x288A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28AE SWAP2 SWAP1 PUSH2 0x5967 JUMP JUMPDEST PUSH2 0x1008 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1083 SWAP1 PUSH2 0x59AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x13 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x2904 JUMPI PUSH1 0x0 SWAP2 POP JUMPDEST DUP1 DUP3 SUB PUSH2 0x2924 JUMPI PUSH1 0x40 MLOAD PUSH4 0x84DF06B PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2C38 JUMPI PUSH1 0x0 PUSH2 0x2938 DUP4 DUP4 PUSH2 0x562A JUMP JUMPDEST SWAP1 POP PUSH1 0xB SLOAD DUP2 PUSH1 0xA SLOAD PUSH2 0x294B SWAP2 SWAP1 PUSH2 0x563D JUMP JUMPDEST LT ISZERO PUSH2 0x296E JUMPI PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH2 0x2961 SWAP2 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x296E JUMPI POP DUP1 JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6C82BBBF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x7A2D13A SWAP1 DUP3 SWAP1 PUSH4 0xD905777E SWAP1 PUSH2 0x29A5 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29E6 SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A02 SWAP2 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A1F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A43 SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x2A66 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7C946ED7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2A72 JUMPI DUP1 SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x2A7E DUP9 DUP5 PUSH2 0x2FF7 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2A9F JUMPI PUSH1 0x40 MLOAD PUSH4 0x39589FDD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2AEE SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B2F SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST SWAP1 POP PUSH2 0x2B3B DUP10 DUP6 PUSH2 0x41D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2B8A SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2BCB SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2BE2 PUSH2 0x2BDC DUP5 DUP5 PUSH2 0x562A JUMP JUMPDEST DUP9 PUSH2 0x257F JUMP JUMPDEST SWAP1 POP DUP6 DUP2 GT ISZERO PUSH2 0x2BF0 JUMPI DUP1 SWAP6 POP JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2C02 SWAP2 SWAP1 PUSH2 0x563D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2C1B SWAP2 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2C2B SWAP1 POP DUP7 DUP9 PUSH2 0x562A JUMP JUMPDEST SWAP8 POP POP POP POP POP POP POP PUSH2 0x2FA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP3 GT ISZERO PUSH2 0x2C75 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD49D8C23 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x402D267D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x402D267D SWAP1 PUSH2 0x2CA4 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2CC1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CE5 SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x2D08 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7C946ED7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2D14 DUP4 DUP6 PUSH2 0x562A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2D21 JUMPI POP DUP1 JUMPDEST PUSH1 0xB SLOAD PUSH1 0xA SLOAD GT PUSH2 0x2D45 JUMPI PUSH1 0x40 MLOAD PUSH4 0x356680B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD PUSH1 0xA SLOAD PUSH2 0x2D57 SWAP2 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2D65 JUMPI DUP1 SWAP2 POP JUMPDEST DUP2 ISZERO PUSH2 0x2FA5 JUMPI PUSH2 0x2D96 PUSH32 0x0 DUP10 DUP5 PUSH2 0x432D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2DE5 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E26 SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6E553F65 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 PUSH4 0x6E553F65 SWAP1 PUSH2 0x2E57 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x59CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E9A SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2EEA SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F07 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F2B SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST SWAP1 POP PUSH2 0x2F59 PUSH32 0x0 DUP12 PUSH1 0x0 PUSH2 0x432D JUMP JUMPDEST PUSH2 0x2F63 DUP2 DUP4 PUSH2 0x562A JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2F77 SWAP2 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2F90 SWAP2 SWAP1 PUSH2 0x563D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2FA0 SWAP1 POP DUP5 DUP8 PUSH2 0x563D JUMP JUMPDEST SWAP7 POP POP POP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP5 SWAP1 SSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5F1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x2FE7 SWAP1 DUP5 SWAP1 DUP7 SWAP1 PUSH2 0x541A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 DUP4 SWAP2 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x303B SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3058 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x307C SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7A2D13A DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30AC SWAP2 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x30C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30ED SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO DUP1 PUSH2 0x30FC JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x310D JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3119 DUP3 DUP8 PUSH2 0x55E1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3127 DUP6 DUP4 PUSH2 0x5616 JUMP JUMPDEST PUSH2 0x3131 SWAP1 DUP9 PUSH2 0x562A JUMP JUMPDEST SWAP1 POP PUSH2 0x313D DUP6 DUP4 PUSH2 0x589A JUMP JUMPDEST ISZERO PUSH2 0x1A3A JUMPI PUSH2 0x1A37 PUSH1 0x1 DUP3 PUSH2 0x563D JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x317F JUMPI PUSH1 0x40 MLOAD PUSH4 0xF3C3867 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3188 DUP4 PUSH2 0x2648 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x31A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x25D16C51 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x31F8 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x5934 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3217 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x323B SWAP2 SWAP1 PUSH2 0x5967 JUMP JUMPDEST POP DUP2 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x324E SWAP2 SWAP1 PUSH2 0x563D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH2 0x3260 DUP4 DUP6 PUSH2 0x43F5 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5EFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3295 SWAP3 SWAP2 SWAP1 PUSH2 0x541A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x0 SWAP1 DUP2 TIMESTAMP DUP3 GT ISZERO PUSH2 0x32E6 JUMPI PUSH5 0xE8D4A51000 PUSH1 0x17 SLOAD TIMESTAMP PUSH2 0x32C8 SWAP2 SWAP1 PUSH2 0x562A JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH2 0x32D5 SWAP2 SWAP1 PUSH2 0x55E1 JUMP JUMPDEST PUSH2 0x32DF SWAP2 SWAP1 PUSH2 0x5616 JUMP JUMPDEST SWAP1 POP PUSH2 0xD91 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xD91 JUMPI POP ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x3335 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF3C3867 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3342 DUP4 PUSH1 0x1 PUSH2 0x1DA5 JUMP JUMPDEST SWAP1 POP PUSH2 0x334D DUP5 PUSH2 0x2648 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x336D JUMPI PUSH1 0x40 MLOAD PUSH4 0x25D16C51 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x33BD SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x5934 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x33DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3400 SWAP2 SWAP1 PUSH2 0x5967 JUMP JUMPDEST POP DUP1 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3413 SWAP2 SWAP1 PUSH2 0x563D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x3423 SWAP1 POP DUP4 DUP6 PUSH2 0x44A6 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5EFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 DUP7 PUSH1 0x40 MLOAD PUSH2 0x3295 SWAP3 SWAP2 SWAP1 PUSH2 0x541A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x262F SWAP1 DUP5 SWAP1 PUSH2 0x562A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x34C5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x356680B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 PUSH2 0x34E2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO JUMPDEST ISZERO PUSH2 0x3500 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x350A DUP3 DUP3 PUSH2 0x562A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x3539 DUP4 DUP3 PUSH2 0x563D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP8 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5E3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x3579 SWAP1 DUP8 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SUB PUSH2 0x35C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x631BC21 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x35CA PUSH2 0x453F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x35D6 DUP6 PUSH2 0x456F JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x35E7 DUP7 DUP5 DUP5 PUSH2 0x46A5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x35FE DUP4 DUP4 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x4813 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x3610 DUP4 DUP6 DUP9 DUP9 DUP14 PUSH2 0x4898 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x361E DUP3 DUP3 PUSH2 0x4BA8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 TIMESTAMP PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x2 ADD SLOAD SWAP1 DUP7 ADD MLOAD PUSH32 0x7F2AD1D3BA35276F35EF140F83E3E0F17B23064FD710113D3F7A5AB30D267811 SWAP3 DUP11 SWAP3 DUP11 SWAP3 SWAP1 SWAP2 PUSH2 0x3677 SWAP2 SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST PUSH2 0x368E DUP10 PUSH1 0x20 ADD MLOAD DUP11 PUSH1 0x40 ADD MLOAD PUSH2 0x17BF SWAP2 SWAP1 PUSH2 0x563D JUMP JUMPDEST DUP11 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x36A5 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x59E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP4 SWAP8 SWAP3 SWAP7 POP SWAP2 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH2 0x36E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP6 LT ISZERO PUSH2 0x3706 JUMPI PUSH1 0x40 MLOAD PUSH4 0x63BEF561 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH2 0x374B SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5E5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP14 SWAP2 DUP14 SWAP2 DUP14 SWAP2 DUP9 SWAP2 DUP15 SWAP2 ADD PUSH2 0x5A36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x19 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x377A SWAP3 SWAP2 SWAP1 PUSH2 0x5A5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x37B7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5A8F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x37D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 PUSH2 0x380E JUMPI POP DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x382C JUMPI PUSH1 0x40 MLOAD PUSH4 0x10454C99 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3837 DUP13 DUP13 DUP13 PUSH2 0x1ED8 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x385C DUP4 PUSH2 0x5666 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5E7B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP13 PUSH1 0x40 MLOAD PUSH2 0x3892 SWAP2 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x38E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39996567 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x390D SWAP1 DUP5 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3926 SWAP2 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5E3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x3957 SWAP1 DUP7 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x398A JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x39AD JUMPI PUSH1 0x40 MLOAD PUSH4 0x1A7ED0A1 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x39CE JUMPI PUSH1 0x40 MLOAD PUSH4 0x7C946ED7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x27FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x39996567 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1008 JUMPI PUSH2 0x1008 DUP4 DUP4 DUP4 PUSH2 0x4178 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AA4 SWAP2 SWAP1 PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3AC1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3AE5 SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 ADD MLOAD DUP2 MLOAD SWAP2 SWAP3 POP LT ISZERO PUSH2 0x406A JUMPI PUSH1 0x0 DUP5 MLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x3B14 JUMPI POP PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x3B78 JUMPI PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x3B6E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B50 JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x3B7A JUMP JUMPDEST DUP5 JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD DUP4 MLOAD SWAP2 SWAP3 POP PUSH2 0x3B8D SWAP2 PUSH2 0x562A JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x4039 JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3BB2 JUMPI PUSH2 0x3BB2 PUSH2 0x5650 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x3 PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x0 SUB PUSH2 0x3C05 JUMPI PUSH1 0x40 MLOAD PUSH4 0x631BC21 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x60 DUP7 ADD MLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x3C33 SWAP1 DUP4 PUSH2 0x257F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7A2D13A DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD905777E ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C72 SWAP2 SWAP1 PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C8F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CB3 SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CCF SWAP2 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3CEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D10 SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3D1E DUP6 DUP5 PUSH2 0x2FF7 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x3E24 JUMPI PUSH2 0x3D30 DUP2 DUP5 PUSH2 0x562A JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x3D6A JUMPI PUSH1 0x0 PUSH2 0x3D43 DUP3 DUP6 PUSH2 0x562A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x3D50 DUP5 DUP5 PUSH2 0x55E1 JUMP JUMPDEST PUSH2 0x3D5A SWAP2 SWAP1 PUSH2 0x5616 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D66 DUP3 DUP5 PUSH2 0x563D JUMP JUMPDEST SWAP4 POP POP JUMPDEST PUSH2 0x3D74 DUP2 DUP5 PUSH2 0x562A JUMP JUMPDEST SWAP3 POP DUP1 DUP9 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x3D88 SWAP2 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x60 DUP9 ADD DUP1 MLOAD DUP3 SWAP2 SWAP1 PUSH2 0x3D9F SWAP1 DUP4 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x40 DUP9 ADD DUP1 MLOAD DUP3 SWAP2 SWAP1 PUSH2 0x3DB6 SWAP1 DUP4 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP1 MSTORE POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x3DC7 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x3E24 JUMPI PUSH1 0x0 PUSH2 0x3DD8 DUP3 DUP7 PUSH2 0x562A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP4 SWAP1 SSTORE MLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5F1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x3E1A SWAP1 DUP9 SWAP1 DUP6 SWAP1 PUSH2 0x541A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST PUSH2 0x3E2E DUP4 DUP4 PUSH2 0x257F JUMP JUMPDEST SWAP3 POP DUP3 PUSH1 0x0 SUB PUSH2 0x3E42 JUMPI POP POP POP POP POP PUSH2 0x4027 JUMP JUMPDEST PUSH2 0x3E4C DUP6 DUP5 PUSH2 0x41D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x3E9B SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3EB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3EDC SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP10 PUSH1 0x80 ADD MLOAD DUP3 PUSH2 0x3EF0 SWAP2 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 DUP3 GT ISZERO PUSH2 0x3F27 JUMPI DUP7 DUP3 GT ISZERO PUSH2 0x3F0C JUMPI DUP7 SWAP6 POP PUSH2 0x3F3C JUMP JUMPDEST PUSH2 0x3F16 DUP7 DUP4 PUSH2 0x562A JUMP JUMPDEST PUSH2 0x3F20 SWAP1 DUP8 PUSH2 0x563D JUMP JUMPDEST SWAP6 POP PUSH2 0x3F3C JUMP JUMPDEST DUP6 DUP3 LT ISZERO PUSH2 0x3F3C JUMPI PUSH2 0x3F39 DUP3 DUP8 PUSH2 0x562A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x3F46 DUP2 DUP8 PUSH2 0x562A JUMP JUMPDEST DUP12 PUSH1 0x20 ADD DUP2 DUP2 MLOAD PUSH2 0x3F57 SWAP2 SWAP1 PUSH2 0x563D JUMP JUMPDEST SWAP1 MSTORE POP DUP11 MLOAD DUP2 SWAP1 DUP13 SWAP1 PUSH2 0x3F6B SWAP1 DUP4 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x40 DUP12 ADD DUP1 MLOAD DUP8 SWAP2 SWAP1 PUSH2 0x3F82 SWAP1 DUP4 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x0 PUSH2 0x3F91 DUP6 DUP9 PUSH2 0x563D JUMP JUMPDEST PUSH2 0x3F9B SWAP1 DUP10 PUSH2 0x562A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP4 SWAP1 SSTORE MLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5F1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x3FDD SWAP1 DUP12 SWAP1 DUP6 SWAP1 PUSH2 0x541A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x20 DUP13 ADD MLOAD DUP13 MLOAD GT PUSH2 0x3FFF JUMPI POP POP POP POP POP POP POP POP POP PUSH2 0x4039 JUMP JUMPDEST PUSH1 0x80 DUP13 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP13 ADD DUP1 MLOAD DUP9 SWAP2 SWAP1 PUSH2 0x401A SWAP1 DUP4 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP1 MSTORE POP POP POP POP POP POP POP POP POP POP JUMPDEST DUP1 PUSH2 0x4031 DUP2 PUSH2 0x5666 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3B95 JUMP JUMPDEST POP DUP2 MLOAD PUSH1 0x20 DUP4 ADD MLOAD LT ISZERO PUSH2 0x4060 JUMPI PUSH1 0x40 MLOAD PUSH4 0x96D80433 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x9 SSTORE JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 POP SWAP1 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP3 DUP5 GT DUP1 ISZERO PUSH2 0x408F JUMPI POP PUSH2 0x2710 DUP2 LT JUMPDEST ISZERO PUSH2 0x40D4 JUMPI PUSH2 0x2710 PUSH2 0x40A1 DUP3 DUP7 PUSH2 0x55E1 JUMP JUMPDEST PUSH2 0x40AB SWAP2 SWAP1 PUSH2 0x5616 JUMP JUMPDEST PUSH2 0x40B5 DUP5 DUP7 PUSH2 0x562A JUMP JUMPDEST GT ISZERO PUSH2 0x40D4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7F65E39 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x40DE DUP6 DUP8 PUSH2 0x38AC JUMP JUMPDEST PUSH2 0x40E8 DUP4 DUP4 PUSH2 0x562A JUMP JUMPDEST PUSH1 0xA SSTORE PUSH2 0x4116 PUSH32 0x0 DUP9 DUP6 PUSH2 0x2802 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4129 DUP3 DUP3 PUSH2 0x1744 JUMP JUMPDEST PUSH2 0xEB3 JUMPI PUSH2 0x4136 DUP2 PUSH2 0x4C49 JUMP JUMPDEST PUSH2 0x4141 DUP4 PUSH1 0x20 PUSH2 0x4C5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4152 SWAP3 SWAP2 SWAP1 PUSH2 0x5ACC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x1083 SWAP2 PUSH1 0x4 ADD PUSH2 0x5150 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x41BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x17E286B PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2108 DUP5 DUP5 PUSH2 0x41CE DUP6 DUP6 PUSH2 0x562A JUMP JUMPDEST PUSH2 0x1ED8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42B7 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA28A477 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4204 SWAP2 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4221 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4245 SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x4271 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x428E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42B2 SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5D043B29 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xBA087652 SWAP1 PUSH2 0x42EA SWAP1 DUP5 SWAP1 ADDRESS SWAP1 DUP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x5B1E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4309 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27FC SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 PUSH2 0x434A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST ISZERO PUSH2 0x4368 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH2 0x4396 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x59BE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x43D9 SWAP2 SWAP1 PUSH2 0x5967 JUMP JUMPDEST PUSH2 0x1008 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1083 SWAP1 PUSH2 0x5B6C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x441E JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4428 PUSH2 0x2093 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4434 PUSH2 0x1D6A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 SUB PUSH2 0x4447 JUMPI POP DUP5 PUSH2 0x448C JUMP JUMPDEST DUP6 DUP3 GT ISZERO PUSH2 0x4474 JUMPI PUSH2 0x4459 DUP7 DUP4 PUSH2 0x562A JUMP JUMPDEST PUSH2 0x4463 DUP5 DUP9 PUSH2 0x55E1 JUMP JUMPDEST PUSH2 0x446D SWAP2 SWAP1 PUSH2 0x5616 JUMP JUMPDEST SWAP1 POP PUSH2 0x448C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1083 SWAP1 PUSH2 0x5BA2 JUMP JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x44A0 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0xD91 JUMP JUMPDEST PUSH2 0xDCB DUP2 DUP7 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x44CD JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x44F5 SWAP1 DUP5 SWAP1 PUSH2 0x563D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x450E SWAP2 SWAP1 PUSH2 0x563D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5E3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x3957 SWAP1 DUP7 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4549 PUSH2 0x32A5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x4556 JUMPI POP JUMP JUMPDEST TIMESTAMP PUSH1 0x15 SLOAD GT ISZERO PUSH2 0x4565 JUMPI TIMESTAMP PUSH1 0x17 SSTORE JUMPDEST PUSH2 0x2028 DUP2 ADDRESS PUSH2 0x38AC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45A0 SWAP2 SWAP1 PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x45BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x45E1 SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7A2D13A DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4611 SWAP2 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x462E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4652 SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP2 SWAP3 POP DUP1 DUP3 DUP5 GT ISZERO PUSH2 0x468B JUMPI PUSH2 0x4684 DUP4 DUP6 PUSH2 0x562A JUMP JUMPDEST SWAP2 POP PUSH2 0x4698 JUMP JUMPDEST PUSH2 0x4695 DUP5 DUP5 PUSH2 0x562A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 SWAP8 SWAP1 SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x46AD PUSH2 0x4E29 JUMP JUMPDEST PUSH2 0x46B5 PUSH2 0x4E29 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xF2B JUMPI PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x921F8A8F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x921F8A8F SWAP1 PUSH2 0x46FA SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x5BB2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4718 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x473C SWAP2 SWAP1 PUSH2 0x5BCD JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE DUP1 DUP3 MSTORE ISZERO PUSH2 0xF2B JUMPI PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7D3277F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x47CC SWAP2 SWAP1 PUSH2 0x5C20 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP5 ADD MSTORE SWAP1 POP PUSH2 0xFFFF DUP2 AND ISZERO PUSH2 0x2576 JUMPI DUP2 MLOAD PUSH2 0x2710 SWAP1 PUSH2 0x47FB SWAP1 PUSH2 0xFFFF DUP5 AND SWAP1 PUSH2 0x55E1 JUMP JUMPDEST PUSH2 0x4805 SWAP2 SWAP1 PUSH2 0x5616 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x481B PUSH2 0x4E5A JUMP JUMPDEST PUSH2 0x4823 PUSH2 0x4E5A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x482F DUP6 DUP8 PUSH2 0x563D JUMP JUMPDEST GT ISZERO PUSH2 0xF2B JUMPI PUSH2 0x4849 PUSH2 0x4842 DUP6 DUP8 PUSH2 0x563D JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1F70 JUMP JUMPDEST DUP2 MLOAD DUP3 SWAP1 PUSH2 0x4858 SWAP1 DUP4 SWAP1 PUSH2 0x563D JUMP JUMPDEST SWAP1 MSTORE POP DUP4 ISZERO PUSH2 0xF2B JUMPI PUSH2 0x4875 PUSH2 0x486E DUP5 DUP7 PUSH2 0x562A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F70 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE DUP3 ISZERO PUSH2 0xF2B JUMPI PUSH2 0x488B DUP4 PUSH1 0x0 PUSH2 0x1F70 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP8 PUSH1 0x20 ADD MLOAD GT ISZERO PUSH2 0x49FD JUMPI PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x49A0 SWAP3 SWAP2 PUSH2 0x42B2 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH2 0x490A SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH1 0x4 ADD PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4927 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x494B SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP3 PUSH4 0xDD62ED3E SWAP3 PUSH2 0x4271 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x5C53 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD DUP2 SWAP1 MSTORE PUSH1 0xD SLOAD PUSH2 0x49E1 SWAP2 PUSH32 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 ADDRESS SWAP1 PUSH2 0x2720 JUMP JUMPDEST DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x49F7 SWAP2 SWAP1 PUSH2 0x563D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP6 ISZERO PUSH2 0x4A4D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x4A2E SWAP1 DUP5 SWAP1 PUSH2 0x563D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4A47 SWAP2 SWAP1 PUSH2 0x563D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP8 PUSH1 0x20 ADD MLOAD DUP8 PUSH2 0x4A5F SWAP2 SWAP1 PUSH2 0x563D JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x4A6D JUMPI POP PUSH1 0x14 SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x4A8E JUMPI PUSH2 0x4A8B DUP8 PUSH1 0x20 ADD MLOAD DUP8 PUSH2 0x4A85 SWAP2 SWAP1 PUSH2 0x563D JUMP JUMPDEST ADDRESS PUSH2 0x43F5 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x4ADE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x4ABF SWAP1 DUP5 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4AD8 SWAP2 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x4AF9 SWAP1 DUP4 SWAP1 PUSH2 0x562A JUMP JUMPDEST DUP10 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x4B5A JUMPI DUP9 MLOAD PUSH2 0x4B13 SWAP1 PUSH2 0x42B2 DUP5 DUP5 PUSH2 0x563D JUMP JUMPDEST DUP1 DUP11 MSTORE PUSH2 0x4B20 SWAP1 ADDRESS PUSH2 0x38AC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B30 DUP11 PUSH1 0x0 ADD MLOAD DUP5 PUSH2 0x257F JUMP JUMPDEST SWAP1 POP PUSH2 0x4B3C DUP2 DUP5 PUSH2 0x562A JUMP JUMPDEST DUP11 MLOAD SWAP1 SWAP4 POP PUSH2 0x4B4C SWAP1 DUP3 SWAP1 PUSH2 0x562A JUMP JUMPDEST PUSH2 0x4B56 SWAP1 DUP4 PUSH2 0x562A JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH1 0x20 DUP10 ADD MLOAD ISZERO PUSH2 0x4B7F JUMPI PUSH1 0x20 DUP10 ADD MLOAD PUSH1 0xD SLOAD PUSH2 0x4B7F SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x44A6 JUMP JUMPDEST PUSH1 0x40 DUP10 ADD MLOAD ISZERO PUSH2 0x4B9B JUMPI PUSH2 0x4B9B DUP10 PUSH1 0x40 ADD MLOAD DUP10 PUSH1 0x60 ADD MLOAD PUSH2 0x44A6 JUMP JUMPDEST SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BB4 DUP3 DUP5 PUSH2 0x563D JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x4C3F JUMPI PUSH1 0x0 TIMESTAMP PUSH1 0x15 SLOAD GT ISZERO PUSH2 0x4BE3 JUMPI TIMESTAMP PUSH1 0x15 SLOAD PUSH2 0x4BD6 SWAP2 SWAP1 PUSH2 0x562A JUMP JUMPDEST PUSH2 0x4BE0 SWAP1 DUP6 PUSH2 0x55E1 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x14 SLOAD DUP6 PUSH2 0x4BF4 SWAP2 SWAP1 PUSH2 0x55E1 JUMP JUMPDEST PUSH2 0x4BFE SWAP1 DUP5 PUSH2 0x563D JUMP JUMPDEST PUSH2 0x4C08 SWAP2 SWAP1 PUSH2 0x5616 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x4C1A PUSH5 0xE8D4A51000 DUP6 PUSH2 0x55E1 JUMP JUMPDEST PUSH2 0x4C24 SWAP2 SWAP1 PUSH2 0x5616 JUMP JUMPDEST PUSH1 0x16 SSTORE PUSH2 0x4C31 DUP2 TIMESTAMP PUSH2 0x563D JUMP JUMPDEST PUSH1 0x15 SSTORE POP POP TIMESTAMP PUSH1 0x17 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x16 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD91 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x4C6A DUP4 PUSH1 0x2 PUSH2 0x55E1 JUMP JUMPDEST PUSH2 0x4C75 SWAP1 PUSH1 0x2 PUSH2 0x563D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4C8C JUMPI PUSH2 0x4C8C PUSH2 0x4F60 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4CB6 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x4CD1 JUMPI PUSH2 0x4CD1 PUSH2 0x5650 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x4D00 JUMPI PUSH2 0x4D00 PUSH2 0x5650 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x4D24 DUP5 PUSH1 0x2 PUSH2 0x55E1 JUMP JUMPDEST PUSH2 0x4D2F SWAP1 PUSH1 0x1 PUSH2 0x563D JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x4DA7 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x4D63 JUMPI PUSH2 0x4D63 PUSH2 0x5650 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4D79 JUMPI PUSH2 0x4D79 PUSH2 0x5650 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x4DA0 DUP2 PUSH2 0x5C61 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D32 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xE7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1083 SWAP1 PUSH2 0x5CAA JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x4E19 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x4E19 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 CALLDATALOAD AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x4DE6 JUMP JUMPDEST POP PUSH2 0x4E25 SWAP3 SWAP2 POP PUSH2 0x4E7B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x4E25 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4E7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD91 DUP3 PUSH2 0x4E90 JUMP JUMPDEST PUSH2 0x4EB0 DUP2 PUSH2 0x4E9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xD91 DUP3 DUP5 PUSH2 0x4EA7 JUMP JUMPDEST DUP1 PUSH2 0x4EB0 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xD91 DUP3 DUP5 PUSH2 0x4EC4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND JUMPDEST DUP2 EQ PUSH2 0x2028 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xD91 DUP2 PUSH2 0x4ED8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F0F JUMPI PUSH2 0x4F0F PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF2B DUP5 DUP5 PUSH2 0x4EEF JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x4EB0 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xD91 DUP3 DUP5 PUSH2 0x4F1B JUMP JUMPDEST DUP1 PUSH2 0x4EE4 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xD91 DUP2 PUSH2 0x4F31 JUMP JUMPDEST PUSH2 0x4EE4 DUP2 PUSH2 0x4E9C JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xD91 DUP2 PUSH2 0x4F42 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x4F7F DUP3 PUSH2 0x4F56 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x4F9C JUMPI PUSH2 0x4F9C PUSH2 0x4F60 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FAE PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x4FBA DUP3 DUP3 PUSH2 0x4F76 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x4FD8 JUMPI PUSH2 0x4FD8 PUSH2 0x4F60 JUMP JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FF5 PUSH2 0x4FF0 DUP5 PUSH2 0x4FBF JUMP JUMPDEST PUSH2 0x4FA3 JUMP JUMPDEST DUP4 DUP2 MSTORE SWAP1 POP PUSH1 0x20 DUP1 DUP3 ADD SWAP1 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x5014 JUMPI PUSH2 0x5014 PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5038 JUMPI DUP1 PUSH2 0x5029 DUP9 DUP3 PUSH2 0x4F4B JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x5016 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5056 JUMPI PUSH2 0x5056 PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF2B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4FE2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x5081 JUMPI PUSH2 0x5081 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x508D DUP9 DUP9 PUSH2 0x4F37 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x509E DUP9 DUP3 DUP10 ADD PUSH2 0x4F4B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x50AF DUP9 DUP3 DUP10 ADD PUSH2 0x4F4B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x50C0 DUP9 DUP3 DUP10 ADD PUSH2 0x4F37 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x50DF JUMPI PUSH2 0x50DF PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x50EB DUP9 DUP3 DUP10 ADD PUSH2 0x5042 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5113 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x50FB JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5126 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH2 0x513D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x50F8 JUMP JUMPDEST PUSH2 0x5146 DUP2 PUSH2 0x4F56 JUMP JUMPDEST SWAP1 SWAP4 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xE7C DUP2 DUP5 PUSH2 0x511C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5176 JUMPI PUSH2 0x5176 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF2B DUP5 DUP5 PUSH2 0x4F37 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5198 JUMPI PUSH2 0x5198 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x51A4 DUP6 DUP6 PUSH2 0x4F4B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x51B5 DUP6 DUP3 DUP7 ADD PUSH2 0x4F37 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x51D4 JUMPI PUSH2 0x51D4 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF2B DUP5 DUP5 PUSH2 0x4F4B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x51F8 JUMPI PUSH2 0x51F8 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5204 DUP7 DUP7 PUSH2 0x4F4B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x5215 DUP7 DUP3 DUP8 ADD PUSH2 0x4F4B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x5226 DUP7 DUP3 DUP8 ADD PUSH2 0x4F37 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5246 JUMPI PUSH2 0x5246 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5252 DUP6 DUP6 PUSH2 0x4F37 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x51B5 DUP6 DUP3 DUP7 ADD PUSH2 0x4F4B JUMP JUMPDEST PUSH1 0xFF DUP2 AND PUSH2 0x4EB0 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xD91 DUP3 DUP5 PUSH2 0x5263 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5292 JUMPI PUSH2 0x5292 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x529E DUP7 DUP7 PUSH2 0x4F4B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x52AF DUP7 DUP3 DUP8 ADD PUSH2 0x4F37 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x52CE JUMPI PUSH2 0x52CE PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5226 DUP7 DUP3 DUP8 ADD PUSH2 0x5042 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x52E8 DUP3 DUP8 PUSH2 0x4EC4 JUMP JUMPDEST PUSH2 0x52F5 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x4EC4 JUMP JUMPDEST PUSH2 0x5302 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4EC4 JUMP JUMPDEST PUSH2 0xDCB PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x4EC4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD91 PUSH2 0x5323 PUSH2 0x5320 DUP5 PUSH2 0x4E90 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x4E90 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD91 DUP3 PUSH2 0x530F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD91 DUP3 PUSH2 0x5328 JUMP JUMPDEST PUSH2 0x4EB0 DUP2 PUSH2 0x5333 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xD91 DUP3 DUP5 PUSH2 0x533E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x536A JUMPI PUSH2 0x536A PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x5384 JUMPI PUSH2 0x5384 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x4078 JUMPI PUSH2 0x4078 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x53B5 JUMPI PUSH2 0x53B5 PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x53CE JUMPI PUSH2 0x53CE PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x53DA DUP6 DUP3 DUP7 ADD PUSH2 0x5355 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x4EE4 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xD91 DUP2 PUSH2 0x53E6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x540E JUMPI PUSH2 0x540E PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF2B DUP5 DUP5 PUSH2 0x53EE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x5428 DUP3 DUP6 PUSH2 0x4EC4 JUMP JUMPDEST PUSH2 0xE7C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4EC4 JUMP JUMPDEST PUSH1 0xFF DUP2 AND PUSH2 0x4EE4 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xD91 DUP2 PUSH2 0x5435 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x5467 JUMPI PUSH2 0x5467 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5473 DUP11 DUP11 PUSH2 0x4F4B JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x5484 DUP11 DUP3 DUP12 ADD PUSH2 0x4F4B JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x5495 DUP11 DUP3 DUP12 ADD PUSH2 0x4F37 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x54A6 DUP11 DUP3 DUP12 ADD PUSH2 0x4F37 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x54B7 DUP11 DUP3 DUP12 ADD PUSH2 0x543E JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x54C8 DUP11 DUP3 DUP12 ADD PUSH2 0x4F37 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x54D9 DUP11 DUP3 DUP12 ADD PUSH2 0x4F37 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x54FE JUMPI PUSH2 0x54FE PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5252 DUP6 DUP6 PUSH2 0x4F4B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x5534 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x5546 JUMPI PUSH2 0x5546 PUSH2 0x550A JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xD91 DUP2 PUSH1 0x2F DUP2 MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x20 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xD91 DUP2 PUSH2 0x4F31 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x55BF JUMPI PUSH2 0x55BF PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF2B DUP5 DUP5 PUSH2 0x559F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x55FB JUMPI PUSH2 0x55FB PUSH2 0x55CB JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x5625 JUMPI PUSH2 0x5625 PUSH2 0x5600 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xD91 JUMPI PUSH2 0xD91 PUSH2 0x55CB JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xD91 JUMPI PUSH2 0xD91 PUSH2 0x55CB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 SUB PUSH2 0x5679 JUMPI PUSH2 0x5679 PUSH2 0x55CB JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x568C DUP4 DUP4 PUSH2 0x4EA7 JUMP JUMPDEST POP POP PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7C PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x4F4B JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 ADD SWAP4 POP DUP2 DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x56E0 JUMPI PUSH2 0x56C5 DUP3 DUP5 PUSH2 0x5694 JUMP JUMPDEST PUSH2 0x56CF DUP9 DUP3 PUSH2 0x5680 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x56B3 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xF2B DUP2 DUP5 DUP7 PUSH2 0x56A3 JUMP JUMPDEST DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x573C JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x571B JUMPI PUSH2 0x571B PUSH2 0x55CB JUMP JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x5729 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST DUP1 MUL PUSH2 0x5735 DUP6 PUSH1 0x1 SHR SWAP1 JUMP JUMPDEST SWAP5 POP PUSH2 0x5700 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x5754 JUMPI POP PUSH1 0x1 PUSH2 0xE7C JUMP JUMPDEST DUP2 PUSH2 0x5761 JUMPI POP PUSH1 0x0 PUSH2 0xE7C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x5777 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x5781 JUMPI PUSH2 0x57AE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xE7C JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x5792 JUMPI PUSH2 0x5792 PUSH2 0x55CB JUMP JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x57A8 JUMPI PUSH2 0x57A8 PUSH2 0x55CB JUMP JUMPDEST POP PUSH2 0xE7C JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x57E1 JUMPI POP DUP2 DUP2 EXP DUP4 DUP2 GT ISZERO PUSH2 0x57DC JUMPI PUSH2 0x57DC PUSH2 0x55CB JUMP JUMPDEST PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x57EE DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x56FD JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x5804 JUMPI PUSH2 0x5804 PUSH2 0x55CB JUMP JUMPDEST MUL SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7C PUSH1 0x0 NOT DUP5 DUP5 PUSH2 0x5745 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD91 PUSH2 0x5320 DUP4 DUP2 JUMP JUMPDEST PUSH2 0x4EB0 DUP2 PUSH2 0x5830 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xD91 DUP3 DUP5 PUSH2 0x583C JUMP JUMPDEST PUSH1 0x1F DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE SWAP2 POP JUMPDEST POP PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xD91 DUP2 PUSH2 0x5853 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x58A9 JUMPI PUSH2 0x58A9 PUSH2 0x5600 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x58BC DUP3 DUP6 PUSH2 0x4EA7 JUMP JUMPDEST PUSH2 0xE7C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4F1B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D3 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 DUP4 ADD DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x56E0 JUMPI DUP2 MLOAD PUSH2 0x58F6 DUP9 DUP3 PUSH2 0x5680 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x58E2 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x5915 DUP3 DUP7 PUSH2 0x4EA7 JUMP JUMPDEST PUSH2 0x5922 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4EC4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0xDCB DUP2 DUP5 PUSH2 0x58C9 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x5942 DUP3 DUP7 PUSH2 0x4EA7 JUMP JUMPDEST PUSH2 0x594F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4EA7 JUMP JUMPDEST PUSH2 0xF2B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4EC4 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xD91 DUP2 PUSH2 0x53E6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x597C JUMPI PUSH2 0x597C PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF2B DUP5 DUP5 PUSH2 0x595C JUMP JUMPDEST PUSH1 0xF DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD PUSH15 0x1D1C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL DUP2 MSTORE SWAP2 POP PUSH2 0x5883 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xD91 DUP2 PUSH2 0x5988 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x5428 DUP3 DUP6 PUSH2 0x4EA7 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x59DA DUP3 DUP6 PUSH2 0x4EC4 JUMP JUMPDEST PUSH2 0xE7C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4EA7 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD PUSH2 0x59F5 DUP3 DUP10 PUSH2 0x4EC4 JUMP JUMPDEST PUSH2 0x5A02 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x4EC4 JUMP JUMPDEST PUSH2 0x5A0F PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x4EC4 JUMP JUMPDEST PUSH2 0x5A1C PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x4EC4 JUMP JUMPDEST PUSH2 0x5A29 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x4EC4 JUMP JUMPDEST PUSH2 0x1A3A PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x4EC4 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD PUSH2 0x5A44 DUP3 DUP10 PUSH2 0x4EC4 JUMP JUMPDEST PUSH2 0x5A51 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x4EA7 JUMP JUMPDEST PUSH2 0x5A0F PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x4EA7 JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x5A75 DUP3 DUP6 PUSH2 0x4EC4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x5A85 DUP3 DUP5 PUSH2 0x4EC4 JUMP JUMPDEST POP PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x5A9D DUP3 DUP8 PUSH2 0x4EC4 JUMP JUMPDEST PUSH2 0x52F5 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x5263 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AB4 DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5AC2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x50F8 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH23 0x20B1B1B2B9B9A1B7B73A3937B61D1030B1B1B7BAB73A1 PUSH1 0x4D SHL DUP2 MSTORE PUSH1 0x17 ADD PUSH1 0x0 PUSH2 0x5AF8 DUP3 DUP6 PUSH2 0x5AAA JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL DUP2 MSTORE PUSH1 0x11 ADD SWAP2 POP PUSH2 0xF2B DUP3 DUP5 PUSH2 0x5AAA JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x5B2C DUP3 DUP7 PUSH2 0x4EC4 JUMP JUMPDEST PUSH2 0x5B39 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4EA7 JUMP JUMPDEST PUSH2 0xF2B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4EA7 JUMP JUMPDEST PUSH1 0xF DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD PUSH15 0x185C1C1C9BDD985B0819985A5B1959 PUSH1 0x8A SHL DUP2 MSTORE SWAP2 POP PUSH2 0x5883 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xD91 DUP2 PUSH2 0x5B46 JUMP JUMPDEST PUSH1 0xF DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD PUSH15 0xC2DADEEADCE840E8DEDE40D0D2CED PUSH1 0x8B SHL DUP2 MSTORE SWAP2 POP PUSH2 0x5883 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xD91 DUP2 PUSH2 0x5B7C JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x5BC0 DUP3 DUP7 PUSH2 0x4EA7 JUMP JUMPDEST PUSH2 0x594F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4EC4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5BE3 JUMPI PUSH2 0x5BE3 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5BEF DUP6 DUP6 PUSH2 0x559F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x51B5 DUP6 DUP3 DUP7 ADD PUSH2 0x559F JUMP JUMPDEST PUSH2 0xFFFF DUP2 AND PUSH2 0x4EE4 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xD91 DUP2 PUSH2 0x5C00 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xD91 DUP2 PUSH2 0x4F42 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5C36 JUMPI PUSH2 0x5C36 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5C42 DUP6 DUP6 PUSH2 0x5C0A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x51B5 DUP6 DUP3 DUP7 ADD PUSH2 0x5C15 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x59DA DUP3 DUP6 PUSH2 0x4EA7 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x5C70 JUMPI PUSH2 0x5C70 PUSH2 0x55CB JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5883 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xD91 DUP2 PUSH2 0x5C78 JUMP INVALID ISZERO 0x2E 0xBB 0xA5 PUSH12 0x9738EE3D8BAEA1B76FA31DCD 0xCD PUSH26 0xB1929BFEA7D58EE12CFDF1A653CD9F023A942EE35097EAD74B25 SDIV 0xBE 0xA9 CALLCODE 0xC5 0xD4 PUSH21 0x65DB92DD195CF7F01A41CFE1633076A97F32AE349B 0x28 PUSH24 0x2E7B1483F67A926F150CBC501D02BDBD77389325ABC723F4 0xDD PUSH3 0x68E1C3 PUSH21 0x639E36D629C765285EE7003913389D582C300F186D 0xDE SWAP8 PUSH24 0x7D215DB24FB9FEE4DED85C66B422ABD7162A1CAA6ED3EC4C SUB 0x1F PUSH13 0xD29ADA52D45F7CCFF42F059D4E SELFBALANCE 0xC3 CREATE 0x27 0xC4 DIFFICULTY 0x27 0x22 JUMPI 0x26 PUSH16 0x7E88B981E142F0AA38FBFD78EA672C1C MULMOD 0xCD SWAP6 0xC5 BYTE 0xF9 POP SWAP16 PUSH5 0x6F3615FF00 PUSH18 0xAAE8652BD821471EE9037FD72C862F91C9D8 SWAP14 PUSH2 0x35B1 SWAP9 PUSH20 0xB921C90B702CB2E175C371B8430026B9577E6911 NOT 0xAE JUMP GAS 0xAB DUP9 DUP12 0xCA 0x5E NOT 0xE2 GAS SGT 0xDB PUSH28 0xC9144305BF55CB0F3F4D724F730E5ACDD622A0E761830CC61F2707E 0xA7 0xBB SGT DUP1 ADDMOD 0xBF SWAP14 0xDA PUSH32 0x7D34C77736D0A116604E95EA16F206625BAD3D9112D5609B8D356E6FBD514CD1 0xF6 SWAP10 DUP1 0xD4 0xCE 0x2B RETURNDATACOPY PUSH15 0x68E1789ACE7CBB3CDF689B8EA3E9D2 PUSH6 0xF66BC4E0A990 PUSH10 0x268217017D38D2A5A559 0xAB 0xC6 0x27 NOT 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF PUSH15 0x71EDAE12B1B97F4D1F60370FEF1010 0x5F LOG2 STATICCALL 0xAE ADD 0x26 GT 0x4A AND SWAP13 PUSH5 0x845D6126C9 DUP13 JUMPDEST 0xE1 0xE5 0xEB 0xEC PUSH30 0x5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B9256F430D649A DUP7 BLOCKHASH 0xE4 DUP16 0xF9 0xBF 0xBC CALLDATALOAD EXTCODESIZE EXTCODEHASH SWAP10 0xED PUSH4 0x1638578 0x21 0xB3 0xB4 SMOD 0x5E CODESIZE PUSH18 0xDAFBF5900D80DEF0427DAAC599092FCB16B2 XOR ADDMOD 0xEC PUSH9 0xDD9A2E1EAE89D1E8DB 0x21 CALLDATALOAD PUSH20 0x75A18EAEA71A088B547B8C932B48861853B3434D SWAP11 ORIGIN BLOCKHASH 0xB9 DIFFICULTY PUSH7 0xC607E28B696595 0xDC 0xBC SHR SDIV 0x24 0xF BALANCE SELFDESTRUCT GASPRICE 0xD0 PUSH8 0xEF1EE35CE4997762 PUSH22 0x2E3A095284754544F4C709D75E2B8821AD6E0E26207E 0xC 0xB4 0xD2 TIMESTAMP 0xD0 PUSH31 0xEB1CBB1CFD853E645BDCD27CC5484F952F0DBBE8C2C0170206C50EC0CAFA1C 0xD 0xBD SUB 0xE7 RETURNDATACOPY PUSH8 0xC2A960178DF30A0A ADDRESS 0xEE 0x2E PUSH10 0xD1171AC0A63777A6733C 0xDA 0x21 0xAE 0xC9 0xED RETURNDATASIZE BASEFEE LOG4 REVERT GT CALLCODE PUSH20 0xC934A691DEC5E5589CA2646970667358221220DC 0xD9 ADDRESS 0xA9 DUP11 PUSH19 0x6B092EC8B55124692BECB7843441F6C97E5458 0xC8 0xF7 0xEC SSTORE CALLER DUP16 0xBC PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ","sourceMap":"1031:74998:11:-:0;;;2577:8;2541:44;;2611:1148;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:2;1821:22;;-1:-1:-1;;;;;2831:14:11;;;;;;2866:42;;;-1:-1:-1;;;2866:42:11;;;;:40;;:42;;;;;;;;;;;;;;;2831:14;2866:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2855:53;;;;;;2934:3;-1:-1:-1;2918:75:11;;2960:22;;-1:-1:-1;;;2960:22:11;;;;;;;;;;;2918:75;3013:10;3003:20;;3116:8;3093:31;;3089:94;;;3147:25;;-1:-1:-1;;;3147:25:11;;;;;;;;;;;3089:94;3193:19;:42;;;3246:4;:12;3253:5;3246:4;:12;:::i;:::-;-1:-1:-1;3268:6:11;:16;3277:7;3268:6;:16;:::i;:::-;-1:-1:-1;3294:11:11;:26;;-1:-1:-1;;;;;;3294:26:11;-1:-1:-1;;;;;3294:26:11;;;;;3435:23;;;;;;;;;;3524:11;;;;;;;;;;;-1:-1:-1;;;3524:11:11;;;;3373:317;;;3326:95:23;;3435:23:11;3508:29;;3585:13;;3644:4;;3373:317;;:::i;:::-;;;;;;;-1:-1:-1;;3373:317:11;;;;;;3350:350;;3373:317;3350:350;;;;3331:16;:369;3711:15;:41;;-1:-1:-1;;;;;;3711:41:11;-1:-1:-1;;;;;3711:41:11;;;;;;;;;;-1:-1:-1;1031:74998:11;;-1:-1:-1;;;;1031:74998:11;466:96:25;503:7;-1:-1:-1;;;;;400:54:25;;532:24;521:35;466:96;-1:-1:-1;;466:96:25:o;568:110::-;619:7;648:24;666:5;648:24;:::i;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;936:13;;958:47;936:13;958:47;:::i;1371:180::-;-1:-1:-1;;;1416:1:25;1409:88;1516:4;1513:1;1506:15;1540:4;1537:1;1530:15;1557:281;-1:-1:-1;;1355:2:25;1335:14;;1331:28;1632:6;1628:40;1770:6;1758:10;1755:22;-1:-1:-1;;;;;1722:10:25;1719:34;1716:62;1713:88;;;1781:18;;:::i;:::-;1817:2;1810:22;-1:-1:-1;;1557:281:25:o;1844:129::-;1878:6;1905:20;73:2;67:9;;7:75;1905:20;1895:30;;1934:33;1962:4;1954:6;1934:33;:::i;:::-;1844:129;;;:::o;1979:308::-;2041:4;-1:-1:-1;;;;;2123:6:25;2120:30;2117:56;;;2153:18;;:::i;:::-;-1:-1:-1;;1355:2:25;1335:14;;1331:28;2275:4;2265:15;;1979:308;-1:-1:-1;;1979:308:25:o;2293:246::-;2374:1;2384:113;2398:6;2395:1;2392:13;2384:113;;;2474:11;;;2468:18;2455:11;;;2448:39;2420:2;2413:10;2384:113;;;-1:-1:-1;;2531:1:25;2513:16;;2506:27;2293:246::o;2545:434::-;2634:5;2659:66;2675:49;2717:6;2675:49;:::i;:::-;2659:66;:::i;:::-;2650:75;;2748:6;2741:5;2734:21;2786:4;2779:5;2775:16;2824:3;2815:6;2810:3;2806:16;2803:25;2800:112;;;2831:79;197:1;194;187:12;2831:79;2921:52;2966:6;2961:3;2956;2921:52;:::i;:::-;2640:339;2545:434;;;;;:::o;2999:355::-;3066:5;3115:3;3108:4;3100:6;3096:17;3092:27;3082:122;;3123:79;197:1;194;187:12;3123:79;3233:6;3227:13;3258:90;3344:3;3336:6;3329:4;3321:6;3317:17;3258:90;:::i;:::-;3249:99;2999:355;-1:-1:-1;;;;2999:355:25:o;3360:122::-;3433:24;3451:5;3433:24;:::i;3488:143::-;3570:13;;3592:33;3570:13;3592:33;:::i;3720:122::-;3811:5;3793:24;3637:77;3848:143;3930:13;;3952:33;3930:13;3952:33;:::i;3997:1508::-;4146:6;4154;4162;4170;4178;4186;4235:3;4223:9;4214:7;4210:23;4206:33;4203:120;;;4242:79;197:1;194;187:12;4242:79;4362:1;4387:78;4457:7;4437:9;4387:78;:::i;:::-;4377:88;;4333:142;4535:2;4524:9;4520:18;4514:25;-1:-1:-1;;;;;4558:6:25;4555:30;4552:117;;;4588:79;197:1;194;187:12;4588:79;4693:74;4759:7;4750:6;4739:9;4735:22;4693:74;:::i;:::-;4683:84;;4485:292;4837:2;4826:9;4822:18;4816:25;-1:-1:-1;;;;;4860:6:25;4857:30;4854:117;;;4890:79;197:1;194;187:12;4890:79;4995:74;5061:7;5052:6;5041:9;5037:22;4995:74;:::i;:::-;4985:84;;4787:292;5118:2;5144:64;5200:7;5191:6;5180:9;5176:22;5144:64;:::i;:::-;5134:74;;5089:129;5257:3;5284:64;5340:7;5331:6;5320:9;5316:22;5284:64;:::i;:::-;5274:74;;5228:130;5397:3;5424:64;5480:7;5471:6;5460:9;5456:22;5424:64;:::i;:::-;5414:74;;5368:130;3997:1508;;;;;;;;:::o;5603:118::-;5586:4;5575:16;;5674:22;5511:86;5727:139;5807:13;;5829:31;5807:13;5829:31;:::i;5872:347::-;5940:6;5989:2;5977:9;5968:7;5964:23;5960:32;5957:119;;;5995:79;197:1;194;187:12;5995:79;6115:1;6140:62;6194:7;6174:9;6140:62;:::i;6330:180::-;-1:-1:-1;;;6375:1:25;6368:88;6475:4;6472:1;6465:15;6499:4;6496:1;6489:15;6516:320;6597:1;6587:12;;6644:1;6634:12;;;6655:81;;6721:4;6713:6;6709:17;6699:27;;6655:81;6783:2;6775:6;6772:14;6752:18;6749:38;6746:84;;6802:18;;:::i;:::-;6567:269;6516:320;;;:::o;7666:142::-;7716:9;7749:53;7767:34;7794:5;7767:34;3637:77;7776:24;3703:5;3637:77;7895:269;8005:39;8036:7;8005:39;:::i;:::-;8094:11;;7320:1;7304:18;;7172:16;;;-1:-1:-1;;7172:16:25;;;7568:19;;;7529:9;;7518:21;;;7558:30;8060:4;8053:105;7971:193;7895:269;;;:::o;8249:189::-;8215:3;8367:65;8425:6;8417;8411:4;8367:65;:::i;:::-;8302:136;8249:189;;:::o;8444:186::-;8521:3;8514:5;8511:14;8504:120;;;8575:39;8612:1;8605:5;8575:39;:::i;:::-;8548:1;8537:13;8504:120;;;8444:186;;:::o;8636:543::-;8737:2;8732:3;8729:11;8726:446;;;6891:4;6927:14;;;6971:4;6958:18;;7073:2;7068;7057:14;;7053:23;8845:8;8841:44;9038:2;9026:10;9023:18;9020:49;;;-1:-1:-1;9059:8:25;9020:49;9082:80;7073:2;7068;7057:14;;7053:23;9128:8;9124:37;9111:11;9082:80;:::i;:::-;8741:431;;8636:543;;;:::o;9782:1395::-;6305:12;;-1:-1:-1;;;;;9993:6:25;9990:30;9987:56;;;10023:18;;:::i;:::-;10067:38;10099:4;10093:11;10067:38;:::i;:::-;10152:67;10212:6;10204;10198:4;10152:67;:::i;:::-;10270:4;10302:2;10291:14;;10319:1;10314:618;;;;10976:1;10993:6;10990:77;;;-1:-1:-1;11033:19:25;;;11027:26;10990:77;-1:-1:-1;;9418:1:25;9414:13;;9279:16;9381:56;9456:15;;9763:1;9759:11;;9750:21;11087:4;11080:81;10949:222;10284:887;;10314:618;6891:4;6927:14;;;6971:4;6958:18;;-1:-1:-1;;10350:22:25;;;10473:208;10487:7;10484:1;10481:14;10473:208;;;10557:19;;;10551:26;10536:42;;10664:2;10649:18;;;;10617:1;10605:14;;;;10503:12;10473:208;;;10709:6;10700:7;10697:19;10694:179;;;10758:19;;;10752:26;-1:-1:-1;;10852:4:25;10840:17;;9418:1;9414:13;9279:16;9381:56;9456:15;10795:64;;10694:179;10919:1;10915;10907:6;10903:14;10899:22;10893:4;10886:36;10321:611;;;10284:887;;9874:1303;;;9782:1395;;:::o;11266:118::-;11371:5;11353:24;11348:3;11341:37;11266:118;;:::o;11514:::-;11601:24;11619:5;11601:24;:::i;11638:664::-;11881:3;11866:19;;11895:71;11870:9;11939:6;11895:71;:::i;:::-;11976:72;12044:2;12033:9;12029:18;12020:6;11976:72;:::i;:::-;12058;12126:2;12115:9;12111:18;12102:6;12058:72;:::i;:::-;12140;12208:2;12197:9;12193:18;12184:6;12140:72;:::i;:::-;12222:73;12290:3;12279:9;12275:19;12266:6;12222:73;:::i;:::-;11638:664;;;;;;;;:::o;:::-;1031:74998:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ACCOUNTANT_MANAGER_7652":{"entryPoint":null,"id":7652,"parameterSlots":0,"returnSlots":0},"@ADD_STRATEGY_MANAGER_7697":{"entryPoint":null,"id":7697,"parameterSlots":0,"returnSlots":0},"@API_VERSION_7571":{"entryPoint":null,"id":7571,"parameterSlots":0,"returnSlots":0},"@ASSET_1908":{"entryPoint":null,"id":1908,"parameterSlots":0,"returnSlots":0},"@DEBT_MANAGER_7717":{"entryPoint":null,"id":7717,"parameterSlots":0,"returnSlots":0},"@DEBT_PURCHASER_7692":{"entryPoint":null,"id":7692,"parameterSlots":0,"returnSlots":0},"@DECIMALS_1910":{"entryPoint":null,"id":1910,"parameterSlots":0,"returnSlots":0},"@DEFAULT_ADMIN_ROLE_27":{"entryPoint":null,"id":27,"parameterSlots":0,"returnSlots":0},"@DEPOSIT_LIMIT_MANAGER_7662":{"entryPoint":null,"id":7662,"parameterSlots":0,"returnSlots":0},"@DOMAIN_SEPARATOR_7642":{"entryPoint":null,"id":7642,"parameterSlots":0,"returnSlots":0},"@DOMAIN_TYPE_HASH_7640":{"entryPoint":null,"id":7640,"parameterSlots":0,"returnSlots":0},"@EMERGENCY_MANAGER_7722":{"entryPoint":null,"id":7722,"parameterSlots":0,"returnSlots":0},"@FACTORY_1912":{"entryPoint":null,"id":1912,"parameterSlots":0,"returnSlots":0},"@FORCE_REVOKE_MANAGER_7707":{"entryPoint":null,"id":7707,"parameterSlots":0,"returnSlots":0},"@MAX_BPS_7565":{"entryPoint":null,"id":7565,"parameterSlots":0,"returnSlots":0},"@MAX_BPS_EXTENDED_7568":{"entryPoint":null,"id":7568,"parameterSlots":0,"returnSlots":0},"@MAX_DEBT_MANAGER_7712":{"entryPoint":null,"id":7712,"parameterSlots":0,"returnSlots":0},"@MAX_QUEUE_7562":{"entryPoint":null,"id":7562,"parameterSlots":0,"returnSlots":0},"@MINIMUM_IDLE_MANAGER_7672":{"entryPoint":null,"id":7672,"parameterSlots":0,"returnSlots":0},"@ONE_YEAR_1915":{"entryPoint":null,"id":1915,"parameterSlots":0,"returnSlots":0},"@PERMIT_TYPE_HASH_7647":{"entryPoint":null,"id":7647,"parameterSlots":0,"returnSlots":0},"@PROFIT_UNLOCK_MANAGER_7677":{"entryPoint":null,"id":7677,"parameterSlots":0,"returnSlots":0},"@QUEUE_MANAGER_7657":{"entryPoint":null,"id":7657,"parameterSlots":0,"returnSlots":0},"@REPORTING_MANAGER_7687":{"entryPoint":null,"id":7687,"parameterSlots":0,"returnSlots":0},"@REVOKE_STRATEGY_MANAGER_7702":{"entryPoint":null,"id":7702,"parameterSlots":0,"returnSlots":0},"@ROLE_MANAGER_7682":{"entryPoint":null,"id":7682,"parameterSlots":0,"returnSlots":0},"@WITHDRAW_LIMIT_MANAGER_7667":{"entryPoint":null,"id":7667,"parameterSlots":0,"returnSlots":0},"@_addStrategy_4032":{"entryPoint":8362,"id":4032,"parameterSlots":1,"returnSlots":0},"@_approve_2192":{"entryPoint":7896,"id":2192,"parameterSlots":3,"returnSlots":1},"@_assessFees_4643":{"entryPoint":18085,"id":4643,"parameterSlots":3,"returnSlots":1},"@_assessProfitAndLoss_4561":{"entryPoint":17775,"id":4561,"parameterSlots":1,"returnSlots":2},"@_assessShareOfUnrealisedLosses_3410":{"entryPoint":12279,"id":3410,"parameterSlots":2,"returnSlots":1},"@_burnShares_2403":{"entryPoint":14508,"id":2403,"parameterSlots":2,"returnSlots":0},"@_burnUnlockedShares_2495":{"entryPoint":17727,"id":2495,"parameterSlots":0,"returnSlots":0},"@_calculateShareManagement_4713":{"entryPoint":18451,"id":4713,"parameterSlots":3,"returnSlots":1},"@_checkRole_131":{"entryPoint":16671,"id":131,"parameterSlots":2,"returnSlots":0},"@_checkRole_92":{"entryPoint":8222,"id":92,"parameterSlots":1,"returnSlots":0},"@_convertToAssets_2574":{"entryPoint":7589,"id":2574,"parameterSlots":2,"returnSlots":1},"@_convertToShares_2655":{"entryPoint":8048,"id":2655,"parameterSlots":2,"returnSlots":1},"@_decreaseAllowance_2252":{"entryPoint":13398,"id":2252,"parameterSlots":3,"returnSlots":1},"@_deposit_3258":{"entryPoint":12621,"id":3258,"parameterSlots":3,"returnSlots":1},"@_erc20SafeApprove_2694":{"entryPoint":17197,"id":2694,"parameterSlots":3,"returnSlots":0},"@_erc20SafeTransferFrom_2743":{"entryPoint":10016,"id":2743,"parameterSlots":4,"returnSlots":0},"@_erc20SafeTransfer_2782":{"entryPoint":10242,"id":2782,"parameterSlots":3,"returnSlots":0},"@_finalizeRedeem_4019":{"entryPoint":16511,"id":4019,"parameterSlots":7,"returnSlots":0},"@_grantRole_283":{"entryPoint":8497,"id":283,"parameterSlots":2,"returnSlots":0},"@_handleAllowance_3587":{"entryPoint":14855,"id":3587,"parameterSlots":3,"returnSlots":0},"@_handleShareBurnsAndIssues_4932":{"entryPoint":18584,"id":4932,"parameterSlots":5,"returnSlots":2},"@_increaseAllowance_2222":{"entryPoint":9722,"id":2222,"parameterSlots":3,"returnSlots":1},"@_issueSharesForAmount_2899":{"entryPoint":17397,"id":2899,"parameterSlots":2,"returnSlots":1},"@_issueShares_2820":{"entryPoint":17574,"id":2820,"parameterSlots":2,"returnSlots":0},"@_manageUnlockingOfShares_5007":{"entryPoint":19368,"id":5007,"parameterSlots":2,"returnSlots":0},"@_maxDeposit_2963":{"entryPoint":9800,"id":2963,"parameterSlots":1,"returnSlots":1},"@_maxWithdraw_3188":{"entryPoint":8629,"id":3188,"parameterSlots":3,"returnSlots":1},"@_mint_3334":{"entryPoint":13059,"id":3334,"parameterSlots":3,"returnSlots":1},"@_msgSender_568":{"entryPoint":null,"id":568,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_441":{"entryPoint":null,"id":441,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_433":{"entryPoint":7548,"id":433,"parameterSlots":0,"returnSlots":0},"@_permit_2366":{"entryPoint":14012,"id":2366,"parameterSlots":7,"returnSlots":1},"@_processReport_4493":{"entryPoint":13704,"id":4493,"parameterSlots":1,"returnSlots":2},"@_redeem_3517":{"entryPoint":7739,"id":3517,"parameterSlots":7,"returnSlots":1},"@_revokeRole_314":{"entryPoint":9621,"id":314,"parameterSlots":2,"returnSlots":0},"@_revokeStrategy_4048":{"entryPoint":8235,"id":4048,"parameterSlots":2,"returnSlots":0},"@_spendAllowance_2049":{"entryPoint":16760,"id":2049,"parameterSlots":3,"returnSlots":0},"@_totalAssets_2505":{"entryPoint":7530,"id":2505,"parameterSlots":0,"returnSlots":1},"@_totalSupply_2462":{"entryPoint":8339,"id":2462,"parameterSlots":0,"returnSlots":1},"@_transferFrom_2146":{"entryPoint":8463,"id":2146,"parameterSlots":3,"returnSlots":1},"@_transfer_2119":{"entryPoint":13451,"id":2119,"parameterSlots":3,"returnSlots":0},"@_unlockedShares_2451":{"entryPoint":12965,"id":2451,"parameterSlots":0,"returnSlots":1},"@_updateDebt_4385":{"entryPoint":10442,"id":4385,"parameterSlots":2,"returnSlots":1},"@_validateRedeem_3566":{"entryPoint":14691,"id":3566,"parameterSlots":4,"returnSlots":0},"@_withdrawAssets_3958":{"entryPoint":14891,"id":3958,"parameterSlots":2,"returnSlots":2},"@_withdrawFromStrategy_3454":{"entryPoint":16851,"id":3454,"parameterSlots":2,"returnSlots":0},"@acceptRoleManager_5388":{"entryPoint":5629,"id":5388,"parameterSlots":0,"returnSlots":0},"@accountant_7605":{"entryPoint":null,"id":7605,"parameterSlots":0,"returnSlots":0},"@addRole_5277":{"entryPoint":6185,"id":5277,"parameterSlots":2,"returnSlots":0},"@addStrategy_5573":{"entryPoint":3777,"id":5573,"parameterSlots":1,"returnSlots":0},"@allowance_6300":{"entryPoint":null,"id":6300,"parameterSlots":2,"returnSlots":1},"@approve_5858":{"entryPoint":3695,"id":5858,"parameterSlots":2,"returnSlots":1},"@assessShareOfUnrealisedLosses_6283":{"entryPoint":5154,"id":6283,"parameterSlots":2,"returnSlots":1},"@asset_6052":{"entryPoint":null,"id":6052,"parameterSlots":0,"returnSlots":1},"@balanceOf_6028":{"entryPoint":5778,"id":6028,"parameterSlots":1,"returnSlots":1},"@buyDebt_5559":{"entryPoint":4270,"id":5559,"parameterSlots":2,"returnSlots":0},"@closeOpenRole_5343":{"entryPoint":6598,"id":5343,"parameterSlots":1,"returnSlots":0},"@convertToAssets_6134":{"entryPoint":3682,"id":6134,"parameterSlots":1,"returnSlots":1},"@convertToShares_6089":{"entryPoint":6585,"id":6089,"parameterSlots":1,"returnSlots":1},"@decimals_6064":{"entryPoint":null,"id":6064,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_5969":{"entryPoint":6172,"id":5969,"parameterSlots":2,"returnSlots":1},"@defaultQueue_7581":{"entryPoint":7488,"id":7581,"parameterSlots":0,"returnSlots":0},"@depositLimitModule_7607":{"entryPoint":null,"id":7607,"parameterSlots":0,"returnSlots":0},"@depositLimit_7603":{"entryPoint":null,"id":7603,"parameterSlots":0,"returnSlots":0},"@deposit_5740":{"entryPoint":5746,"id":5740,"parameterSlots":2,"returnSlots":1},"@forceRevokeStrategy_5603":{"entryPoint":3728,"id":5603,"parameterSlots":1,"returnSlots":0},"@fullProfitUnlockDate_7627":{"entryPoint":null,"id":7627,"parameterSlots":0,"returnSlots":0},"@futureRoleManager_7621":{"entryPoint":null,"id":7621,"parameterSlots":0,"returnSlots":0},"@getRoleAdmin_146":{"entryPoint":3891,"id":146,"parameterSlots":1,"returnSlots":1},"@grantRole_166":{"entryPoint":4076,"id":166,"parameterSlots":2,"returnSlots":0},"@hasRole_79":{"entryPoint":5956,"id":79,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_5951":{"entryPoint":4246,"id":5951,"parameterSlots":2,"returnSlots":1},"@lastProfitUpdate_7631":{"entryPoint":null,"id":7631,"parameterSlots":0,"returnSlots":0},"@maxDeposit_6147":{"entryPoint":4259,"id":6147,"parameterSlots":1,"returnSlots":1},"@maxMint_6168":{"entryPoint":6560,"id":6168,"parameterSlots":1,"returnSlots":1},"@maxRedeem_6226":{"entryPoint":4109,"id":6226,"parameterSlots":3,"returnSlots":1},"@maxWithdraw_6188":{"entryPoint":5512,"id":6188,"parameterSlots":3,"returnSlots":1},"@min_886":{"entryPoint":9599,"id":886,"parameterSlots":2,"returnSlots":1},"@minimumTotalIdle_7601":{"entryPoint":null,"id":7601,"parameterSlots":0,"returnSlots":0},"@mint_5760":{"entryPoint":5997,"id":5760,"parameterSlots":2,"returnSlots":1},"@name_1902":{"entryPoint":3540,"id":1902,"parameterSlots":0,"returnSlots":0},"@nonces_7635":{"entryPoint":null,"id":7635,"parameterSlots":0,"returnSlots":0},"@openRoles_7617":{"entryPoint":null,"id":7617,"parameterSlots":0,"returnSlots":0},"@permit_6000":{"entryPoint":6694,"id":6000,"parameterSlots":7,"returnSlots":1},"@previewDeposit_6104":{"entryPoint":null,"id":6104,"parameterSlots":1,"returnSlots":1},"@previewMint_6119":{"entryPoint":6301,"id":6119,"parameterSlots":1,"returnSlots":1},"@previewRedeem_6256":{"entryPoint":null,"id":6256,"parameterSlots":1,"returnSlots":1},"@previewWithdraw_6241":{"entryPoint":3715,"id":6241,"parameterSlots":1,"returnSlots":1},"@pricePerShare_5413":{"entryPoint":6031,"id":5413,"parameterSlots":0,"returnSlots":1},"@processReport_5433":{"entryPoint":6314,"id":5433,"parameterSlots":1,"returnSlots":2},"@profitMaxUnlockTime_7625":{"entryPoint":null,"id":7625,"parameterSlots":0,"returnSlots":0},"@profitUnlockingRate_7629":{"entryPoint":null,"id":7629,"parameterSlots":0,"returnSlots":0},"@redeem_5840":{"entryPoint":3479,"id":5840,"parameterSlots":5,"returnSlots":1},"@removeRole_5299":{"entryPoint":5525,"id":5299,"parameterSlots":2,"returnSlots":0},"@renounceRole_209":{"entryPoint":4187,"id":209,"parameterSlots":2,"returnSlots":0},"@revokeRole_186":{"entryPoint":6779,"id":186,"parameterSlots":2,"returnSlots":0},"@revokeStrategy_5588":{"entryPoint":6377,"id":5588,"parameterSlots":1,"returnSlots":0},"@roleManager_7619":{"entryPoint":null,"id":7619,"parameterSlots":0,"returnSlots":0},"@roles_7613":{"entryPoint":null,"id":7613,"parameterSlots":0,"returnSlots":0},"@setAccountant_5025":{"entryPoint":4956,"id":5025,"parameterSlots":1,"returnSlots":0},"@setDefaultQueue_5074":{"entryPoint":5283,"id":5074,"parameterSlots":2,"returnSlots":0},"@setDepositLimitModule_5167":{"entryPoint":3912,"id":5167,"parameterSlots":1,"returnSlots":0},"@setDepositLimit_5129":{"entryPoint":6412,"id":5129,"parameterSlots":1,"returnSlots":0},"@setMinimumTotalIdle_5203":{"entryPoint":5867,"id":5203,"parameterSlots":1,"returnSlots":0},"@setOpenRole_5321":{"entryPoint":6725,"id":5321,"parameterSlots":1,"returnSlots":0},"@setProfitMaxUnlockTime_5255":{"entryPoint":6869,"id":5255,"parameterSlots":1,"returnSlots":0},"@setUseDefaultQueue_5092":{"entryPoint":6086,"id":5092,"parameterSlots":1,"returnSlots":0},"@setWithdrawLimitModule_5185":{"entryPoint":5055,"id":5185,"parameterSlots":1,"returnSlots":0},"@shutdownVault_5720":{"entryPoint":7055,"id":5720,"parameterSlots":0,"returnSlots":0},"@shutdown_7623":{"entryPoint":null,"id":7623,"parameterSlots":0,"returnSlots":0},"@strategies_7578":{"entryPoint":null,"id":7578,"parameterSlots":0,"returnSlots":0},"@supportsInterface_60":{"entryPoint":3424,"id":60,"parameterSlots":1,"returnSlots":1},"@supportsInterface_830":{"entryPoint":null,"id":830,"parameterSlots":1,"returnSlots":1},"@symbol_1905":{"entryPoint":6018,"id":1905,"parameterSlots":0,"returnSlots":0},"@toHexString_761":{"entryPoint":19547,"id":761,"parameterSlots":2,"returnSlots":1},"@toHexString_781":{"entryPoint":19529,"id":781,"parameterSlots":1,"returnSlots":1},"@totalAssets_6074":{"entryPoint":3409,"id":6074,"parameterSlots":0,"returnSlots":1},"@totalDebtAmount_7597":{"entryPoint":null,"id":7597,"parameterSlots":0,"returnSlots":0},"@totalIdleAmount_7599":{"entryPoint":null,"id":7599,"parameterSlots":0,"returnSlots":0},"@totalSupplyAmount_7595":{"entryPoint":null,"id":7595,"parameterSlots":0,"returnSlots":0},"@totalSupply_6040":{"entryPoint":3767,"id":6040,"parameterSlots":0,"returnSlots":1},"@transferFrom_5933":{"entryPoint":3810,"id":5933,"parameterSlots":3,"returnSlots":1},"@transferRoleManager_5357":{"entryPoint":5224,"id":5357,"parameterSlots":1,"returnSlots":0},"@transfer_5896":{"entryPoint":6219,"id":5896,"parameterSlots":2,"returnSlots":1},"@unlockedShares_5398":{"entryPoint":6859,"id":5398,"parameterSlots":0,"returnSlots":1},"@updateDebt_5661":{"entryPoint":4894,"id":5661,"parameterSlots":2,"returnSlots":1},"@updateMaxDebtForStrategy_5640":{"entryPoint":7315,"id":5640,"parameterSlots":2,"returnSlots":0},"@useDefaultQueue_7583":{"entryPoint":null,"id":7583,"parameterSlots":0,"returnSlots":0},"@withdrawLimitModule_7609":{"entryPoint":null,"id":7609,"parameterSlots":0,"returnSlots":0},"@withdraw_5801":{"entryPoint":6807,"id":5801,"parameterSlots":5,"returnSlots":1},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":20450,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":20299,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":23573,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":21333,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":20546,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":21486,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":22876,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":20207,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint16_fromMemory":{"entryPoint":23562,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":20279,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":21919,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":21566,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":20927,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":21736,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":20960,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":21577,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":20866,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_array$_t_address_$dyn_memory_ptr":{"entryPoint":21114,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":21407,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool":{"entryPoint":21497,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":22887,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":21040,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":20218,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint16t_address_fromMemory":{"entryPoint":23584,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":20833,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":21930,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_addresst_addresst_uint256t_array$_t_address_$dyn_memory_ptr":{"entryPoint":20582,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256t_uint256_fromMemory":{"entryPoint":23501,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":22144,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":20135,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$dyn_calldata_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":22179,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":22729,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":20251,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IERC20_$531_to_t_address_fromStack":{"entryPoint":21310,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack":{"entryPoint":22588,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":20764,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":23210,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack":{"entryPoint":23672,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92_to_t_string_memory_ptr_fromStack":{"entryPoint":23420,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_dc5bf56f7778a980bf68a168744f15fc09ca522217760da56d44aee44af65dd8_to_t_string_memory_ptr_fromStack":{"entryPoint":23366,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b_to_t_string_memory_ptr_fromStack":{"entryPoint":22920,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack":{"entryPoint":22611,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":20164,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":21091,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":23134,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":23244,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":20150,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":23635,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":22836,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed":{"entryPoint":22702,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":22974,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_address_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":22791,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":23474,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":22251,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":20259,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":23094,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":23183,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$531__to_t_address__fromStack_reversed":{"entryPoint":21319,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed":{"entryPoint":22597,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20816,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":23722,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":23458,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dc5bf56f7778a980bf68a168744f15fc09ca522217760da56d44aee44af65dd8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":23404,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22958,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22666,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21836,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":20170,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed":{"entryPoint":22988,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_address__to_t_uint256_t_address_t_address__fromStack_reversed":{"entryPoint":23326,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":21530,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":21210,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":23015,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":21100,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":20387,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":20415,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_access_t_address":{"entryPoint":22164,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":22077,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":22038,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":22269,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":22539,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":22341,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":21985,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":22058,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":20124,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_0_by_1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":20112,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC20_$531_to_t_address":{"entryPoint":21299,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_0_by_1_to_t_uint256":{"entryPoint":22576,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":21288,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":21263,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":20728,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":23649,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":21792,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":20342,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":22118,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":22682,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":21963,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":22016,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":22554,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":21770,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":22096,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":20320,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":20310,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_1_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_dc5bf56f7778a980bf68a168744f15fc09ca522217760da56d44aee44af65dd8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":20290,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":21478,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":20184,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint16":{"entryPoint":23552,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":20273,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":21557,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:45986:25","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:25","statements":[{"nodeType":"YulAssignment","src":"62:65:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:25"},"nodeType":"YulFunctionCall","src":"73:54:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:25"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:25","type":""}],"src":"7:126:25"},{"body":{"nodeType":"YulBlock","src":"184:51:25","statements":[{"nodeType":"YulAssignment","src":"194:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:25"},"nodeType":"YulFunctionCall","src":"205:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:25"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:25","type":""}],"src":"139:96:25"},{"body":{"nodeType":"YulBlock","src":"306:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:25"},"nodeType":"YulFunctionCall","src":"328:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:25"},"nodeType":"YulFunctionCall","src":"316:37:25"},"nodeType":"YulExpressionStatement","src":"316:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:25","type":""}],"src":"241:118:25"},{"body":{"nodeType":"YulBlock","src":"463:124:25","statements":[{"nodeType":"YulAssignment","src":"473:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:25"},"nodeType":"YulFunctionCall","src":"481:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:25"},"nodeType":"YulFunctionCall","src":"562:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:25"},"nodeType":"YulFunctionCall","src":"509:71:25"},"nodeType":"YulExpressionStatement","src":"509:71:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:25","type":""}],"src":"365:222:25"},{"body":{"nodeType":"YulBlock","src":"638:32:25","statements":[{"nodeType":"YulAssignment","src":"648:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"659:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"648:7:25"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"620:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"630:7:25","type":""}],"src":"593:77:25"},{"body":{"nodeType":"YulBlock","src":"741:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"758:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"781:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"763:17:25"},"nodeType":"YulFunctionCall","src":"763:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"751:6:25"},"nodeType":"YulFunctionCall","src":"751:37:25"},"nodeType":"YulExpressionStatement","src":"751:37:25"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"729:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"736:3:25","type":""}],"src":"676:118:25"},{"body":{"nodeType":"YulBlock","src":"898:124:25","statements":[{"nodeType":"YulAssignment","src":"908:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"920:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"931:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"916:3:25"},"nodeType":"YulFunctionCall","src":"916:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"908:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"988:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1001:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1012:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"997:3:25"},"nodeType":"YulFunctionCall","src":"997:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"944:43:25"},"nodeType":"YulFunctionCall","src":"944:71:25"},"nodeType":"YulExpressionStatement","src":"944:71:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"870:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"882:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"893:4:25","type":""}],"src":"800:222:25"},{"body":{"nodeType":"YulBlock","src":"1068:35:25","statements":[{"nodeType":"YulAssignment","src":"1078:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1094:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1088:5:25"},"nodeType":"YulFunctionCall","src":"1088:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1078:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1061:6:25","type":""}],"src":"1028:75:25"},{"body":{"nodeType":"YulBlock","src":"1198:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1215:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1218:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1208:6:25"},"nodeType":"YulFunctionCall","src":"1208:12:25"},"nodeType":"YulExpressionStatement","src":"1208:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1109:117:25"},{"body":{"nodeType":"YulBlock","src":"1321:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1338:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1341:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1331:6:25"},"nodeType":"YulFunctionCall","src":"1331:12:25"},"nodeType":"YulExpressionStatement","src":"1331:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1232:117:25"},{"body":{"nodeType":"YulBlock","src":"1399:105:25","statements":[{"nodeType":"YulAssignment","src":"1409:89:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1424:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"1431:66:25","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1420:3:25"},"nodeType":"YulFunctionCall","src":"1420:78:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1409:7:25"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1381:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1391:7:25","type":""}],"src":"1355:149:25"},{"body":{"nodeType":"YulBlock","src":"1552:78:25","statements":[{"body":{"nodeType":"YulBlock","src":"1608:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1617:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1620:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1610:6:25"},"nodeType":"YulFunctionCall","src":"1610:12:25"},"nodeType":"YulExpressionStatement","src":"1610:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1575:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1599:5:25"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"1582:16:25"},"nodeType":"YulFunctionCall","src":"1582:23:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1572:2:25"},"nodeType":"YulFunctionCall","src":"1572:34:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1565:6:25"},"nodeType":"YulFunctionCall","src":"1565:42:25"},"nodeType":"YulIf","src":"1562:62:25"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1545:5:25","type":""}],"src":"1510:120:25"},{"body":{"nodeType":"YulBlock","src":"1687:86:25","statements":[{"nodeType":"YulAssignment","src":"1697:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1719:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1706:12:25"},"nodeType":"YulFunctionCall","src":"1706:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1697:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1761:5:25"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"1735:25:25"},"nodeType":"YulFunctionCall","src":"1735:32:25"},"nodeType":"YulExpressionStatement","src":"1735:32:25"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1665:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"1673:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1681:5:25","type":""}],"src":"1636:137:25"},{"body":{"nodeType":"YulBlock","src":"1844:262:25","statements":[{"body":{"nodeType":"YulBlock","src":"1890:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1892:77:25"},"nodeType":"YulFunctionCall","src":"1892:79:25"},"nodeType":"YulExpressionStatement","src":"1892:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1865:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"1874:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1861:3:25"},"nodeType":"YulFunctionCall","src":"1861:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"1886:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1857:3:25"},"nodeType":"YulFunctionCall","src":"1857:32:25"},"nodeType":"YulIf","src":"1854:119:25"},{"nodeType":"YulBlock","src":"1983:116:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1998:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"2012:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2002:6:25","type":""}]},{"nodeType":"YulAssignment","src":"2027:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2061:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"2072:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2057:3:25"},"nodeType":"YulFunctionCall","src":"2057:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2081:7:25"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"2037:19:25"},"nodeType":"YulFunctionCall","src":"2037:52:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2027:6:25"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1814:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1825:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1837:6:25","type":""}],"src":"1779:327:25"},{"body":{"nodeType":"YulBlock","src":"2154:48:25","statements":[{"nodeType":"YulAssignment","src":"2164:32:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2189:5:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2182:6:25"},"nodeType":"YulFunctionCall","src":"2182:13:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2175:6:25"},"nodeType":"YulFunctionCall","src":"2175:21:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2164:7:25"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2136:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2146:7:25","type":""}],"src":"2112:90:25"},{"body":{"nodeType":"YulBlock","src":"2267:50:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2284:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2304:5:25"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2289:14:25"},"nodeType":"YulFunctionCall","src":"2289:21:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2277:6:25"},"nodeType":"YulFunctionCall","src":"2277:34:25"},"nodeType":"YulExpressionStatement","src":"2277:34:25"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2255:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2262:3:25","type":""}],"src":"2208:109:25"},{"body":{"nodeType":"YulBlock","src":"2415:118:25","statements":[{"nodeType":"YulAssignment","src":"2425:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2437:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2448:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2433:3:25"},"nodeType":"YulFunctionCall","src":"2433:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2425:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2499:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2512:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2523:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2508:3:25"},"nodeType":"YulFunctionCall","src":"2508:17:25"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"2461:37:25"},"nodeType":"YulFunctionCall","src":"2461:65:25"},"nodeType":"YulExpressionStatement","src":"2461:65:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2387:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2399:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2410:4:25","type":""}],"src":"2323:210:25"},{"body":{"nodeType":"YulBlock","src":"2584:32:25","statements":[{"nodeType":"YulAssignment","src":"2594:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"2605:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2594:7:25"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2566:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2576:7:25","type":""}],"src":"2539:77:25"},{"body":{"nodeType":"YulBlock","src":"2687:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2704:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2727:5:25"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"2709:17:25"},"nodeType":"YulFunctionCall","src":"2709:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2697:6:25"},"nodeType":"YulFunctionCall","src":"2697:37:25"},"nodeType":"YulExpressionStatement","src":"2697:37:25"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2675:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2682:3:25","type":""}],"src":"2622:118:25"},{"body":{"nodeType":"YulBlock","src":"2844:124:25","statements":[{"nodeType":"YulAssignment","src":"2854:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2866:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2877:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2862:3:25"},"nodeType":"YulFunctionCall","src":"2862:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2854:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2934:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2947:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2958:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2943:3:25"},"nodeType":"YulFunctionCall","src":"2943:17:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"2890:43:25"},"nodeType":"YulFunctionCall","src":"2890:71:25"},"nodeType":"YulExpressionStatement","src":"2890:71:25"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2816:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2828:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2839:4:25","type":""}],"src":"2746:222:25"},{"body":{"nodeType":"YulBlock","src":"3017:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"3074:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3083:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3086:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3076:6:25"},"nodeType":"YulFunctionCall","src":"3076:12:25"},"nodeType":"YulExpressionStatement","src":"3076:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3040:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3065:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3047:17:25"},"nodeType":"YulFunctionCall","src":"3047:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3037:2:25"},"nodeType":"YulFunctionCall","src":"3037:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3030:6:25"},"nodeType":"YulFunctionCall","src":"3030:43:25"},"nodeType":"YulIf","src":"3027:63:25"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3010:5:25","type":""}],"src":"2974:122:25"},{"body":{"nodeType":"YulBlock","src":"3154:87:25","statements":[{"nodeType":"YulAssignment","src":"3164:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3186:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3173:12:25"},"nodeType":"YulFunctionCall","src":"3173:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3164:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3229:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3202:26:25"},"nodeType":"YulFunctionCall","src":"3202:33:25"},"nodeType":"YulExpressionStatement","src":"3202:33:25"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3132:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"3140:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3148:5:25","type":""}],"src":"3102:139:25"},{"body":{"nodeType":"YulBlock","src":"3290:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"3347:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3356:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3359:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3349:6:25"},"nodeType":"YulFunctionCall","src":"3349:12:25"},"nodeType":"YulExpressionStatement","src":"3349:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3313:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3338:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3320:17:25"},"nodeType":"YulFunctionCall","src":"3320:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3310:2:25"},"nodeType":"YulFunctionCall","src":"3310:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3303:6:25"},"nodeType":"YulFunctionCall","src":"3303:43:25"},"nodeType":"YulIf","src":"3300:63:25"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3283:5:25","type":""}],"src":"3247:122:25"},{"body":{"nodeType":"YulBlock","src":"3427:87:25","statements":[{"nodeType":"YulAssignment","src":"3437:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3459:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3446:12:25"},"nodeType":"YulFunctionCall","src":"3446:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3437:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3502:5:25"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3475:26:25"},"nodeType":"YulFunctionCall","src":"3475:33:25"},"nodeType":"YulExpressionStatement","src":"3475:33:25"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3405:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"3413:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3421:5:25","type":""}],"src":"3375:139:25"},{"body":{"nodeType":"YulBlock","src":"3609:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3626:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3629:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3619:6:25"},"nodeType":"YulFunctionCall","src":"3619:12:25"},"nodeType":"YulExpressionStatement","src":"3619:12:25"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"3520:117:25"},{"body":{"nodeType":"YulBlock","src":"3691:54:25","statements":[{"nodeType":"YulAssignment","src":"3701:38:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3719:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"3726:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3715:3:25"},"nodeType":"YulFunctionCall","src":"3715:14:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3735:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3731:3:25"},"nodeType":"YulFunctionCall","src":"3731:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3711:3:25"},"nodeType":"YulFunctionCall","src":"3711:28:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3701:6:25"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3674:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3684:6:25","type":""}],"src":"3643:102:25"},{"body":{"nodeType":"YulBlock","src":"3779:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3796:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3799:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3789:6:25"},"nodeType":"YulFunctionCall","src":"3789:88:25"},"nodeType":"YulExpressionStatement","src":"3789:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3893:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3896:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3886:6:25"},"nodeType":"YulFunctionCall","src":"3886:15:25"},"nodeType":"YulExpressionStatement","src":"3886:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3917:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3920:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3910:6:25"},"nodeType":"YulFunctionCall","src":"3910:15:25"},"nodeType":"YulExpressionStatement","src":"3910:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3751:180:25"},{"body":{"nodeType":"YulBlock","src":"3980:238:25","statements":[{"nodeType":"YulVariableDeclaration","src":"3990:58:25","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4012:6:25"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4042:4:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4020:21:25"},"nodeType":"YulFunctionCall","src":"4020:27:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4008:3:25"},"nodeType":"YulFunctionCall","src":"4008:40:25"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3994:10:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"4159:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4161:16:25"},"nodeType":"YulFunctionCall","src":"4161:18:25"},"nodeType":"YulExpressionStatement","src":"4161:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4102:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"4114:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4099:2:25"},"nodeType":"YulFunctionCall","src":"4099:34:25"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4138:10:25"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4150:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4135:2:25"},"nodeType":"YulFunctionCall","src":"4135:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4096:2:25"},"nodeType":"YulFunctionCall","src":"4096:62:25"},"nodeType":"YulIf","src":"4093:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4197:2:25","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4201:10:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4190:6:25"},"nodeType":"YulFunctionCall","src":"4190:22:25"},"nodeType":"YulExpressionStatement","src":"4190:22:25"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3966:6:25","type":""},{"name":"size","nodeType":"YulTypedName","src":"3974:4:25","type":""}],"src":"3937:281:25"},{"body":{"nodeType":"YulBlock","src":"4265:88:25","statements":[{"nodeType":"YulAssignment","src":"4275:30:25","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"4285:18:25"},"nodeType":"YulFunctionCall","src":"4285:20:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4275:6:25"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4334:6:25"},{"name":"size","nodeType":"YulIdentifier","src":"4342:4:25"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"4314:19:25"},"nodeType":"YulFunctionCall","src":"4314:33:25"},"nodeType":"YulExpressionStatement","src":"4314:33:25"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"4249:4:25","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4258:6:25","type":""}],"src":"4224:129:25"},{"body":{"nodeType":"YulBlock","src":"4441:229:25","statements":[{"body":{"nodeType":"YulBlock","src":"4546:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4548:16:25"},"nodeType":"YulFunctionCall","src":"4548:18:25"},"nodeType":"YulExpressionStatement","src":"4548:18:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4518:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"4526:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4515:2:25"},"nodeType":"YulFunctionCall","src":"4515:30:25"},"nodeType":"YulIf","src":"4512:56:25"},{"nodeType":"YulAssignment","src":"4578:25:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4590:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"4598:4:25","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4586:3:25"},"nodeType":"YulFunctionCall","src":"4586:17:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4578:4:25"}]},{"nodeType":"YulAssignment","src":"4640:23:25","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4652:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"4658:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4648:3:25"},"nodeType":"YulFunctionCall","src":"4648:15:25"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4640:4:25"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4425:6:25","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4436:4:25","type":""}],"src":"4359:311:25"},{"body":{"nodeType":"YulBlock","src":"4765:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4782:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4785:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4775:6:25"},"nodeType":"YulFunctionCall","src":"4775:12:25"},"nodeType":"YulExpressionStatement","src":"4775:12:25"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"4676:117:25"},{"body":{"nodeType":"YulBlock","src":"4918:608:25","statements":[{"nodeType":"YulAssignment","src":"4928:90:25","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5010:6:25"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4953:56:25"},"nodeType":"YulFunctionCall","src":"4953:64:25"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4937:15:25"},"nodeType":"YulFunctionCall","src":"4937:81:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4928:5:25"}]},{"nodeType":"YulVariableDeclaration","src":"5027:16:25","value":{"name":"array","nodeType":"YulIdentifier","src":"5038:5:25"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"5031:3:25","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5060:5:25"},{"name":"length","nodeType":"YulIdentifier","src":"5067:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5053:6:25"},"nodeType":"YulFunctionCall","src":"5053:21:25"},"nodeType":"YulExpressionStatement","src":"5053:21:25"},{"nodeType":"YulAssignment","src":"5083:23:25","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5094:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"5101:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5090:3:25"},"nodeType":"YulFunctionCall","src":"5090:16:25"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5083:3:25"}]},{"nodeType":"YulVariableDeclaration","src":"5116:44:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5134:6:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5146:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"5154:4:25","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5142:3:25"},"nodeType":"YulFunctionCall","src":"5142:17:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5130:3:25"},"nodeType":"YulFunctionCall","src":"5130:30:25"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"5120:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"5188:103:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"5202:77:25"},"nodeType":"YulFunctionCall","src":"5202:79:25"},"nodeType":"YulExpressionStatement","src":"5202:79:25"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"5175:6:25"},{"name":"end","nodeType":"YulIdentifier","src":"5183:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5172:2:25"},"nodeType":"YulFunctionCall","src":"5172:15:25"},"nodeType":"YulIf","src":"5169:122:25"},{"body":{"nodeType":"YulBlock","src":"5376:144:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5391:21:25","value":{"name":"src","nodeType":"YulIdentifier","src":"5409:3:25"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"5395:10:25","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5433:3:25"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"5459:10:25"},{"name":"end","nodeType":"YulIdentifier","src":"5471:3:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5438:20:25"},"nodeType":"YulFunctionCall","src":"5438:37:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5426:6:25"},"nodeType":"YulFunctionCall","src":"5426:50:25"},"nodeType":"YulExpressionStatement","src":"5426:50:25"},{"nodeType":"YulAssignment","src":"5489:21:25","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5500:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"5505:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5496:3:25"},"nodeType":"YulFunctionCall","src":"5496:14:25"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5489:3:25"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5329:3:25"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"5334:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5326:2:25"},"nodeType":"YulFunctionCall","src":"5326:15:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5342:25:25","statements":[{"nodeType":"YulAssignment","src":"5344:21:25","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5355:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"5360:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5351:3:25"},"nodeType":"YulFunctionCall","src":"5351:14:25"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5344:3:25"}]}]},"pre":{"nodeType":"YulBlock","src":"5304:21:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5306:17:25","value":{"name":"offset","nodeType":"YulIdentifier","src":"5317:6:25"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5310:3:25","type":""}]}]},"src":"5300:220:25"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4888:6:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"4896:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"4904:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4912:5:25","type":""}],"src":"4816:710:25"},{"body":{"nodeType":"YulBlock","src":"5626:293:25","statements":[{"body":{"nodeType":"YulBlock","src":"5675:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5677:77:25"},"nodeType":"YulFunctionCall","src":"5677:79:25"},"nodeType":"YulExpressionStatement","src":"5677:79:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5654:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"5662:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5650:3:25"},"nodeType":"YulFunctionCall","src":"5650:17:25"},{"name":"end","nodeType":"YulIdentifier","src":"5669:3:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5646:3:25"},"nodeType":"YulFunctionCall","src":"5646:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5639:6:25"},"nodeType":"YulFunctionCall","src":"5639:35:25"},"nodeType":"YulIf","src":"5636:122:25"},{"nodeType":"YulVariableDeclaration","src":"5767:34:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5794:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5781:12:25"},"nodeType":"YulFunctionCall","src":"5781:20:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5771:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5810:103:25","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5886:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"5894:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5882:3:25"},"nodeType":"YulFunctionCall","src":"5882:17:25"},{"name":"length","nodeType":"YulIdentifier","src":"5901:6:25"},{"name":"end","nodeType":"YulIdentifier","src":"5909:3:25"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5819:62:25"},"nodeType":"YulFunctionCall","src":"5819:94:25"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5810:5:25"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5604:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"5612:3:25","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5620:5:25","type":""}],"src":"5549:370:25"},{"body":{"nodeType":"YulBlock","src":"6084:962:25","statements":[{"body":{"nodeType":"YulBlock","src":"6131:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6133:77:25"},"nodeType":"YulFunctionCall","src":"6133:79:25"},"nodeType":"YulExpressionStatement","src":"6133:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6105:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"6114:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6101:3:25"},"nodeType":"YulFunctionCall","src":"6101:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"6126:3:25","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6097:3:25"},"nodeType":"YulFunctionCall","src":"6097:33:25"},"nodeType":"YulIf","src":"6094:120:25"},{"nodeType":"YulBlock","src":"6224:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6239:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6253:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6243:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6268:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6303:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6314:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6299:3:25"},"nodeType":"YulFunctionCall","src":"6299:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6323:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6278:20:25"},"nodeType":"YulFunctionCall","src":"6278:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6268:6:25"}]}]},{"nodeType":"YulBlock","src":"6351:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6366:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6380:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6370:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6396:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6431:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6442:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6427:3:25"},"nodeType":"YulFunctionCall","src":"6427:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6451:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6406:20:25"},"nodeType":"YulFunctionCall","src":"6406:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6396:6:25"}]}]},{"nodeType":"YulBlock","src":"6479:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6494:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6508:2:25","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6498:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6524:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6559:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6570:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6555:3:25"},"nodeType":"YulFunctionCall","src":"6555:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6579:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6534:20:25"},"nodeType":"YulFunctionCall","src":"6534:53:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6524:6:25"}]}]},{"nodeType":"YulBlock","src":"6607:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6622:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6636:2:25","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6626:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6652:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6687:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6698:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6683:3:25"},"nodeType":"YulFunctionCall","src":"6683:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6707:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6662:20:25"},"nodeType":"YulFunctionCall","src":"6662:53:25"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6652:6:25"}]}]},{"nodeType":"YulBlock","src":"6735:304:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6750:47:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6781:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6792:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6777:3:25"},"nodeType":"YulFunctionCall","src":"6777:19:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6764:12:25"},"nodeType":"YulFunctionCall","src":"6764:33:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6754:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"6844:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6846:77:25"},"nodeType":"YulFunctionCall","src":"6846:79:25"},"nodeType":"YulExpressionStatement","src":"6846:79:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6816:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"6824:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6813:2:25"},"nodeType":"YulFunctionCall","src":"6813:30:25"},"nodeType":"YulIf","src":"6810:117:25"},{"nodeType":"YulAssignment","src":"6941:88:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7001:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"7012:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6997:3:25"},"nodeType":"YulFunctionCall","src":"6997:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7021:7:25"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6951:45:25"},"nodeType":"YulFunctionCall","src":"6951:78:25"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"6941:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_addresst_uint256t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6022:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6033:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6045:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6053:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6061:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6069:6:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6077:6:25","type":""}],"src":"5925:1121:25"},{"body":{"nodeType":"YulBlock","src":"7111:40:25","statements":[{"nodeType":"YulAssignment","src":"7122:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7138:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7132:5:25"},"nodeType":"YulFunctionCall","src":"7132:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7122:6:25"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7094:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7104:6:25","type":""}],"src":"7052:99:25"},{"body":{"nodeType":"YulBlock","src":"7253:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7270:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"7275:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7263:6:25"},"nodeType":"YulFunctionCall","src":"7263:19:25"},"nodeType":"YulExpressionStatement","src":"7263:19:25"},{"nodeType":"YulAssignment","src":"7291:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7310:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"7315:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7306:3:25"},"nodeType":"YulFunctionCall","src":"7306:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7291:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7225:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"7230:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7241:11:25","type":""}],"src":"7157:169:25"},{"body":{"nodeType":"YulBlock","src":"7394:184:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7404:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"7413:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7408:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"7473:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7498:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"7503:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7494:3:25"},"nodeType":"YulFunctionCall","src":"7494:11:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7517:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"7522:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7513:3:25"},"nodeType":"YulFunctionCall","src":"7513:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7507:5:25"},"nodeType":"YulFunctionCall","src":"7507:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7487:6:25"},"nodeType":"YulFunctionCall","src":"7487:39:25"},"nodeType":"YulExpressionStatement","src":"7487:39:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7434:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"7437:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7431:2:25"},"nodeType":"YulFunctionCall","src":"7431:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7445:19:25","statements":[{"nodeType":"YulAssignment","src":"7447:15:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7456:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"7459:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7452:3:25"},"nodeType":"YulFunctionCall","src":"7452:10:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7447:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"7427:3:25","statements":[]},"src":"7423:113:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7556:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"7561:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7552:3:25"},"nodeType":"YulFunctionCall","src":"7552:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"7570:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7545:6:25"},"nodeType":"YulFunctionCall","src":"7545:27:25"},"nodeType":"YulExpressionStatement","src":"7545:27:25"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7376:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"7381:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"7386:6:25","type":""}],"src":"7332:246:25"},{"body":{"nodeType":"YulBlock","src":"7676:285:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7686:53:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7733:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7700:32:25"},"nodeType":"YulFunctionCall","src":"7700:39:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7690:6:25","type":""}]},{"nodeType":"YulAssignment","src":"7748:78:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7814:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"7819:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7755:58:25"},"nodeType":"YulFunctionCall","src":"7755:71:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7748:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7874:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"7881:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7870:3:25"},"nodeType":"YulFunctionCall","src":"7870:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"7888:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"7893:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7835:34:25"},"nodeType":"YulFunctionCall","src":"7835:65:25"},"nodeType":"YulExpressionStatement","src":"7835:65:25"},{"nodeType":"YulAssignment","src":"7909:46:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7920:3:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7947:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7925:21:25"},"nodeType":"YulFunctionCall","src":"7925:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7916:3:25"},"nodeType":"YulFunctionCall","src":"7916:39:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7909:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7657:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7664:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7672:3:25","type":""}],"src":"7584:377:25"},{"body":{"nodeType":"YulBlock","src":"8085:195:25","statements":[{"nodeType":"YulAssignment","src":"8095:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8107:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8118:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8103:3:25"},"nodeType":"YulFunctionCall","src":"8103:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8095:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8142:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8153:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8138:3:25"},"nodeType":"YulFunctionCall","src":"8138:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8161:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"8167:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8157:3:25"},"nodeType":"YulFunctionCall","src":"8157:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8131:6:25"},"nodeType":"YulFunctionCall","src":"8131:47:25"},"nodeType":"YulExpressionStatement","src":"8131:47:25"},{"nodeType":"YulAssignment","src":"8187:86:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8259:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"8268:4:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8195:63:25"},"nodeType":"YulFunctionCall","src":"8195:78:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8187:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8057:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8069:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8080:4:25","type":""}],"src":"7967:313:25"},{"body":{"nodeType":"YulBlock","src":"8352:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"8398:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8400:77:25"},"nodeType":"YulFunctionCall","src":"8400:79:25"},"nodeType":"YulExpressionStatement","src":"8400:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8373:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"8382:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8369:3:25"},"nodeType":"YulFunctionCall","src":"8369:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"8394:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8365:3:25"},"nodeType":"YulFunctionCall","src":"8365:32:25"},"nodeType":"YulIf","src":"8362:119:25"},{"nodeType":"YulBlock","src":"8491:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"8506:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"8520:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8510:6:25","type":""}]},{"nodeType":"YulAssignment","src":"8535:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8570:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"8581:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8566:3:25"},"nodeType":"YulFunctionCall","src":"8566:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8590:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8545:20:25"},"nodeType":"YulFunctionCall","src":"8545:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8535:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8322:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8333:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8345:6:25","type":""}],"src":"8286:329:25"},{"body":{"nodeType":"YulBlock","src":"8704:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"8750:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8752:77:25"},"nodeType":"YulFunctionCall","src":"8752:79:25"},"nodeType":"YulExpressionStatement","src":"8752:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8725:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"8734:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8721:3:25"},"nodeType":"YulFunctionCall","src":"8721:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"8746:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8717:3:25"},"nodeType":"YulFunctionCall","src":"8717:32:25"},"nodeType":"YulIf","src":"8714:119:25"},{"nodeType":"YulBlock","src":"8843:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"8858:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"8872:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8862:6:25","type":""}]},{"nodeType":"YulAssignment","src":"8887:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8922:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"8933:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8918:3:25"},"nodeType":"YulFunctionCall","src":"8918:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8942:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8897:20:25"},"nodeType":"YulFunctionCall","src":"8897:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8887:6:25"}]}]},{"nodeType":"YulBlock","src":"8970:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"8985:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"8999:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8989:6:25","type":""}]},{"nodeType":"YulAssignment","src":"9015:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9050:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"9061:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9046:3:25"},"nodeType":"YulFunctionCall","src":"9046:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9070:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9025:20:25"},"nodeType":"YulFunctionCall","src":"9025:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9015:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8666:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8677:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8689:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8697:6:25","type":""}],"src":"8621:474:25"},{"body":{"nodeType":"YulBlock","src":"9167:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"9213:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9215:77:25"},"nodeType":"YulFunctionCall","src":"9215:79:25"},"nodeType":"YulExpressionStatement","src":"9215:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9188:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"9197:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9184:3:25"},"nodeType":"YulFunctionCall","src":"9184:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"9209:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9180:3:25"},"nodeType":"YulFunctionCall","src":"9180:32:25"},"nodeType":"YulIf","src":"9177:119:25"},{"nodeType":"YulBlock","src":"9306:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9321:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"9335:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9325:6:25","type":""}]},{"nodeType":"YulAssignment","src":"9350:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9385:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"9396:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9381:3:25"},"nodeType":"YulFunctionCall","src":"9381:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9405:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9360:20:25"},"nodeType":"YulFunctionCall","src":"9360:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9350:6:25"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9137:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9148:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9160:6:25","type":""}],"src":"9101:329:25"},{"body":{"nodeType":"YulBlock","src":"9536:519:25","statements":[{"body":{"nodeType":"YulBlock","src":"9582:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9584:77:25"},"nodeType":"YulFunctionCall","src":"9584:79:25"},"nodeType":"YulExpressionStatement","src":"9584:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9557:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"9566:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9553:3:25"},"nodeType":"YulFunctionCall","src":"9553:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"9578:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9549:3:25"},"nodeType":"YulFunctionCall","src":"9549:32:25"},"nodeType":"YulIf","src":"9546:119:25"},{"nodeType":"YulBlock","src":"9675:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9690:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"9704:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9694:6:25","type":""}]},{"nodeType":"YulAssignment","src":"9719:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9754:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"9765:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9750:3:25"},"nodeType":"YulFunctionCall","src":"9750:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9774:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9729:20:25"},"nodeType":"YulFunctionCall","src":"9729:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9719:6:25"}]}]},{"nodeType":"YulBlock","src":"9802:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9817:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"9831:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9821:6:25","type":""}]},{"nodeType":"YulAssignment","src":"9847:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9882:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"9893:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9878:3:25"},"nodeType":"YulFunctionCall","src":"9878:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9902:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9857:20:25"},"nodeType":"YulFunctionCall","src":"9857:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9847:6:25"}]}]},{"nodeType":"YulBlock","src":"9930:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9945:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"9959:2:25","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9949:6:25","type":""}]},{"nodeType":"YulAssignment","src":"9975:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10010:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"10021:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10006:3:25"},"nodeType":"YulFunctionCall","src":"10006:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10030:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9985:20:25"},"nodeType":"YulFunctionCall","src":"9985:53:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9975:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9490:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9501:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9513:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9521:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9529:6:25","type":""}],"src":"9436:619:25"},{"body":{"nodeType":"YulBlock","src":"10104:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"10161:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10170:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10173:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10163:6:25"},"nodeType":"YulFunctionCall","src":"10163:12:25"},"nodeType":"YulExpressionStatement","src":"10163:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10127:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10152:5:25"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"10134:17:25"},"nodeType":"YulFunctionCall","src":"10134:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10124:2:25"},"nodeType":"YulFunctionCall","src":"10124:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10117:6:25"},"nodeType":"YulFunctionCall","src":"10117:43:25"},"nodeType":"YulIf","src":"10114:63:25"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10097:5:25","type":""}],"src":"10061:122:25"},{"body":{"nodeType":"YulBlock","src":"10241:87:25","statements":[{"nodeType":"YulAssignment","src":"10251:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10273:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10260:12:25"},"nodeType":"YulFunctionCall","src":"10260:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10251:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10316:5:25"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"10289:26:25"},"nodeType":"YulFunctionCall","src":"10289:33:25"},"nodeType":"YulExpressionStatement","src":"10289:33:25"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10219:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"10227:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10235:5:25","type":""}],"src":"10189:139:25"},{"body":{"nodeType":"YulBlock","src":"10400:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"10446:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10448:77:25"},"nodeType":"YulFunctionCall","src":"10448:79:25"},"nodeType":"YulExpressionStatement","src":"10448:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10421:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"10430:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10417:3:25"},"nodeType":"YulFunctionCall","src":"10417:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"10442:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10413:3:25"},"nodeType":"YulFunctionCall","src":"10413:32:25"},"nodeType":"YulIf","src":"10410:119:25"},{"nodeType":"YulBlock","src":"10539:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"10554:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"10568:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10558:6:25","type":""}]},{"nodeType":"YulAssignment","src":"10583:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10618:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"10629:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10614:3:25"},"nodeType":"YulFunctionCall","src":"10614:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10638:7:25"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"10593:20:25"},"nodeType":"YulFunctionCall","src":"10593:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10583:6:25"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10370:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10381:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10393:6:25","type":""}],"src":"10334:329:25"},{"body":{"nodeType":"YulBlock","src":"10752:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"10798:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10800:77:25"},"nodeType":"YulFunctionCall","src":"10800:79:25"},"nodeType":"YulExpressionStatement","src":"10800:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10773:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"10782:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10769:3:25"},"nodeType":"YulFunctionCall","src":"10769:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"10794:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10765:3:25"},"nodeType":"YulFunctionCall","src":"10765:32:25"},"nodeType":"YulIf","src":"10762:119:25"},{"nodeType":"YulBlock","src":"10891:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"10906:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"10920:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10910:6:25","type":""}]},{"nodeType":"YulAssignment","src":"10935:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10970:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"10981:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10966:3:25"},"nodeType":"YulFunctionCall","src":"10966:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10990:7:25"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"10945:20:25"},"nodeType":"YulFunctionCall","src":"10945:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10935:6:25"}]}]},{"nodeType":"YulBlock","src":"11018:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"11033:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"11047:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11037:6:25","type":""}]},{"nodeType":"YulAssignment","src":"11063:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11098:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"11109:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11094:3:25"},"nodeType":"YulFunctionCall","src":"11094:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11118:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11073:20:25"},"nodeType":"YulFunctionCall","src":"11073:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11063:6:25"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10714:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10725:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10737:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10745:6:25","type":""}],"src":"10669:474:25"},{"body":{"nodeType":"YulBlock","src":"11192:43:25","statements":[{"nodeType":"YulAssignment","src":"11202:27:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11217:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"11224:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11213:3:25"},"nodeType":"YulFunctionCall","src":"11213:16:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11202:7:25"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11174:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11184:7:25","type":""}],"src":"11149:86:25"},{"body":{"nodeType":"YulBlock","src":"11302:51:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11319:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11340:5:25"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"11324:15:25"},"nodeType":"YulFunctionCall","src":"11324:22:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11312:6:25"},"nodeType":"YulFunctionCall","src":"11312:35:25"},"nodeType":"YulExpressionStatement","src":"11312:35:25"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11290:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11297:3:25","type":""}],"src":"11241:112:25"},{"body":{"nodeType":"YulBlock","src":"11453:120:25","statements":[{"nodeType":"YulAssignment","src":"11463:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11475:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11486:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11471:3:25"},"nodeType":"YulFunctionCall","src":"11471:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11463:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11539:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11552:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11563:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11548:3:25"},"nodeType":"YulFunctionCall","src":"11548:17:25"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"11499:39:25"},"nodeType":"YulFunctionCall","src":"11499:67:25"},"nodeType":"YulExpressionStatement","src":"11499:67:25"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11425:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11437:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11448:4:25","type":""}],"src":"11359:214:25"},{"body":{"nodeType":"YulBlock","src":"11704:704:25","statements":[{"body":{"nodeType":"YulBlock","src":"11750:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11752:77:25"},"nodeType":"YulFunctionCall","src":"11752:79:25"},"nodeType":"YulExpressionStatement","src":"11752:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11725:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"11734:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11721:3:25"},"nodeType":"YulFunctionCall","src":"11721:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"11746:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11717:3:25"},"nodeType":"YulFunctionCall","src":"11717:32:25"},"nodeType":"YulIf","src":"11714:119:25"},{"nodeType":"YulBlock","src":"11843:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"11858:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"11872:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11862:6:25","type":""}]},{"nodeType":"YulAssignment","src":"11887:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11922:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"11933:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11918:3:25"},"nodeType":"YulFunctionCall","src":"11918:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11942:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11897:20:25"},"nodeType":"YulFunctionCall","src":"11897:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11887:6:25"}]}]},{"nodeType":"YulBlock","src":"11970:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"11985:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"11999:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11989:6:25","type":""}]},{"nodeType":"YulAssignment","src":"12015:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12050:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"12061:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12046:3:25"},"nodeType":"YulFunctionCall","src":"12046:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12070:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12025:20:25"},"nodeType":"YulFunctionCall","src":"12025:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12015:6:25"}]}]},{"nodeType":"YulBlock","src":"12098:303:25","statements":[{"nodeType":"YulVariableDeclaration","src":"12113:46:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12144:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12155:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12140:3:25"},"nodeType":"YulFunctionCall","src":"12140:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12127:12:25"},"nodeType":"YulFunctionCall","src":"12127:32:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12117:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"12206:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12208:77:25"},"nodeType":"YulFunctionCall","src":"12208:79:25"},"nodeType":"YulExpressionStatement","src":"12208:79:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12178:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"12186:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12175:2:25"},"nodeType":"YulFunctionCall","src":"12175:30:25"},"nodeType":"YulIf","src":"12172:117:25"},{"nodeType":"YulAssignment","src":"12303:88:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12363:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"12374:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12359:3:25"},"nodeType":"YulFunctionCall","src":"12359:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12383:7:25"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12313:45:25"},"nodeType":"YulFunctionCall","src":"12313:78:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12303:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11658:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11669:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11681:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11689:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11697:6:25","type":""}],"src":"11579:829:25"},{"body":{"nodeType":"YulBlock","src":"12596:371:25","statements":[{"nodeType":"YulAssignment","src":"12606:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12618:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12629:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12614:3:25"},"nodeType":"YulFunctionCall","src":"12614:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12606:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12687:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12700:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12711:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12696:3:25"},"nodeType":"YulFunctionCall","src":"12696:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12643:43:25"},"nodeType":"YulFunctionCall","src":"12643:71:25"},"nodeType":"YulExpressionStatement","src":"12643:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12768:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12781:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12792:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12777:3:25"},"nodeType":"YulFunctionCall","src":"12777:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12724:43:25"},"nodeType":"YulFunctionCall","src":"12724:72:25"},"nodeType":"YulExpressionStatement","src":"12724:72:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12850:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12863:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12874:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12859:3:25"},"nodeType":"YulFunctionCall","src":"12859:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12806:43:25"},"nodeType":"YulFunctionCall","src":"12806:72:25"},"nodeType":"YulExpressionStatement","src":"12806:72:25"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"12932:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12945:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12956:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12941:3:25"},"nodeType":"YulFunctionCall","src":"12941:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12888:43:25"},"nodeType":"YulFunctionCall","src":"12888:72:25"},"nodeType":"YulExpressionStatement","src":"12888:72:25"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12544:9:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12556:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12564:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12572:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12580:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12591:4:25","type":""}],"src":"12414:553:25"},{"body":{"nodeType":"YulBlock","src":"13005:28:25","statements":[{"nodeType":"YulAssignment","src":"13015:12:25","value":{"name":"value","nodeType":"YulIdentifier","src":"13022:5:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13015:3:25"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12991:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"13001:3:25","type":""}],"src":"12973:60:25"},{"body":{"nodeType":"YulBlock","src":"13099:82:25","statements":[{"nodeType":"YulAssignment","src":"13109:66:25","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13167:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"13149:17:25"},"nodeType":"YulFunctionCall","src":"13149:24:25"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"13140:8:25"},"nodeType":"YulFunctionCall","src":"13140:34:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"13122:17:25"},"nodeType":"YulFunctionCall","src":"13122:53:25"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"13109:9:25"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13079:5:25","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"13089:9:25","type":""}],"src":"13039:142:25"},{"body":{"nodeType":"YulBlock","src":"13247:66:25","statements":[{"nodeType":"YulAssignment","src":"13257:50:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13301:5:25"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"13270:30:25"},"nodeType":"YulFunctionCall","src":"13270:37:25"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"13257:9:25"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13227:5:25","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"13237:9:25","type":""}],"src":"13187:126:25"},{"body":{"nodeType":"YulBlock","src":"13393:66:25","statements":[{"nodeType":"YulAssignment","src":"13403:50:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13447:5:25"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"13416:30:25"},"nodeType":"YulFunctionCall","src":"13416:37:25"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"13403:9:25"}]}]},"name":"convert_t_contract$_IERC20_$531_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13373:5:25","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"13383:9:25","type":""}],"src":"13319:140:25"},{"body":{"nodeType":"YulBlock","src":"13544:80:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13561:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13611:5:25"}],"functionName":{"name":"convert_t_contract$_IERC20_$531_to_t_address","nodeType":"YulIdentifier","src":"13566:44:25"},"nodeType":"YulFunctionCall","src":"13566:51:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13554:6:25"},"nodeType":"YulFunctionCall","src":"13554:64:25"},"nodeType":"YulExpressionStatement","src":"13554:64:25"}]},"name":"abi_encode_t_contract$_IERC20_$531_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13532:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13539:3:25","type":""}],"src":"13465:159:25"},{"body":{"nodeType":"YulBlock","src":"13742:138:25","statements":[{"nodeType":"YulAssignment","src":"13752:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13764:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13775:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13760:3:25"},"nodeType":"YulFunctionCall","src":"13760:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13752:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13846:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13859:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13870:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13855:3:25"},"nodeType":"YulFunctionCall","src":"13855:17:25"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$531_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13788:57:25"},"nodeType":"YulFunctionCall","src":"13788:85:25"},"nodeType":"YulExpressionStatement","src":"13788:85:25"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$531__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13714:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13726:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13737:4:25","type":""}],"src":"13630:250:25"},{"body":{"nodeType":"YulBlock","src":"13975:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13992:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13995:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13985:6:25"},"nodeType":"YulFunctionCall","src":"13985:12:25"},"nodeType":"YulExpressionStatement","src":"13985:12:25"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"13886:117:25"},{"body":{"nodeType":"YulBlock","src":"14116:478:25","statements":[{"body":{"nodeType":"YulBlock","src":"14165:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"14167:77:25"},"nodeType":"YulFunctionCall","src":"14167:79:25"},"nodeType":"YulExpressionStatement","src":"14167:79:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14144:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"14152:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14140:3:25"},"nodeType":"YulFunctionCall","src":"14140:17:25"},{"name":"end","nodeType":"YulIdentifier","src":"14159:3:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14136:3:25"},"nodeType":"YulFunctionCall","src":"14136:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14129:6:25"},"nodeType":"YulFunctionCall","src":"14129:35:25"},"nodeType":"YulIf","src":"14126:122:25"},{"nodeType":"YulAssignment","src":"14257:30:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14280:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14267:12:25"},"nodeType":"YulFunctionCall","src":"14267:20:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14257:6:25"}]},{"body":{"nodeType":"YulBlock","src":"14330:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"14332:77:25"},"nodeType":"YulFunctionCall","src":"14332:79:25"},"nodeType":"YulExpressionStatement","src":"14332:79:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14302:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"14310:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14299:2:25"},"nodeType":"YulFunctionCall","src":"14299:30:25"},"nodeType":"YulIf","src":"14296:117:25"},{"nodeType":"YulAssignment","src":"14422:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14438:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"14446:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14434:3:25"},"nodeType":"YulFunctionCall","src":"14434:17:25"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"14422:8:25"}]},{"body":{"nodeType":"YulBlock","src":"14505:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"14507:77:25"},"nodeType":"YulFunctionCall","src":"14507:79:25"},"nodeType":"YulExpressionStatement","src":"14507:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"14470:8:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14484:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"14492:4:25","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14480:3:25"},"nodeType":"YulFunctionCall","src":"14480:17:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14466:3:25"},"nodeType":"YulFunctionCall","src":"14466:32:25"},{"name":"end","nodeType":"YulIdentifier","src":"14500:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14463:2:25"},"nodeType":"YulFunctionCall","src":"14463:41:25"},"nodeType":"YulIf","src":"14460:128:25"}]},"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14083:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"14091:3:25","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"14099:8:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"14109:6:25","type":""}],"src":"14026:568:25"},{"body":{"nodeType":"YulBlock","src":"14701:458:25","statements":[{"body":{"nodeType":"YulBlock","src":"14747:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14749:77:25"},"nodeType":"YulFunctionCall","src":"14749:79:25"},"nodeType":"YulExpressionStatement","src":"14749:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14722:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"14731:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14718:3:25"},"nodeType":"YulFunctionCall","src":"14718:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"14743:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14714:3:25"},"nodeType":"YulFunctionCall","src":"14714:32:25"},"nodeType":"YulIf","src":"14711:119:25"},{"nodeType":"YulBlock","src":"14840:312:25","statements":[{"nodeType":"YulVariableDeclaration","src":"14855:45:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14886:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14897:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14882:3:25"},"nodeType":"YulFunctionCall","src":"14882:17:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14869:12:25"},"nodeType":"YulFunctionCall","src":"14869:31:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14859:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"14947:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"14949:77:25"},"nodeType":"YulFunctionCall","src":"14949:79:25"},"nodeType":"YulExpressionStatement","src":"14949:79:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14919:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"14927:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14916:2:25"},"nodeType":"YulFunctionCall","src":"14916:30:25"},"nodeType":"YulIf","src":"14913:117:25"},{"nodeType":"YulAssignment","src":"15044:98:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15114:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"15125:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15110:3:25"},"nodeType":"YulFunctionCall","src":"15110:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15134:7:25"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"15062:47:25"},"nodeType":"YulFunctionCall","src":"15062:80:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15044:6:25"},{"name":"value1","nodeType":"YulIdentifier","src":"15052:6:25"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14663:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14674:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14686:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14694:6:25","type":""}],"src":"14600:559:25"},{"body":{"nodeType":"YulBlock","src":"15248:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"15294:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15296:77:25"},"nodeType":"YulFunctionCall","src":"15296:79:25"},"nodeType":"YulExpressionStatement","src":"15296:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15269:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"15278:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15265:3:25"},"nodeType":"YulFunctionCall","src":"15265:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"15290:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15261:3:25"},"nodeType":"YulFunctionCall","src":"15261:32:25"},"nodeType":"YulIf","src":"15258:119:25"},{"nodeType":"YulBlock","src":"15387:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"15402:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"15416:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15406:6:25","type":""}]},{"nodeType":"YulAssignment","src":"15431:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15466:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"15477:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15462:3:25"},"nodeType":"YulFunctionCall","src":"15462:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15486:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15441:20:25"},"nodeType":"YulFunctionCall","src":"15441:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15431:6:25"}]}]},{"nodeType":"YulBlock","src":"15514:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"15529:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"15543:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15533:6:25","type":""}]},{"nodeType":"YulAssignment","src":"15559:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15594:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"15605:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15590:3:25"},"nodeType":"YulFunctionCall","src":"15590:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15614:7:25"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"15569:20:25"},"nodeType":"YulFunctionCall","src":"15569:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15559:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15210:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15221:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15233:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15241:6:25","type":""}],"src":"15165:474:25"},{"body":{"nodeType":"YulBlock","src":"15728:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"15774:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15776:77:25"},"nodeType":"YulFunctionCall","src":"15776:79:25"},"nodeType":"YulExpressionStatement","src":"15776:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15749:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"15758:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15745:3:25"},"nodeType":"YulFunctionCall","src":"15745:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"15770:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15741:3:25"},"nodeType":"YulFunctionCall","src":"15741:32:25"},"nodeType":"YulIf","src":"15738:119:25"},{"nodeType":"YulBlock","src":"15867:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"15882:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"15896:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15886:6:25","type":""}]},{"nodeType":"YulAssignment","src":"15911:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15946:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"15957:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15942:3:25"},"nodeType":"YulFunctionCall","src":"15942:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15966:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"15921:20:25"},"nodeType":"YulFunctionCall","src":"15921:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15911:6:25"}]}]},{"nodeType":"YulBlock","src":"15994:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"16009:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"16023:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16013:6:25","type":""}]},{"nodeType":"YulAssignment","src":"16039:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16074:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"16085:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16070:3:25"},"nodeType":"YulFunctionCall","src":"16070:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16094:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"16049:20:25"},"nodeType":"YulFunctionCall","src":"16049:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16039:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15690:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15701:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15713:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15721:6:25","type":""}],"src":"15645:474:25"},{"body":{"nodeType":"YulBlock","src":"16165:76:25","statements":[{"body":{"nodeType":"YulBlock","src":"16219:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16228:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16231:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16221:6:25"},"nodeType":"YulFunctionCall","src":"16221:12:25"},"nodeType":"YulExpressionStatement","src":"16221:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16188:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16210:5:25"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"16195:14:25"},"nodeType":"YulFunctionCall","src":"16195:21:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16185:2:25"},"nodeType":"YulFunctionCall","src":"16185:32:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16178:6:25"},"nodeType":"YulFunctionCall","src":"16178:40:25"},"nodeType":"YulIf","src":"16175:60:25"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16158:5:25","type":""}],"src":"16125:116:25"},{"body":{"nodeType":"YulBlock","src":"16296:84:25","statements":[{"nodeType":"YulAssignment","src":"16306:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16328:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16315:12:25"},"nodeType":"YulFunctionCall","src":"16315:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16306:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16368:5:25"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"16344:23:25"},"nodeType":"YulFunctionCall","src":"16344:30:25"},"nodeType":"YulExpressionStatement","src":"16344:30:25"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"16274:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"16282:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"16290:5:25","type":""}],"src":"16247:133:25"},{"body":{"nodeType":"YulBlock","src":"16449:260:25","statements":[{"body":{"nodeType":"YulBlock","src":"16495:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16497:77:25"},"nodeType":"YulFunctionCall","src":"16497:79:25"},"nodeType":"YulExpressionStatement","src":"16497:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16470:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"16479:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16466:3:25"},"nodeType":"YulFunctionCall","src":"16466:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"16491:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16462:3:25"},"nodeType":"YulFunctionCall","src":"16462:32:25"},"nodeType":"YulIf","src":"16459:119:25"},{"nodeType":"YulBlock","src":"16588:114:25","statements":[{"nodeType":"YulVariableDeclaration","src":"16603:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"16617:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16607:6:25","type":""}]},{"nodeType":"YulAssignment","src":"16632:60:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16664:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"16675:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16660:3:25"},"nodeType":"YulFunctionCall","src":"16660:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16684:7:25"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"16642:17:25"},"nodeType":"YulFunctionCall","src":"16642:50:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16632:6:25"}]}]}]},"name":"abi_decode_tuple_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16419:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16430:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16442:6:25","type":""}],"src":"16386:323:25"},{"body":{"nodeType":"YulBlock","src":"16841:206:25","statements":[{"nodeType":"YulAssignment","src":"16851:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16863:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"16874:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16859:3:25"},"nodeType":"YulFunctionCall","src":"16859:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16851:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16931:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16944:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"16955:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16940:3:25"},"nodeType":"YulFunctionCall","src":"16940:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16887:43:25"},"nodeType":"YulFunctionCall","src":"16887:71:25"},"nodeType":"YulExpressionStatement","src":"16887:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17012:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17025:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"17036:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17021:3:25"},"nodeType":"YulFunctionCall","src":"17021:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16968:43:25"},"nodeType":"YulFunctionCall","src":"16968:72:25"},"nodeType":"YulExpressionStatement","src":"16968:72:25"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16805:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16817:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16825:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16836:4:25","type":""}],"src":"16715:332:25"},{"body":{"nodeType":"YulBlock","src":"17094:77:25","statements":[{"body":{"nodeType":"YulBlock","src":"17149:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17158:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17161:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17151:6:25"},"nodeType":"YulFunctionCall","src":"17151:12:25"},"nodeType":"YulExpressionStatement","src":"17151:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17117:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17140:5:25"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"17124:15:25"},"nodeType":"YulFunctionCall","src":"17124:22:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17114:2:25"},"nodeType":"YulFunctionCall","src":"17114:33:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17107:6:25"},"nodeType":"YulFunctionCall","src":"17107:41:25"},"nodeType":"YulIf","src":"17104:61:25"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17087:5:25","type":""}],"src":"17053:118:25"},{"body":{"nodeType":"YulBlock","src":"17227:85:25","statements":[{"nodeType":"YulAssignment","src":"17237:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17259:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17246:12:25"},"nodeType":"YulFunctionCall","src":"17246:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17237:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17300:5:25"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"17275:24:25"},"nodeType":"YulFunctionCall","src":"17275:31:25"},"nodeType":"YulExpressionStatement","src":"17275:31:25"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"17205:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"17213:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"17221:5:25","type":""}],"src":"17177:135:25"},{"body":{"nodeType":"YulBlock","src":"17484:1033:25","statements":[{"body":{"nodeType":"YulBlock","src":"17531:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"17533:77:25"},"nodeType":"YulFunctionCall","src":"17533:79:25"},"nodeType":"YulExpressionStatement","src":"17533:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17505:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"17514:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17501:3:25"},"nodeType":"YulFunctionCall","src":"17501:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"17526:3:25","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17497:3:25"},"nodeType":"YulFunctionCall","src":"17497:33:25"},"nodeType":"YulIf","src":"17494:120:25"},{"nodeType":"YulBlock","src":"17624:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"17639:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"17653:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17643:6:25","type":""}]},{"nodeType":"YulAssignment","src":"17668:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17703:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"17714:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17699:3:25"},"nodeType":"YulFunctionCall","src":"17699:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17723:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"17678:20:25"},"nodeType":"YulFunctionCall","src":"17678:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17668:6:25"}]}]},{"nodeType":"YulBlock","src":"17751:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"17766:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"17780:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17770:6:25","type":""}]},{"nodeType":"YulAssignment","src":"17796:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17831:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"17842:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17827:3:25"},"nodeType":"YulFunctionCall","src":"17827:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17851:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"17806:20:25"},"nodeType":"YulFunctionCall","src":"17806:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"17796:6:25"}]}]},{"nodeType":"YulBlock","src":"17879:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"17894:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"17908:2:25","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17898:6:25","type":""}]},{"nodeType":"YulAssignment","src":"17924:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17959:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"17970:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17955:3:25"},"nodeType":"YulFunctionCall","src":"17955:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17979:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"17934:20:25"},"nodeType":"YulFunctionCall","src":"17934:53:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"17924:6:25"}]}]},{"nodeType":"YulBlock","src":"18007:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"18022:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"18036:2:25","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18026:6:25","type":""}]},{"nodeType":"YulAssignment","src":"18052:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18087:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"18098:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18083:3:25"},"nodeType":"YulFunctionCall","src":"18083:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18107:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"18062:20:25"},"nodeType":"YulFunctionCall","src":"18062:53:25"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"18052:6:25"}]}]},{"nodeType":"YulBlock","src":"18135:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"18150:17:25","value":{"kind":"number","nodeType":"YulLiteral","src":"18164:3:25","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18154:6:25","type":""}]},{"nodeType":"YulAssignment","src":"18181:61:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18214:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"18225:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18210:3:25"},"nodeType":"YulFunctionCall","src":"18210:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18234:7:25"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"18191:18:25"},"nodeType":"YulFunctionCall","src":"18191:51:25"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"18181:6:25"}]}]},{"nodeType":"YulBlock","src":"18262:119:25","statements":[{"nodeType":"YulVariableDeclaration","src":"18277:17:25","value":{"kind":"number","nodeType":"YulLiteral","src":"18291:3:25","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18281:6:25","type":""}]},{"nodeType":"YulAssignment","src":"18308:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18343:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"18354:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18339:3:25"},"nodeType":"YulFunctionCall","src":"18339:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18363:7:25"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"18318:20:25"},"nodeType":"YulFunctionCall","src":"18318:53:25"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"18308:6:25"}]}]},{"nodeType":"YulBlock","src":"18391:119:25","statements":[{"nodeType":"YulVariableDeclaration","src":"18406:17:25","value":{"kind":"number","nodeType":"YulLiteral","src":"18420:3:25","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18410:6:25","type":""}]},{"nodeType":"YulAssignment","src":"18437:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18472:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"18483:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18468:3:25"},"nodeType":"YulFunctionCall","src":"18468:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18492:7:25"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"18447:20:25"},"nodeType":"YulFunctionCall","src":"18447:53:25"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"18437:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17406:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17417:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17429:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17437:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17445:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17453:6:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17461:6:25","type":""},{"name":"value5","nodeType":"YulTypedName","src":"17469:6:25","type":""},{"name":"value6","nodeType":"YulTypedName","src":"17477:6:25","type":""}],"src":"17318:1199:25"},{"body":{"nodeType":"YulBlock","src":"18606:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"18652:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18654:77:25"},"nodeType":"YulFunctionCall","src":"18654:79:25"},"nodeType":"YulExpressionStatement","src":"18654:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18627:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"18636:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18623:3:25"},"nodeType":"YulFunctionCall","src":"18623:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"18648:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18619:3:25"},"nodeType":"YulFunctionCall","src":"18619:32:25"},"nodeType":"YulIf","src":"18616:119:25"},{"nodeType":"YulBlock","src":"18745:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"18760:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"18774:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18764:6:25","type":""}]},{"nodeType":"YulAssignment","src":"18789:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18824:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"18835:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18820:3:25"},"nodeType":"YulFunctionCall","src":"18820:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18844:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"18799:20:25"},"nodeType":"YulFunctionCall","src":"18799:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18789:6:25"}]}]},{"nodeType":"YulBlock","src":"18872:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"18887:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"18901:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18891:6:25","type":""}]},{"nodeType":"YulAssignment","src":"18917:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18952:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"18963:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18948:3:25"},"nodeType":"YulFunctionCall","src":"18948:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18972:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"18927:20:25"},"nodeType":"YulFunctionCall","src":"18927:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18917:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18568:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18579:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18591:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18599:6:25","type":""}],"src":"18523:474:25"},{"body":{"nodeType":"YulBlock","src":"19031:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19048:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19051:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19041:6:25"},"nodeType":"YulFunctionCall","src":"19041:88:25"},"nodeType":"YulExpressionStatement","src":"19041:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19145:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19148:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19138:6:25"},"nodeType":"YulFunctionCall","src":"19138:15:25"},"nodeType":"YulExpressionStatement","src":"19138:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19169:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19172:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19162:6:25"},"nodeType":"YulFunctionCall","src":"19162:15:25"},"nodeType":"YulExpressionStatement","src":"19162:15:25"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"19003:180:25"},{"body":{"nodeType":"YulBlock","src":"19240:269:25","statements":[{"nodeType":"YulAssignment","src":"19250:22:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19264:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"19270:1:25","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"19260:3:25"},"nodeType":"YulFunctionCall","src":"19260:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"19250:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"19281:38:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19311:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"19317:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19307:3:25"},"nodeType":"YulFunctionCall","src":"19307:12:25"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"19285:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"19358:51:25","statements":[{"nodeType":"YulAssignment","src":"19372:27:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19386:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"19394:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19382:3:25"},"nodeType":"YulFunctionCall","src":"19382:17:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"19372:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"19338:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19331:6:25"},"nodeType":"YulFunctionCall","src":"19331:26:25"},"nodeType":"YulIf","src":"19328:81:25"},{"body":{"nodeType":"YulBlock","src":"19461:42:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"19475:16:25"},"nodeType":"YulFunctionCall","src":"19475:18:25"},"nodeType":"YulExpressionStatement","src":"19475:18:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"19425:18:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19448:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"19456:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19445:2:25"},"nodeType":"YulFunctionCall","src":"19445:14:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19422:2:25"},"nodeType":"YulFunctionCall","src":"19422:38:25"},"nodeType":"YulIf","src":"19419:84:25"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"19224:4:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"19233:6:25","type":""}],"src":"19189:320:25"},{"body":{"nodeType":"YulBlock","src":"19621:128:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19643:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"19651:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19639:3:25"},"nodeType":"YulFunctionCall","src":"19639:14:25"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"19655:34:25","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19632:6:25"},"nodeType":"YulFunctionCall","src":"19632:58:25"},"nodeType":"YulExpressionStatement","src":"19632:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19711:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"19719:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19707:3:25"},"nodeType":"YulFunctionCall","src":"19707:15:25"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"19724:17:25","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19700:6:25"},"nodeType":"YulFunctionCall","src":"19700:42:25"},"nodeType":"YulExpressionStatement","src":"19700:42:25"}]},"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19613:6:25","type":""}],"src":"19515:234:25"},{"body":{"nodeType":"YulBlock","src":"19901:220:25","statements":[{"nodeType":"YulAssignment","src":"19911:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19977:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"19982:2:25","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19918:58:25"},"nodeType":"YulFunctionCall","src":"19918:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19911:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20083:3:25"}],"functionName":{"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulIdentifier","src":"19994:88:25"},"nodeType":"YulFunctionCall","src":"19994:93:25"},"nodeType":"YulExpressionStatement","src":"19994:93:25"},{"nodeType":"YulAssignment","src":"20096:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20107:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"20112:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20103:3:25"},"nodeType":"YulFunctionCall","src":"20103:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20096:3:25"}]}]},"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19889:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19897:3:25","type":""}],"src":"19755:366:25"},{"body":{"nodeType":"YulBlock","src":"20298:248:25","statements":[{"nodeType":"YulAssignment","src":"20308:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20320:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20331:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20316:3:25"},"nodeType":"YulFunctionCall","src":"20316:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20308:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20355:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20366:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20351:3:25"},"nodeType":"YulFunctionCall","src":"20351:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20374:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"20380:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20370:3:25"},"nodeType":"YulFunctionCall","src":"20370:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20344:6:25"},"nodeType":"YulFunctionCall","src":"20344:47:25"},"nodeType":"YulExpressionStatement","src":"20344:47:25"},{"nodeType":"YulAssignment","src":"20400:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20534:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20408:124:25"},"nodeType":"YulFunctionCall","src":"20408:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20400:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20278:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20293:4:25","type":""}],"src":"20127:419:25"},{"body":{"nodeType":"YulBlock","src":"20615:80:25","statements":[{"nodeType":"YulAssignment","src":"20625:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20640:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20634:5:25"},"nodeType":"YulFunctionCall","src":"20634:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20625:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20683:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"20656:26:25"},"nodeType":"YulFunctionCall","src":"20656:33:25"},"nodeType":"YulExpressionStatement","src":"20656:33:25"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"20593:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"20601:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"20609:5:25","type":""}],"src":"20552:143:25"},{"body":{"nodeType":"YulBlock","src":"20778:274:25","statements":[{"body":{"nodeType":"YulBlock","src":"20824:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20826:77:25"},"nodeType":"YulFunctionCall","src":"20826:79:25"},"nodeType":"YulExpressionStatement","src":"20826:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20799:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"20808:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20795:3:25"},"nodeType":"YulFunctionCall","src":"20795:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"20820:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20791:3:25"},"nodeType":"YulFunctionCall","src":"20791:32:25"},"nodeType":"YulIf","src":"20788:119:25"},{"nodeType":"YulBlock","src":"20917:128:25","statements":[{"nodeType":"YulVariableDeclaration","src":"20932:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"20946:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20936:6:25","type":""}]},{"nodeType":"YulAssignment","src":"20961:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21007:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"21018:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21003:3:25"},"nodeType":"YulFunctionCall","src":"21003:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21027:7:25"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"20971:31:25"},"nodeType":"YulFunctionCall","src":"20971:64:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20961:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20748:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20759:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20771:6:25","type":""}],"src":"20701:351:25"},{"body":{"nodeType":"YulBlock","src":"21086:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21103:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21106:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21096:6:25"},"nodeType":"YulFunctionCall","src":"21096:88:25"},"nodeType":"YulExpressionStatement","src":"21096:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21200:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21203:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21193:6:25"},"nodeType":"YulFunctionCall","src":"21193:15:25"},"nodeType":"YulExpressionStatement","src":"21193:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21224:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21227:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21217:6:25"},"nodeType":"YulFunctionCall","src":"21217:15:25"},"nodeType":"YulExpressionStatement","src":"21217:15:25"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"21058:180:25"},{"body":{"nodeType":"YulBlock","src":"21292:300:25","statements":[{"nodeType":"YulAssignment","src":"21302:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21325:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21307:17:25"},"nodeType":"YulFunctionCall","src":"21307:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"21302:1:25"}]},{"nodeType":"YulAssignment","src":"21336:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21359:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21341:17:25"},"nodeType":"YulFunctionCall","src":"21341:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"21336:1:25"}]},{"body":{"nodeType":"YulBlock","src":"21534:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21536:16:25"},"nodeType":"YulFunctionCall","src":"21536:18:25"},"nodeType":"YulExpressionStatement","src":"21536:18:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21446:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21439:6:25"},"nodeType":"YulFunctionCall","src":"21439:9:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21432:6:25"},"nodeType":"YulFunctionCall","src":"21432:17:25"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21454:1:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21461:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"21529:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"21457:3:25"},"nodeType":"YulFunctionCall","src":"21457:74:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21451:2:25"},"nodeType":"YulFunctionCall","src":"21451:81:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21428:3:25"},"nodeType":"YulFunctionCall","src":"21428:105:25"},"nodeType":"YulIf","src":"21425:131:25"},{"nodeType":"YulAssignment","src":"21566:20:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21581:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"21584:1:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"21577:3:25"},"nodeType":"YulFunctionCall","src":"21577:9:25"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"21566:7:25"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21275:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"21278:1:25","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"21284:7:25","type":""}],"src":"21244:348:25"},{"body":{"nodeType":"YulBlock","src":"21626:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21643:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21646:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21636:6:25"},"nodeType":"YulFunctionCall","src":"21636:88:25"},"nodeType":"YulExpressionStatement","src":"21636:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21740:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21743:4:25","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21733:6:25"},"nodeType":"YulFunctionCall","src":"21733:15:25"},"nodeType":"YulExpressionStatement","src":"21733:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21764:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21767:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21757:6:25"},"nodeType":"YulFunctionCall","src":"21757:15:25"},"nodeType":"YulExpressionStatement","src":"21757:15:25"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"21598:180:25"},{"body":{"nodeType":"YulBlock","src":"21826:143:25","statements":[{"nodeType":"YulAssignment","src":"21836:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21859:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21841:17:25"},"nodeType":"YulFunctionCall","src":"21841:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"21836:1:25"}]},{"nodeType":"YulAssignment","src":"21870:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21893:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21875:17:25"},"nodeType":"YulFunctionCall","src":"21875:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"21870:1:25"}]},{"body":{"nodeType":"YulBlock","src":"21917:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"21919:16:25"},"nodeType":"YulFunctionCall","src":"21919:18:25"},"nodeType":"YulExpressionStatement","src":"21919:18:25"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21914:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21907:6:25"},"nodeType":"YulFunctionCall","src":"21907:9:25"},"nodeType":"YulIf","src":"21904:35:25"},{"nodeType":"YulAssignment","src":"21949:14:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21958:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"21961:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"21954:3:25"},"nodeType":"YulFunctionCall","src":"21954:9:25"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"21949:1:25"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21815:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"21818:1:25","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"21824:1:25","type":""}],"src":"21784:185:25"},{"body":{"nodeType":"YulBlock","src":"22020:149:25","statements":[{"nodeType":"YulAssignment","src":"22030:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22053:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22035:17:25"},"nodeType":"YulFunctionCall","src":"22035:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"22030:1:25"}]},{"nodeType":"YulAssignment","src":"22064:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22087:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22069:17:25"},"nodeType":"YulFunctionCall","src":"22069:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"22064:1:25"}]},{"nodeType":"YulAssignment","src":"22098:17:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22110:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"22113:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22106:3:25"},"nodeType":"YulFunctionCall","src":"22106:9:25"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"22098:4:25"}]},{"body":{"nodeType":"YulBlock","src":"22140:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22142:16:25"},"nodeType":"YulFunctionCall","src":"22142:18:25"},"nodeType":"YulExpressionStatement","src":"22142:18:25"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"22131:4:25"},{"name":"x","nodeType":"YulIdentifier","src":"22137:1:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22128:2:25"},"nodeType":"YulFunctionCall","src":"22128:11:25"},"nodeType":"YulIf","src":"22125:37:25"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22006:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"22009:1:25","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"22015:4:25","type":""}],"src":"21975:194:25"},{"body":{"nodeType":"YulBlock","src":"22219:147:25","statements":[{"nodeType":"YulAssignment","src":"22229:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22252:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22234:17:25"},"nodeType":"YulFunctionCall","src":"22234:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"22229:1:25"}]},{"nodeType":"YulAssignment","src":"22263:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22286:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22268:17:25"},"nodeType":"YulFunctionCall","src":"22268:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"22263:1:25"}]},{"nodeType":"YulAssignment","src":"22297:16:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22308:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"22311:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22304:3:25"},"nodeType":"YulFunctionCall","src":"22304:9:25"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"22297:3:25"}]},{"body":{"nodeType":"YulBlock","src":"22337:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22339:16:25"},"nodeType":"YulFunctionCall","src":"22339:18:25"},"nodeType":"YulExpressionStatement","src":"22339:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22329:1:25"},{"name":"sum","nodeType":"YulIdentifier","src":"22332:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22326:2:25"},"nodeType":"YulFunctionCall","src":"22326:10:25"},"nodeType":"YulIf","src":"22323:36:25"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22206:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"22209:1:25","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"22215:3:25","type":""}],"src":"22175:191:25"},{"body":{"nodeType":"YulBlock","src":"22400:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22417:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22420:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22410:6:25"},"nodeType":"YulFunctionCall","src":"22410:88:25"},"nodeType":"YulExpressionStatement","src":"22410:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22514:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22517:4:25","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22507:6:25"},"nodeType":"YulFunctionCall","src":"22507:15:25"},"nodeType":"YulExpressionStatement","src":"22507:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22538:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22541:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22531:6:25"},"nodeType":"YulFunctionCall","src":"22531:15:25"},"nodeType":"YulExpressionStatement","src":"22531:15:25"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"22372:180:25"},{"body":{"nodeType":"YulBlock","src":"22601:190:25","statements":[{"nodeType":"YulAssignment","src":"22611:33:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22638:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22620:17:25"},"nodeType":"YulFunctionCall","src":"22620:24:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22611:5:25"}]},{"body":{"nodeType":"YulBlock","src":"22734:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22736:16:25"},"nodeType":"YulFunctionCall","src":"22736:18:25"},"nodeType":"YulExpressionStatement","src":"22736:18:25"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22659:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"22666:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22656:2:25"},"nodeType":"YulFunctionCall","src":"22656:77:25"},"nodeType":"YulIf","src":"22653:103:25"},{"nodeType":"YulAssignment","src":"22765:20:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22776:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"22783:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22772:3:25"},"nodeType":"YulFunctionCall","src":"22772:13:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"22765:3:25"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22587:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"22597:3:25","type":""}],"src":"22558:233:25"},{"body":{"nodeType":"YulBlock","src":"22908:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22925:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"22930:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22918:6:25"},"nodeType":"YulFunctionCall","src":"22918:19:25"},"nodeType":"YulExpressionStatement","src":"22918:19:25"},{"nodeType":"YulAssignment","src":"22946:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22965:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"22970:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22961:3:25"},"nodeType":"YulFunctionCall","src":"22961:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"22946:11:25"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22880:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"22885:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"22896:11:25","type":""}],"src":"22797:184:25"},{"body":{"nodeType":"YulBlock","src":"23061:28:25","statements":[{"nodeType":"YulAssignment","src":"23071:11:25","value":{"name":"ptr","nodeType":"YulIdentifier","src":"23079:3:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"23071:4:25"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"23048:3:25","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"23056:4:25","type":""}],"src":"22987:102:25"},{"body":{"nodeType":"YulBlock","src":"23150:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23167:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23190:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"23172:17:25"},"nodeType":"YulFunctionCall","src":"23172:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23160:6:25"},"nodeType":"YulFunctionCall","src":"23160:37:25"},"nodeType":"YulExpressionStatement","src":"23160:37:25"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23138:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23145:3:25","type":""}],"src":"23095:108:25"},{"body":{"nodeType":"YulBlock","src":"23289:99:25","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23333:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"23341:3:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"23299:33:25"},"nodeType":"YulFunctionCall","src":"23299:46:25"},"nodeType":"YulExpressionStatement","src":"23299:46:25"},{"nodeType":"YulAssignment","src":"23354:28:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23372:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"23377:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23368:3:25"},"nodeType":"YulFunctionCall","src":"23368:14:25"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"23354:10:25"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"23262:6:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23270:3:25","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"23278:10:25","type":""}],"src":"23209:179:25"},{"body":{"nodeType":"YulBlock","src":"23452:64:25","statements":[{"nodeType":"YulAssignment","src":"23462:48:25","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"23492:3:25"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"23501:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"23506:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23497:3:25"},"nodeType":"YulFunctionCall","src":"23497:12:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"23471:20:25"},"nodeType":"YulFunctionCall","src":"23471:39:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23462:5:25"}]}]},"name":"calldata_access_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"baseRef","nodeType":"YulTypedName","src":"23429:7:25","type":""},{"name":"ptr","nodeType":"YulTypedName","src":"23438:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"23446:5:25","type":""}],"src":"23394:122:25"},{"body":{"nodeType":"YulBlock","src":"23599:38:25","statements":[{"nodeType":"YulAssignment","src":"23609:22:25","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"23621:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"23626:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23617:3:25"},"nodeType":"YulFunctionCall","src":"23617:14:25"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"23609:4:25"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"23586:3:25","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"23594:4:25","type":""}],"src":"23522:115:25"},{"body":{"nodeType":"YulBlock","src":"23807:565:25","statements":[{"nodeType":"YulAssignment","src":"23818:93:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23899:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"23904:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23825:73:25"},"nodeType":"YulFunctionCall","src":"23825:86:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23818:3:25"}]},{"nodeType":"YulVariableDeclaration","src":"23920:73:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23987:5:25"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"23935:51:25"},"nodeType":"YulFunctionCall","src":"23935:58:25"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"23924:7:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"24002:21:25","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"24016:7:25"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"24006:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"24092:255:25","statements":[{"nodeType":"YulVariableDeclaration","src":"24106:63:25","value":{"arguments":[{"name":"baseRef","nodeType":"YulIdentifier","src":"24153:7:25"},{"name":"srcPtr","nodeType":"YulIdentifier","src":"24162:6:25"}],"functionName":{"name":"calldata_access_t_address","nodeType":"YulIdentifier","src":"24127:25:25"},"nodeType":"YulFunctionCall","src":"24127:42:25"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"24110:13:25","type":""}]},{"nodeType":"YulAssignment","src":"24182:70:25","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"24233:13:25"},{"name":"pos","nodeType":"YulIdentifier","src":"24248:3:25"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"24189:43:25"},"nodeType":"YulFunctionCall","src":"24189:63:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24182:3:25"}]},{"nodeType":"YulAssignment","src":"24265:72:25","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"24330:6:25"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"24275:54:25"},"nodeType":"YulFunctionCall","src":"24275:62:25"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"24265:6:25"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"24054:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"24057:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"24051:2:25"},"nodeType":"YulFunctionCall","src":"24051:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"24065:18:25","statements":[{"nodeType":"YulAssignment","src":"24067:14:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"24076:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"24079:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24072:3:25"},"nodeType":"YulFunctionCall","src":"24072:9:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"24067:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"24036:14:25","statements":[{"nodeType":"YulVariableDeclaration","src":"24038:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"24047:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"24042:1:25","type":""}]}]},"src":"24032:315:25"},{"nodeType":"YulAssignment","src":"24356:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"24363:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24356:3:25"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_calldata_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23778:5:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"23785:6:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23793:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23802:3:25","type":""}],"src":"23673:699:25"},{"body":{"nodeType":"YulBlock","src":"24536:235:25","statements":[{"nodeType":"YulAssignment","src":"24546:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24558:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"24569:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24554:3:25"},"nodeType":"YulFunctionCall","src":"24554:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24546:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24593:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"24604:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24589:3:25"},"nodeType":"YulFunctionCall","src":"24589:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24612:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"24618:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24608:3:25"},"nodeType":"YulFunctionCall","src":"24608:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24582:6:25"},"nodeType":"YulFunctionCall","src":"24582:47:25"},"nodeType":"YulExpressionStatement","src":"24582:47:25"},{"nodeType":"YulAssignment","src":"24638:126:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24742:6:25"},{"name":"value1","nodeType":"YulIdentifier","src":"24750:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"24759:4:25"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_calldata_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24646:95:25"},"nodeType":"YulFunctionCall","src":"24646:118:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24638:4:25"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24500:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24512:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24520:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24531:4:25","type":""}],"src":"24378:393:25"},{"body":{"nodeType":"YulBlock","src":"24828:51:25","statements":[{"nodeType":"YulAssignment","src":"24838:34:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24863:1:25","type":"","value":"1"},{"name":"value","nodeType":"YulIdentifier","src":"24866:5:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"24859:3:25"},"nodeType":"YulFunctionCall","src":"24859:13:25"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"24838:8:25"}]}]},"name":"shift_right_1_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24809:5:25","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"24819:8:25","type":""}],"src":"24777:102:25"},{"body":{"nodeType":"YulBlock","src":"24958:775:25","statements":[{"nodeType":"YulAssignment","src":"24968:15:25","value":{"name":"_power","nodeType":"YulIdentifier","src":"24977:6:25"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"24968:5:25"}]},{"nodeType":"YulAssignment","src":"24992:14:25","value":{"name":"_base","nodeType":"YulIdentifier","src":"25001:5:25"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"24992:4:25"}]},{"body":{"nodeType":"YulBlock","src":"25050:677:25","statements":[{"body":{"nodeType":"YulBlock","src":"25138:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"25140:16:25"},"nodeType":"YulFunctionCall","src":"25140:18:25"},"nodeType":"YulExpressionStatement","src":"25140:18:25"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"25116:4:25"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"25126:3:25"},{"name":"base","nodeType":"YulIdentifier","src":"25131:4:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"25122:3:25"},"nodeType":"YulFunctionCall","src":"25122:14:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25113:2:25"},"nodeType":"YulFunctionCall","src":"25113:24:25"},"nodeType":"YulIf","src":"25110:50:25"},{"body":{"nodeType":"YulBlock","src":"25205:419:25","statements":[{"nodeType":"YulAssignment","src":"25585:25:25","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"25598:5:25"},{"name":"base","nodeType":"YulIdentifier","src":"25605:4:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"25594:3:25"},"nodeType":"YulFunctionCall","src":"25594:16:25"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"25585:5:25"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"25180:8:25"},{"kind":"number","nodeType":"YulLiteral","src":"25190:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25176:3:25"},"nodeType":"YulFunctionCall","src":"25176:16:25"},"nodeType":"YulIf","src":"25173:451:25"},{"nodeType":"YulAssignment","src":"25637:23:25","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"25649:4:25"},{"name":"base","nodeType":"YulIdentifier","src":"25655:4:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"25645:3:25"},"nodeType":"YulFunctionCall","src":"25645:15:25"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"25637:4:25"}]},{"nodeType":"YulAssignment","src":"25673:44:25","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"25708:8:25"}],"functionName":{"name":"shift_right_1_unsigned","nodeType":"YulIdentifier","src":"25685:22:25"},"nodeType":"YulFunctionCall","src":"25685:32:25"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"25673:8:25"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"25026:8:25"},{"kind":"number","nodeType":"YulLiteral","src":"25036:1:25","type":"","value":"1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25023:2:25"},"nodeType":"YulFunctionCall","src":"25023:15:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"25039:2:25","statements":[]},"pre":{"nodeType":"YulBlock","src":"25019:3:25","statements":[]},"src":"25015:712:25"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nodeType":"YulTypedName","src":"24913:6:25","type":""},{"name":"_base","nodeType":"YulTypedName","src":"24921:5:25","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"24928:8:25","type":""},{"name":"max","nodeType":"YulTypedName","src":"24938:3:25","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"24946:5:25","type":""},{"name":"base","nodeType":"YulTypedName","src":"24953:4:25","type":""}],"src":"24885:848:25"},{"body":{"nodeType":"YulBlock","src":"25799:1013:25","statements":[{"body":{"nodeType":"YulBlock","src":"25994:20:25","statements":[{"nodeType":"YulAssignment","src":"25996:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"26005:1:25","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"25996:5:25"}]},{"nodeType":"YulLeave","src":"26007:5:25"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"25984:8:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25977:6:25"},"nodeType":"YulFunctionCall","src":"25977:16:25"},"nodeType":"YulIf","src":"25974:40:25"},{"body":{"nodeType":"YulBlock","src":"26039:20:25","statements":[{"nodeType":"YulAssignment","src":"26041:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"26050:1:25","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"26041:5:25"}]},{"nodeType":"YulLeave","src":"26052:5:25"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"26033:4:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26026:6:25"},"nodeType":"YulFunctionCall","src":"26026:12:25"},"nodeType":"YulIf","src":"26023:36:25"},{"cases":[{"body":{"nodeType":"YulBlock","src":"26169:20:25","statements":[{"nodeType":"YulAssignment","src":"26171:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"26180:1:25","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"26171:5:25"}]},{"nodeType":"YulLeave","src":"26182:5:25"}]},"nodeType":"YulCase","src":"26162:27:25","value":{"kind":"number","nodeType":"YulLiteral","src":"26167:1:25","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"26213:176:25","statements":[{"body":{"nodeType":"YulBlock","src":"26248:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"26250:16:25"},"nodeType":"YulFunctionCall","src":"26250:18:25"},"nodeType":"YulExpressionStatement","src":"26250:18:25"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"26233:8:25"},{"kind":"number","nodeType":"YulLiteral","src":"26243:3:25","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26230:2:25"},"nodeType":"YulFunctionCall","src":"26230:17:25"},"nodeType":"YulIf","src":"26227:43:25"},{"nodeType":"YulAssignment","src":"26283:25:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26296:1:25","type":"","value":"2"},{"name":"exponent","nodeType":"YulIdentifier","src":"26299:8:25"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"26292:3:25"},"nodeType":"YulFunctionCall","src":"26292:16:25"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"26283:5:25"}]},{"body":{"nodeType":"YulBlock","src":"26339:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"26341:16:25"},"nodeType":"YulFunctionCall","src":"26341:18:25"},"nodeType":"YulExpressionStatement","src":"26341:18:25"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"26327:5:25"},{"name":"max","nodeType":"YulIdentifier","src":"26334:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26324:2:25"},"nodeType":"YulFunctionCall","src":"26324:14:25"},"nodeType":"YulIf","src":"26321:40:25"},{"nodeType":"YulLeave","src":"26374:5:25"}]},"nodeType":"YulCase","src":"26198:191:25","value":{"kind":"number","nodeType":"YulLiteral","src":"26203:1:25","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"26119:4:25"},"nodeType":"YulSwitch","src":"26112:277:25"},{"body":{"nodeType":"YulBlock","src":"26521:123:25","statements":[{"nodeType":"YulAssignment","src":"26535:28:25","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"26548:4:25"},{"name":"exponent","nodeType":"YulIdentifier","src":"26554:8:25"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"26544:3:25"},"nodeType":"YulFunctionCall","src":"26544:19:25"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"26535:5:25"}]},{"body":{"nodeType":"YulBlock","src":"26594:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"26596:16:25"},"nodeType":"YulFunctionCall","src":"26596:18:25"},"nodeType":"YulExpressionStatement","src":"26596:18:25"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"26582:5:25"},{"name":"max","nodeType":"YulIdentifier","src":"26589:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26579:2:25"},"nodeType":"YulFunctionCall","src":"26579:14:25"},"nodeType":"YulIf","src":"26576:40:25"},{"nodeType":"YulLeave","src":"26629:5:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"26424:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"26430:2:25","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"26421:2:25"},"nodeType":"YulFunctionCall","src":"26421:12:25"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"26438:8:25"},{"kind":"number","nodeType":"YulLiteral","src":"26448:2:25","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"26435:2:25"},"nodeType":"YulFunctionCall","src":"26435:16:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26417:3:25"},"nodeType":"YulFunctionCall","src":"26417:35:25"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"26473:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"26479:3:25","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"26470:2:25"},"nodeType":"YulFunctionCall","src":"26470:13:25"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"26488:8:25"},{"kind":"number","nodeType":"YulLiteral","src":"26498:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"26485:2:25"},"nodeType":"YulFunctionCall","src":"26485:16:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26466:3:25"},"nodeType":"YulFunctionCall","src":"26466:36:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"26401:2:25"},"nodeType":"YulFunctionCall","src":"26401:111:25"},"nodeType":"YulIf","src":"26398:246:25"},{"nodeType":"YulAssignment","src":"26654:57:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26688:1:25","type":"","value":"1"},{"name":"base","nodeType":"YulIdentifier","src":"26691:4:25"},{"name":"exponent","nodeType":"YulIdentifier","src":"26697:8:25"},{"name":"max","nodeType":"YulIdentifier","src":"26707:3:25"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"26669:18:25"},"nodeType":"YulFunctionCall","src":"26669:42:25"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"26654:5:25"},{"name":"base","nodeType":"YulIdentifier","src":"26661:4:25"}]},{"body":{"nodeType":"YulBlock","src":"26750:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"26752:16:25"},"nodeType":"YulFunctionCall","src":"26752:18:25"},"nodeType":"YulExpressionStatement","src":"26752:18:25"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"26727:5:25"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"26738:3:25"},{"name":"base","nodeType":"YulIdentifier","src":"26743:4:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"26734:3:25"},"nodeType":"YulFunctionCall","src":"26734:14:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26724:2:25"},"nodeType":"YulFunctionCall","src":"26724:25:25"},"nodeType":"YulIf","src":"26721:51:25"},{"nodeType":"YulAssignment","src":"26781:25:25","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"26794:5:25"},{"name":"base","nodeType":"YulIdentifier","src":"26801:4:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"26790:3:25"},"nodeType":"YulFunctionCall","src":"26790:16:25"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"26781:5:25"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"25769:4:25","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"25775:8:25","type":""},{"name":"max","nodeType":"YulTypedName","src":"25785:3:25","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"25793:5:25","type":""}],"src":"25739:1073:25"},{"body":{"nodeType":"YulBlock","src":"26884:219:25","statements":[{"nodeType":"YulAssignment","src":"26894:31:25","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"26920:4:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26902:17:25"},"nodeType":"YulFunctionCall","src":"26902:23:25"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"26894:4:25"}]},{"nodeType":"YulAssignment","src":"26934:39:25","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"26964:8:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26946:17:25"},"nodeType":"YulFunctionCall","src":"26946:27:25"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"26934:8:25"}]},{"nodeType":"YulAssignment","src":"26983:113:25","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"27013:4:25"},{"name":"exponent","nodeType":"YulIdentifier","src":"27019:8:25"},{"kind":"number","nodeType":"YulLiteral","src":"27029:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"26992:20:25"},"nodeType":"YulFunctionCall","src":"26992:104:25"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"26983:5:25"}]}]},"name":"checked_exp_t_uint256_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"26859:4:25","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"26865:8:25","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"26878:5:25","type":""}],"src":"26818:285:25"},{"body":{"nodeType":"YulBlock","src":"27137:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27154:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27157:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27147:6:25"},"nodeType":"YulFunctionCall","src":"27147:88:25"},"nodeType":"YulExpressionStatement","src":"27147:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27251:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27254:4:25","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27244:6:25"},"nodeType":"YulFunctionCall","src":"27244:15:25"},"nodeType":"YulExpressionStatement","src":"27244:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27275:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27278:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27268:6:25"},"nodeType":"YulFunctionCall","src":"27268:15:25"},"nodeType":"YulExpressionStatement","src":"27268:15:25"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"27109:180:25"},{"body":{"nodeType":"YulBlock","src":"27348:32:25","statements":[{"nodeType":"YulAssignment","src":"27358:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"27369:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"27358:7:25"}]}]},"name":"cleanup_t_rational_0_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27330:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"27340:7:25","type":""}],"src":"27295:85:25"},{"body":{"nodeType":"YulBlock","src":"27454:90:25","statements":[{"nodeType":"YulAssignment","src":"27464:74:25","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27530:5:25"}],"functionName":{"name":"cleanup_t_rational_0_by_1","nodeType":"YulIdentifier","src":"27504:25:25"},"nodeType":"YulFunctionCall","src":"27504:32:25"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"27495:8:25"},"nodeType":"YulFunctionCall","src":"27495:42:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27477:17:25"},"nodeType":"YulFunctionCall","src":"27477:61:25"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"27464:9:25"}]}]},"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27434:5:25","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"27444:9:25","type":""}],"src":"27386:158:25"},{"body":{"nodeType":"YulBlock","src":"27623:74:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27640:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27684:5:25"}],"functionName":{"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulIdentifier","src":"27645:38:25"},"nodeType":"YulFunctionCall","src":"27645:45:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27633:6:25"},"nodeType":"YulFunctionCall","src":"27633:58:25"},"nodeType":"YulExpressionStatement","src":"27633:58:25"}]},"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27611:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"27618:3:25","type":""}],"src":"27550:147:25"},{"body":{"nodeType":"YulBlock","src":"27809:132:25","statements":[{"nodeType":"YulAssignment","src":"27819:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27831:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"27842:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27827:3:25"},"nodeType":"YulFunctionCall","src":"27827:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27819:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27907:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27920:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"27931:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27916:3:25"},"nodeType":"YulFunctionCall","src":"27916:17:25"}],"functionName":{"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27855:51:25"},"nodeType":"YulFunctionCall","src":"27855:79:25"},"nodeType":"YulExpressionStatement","src":"27855:79:25"}]},"name":"abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27781:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27793:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27804:4:25","type":""}],"src":"27703:238:25"},{"body":{"nodeType":"YulBlock","src":"28053:75:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28075:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"28083:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28071:3:25"},"nodeType":"YulFunctionCall","src":"28071:14:25"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"28087:33:25","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28064:6:25"},"nodeType":"YulFunctionCall","src":"28064:57:25"},"nodeType":"YulExpressionStatement","src":"28064:57:25"}]},"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28045:6:25","type":""}],"src":"27947:181:25"},{"body":{"nodeType":"YulBlock","src":"28280:220:25","statements":[{"nodeType":"YulAssignment","src":"28290:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28356:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"28361:2:25","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28297:58:25"},"nodeType":"YulFunctionCall","src":"28297:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28290:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28462:3:25"}],"functionName":{"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulIdentifier","src":"28373:88:25"},"nodeType":"YulFunctionCall","src":"28373:93:25"},"nodeType":"YulExpressionStatement","src":"28373:93:25"},{"nodeType":"YulAssignment","src":"28475:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28486:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"28491:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28482:3:25"},"nodeType":"YulFunctionCall","src":"28482:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28475:3:25"}]}]},"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28268:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28276:3:25","type":""}],"src":"28134:366:25"},{"body":{"nodeType":"YulBlock","src":"28677:248:25","statements":[{"nodeType":"YulAssignment","src":"28687:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28699:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"28710:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28695:3:25"},"nodeType":"YulFunctionCall","src":"28695:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28687:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28734:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"28745:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28730:3:25"},"nodeType":"YulFunctionCall","src":"28730:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28753:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"28759:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28749:3:25"},"nodeType":"YulFunctionCall","src":"28749:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28723:6:25"},"nodeType":"YulFunctionCall","src":"28723:47:25"},"nodeType":"YulExpressionStatement","src":"28723:47:25"},{"nodeType":"YulAssignment","src":"28779:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28913:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28787:124:25"},"nodeType":"YulFunctionCall","src":"28787:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28779:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28657:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28672:4:25","type":""}],"src":"28506:419:25"},{"body":{"nodeType":"YulBlock","src":"28965:142:25","statements":[{"nodeType":"YulAssignment","src":"28975:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28998:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28980:17:25"},"nodeType":"YulFunctionCall","src":"28980:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"28975:1:25"}]},{"nodeType":"YulAssignment","src":"29009:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"29032:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29014:17:25"},"nodeType":"YulFunctionCall","src":"29014:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"29009:1:25"}]},{"body":{"nodeType":"YulBlock","src":"29056:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"29058:16:25"},"nodeType":"YulFunctionCall","src":"29058:18:25"},"nodeType":"YulExpressionStatement","src":"29058:18:25"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"29053:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29046:6:25"},"nodeType":"YulFunctionCall","src":"29046:9:25"},"nodeType":"YulIf","src":"29043:35:25"},{"nodeType":"YulAssignment","src":"29087:14:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29096:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"29099:1:25"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"29092:3:25"},"nodeType":"YulFunctionCall","src":"29092:9:25"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"29087:1:25"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"28954:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"28957:1:25","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"28963:1:25","type":""}],"src":"28931:176:25"},{"body":{"nodeType":"YulBlock","src":"29233:200:25","statements":[{"nodeType":"YulAssignment","src":"29243:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29255:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"29266:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29251:3:25"},"nodeType":"YulFunctionCall","src":"29251:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29243:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29323:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29336:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"29347:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29332:3:25"},"nodeType":"YulFunctionCall","src":"29332:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"29279:43:25"},"nodeType":"YulFunctionCall","src":"29279:71:25"},"nodeType":"YulExpressionStatement","src":"29279:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"29398:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29411:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"29422:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29407:3:25"},"nodeType":"YulFunctionCall","src":"29407:18:25"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"29360:37:25"},"nodeType":"YulFunctionCall","src":"29360:66:25"},"nodeType":"YulExpressionStatement","src":"29360:66:25"}]},"name":"abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29197:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29209:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29217:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29228:4:25","type":""}],"src":"29113:320:25"},{"body":{"nodeType":"YulBlock","src":"29513:40:25","statements":[{"nodeType":"YulAssignment","src":"29524:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29540:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29534:5:25"},"nodeType":"YulFunctionCall","src":"29534:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"29524:6:25"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29496:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"29506:6:25","type":""}],"src":"29439:114:25"},{"body":{"nodeType":"YulBlock","src":"29631:60:25","statements":[{"nodeType":"YulAssignment","src":"29641:11:25","value":{"name":"ptr","nodeType":"YulIdentifier","src":"29649:3:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"29641:4:25"}]},{"nodeType":"YulAssignment","src":"29662:22:25","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"29674:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"29679:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29670:3:25"},"nodeType":"YulFunctionCall","src":"29670:14:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"29662:4:25"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"29618:3:25","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"29626:4:25","type":""}],"src":"29559:132:25"},{"body":{"nodeType":"YulBlock","src":"29772:38:25","statements":[{"nodeType":"YulAssignment","src":"29782:22:25","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"29794:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"29799:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29790:3:25"},"nodeType":"YulFunctionCall","src":"29790:14:25"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"29782:4:25"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"29759:3:25","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"29767:4:25","type":""}],"src":"29697:113:25"},{"body":{"nodeType":"YulBlock","src":"29970:608:25","statements":[{"nodeType":"YulVariableDeclaration","src":"29980:68:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30042:5:25"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"29994:47:25"},"nodeType":"YulFunctionCall","src":"29994:54:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"29984:6:25","type":""}]},{"nodeType":"YulAssignment","src":"30057:93:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30138:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"30143:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30064:73:25"},"nodeType":"YulFunctionCall","src":"30064:86:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30057:3:25"}]},{"nodeType":"YulVariableDeclaration","src":"30159:71:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30224:5:25"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"30174:49:25"},"nodeType":"YulFunctionCall","src":"30174:56:25"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"30163:7:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"30239:21:25","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"30253:7:25"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"30243:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"30329:224:25","statements":[{"nodeType":"YulVariableDeclaration","src":"30343:34:25","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"30370:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30364:5:25"},"nodeType":"YulFunctionCall","src":"30364:13:25"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"30347:13:25","type":""}]},{"nodeType":"YulAssignment","src":"30390:70:25","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"30441:13:25"},{"name":"pos","nodeType":"YulIdentifier","src":"30456:3:25"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"30397:43:25"},"nodeType":"YulFunctionCall","src":"30397:63:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30390:3:25"}]},{"nodeType":"YulAssignment","src":"30473:70:25","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"30536:6:25"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"30483:52:25"},"nodeType":"YulFunctionCall","src":"30483:60:25"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"30473:6:25"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"30291:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"30294:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30288:2:25"},"nodeType":"YulFunctionCall","src":"30288:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"30302:18:25","statements":[{"nodeType":"YulAssignment","src":"30304:14:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"30313:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"30316:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30309:3:25"},"nodeType":"YulFunctionCall","src":"30309:9:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"30304:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"30273:14:25","statements":[{"nodeType":"YulVariableDeclaration","src":"30275:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"30284:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"30279:1:25","type":""}]}]},"src":"30269:284:25"},{"nodeType":"YulAssignment","src":"30562:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"30569:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30562:3:25"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29949:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"29956:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29965:3:25","type":""}],"src":"29846:732:25"},{"body":{"nodeType":"YulBlock","src":"30788:389:25","statements":[{"nodeType":"YulAssignment","src":"30798:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30810:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"30821:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30806:3:25"},"nodeType":"YulFunctionCall","src":"30806:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30798:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30878:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30891:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"30902:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30887:3:25"},"nodeType":"YulFunctionCall","src":"30887:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"30834:43:25"},"nodeType":"YulFunctionCall","src":"30834:71:25"},"nodeType":"YulExpressionStatement","src":"30834:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"30959:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30972:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"30983:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30968:3:25"},"nodeType":"YulFunctionCall","src":"30968:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"30915:43:25"},"nodeType":"YulFunctionCall","src":"30915:72:25"},"nodeType":"YulExpressionStatement","src":"30915:72:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31008:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"31019:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31004:3:25"},"nodeType":"YulFunctionCall","src":"31004:18:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31028:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"31034:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31024:3:25"},"nodeType":"YulFunctionCall","src":"31024:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30997:6:25"},"nodeType":"YulFunctionCall","src":"30997:48:25"},"nodeType":"YulExpressionStatement","src":"30997:48:25"},{"nodeType":"YulAssignment","src":"31054:116:25","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"31156:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"31165:4:25"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31062:93:25"},"nodeType":"YulFunctionCall","src":"31062:108:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31054:4:25"}]}]},"name":"abi_encode_tuple_t_address_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_address_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30744:9:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"30756:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30764:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30772:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30783:4:25","type":""}],"src":"30584:593:25"},{"body":{"nodeType":"YulBlock","src":"31337:288:25","statements":[{"nodeType":"YulAssignment","src":"31347:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31359:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"31370:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31355:3:25"},"nodeType":"YulFunctionCall","src":"31355:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31347:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31427:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31440:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"31451:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31436:3:25"},"nodeType":"YulFunctionCall","src":"31436:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"31383:43:25"},"nodeType":"YulFunctionCall","src":"31383:71:25"},"nodeType":"YulExpressionStatement","src":"31383:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"31508:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31521:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"31532:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31517:3:25"},"nodeType":"YulFunctionCall","src":"31517:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"31464:43:25"},"nodeType":"YulFunctionCall","src":"31464:72:25"},"nodeType":"YulExpressionStatement","src":"31464:72:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"31590:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31603:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"31614:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31599:3:25"},"nodeType":"YulFunctionCall","src":"31599:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31546:43:25"},"nodeType":"YulFunctionCall","src":"31546:72:25"},"nodeType":"YulExpressionStatement","src":"31546:72:25"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31293:9:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"31305:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31313:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31321:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31332:4:25","type":""}],"src":"31183:442:25"},{"body":{"nodeType":"YulBlock","src":"31691:77:25","statements":[{"nodeType":"YulAssignment","src":"31701:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"31716:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"31710:5:25"},"nodeType":"YulFunctionCall","src":"31710:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"31701:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31756:5:25"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"31732:23:25"},"nodeType":"YulFunctionCall","src":"31732:30:25"},"nodeType":"YulExpressionStatement","src":"31732:30:25"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"31669:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"31677:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"31685:5:25","type":""}],"src":"31631:137:25"},{"body":{"nodeType":"YulBlock","src":"31848:271:25","statements":[{"body":{"nodeType":"YulBlock","src":"31894:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"31896:77:25"},"nodeType":"YulFunctionCall","src":"31896:79:25"},"nodeType":"YulExpressionStatement","src":"31896:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"31869:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"31878:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31865:3:25"},"nodeType":"YulFunctionCall","src":"31865:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"31890:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"31861:3:25"},"nodeType":"YulFunctionCall","src":"31861:32:25"},"nodeType":"YulIf","src":"31858:119:25"},{"nodeType":"YulBlock","src":"31987:125:25","statements":[{"nodeType":"YulVariableDeclaration","src":"32002:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"32016:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"32006:6:25","type":""}]},{"nodeType":"YulAssignment","src":"32031:71:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32074:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"32085:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32070:3:25"},"nodeType":"YulFunctionCall","src":"32070:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"32094:7:25"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"32041:28:25"},"nodeType":"YulFunctionCall","src":"32041:61:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"32031:6:25"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31818:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"31829:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"31841:6:25","type":""}],"src":"31774:345:25"},{"body":{"nodeType":"YulBlock","src":"32231:59:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32253:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"32261:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32249:3:25"},"nodeType":"YulFunctionCall","src":"32249:14:25"},{"hexValue":"7472616e73666572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"32265:17:25","type":"","value":"transfer failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32242:6:25"},"nodeType":"YulFunctionCall","src":"32242:41:25"},"nodeType":"YulExpressionStatement","src":"32242:41:25"}]},"name":"store_literal_in_memory_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32223:6:25","type":""}],"src":"32125:165:25"},{"body":{"nodeType":"YulBlock","src":"32442:220:25","statements":[{"nodeType":"YulAssignment","src":"32452:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32518:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"32523:2:25","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32459:58:25"},"nodeType":"YulFunctionCall","src":"32459:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32452:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32624:3:25"}],"functionName":{"name":"store_literal_in_memory_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b","nodeType":"YulIdentifier","src":"32535:88:25"},"nodeType":"YulFunctionCall","src":"32535:93:25"},"nodeType":"YulExpressionStatement","src":"32535:93:25"},{"nodeType":"YulAssignment","src":"32637:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32648:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"32653:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32644:3:25"},"nodeType":"YulFunctionCall","src":"32644:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32637:3:25"}]}]},"name":"abi_encode_t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32430:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32438:3:25","type":""}],"src":"32296:366:25"},{"body":{"nodeType":"YulBlock","src":"32839:248:25","statements":[{"nodeType":"YulAssignment","src":"32849:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32861:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"32872:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32857:3:25"},"nodeType":"YulFunctionCall","src":"32857:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32849:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32896:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"32907:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32892:3:25"},"nodeType":"YulFunctionCall","src":"32892:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32915:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"32921:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32911:3:25"},"nodeType":"YulFunctionCall","src":"32911:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32885:6:25"},"nodeType":"YulFunctionCall","src":"32885:47:25"},"nodeType":"YulExpressionStatement","src":"32885:47:25"},{"nodeType":"YulAssignment","src":"32941:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33075:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32949:124:25"},"nodeType":"YulFunctionCall","src":"32949:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32941:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32819:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32834:4:25","type":""}],"src":"32668:419:25"},{"body":{"nodeType":"YulBlock","src":"33219:206:25","statements":[{"nodeType":"YulAssignment","src":"33229:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33241:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"33252:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33237:3:25"},"nodeType":"YulFunctionCall","src":"33237:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33229:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33309:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33322:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"33333:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33318:3:25"},"nodeType":"YulFunctionCall","src":"33318:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"33265:43:25"},"nodeType":"YulFunctionCall","src":"33265:71:25"},"nodeType":"YulExpressionStatement","src":"33265:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"33390:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33403:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"33414:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33399:3:25"},"nodeType":"YulFunctionCall","src":"33399:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33346:43:25"},"nodeType":"YulFunctionCall","src":"33346:72:25"},"nodeType":"YulExpressionStatement","src":"33346:72:25"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33183:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33195:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33203:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33214:4:25","type":""}],"src":"33093:332:25"},{"body":{"nodeType":"YulBlock","src":"33557:206:25","statements":[{"nodeType":"YulAssignment","src":"33567:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33579:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"33590:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33575:3:25"},"nodeType":"YulFunctionCall","src":"33575:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33567:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33647:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33660:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"33671:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33656:3:25"},"nodeType":"YulFunctionCall","src":"33656:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33603:43:25"},"nodeType":"YulFunctionCall","src":"33603:71:25"},"nodeType":"YulExpressionStatement","src":"33603:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"33728:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33741:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"33752:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33737:3:25"},"nodeType":"YulFunctionCall","src":"33737:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"33684:43:25"},"nodeType":"YulFunctionCall","src":"33684:72:25"},"nodeType":"YulExpressionStatement","src":"33684:72:25"}]},"name":"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33521:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33533:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33541:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33552:4:25","type":""}],"src":"33431:332:25"},{"body":{"nodeType":"YulBlock","src":"34007:537:25","statements":[{"nodeType":"YulAssignment","src":"34017:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34029:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"34040:3:25","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34025:3:25"},"nodeType":"YulFunctionCall","src":"34025:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34017:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34098:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34111:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"34122:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34107:3:25"},"nodeType":"YulFunctionCall","src":"34107:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34054:43:25"},"nodeType":"YulFunctionCall","src":"34054:71:25"},"nodeType":"YulExpressionStatement","src":"34054:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"34179:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34192:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"34203:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34188:3:25"},"nodeType":"YulFunctionCall","src":"34188:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34135:43:25"},"nodeType":"YulFunctionCall","src":"34135:72:25"},"nodeType":"YulExpressionStatement","src":"34135:72:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"34261:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34274:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"34285:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34270:3:25"},"nodeType":"YulFunctionCall","src":"34270:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34217:43:25"},"nodeType":"YulFunctionCall","src":"34217:72:25"},"nodeType":"YulExpressionStatement","src":"34217:72:25"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"34343:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34356:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"34367:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34352:3:25"},"nodeType":"YulFunctionCall","src":"34352:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34299:43:25"},"nodeType":"YulFunctionCall","src":"34299:72:25"},"nodeType":"YulExpressionStatement","src":"34299:72:25"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"34425:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34438:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"34449:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34434:3:25"},"nodeType":"YulFunctionCall","src":"34434:19:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34381:43:25"},"nodeType":"YulFunctionCall","src":"34381:73:25"},"nodeType":"YulExpressionStatement","src":"34381:73:25"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"34508:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34521:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"34532:3:25","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34517:3:25"},"nodeType":"YulFunctionCall","src":"34517:19:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34464:43:25"},"nodeType":"YulFunctionCall","src":"34464:73:25"},"nodeType":"YulExpressionStatement","src":"34464:73:25"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33939:9:25","type":""},{"name":"value5","nodeType":"YulTypedName","src":"33951:6:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"33959:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"33967:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"33975:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33983:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33991:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34002:4:25","type":""}],"src":"33769:775:25"},{"body":{"nodeType":"YulBlock","src":"34788:537:25","statements":[{"nodeType":"YulAssignment","src":"34798:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34810:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"34821:3:25","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34806:3:25"},"nodeType":"YulFunctionCall","src":"34806:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34798:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34879:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34892:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"34903:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34888:3:25"},"nodeType":"YulFunctionCall","src":"34888:17:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"34835:43:25"},"nodeType":"YulFunctionCall","src":"34835:71:25"},"nodeType":"YulExpressionStatement","src":"34835:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"34960:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34973:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"34984:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34969:3:25"},"nodeType":"YulFunctionCall","src":"34969:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"34916:43:25"},"nodeType":"YulFunctionCall","src":"34916:72:25"},"nodeType":"YulExpressionStatement","src":"34916:72:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"35042:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35055:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"35066:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35051:3:25"},"nodeType":"YulFunctionCall","src":"35051:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"34998:43:25"},"nodeType":"YulFunctionCall","src":"34998:72:25"},"nodeType":"YulExpressionStatement","src":"34998:72:25"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"35124:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35137:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"35148:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35133:3:25"},"nodeType":"YulFunctionCall","src":"35133:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"35080:43:25"},"nodeType":"YulFunctionCall","src":"35080:72:25"},"nodeType":"YulExpressionStatement","src":"35080:72:25"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"35206:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35219:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"35230:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35215:3:25"},"nodeType":"YulFunctionCall","src":"35215:19:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"35162:43:25"},"nodeType":"YulFunctionCall","src":"35162:73:25"},"nodeType":"YulExpressionStatement","src":"35162:73:25"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"35289:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35302:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"35313:3:25","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35298:3:25"},"nodeType":"YulFunctionCall","src":"35298:19:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"35245:43:25"},"nodeType":"YulFunctionCall","src":"35245:73:25"},"nodeType":"YulExpressionStatement","src":"35245:73:25"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34720:9:25","type":""},{"name":"value5","nodeType":"YulTypedName","src":"34732:6:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"34740:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"34748:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"34756:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"34764:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"34772:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34783:4:25","type":""}],"src":"34550:775:25"},{"body":{"nodeType":"YulBlock","src":"35445:34:25","statements":[{"nodeType":"YulAssignment","src":"35455:18:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"35470:3:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"35455:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35417:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"35422:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"35433:11:25","type":""}],"src":"35331:148:25"},{"body":{"nodeType":"YulBlock","src":"35591:108:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35613:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"35621:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35609:3:25"},"nodeType":"YulFunctionCall","src":"35609:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"35625:66:25","type":"","value":"0x1901000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35602:6:25"},"nodeType":"YulFunctionCall","src":"35602:90:25"},"nodeType":"YulExpressionStatement","src":"35602:90:25"}]},"name":"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"35583:6:25","type":""}],"src":"35485:214:25"},{"body":{"nodeType":"YulBlock","src":"35869:236:25","statements":[{"nodeType":"YulAssignment","src":"35879:91:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35963:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"35968:1:25","type":"","value":"2"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"35886:76:25"},"nodeType":"YulFunctionCall","src":"35886:84:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35879:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36068:3:25"}],"functionName":{"name":"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","nodeType":"YulIdentifier","src":"35979:88:25"},"nodeType":"YulFunctionCall","src":"35979:93:25"},"nodeType":"YulExpressionStatement","src":"35979:93:25"},{"nodeType":"YulAssignment","src":"36081:18:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36092:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"36097:1:25","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36088:3:25"},"nodeType":"YulFunctionCall","src":"36088:11:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36081:3:25"}]}]},"name":"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35857:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35865:3:25","type":""}],"src":"35705:400:25"},{"body":{"nodeType":"YulBlock","src":"36158:32:25","statements":[{"nodeType":"YulAssignment","src":"36168:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"36179:5:25"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"36168:7:25"}]}]},"name":"leftAlign_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36140:5:25","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"36150:7:25","type":""}],"src":"36111:79:25"},{"body":{"nodeType":"YulBlock","src":"36279:74:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36296:3:25"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36339:5:25"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"36321:17:25"},"nodeType":"YulFunctionCall","src":"36321:24:25"}],"functionName":{"name":"leftAlign_t_bytes32","nodeType":"YulIdentifier","src":"36301:19:25"},"nodeType":"YulFunctionCall","src":"36301:45:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36289:6:25"},"nodeType":"YulFunctionCall","src":"36289:58:25"},"nodeType":"YulExpressionStatement","src":"36289:58:25"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36267:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"36274:3:25","type":""}],"src":"36196:157:25"},{"body":{"nodeType":"YulBlock","src":"36604:418:25","statements":[{"nodeType":"YulAssignment","src":"36615:155:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36766:3:25"}],"functionName":{"name":"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36622:142:25"},"nodeType":"YulFunctionCall","src":"36622:148:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36615:3:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36842:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"36851:3:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36780:61:25"},"nodeType":"YulFunctionCall","src":"36780:75:25"},"nodeType":"YulExpressionStatement","src":"36780:75:25"},{"nodeType":"YulAssignment","src":"36864:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36875:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"36880:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36871:3:25"},"nodeType":"YulFunctionCall","src":"36871:12:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36864:3:25"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"36955:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"36964:3:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36893:61:25"},"nodeType":"YulFunctionCall","src":"36893:75:25"},"nodeType":"YulExpressionStatement","src":"36893:75:25"},{"nodeType":"YulAssignment","src":"36977:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36988:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"36993:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36984:3:25"},"nodeType":"YulFunctionCall","src":"36984:12:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36977:3:25"}]},{"nodeType":"YulAssignment","src":"37006:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"37013:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37006:3:25"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36575:3:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"36581:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36589:6:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36600:3:25","type":""}],"src":"36359:663:25"},{"body":{"nodeType":"YulBlock","src":"37206:367:25","statements":[{"nodeType":"YulAssignment","src":"37216:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37228:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"37239:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37224:3:25"},"nodeType":"YulFunctionCall","src":"37224:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37216:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37297:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37310:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"37321:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37306:3:25"},"nodeType":"YulFunctionCall","src":"37306:17:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"37253:43:25"},"nodeType":"YulFunctionCall","src":"37253:71:25"},"nodeType":"YulExpressionStatement","src":"37253:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"37374:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37387:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"37398:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37383:3:25"},"nodeType":"YulFunctionCall","src":"37383:18:25"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"37334:39:25"},"nodeType":"YulFunctionCall","src":"37334:68:25"},"nodeType":"YulExpressionStatement","src":"37334:68:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"37456:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37469:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"37480:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37465:3:25"},"nodeType":"YulFunctionCall","src":"37465:18:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"37412:43:25"},"nodeType":"YulFunctionCall","src":"37412:72:25"},"nodeType":"YulExpressionStatement","src":"37412:72:25"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"37538:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37551:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"37562:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37547:3:25"},"nodeType":"YulFunctionCall","src":"37547:18:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"37494:43:25"},"nodeType":"YulFunctionCall","src":"37494:72:25"},"nodeType":"YulExpressionStatement","src":"37494:72:25"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37154:9:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"37166:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"37174:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"37182:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37190:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37201:4:25","type":""}],"src":"37028:545:25"},{"body":{"nodeType":"YulBlock","src":"37685:67:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37707:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"37715:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37703:3:25"},"nodeType":"YulFunctionCall","src":"37703:14:25"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"37719:25:25","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37696:6:25"},"nodeType":"YulFunctionCall","src":"37696:49:25"},"nodeType":"YulExpressionStatement","src":"37696:49:25"}]},"name":"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37677:6:25","type":""}],"src":"37579:173:25"},{"body":{"nodeType":"YulBlock","src":"37922:238:25","statements":[{"nodeType":"YulAssignment","src":"37932:92:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38016:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"38021:2:25","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"37939:76:25"},"nodeType":"YulFunctionCall","src":"37939:85:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37932:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38122:3:25"}],"functionName":{"name":"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","nodeType":"YulIdentifier","src":"38033:88:25"},"nodeType":"YulFunctionCall","src":"38033:93:25"},"nodeType":"YulExpressionStatement","src":"38033:93:25"},{"nodeType":"YulAssignment","src":"38135:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38146:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"38151:2:25","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38142:3:25"},"nodeType":"YulFunctionCall","src":"38142:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38135:3:25"}]}]},"name":"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37910:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37918:3:25","type":""}],"src":"37758:402:25"},{"body":{"nodeType":"YulBlock","src":"38276:280:25","statements":[{"nodeType":"YulVariableDeclaration","src":"38286:53:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38333:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"38300:32:25"},"nodeType":"YulFunctionCall","src":"38300:39:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"38290:6:25","type":""}]},{"nodeType":"YulAssignment","src":"38348:96:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38432:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"38437:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"38355:76:25"},"nodeType":"YulFunctionCall","src":"38355:89:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38348:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38492:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"38499:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38488:3:25"},"nodeType":"YulFunctionCall","src":"38488:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"38506:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"38511:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"38453:34:25"},"nodeType":"YulFunctionCall","src":"38453:65:25"},"nodeType":"YulExpressionStatement","src":"38453:65:25"},{"nodeType":"YulAssignment","src":"38527:23:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38538:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"38543:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38534:3:25"},"nodeType":"YulFunctionCall","src":"38534:16:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38527:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38257:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"38264:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38272:3:25","type":""}],"src":"38166:390:25"},{"body":{"nodeType":"YulBlock","src":"38668:61:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38690:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"38698:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38686:3:25"},"nodeType":"YulFunctionCall","src":"38686:14:25"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"38702:19:25","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38679:6:25"},"nodeType":"YulFunctionCall","src":"38679:43:25"},"nodeType":"YulExpressionStatement","src":"38679:43:25"}]},"name":"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38660:6:25","type":""}],"src":"38562:167:25"},{"body":{"nodeType":"YulBlock","src":"38899:238:25","statements":[{"nodeType":"YulAssignment","src":"38909:92:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38993:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"38998:2:25","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"38916:76:25"},"nodeType":"YulFunctionCall","src":"38916:85:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38909:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39099:3:25"}],"functionName":{"name":"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","nodeType":"YulIdentifier","src":"39010:88:25"},"nodeType":"YulFunctionCall","src":"39010:93:25"},"nodeType":"YulExpressionStatement","src":"39010:93:25"},{"nodeType":"YulAssignment","src":"39112:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39123:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"39128:2:25","type":"","value":"17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39119:3:25"},"nodeType":"YulFunctionCall","src":"39119:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39112:3:25"}]}]},"name":"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38887:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38895:3:25","type":""}],"src":"38735:402:25"},{"body":{"nodeType":"YulBlock","src":"39529:581:25","statements":[{"nodeType":"YulAssignment","src":"39540:155:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39691:3:25"}],"functionName":{"name":"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"39547:142:25"},"nodeType":"YulFunctionCall","src":"39547:148:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39540:3:25"}]},{"nodeType":"YulAssignment","src":"39705:102:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"39794:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"39803:3:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"39712:81:25"},"nodeType":"YulFunctionCall","src":"39712:95:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39705:3:25"}]},{"nodeType":"YulAssignment","src":"39817:155:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39968:3:25"}],"functionName":{"name":"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"39824:142:25"},"nodeType":"YulFunctionCall","src":"39824:148:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39817:3:25"}]},{"nodeType":"YulAssignment","src":"39982:102:25","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"40071:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"40080:3:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"39989:81:25"},"nodeType":"YulFunctionCall","src":"39989:95:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39982:3:25"}]},{"nodeType":"YulAssignment","src":"40094:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"40101:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40094:3:25"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39500:3:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"39506:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39514:6:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39525:3:25","type":""}],"src":"39143:967:25"},{"body":{"nodeType":"YulBlock","src":"40270:288:25","statements":[{"nodeType":"YulAssignment","src":"40280:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40292:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"40303:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40288:3:25"},"nodeType":"YulFunctionCall","src":"40288:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40280:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"40360:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40373:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"40384:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40369:3:25"},"nodeType":"YulFunctionCall","src":"40369:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"40316:43:25"},"nodeType":"YulFunctionCall","src":"40316:71:25"},"nodeType":"YulExpressionStatement","src":"40316:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"40441:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40454:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"40465:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40450:3:25"},"nodeType":"YulFunctionCall","src":"40450:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"40397:43:25"},"nodeType":"YulFunctionCall","src":"40397:72:25"},"nodeType":"YulExpressionStatement","src":"40397:72:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"40523:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40536:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"40547:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40532:3:25"},"nodeType":"YulFunctionCall","src":"40532:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"40479:43:25"},"nodeType":"YulFunctionCall","src":"40479:72:25"},"nodeType":"YulExpressionStatement","src":"40479:72:25"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_address__to_t_uint256_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40226:9:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"40238:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"40246:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"40254:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40265:4:25","type":""}],"src":"40116:442:25"},{"body":{"nodeType":"YulBlock","src":"40670:59:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40692:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"40700:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40688:3:25"},"nodeType":"YulFunctionCall","src":"40688:14:25"},{"hexValue":"617070726f76616c206661696c6564","kind":"string","nodeType":"YulLiteral","src":"40704:17:25","type":"","value":"approval failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40681:6:25"},"nodeType":"YulFunctionCall","src":"40681:41:25"},"nodeType":"YulExpressionStatement","src":"40681:41:25"}]},"name":"store_literal_in_memory_dc5bf56f7778a980bf68a168744f15fc09ca522217760da56d44aee44af65dd8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40662:6:25","type":""}],"src":"40564:165:25"},{"body":{"nodeType":"YulBlock","src":"40881:220:25","statements":[{"nodeType":"YulAssignment","src":"40891:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40957:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"40962:2:25","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40898:58:25"},"nodeType":"YulFunctionCall","src":"40898:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40891:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41063:3:25"}],"functionName":{"name":"store_literal_in_memory_dc5bf56f7778a980bf68a168744f15fc09ca522217760da56d44aee44af65dd8","nodeType":"YulIdentifier","src":"40974:88:25"},"nodeType":"YulFunctionCall","src":"40974:93:25"},"nodeType":"YulExpressionStatement","src":"40974:93:25"},{"nodeType":"YulAssignment","src":"41076:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41087:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"41092:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41083:3:25"},"nodeType":"YulFunctionCall","src":"41083:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41076:3:25"}]}]},"name":"abi_encode_t_stringliteral_dc5bf56f7778a980bf68a168744f15fc09ca522217760da56d44aee44af65dd8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40869:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40877:3:25","type":""}],"src":"40735:366:25"},{"body":{"nodeType":"YulBlock","src":"41278:248:25","statements":[{"nodeType":"YulAssignment","src":"41288:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41300:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"41311:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41296:3:25"},"nodeType":"YulFunctionCall","src":"41296:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41288:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41335:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"41346:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41331:3:25"},"nodeType":"YulFunctionCall","src":"41331:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41354:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"41360:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41350:3:25"},"nodeType":"YulFunctionCall","src":"41350:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41324:6:25"},"nodeType":"YulFunctionCall","src":"41324:47:25"},"nodeType":"YulExpressionStatement","src":"41324:47:25"},{"nodeType":"YulAssignment","src":"41380:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41514:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_dc5bf56f7778a980bf68a168744f15fc09ca522217760da56d44aee44af65dd8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41388:124:25"},"nodeType":"YulFunctionCall","src":"41388:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41380:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_dc5bf56f7778a980bf68a168744f15fc09ca522217760da56d44aee44af65dd8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41258:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41273:4:25","type":""}],"src":"41107:419:25"},{"body":{"nodeType":"YulBlock","src":"41638:59:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41660:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"41668:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41656:3:25"},"nodeType":"YulFunctionCall","src":"41656:14:25"},{"hexValue":"616d6f756e7420746f6f2068696768","kind":"string","nodeType":"YulLiteral","src":"41672:17:25","type":"","value":"amount too high"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41649:6:25"},"nodeType":"YulFunctionCall","src":"41649:41:25"},"nodeType":"YulExpressionStatement","src":"41649:41:25"}]},"name":"store_literal_in_memory_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"41630:6:25","type":""}],"src":"41532:165:25"},{"body":{"nodeType":"YulBlock","src":"41849:220:25","statements":[{"nodeType":"YulAssignment","src":"41859:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41925:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"41930:2:25","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41866:58:25"},"nodeType":"YulFunctionCall","src":"41866:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41859:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42031:3:25"}],"functionName":{"name":"store_literal_in_memory_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92","nodeType":"YulIdentifier","src":"41942:88:25"},"nodeType":"YulFunctionCall","src":"41942:93:25"},"nodeType":"YulExpressionStatement","src":"41942:93:25"},{"nodeType":"YulAssignment","src":"42044:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42055:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"42060:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42051:3:25"},"nodeType":"YulFunctionCall","src":"42051:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42044:3:25"}]}]},"name":"abi_encode_t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"41837:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"41845:3:25","type":""}],"src":"41703:366:25"},{"body":{"nodeType":"YulBlock","src":"42246:248:25","statements":[{"nodeType":"YulAssignment","src":"42256:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42268:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"42279:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42264:3:25"},"nodeType":"YulFunctionCall","src":"42264:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42256:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42303:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"42314:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42299:3:25"},"nodeType":"YulFunctionCall","src":"42299:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42322:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"42328:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42318:3:25"},"nodeType":"YulFunctionCall","src":"42318:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42292:6:25"},"nodeType":"YulFunctionCall","src":"42292:47:25"},"nodeType":"YulExpressionStatement","src":"42292:47:25"},{"nodeType":"YulAssignment","src":"42348:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42482:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42356:124:25"},"nodeType":"YulFunctionCall","src":"42356:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42348:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42226:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42241:4:25","type":""}],"src":"42075:419:25"},{"body":{"nodeType":"YulBlock","src":"42654:288:25","statements":[{"nodeType":"YulAssignment","src":"42664:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42676:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"42687:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42672:3:25"},"nodeType":"YulFunctionCall","src":"42672:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42664:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"42744:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42757:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"42768:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42753:3:25"},"nodeType":"YulFunctionCall","src":"42753:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"42700:43:25"},"nodeType":"YulFunctionCall","src":"42700:71:25"},"nodeType":"YulExpressionStatement","src":"42700:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"42825:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42838:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"42849:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42834:3:25"},"nodeType":"YulFunctionCall","src":"42834:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"42781:43:25"},"nodeType":"YulFunctionCall","src":"42781:72:25"},"nodeType":"YulExpressionStatement","src":"42781:72:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"42907:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42920:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"42931:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42916:3:25"},"nodeType":"YulFunctionCall","src":"42916:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"42863:43:25"},"nodeType":"YulFunctionCall","src":"42863:72:25"},"nodeType":"YulExpressionStatement","src":"42863:72:25"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42610:9:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"42622:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"42630:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"42638:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42649:4:25","type":""}],"src":"42500:442:25"},{"body":{"nodeType":"YulBlock","src":"43042:413:25","statements":[{"body":{"nodeType":"YulBlock","src":"43088:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"43090:77:25"},"nodeType":"YulFunctionCall","src":"43090:79:25"},"nodeType":"YulExpressionStatement","src":"43090:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"43063:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"43072:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43059:3:25"},"nodeType":"YulFunctionCall","src":"43059:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"43084:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"43055:3:25"},"nodeType":"YulFunctionCall","src":"43055:32:25"},"nodeType":"YulIf","src":"43052:119:25"},{"nodeType":"YulBlock","src":"43181:128:25","statements":[{"nodeType":"YulVariableDeclaration","src":"43196:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"43210:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"43200:6:25","type":""}]},{"nodeType":"YulAssignment","src":"43225:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43271:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"43282:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43267:3:25"},"nodeType":"YulFunctionCall","src":"43267:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"43291:7:25"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"43235:31:25"},"nodeType":"YulFunctionCall","src":"43235:64:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"43225:6:25"}]}]},{"nodeType":"YulBlock","src":"43319:129:25","statements":[{"nodeType":"YulVariableDeclaration","src":"43334:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"43348:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"43338:6:25","type":""}]},{"nodeType":"YulAssignment","src":"43364:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43410:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"43421:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43406:3:25"},"nodeType":"YulFunctionCall","src":"43406:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"43430:7:25"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"43374:31:25"},"nodeType":"YulFunctionCall","src":"43374:64:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"43364:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43004:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"43015:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"43027:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"43035:6:25","type":""}],"src":"42948:507:25"},{"body":{"nodeType":"YulBlock","src":"43505:45:25","statements":[{"nodeType":"YulAssignment","src":"43515:29:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43530:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"43537:6:25","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"43526:3:25"},"nodeType":"YulFunctionCall","src":"43526:18:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"43515:7:25"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"43487:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"43497:7:25","type":""}],"src":"43461:89:25"},{"body":{"nodeType":"YulBlock","src":"43598:78:25","statements":[{"body":{"nodeType":"YulBlock","src":"43654:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43663:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43666:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"43656:6:25"},"nodeType":"YulFunctionCall","src":"43656:12:25"},"nodeType":"YulExpressionStatement","src":"43656:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43621:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43645:5:25"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"43628:16:25"},"nodeType":"YulFunctionCall","src":"43628:23:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"43618:2:25"},"nodeType":"YulFunctionCall","src":"43618:34:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"43611:6:25"},"nodeType":"YulFunctionCall","src":"43611:42:25"},"nodeType":"YulIf","src":"43608:62:25"}]},"name":"validator_revert_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"43591:5:25","type":""}],"src":"43556:120:25"},{"body":{"nodeType":"YulBlock","src":"43744:79:25","statements":[{"nodeType":"YulAssignment","src":"43754:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"43769:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"43763:5:25"},"nodeType":"YulFunctionCall","src":"43763:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"43754:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43811:5:25"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"43785:25:25"},"nodeType":"YulFunctionCall","src":"43785:32:25"},"nodeType":"YulExpressionStatement","src":"43785:32:25"}]},"name":"abi_decode_t_uint16_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"43722:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"43730:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"43738:5:25","type":""}],"src":"43682:141:25"},{"body":{"nodeType":"YulBlock","src":"43892:80:25","statements":[{"nodeType":"YulAssignment","src":"43902:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"43917:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"43911:5:25"},"nodeType":"YulFunctionCall","src":"43911:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"43902:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43960:5:25"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"43933:26:25"},"nodeType":"YulFunctionCall","src":"43933:33:25"},"nodeType":"YulExpressionStatement","src":"43933:33:25"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"43870:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"43878:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"43886:5:25","type":""}],"src":"43829:143:25"},{"body":{"nodeType":"YulBlock","src":"44071:412:25","statements":[{"body":{"nodeType":"YulBlock","src":"44117:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"44119:77:25"},"nodeType":"YulFunctionCall","src":"44119:79:25"},"nodeType":"YulExpressionStatement","src":"44119:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"44092:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"44101:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44088:3:25"},"nodeType":"YulFunctionCall","src":"44088:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"44113:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"44084:3:25"},"nodeType":"YulFunctionCall","src":"44084:32:25"},"nodeType":"YulIf","src":"44081:119:25"},{"nodeType":"YulBlock","src":"44210:127:25","statements":[{"nodeType":"YulVariableDeclaration","src":"44225:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"44239:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"44229:6:25","type":""}]},{"nodeType":"YulAssignment","src":"44254:73:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44299:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"44310:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44295:3:25"},"nodeType":"YulFunctionCall","src":"44295:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"44319:7:25"}],"functionName":{"name":"abi_decode_t_uint16_fromMemory","nodeType":"YulIdentifier","src":"44264:30:25"},"nodeType":"YulFunctionCall","src":"44264:63:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"44254:6:25"}]}]},{"nodeType":"YulBlock","src":"44347:129:25","statements":[{"nodeType":"YulVariableDeclaration","src":"44362:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"44376:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"44366:6:25","type":""}]},{"nodeType":"YulAssignment","src":"44392:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44438:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"44449:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44434:3:25"},"nodeType":"YulFunctionCall","src":"44434:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"44458:7:25"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"44402:31:25"},"nodeType":"YulFunctionCall","src":"44402:64:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"44392:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint16t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44033:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"44044:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"44056:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"44064:6:25","type":""}],"src":"43978:505:25"},{"body":{"nodeType":"YulBlock","src":"44615:206:25","statements":[{"nodeType":"YulAssignment","src":"44625:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44637:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"44648:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44633:3:25"},"nodeType":"YulFunctionCall","src":"44633:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44625:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"44705:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44718:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"44729:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44714:3:25"},"nodeType":"YulFunctionCall","src":"44714:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"44661:43:25"},"nodeType":"YulFunctionCall","src":"44661:71:25"},"nodeType":"YulExpressionStatement","src":"44661:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"44786:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44799:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"44810:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44795:3:25"},"nodeType":"YulFunctionCall","src":"44795:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"44742:43:25"},"nodeType":"YulFunctionCall","src":"44742:72:25"},"nodeType":"YulExpressionStatement","src":"44742:72:25"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44579:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"44591:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"44599:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"44610:4:25","type":""}],"src":"44489:332:25"},{"body":{"nodeType":"YulBlock","src":"44870:128:25","statements":[{"nodeType":"YulAssignment","src":"44880:33:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44907:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"44889:17:25"},"nodeType":"YulFunctionCall","src":"44889:24:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"44880:5:25"}]},{"body":{"nodeType":"YulBlock","src":"44941:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"44943:16:25"},"nodeType":"YulFunctionCall","src":"44943:18:25"},"nodeType":"YulExpressionStatement","src":"44943:18:25"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44928:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"44935:4:25","type":"","value":"0x00"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"44925:2:25"},"nodeType":"YulFunctionCall","src":"44925:15:25"},"nodeType":"YulIf","src":"44922:41:25"},{"nodeType":"YulAssignment","src":"44972:20:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44983:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"44990:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44979:3:25"},"nodeType":"YulFunctionCall","src":"44979:13:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"44972:3:25"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"44856:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"44866:3:25","type":""}],"src":"44827:171:25"},{"body":{"nodeType":"YulBlock","src":"45110:76:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45132:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"45140:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45128:3:25"},"nodeType":"YulFunctionCall","src":"45128:14:25"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"45144:34:25","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45121:6:25"},"nodeType":"YulFunctionCall","src":"45121:58:25"},"nodeType":"YulExpressionStatement","src":"45121:58:25"}]},"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45102:6:25","type":""}],"src":"45004:182:25"},{"body":{"nodeType":"YulBlock","src":"45338:220:25","statements":[{"nodeType":"YulAssignment","src":"45348:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45414:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"45419:2:25","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45355:58:25"},"nodeType":"YulFunctionCall","src":"45355:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"45348:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45520:3:25"}],"functionName":{"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulIdentifier","src":"45431:88:25"},"nodeType":"YulFunctionCall","src":"45431:93:25"},"nodeType":"YulExpressionStatement","src":"45431:93:25"},{"nodeType":"YulAssignment","src":"45533:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45544:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"45549:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45540:3:25"},"nodeType":"YulFunctionCall","src":"45540:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"45533:3:25"}]}]},"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"45326:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"45334:3:25","type":""}],"src":"45192:366:25"},{"body":{"nodeType":"YulBlock","src":"45735:248:25","statements":[{"nodeType":"YulAssignment","src":"45745:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45757:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"45768:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45753:3:25"},"nodeType":"YulFunctionCall","src":"45753:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45745:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45792:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"45803:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45788:3:25"},"nodeType":"YulFunctionCall","src":"45788:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45811:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"45817:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45807:3:25"},"nodeType":"YulFunctionCall","src":"45807:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45781:6:25"},"nodeType":"YulFunctionCall","src":"45781:47:25"},"nodeType":"YulExpressionStatement","src":"45781:47:25"},{"nodeType":"YulAssignment","src":"45837:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45971:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45845:124:25"},"nodeType":"YulFunctionCall","src":"45845:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45837:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45715:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45730:4:25","type":""}],"src":"45564:419:25"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_addresst_uint256t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$531_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$531_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$531_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$531__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$531_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_calldata_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function calldata_access_t_address(baseRef, ptr) -> value {\n        value := abi_decode_t_address(ptr, add(ptr, 32))\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_calldata_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_calldata_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, length, pos)  -> end  {\n\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_calldata_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := calldata_access_t_address(baseRef, srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_calldata_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_calldata_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0, value1,  tail)\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_address_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b(memPtr) {\n\n        mstore(add(memPtr, 0), \"transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541(memPtr) {\n\n        mstore(add(memPtr, 0), 0x1901000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 2)\n        store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541(pos)\n        end := add(pos, 2)\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_address__to_t_uint256_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_dc5bf56f7778a980bf68a168744f15fc09ca522217760da56d44aee44af65dd8(memPtr) {\n\n        mstore(add(memPtr, 0), \"approval failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_dc5bf56f7778a980bf68a168744f15fc09ca522217760da56d44aee44af65dd8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_dc5bf56f7778a980bf68a168744f15fc09ca522217760da56d44aee44af65dd8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dc5bf56f7778a980bf68a168744f15fc09ca522217760da56d44aee44af65dd8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dc5bf56f7778a980bf68a168744f15fc09ca522217760da56d44aee44af65dd8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92(memPtr) {\n\n        mstore(add(memPtr, 0), \"amount too high\")\n\n    }\n\n    function abi_encode_t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9e7ef5cb4b975aed2821123b9f6ed3d24da199ab911beb0a7707058c7d0a3a92_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint16t_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1908":[{"length":32,"start":1837},{"length":32,"start":2042},{"length":32,"start":4612},{"length":32,"start":10937},{"length":32,"start":11093},{"length":32,"start":11632},{"length":32,"start":11696},{"length":32,"start":11957},{"length":32,"start":12082},{"length":32,"start":12735},{"length":32,"start":13188},{"length":32,"start":14938},{"length":32,"start":15974},{"length":32,"start":16624},{"length":32,"start":18641},{"length":32,"start":18789},{"length":32,"start":18864}],"1910":[{"length":32,"start":1677},{"length":32,"start":1732},{"length":32,"start":6041}],"1912":[{"length":32,"start":1638},{"length":32,"start":18253}],"1915":[{"length":32,"start":1506},{"length":32,"start":6895}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D020808 GT PUSH2 0x281 JUMPI DUP1 PUSH4 0x6D020808 EQ PUSH2 0x956 JUMPI DUP1 PUSH4 0x6E553F65 EQ PUSH2 0x95E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x971 JUMPI DUP1 PUSH4 0x77E3B267 EQ PUSH2 0x984 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x9A8 JUMPI DUP1 PUSH4 0x8212FD43 EQ PUSH2 0x9C8 JUMPI DUP1 PUSH4 0x8AFCA8F0 EQ PUSH2 0x9DB JUMPI DUP1 PUSH4 0x91986003 EQ PUSH2 0x9E4 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x9F7 JUMPI DUP1 PUSH4 0x94BF804D EQ PUSH2 0xA0A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xA1D JUMPI DUP1 PUSH4 0x99374642 EQ PUSH2 0xA25 JUMPI DUP1 PUSH4 0x99530B06 EQ PUSH2 0xA45 JUMPI DUP1 PUSH4 0x9BBCA884 EQ PUSH2 0xA4D JUMPI DUP1 PUSH4 0x9E34E348 EQ PUSH2 0xA60 JUMPI DUP1 PUSH4 0x9F3988F3 EQ PUSH2 0xA73 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0xA88 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0xA90 JUMPI DUP1 PUSH4 0xA73F7F8A EQ PUSH2 0xAA3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xAB6 JUMPI DUP1 PUSH4 0xA98222C4 EQ PUSH2 0xAC9 JUMPI DUP1 PUSH4 0xAB5B4D49 EQ PUSH2 0xADE JUMPI DUP1 PUSH4 0xB3C187F2 EQ PUSH2 0xAF3 JUMPI DUP1 PUSH4 0xB3D7F6B9 EQ PUSH2 0xB06 JUMPI DUP1 PUSH4 0xB6CC2D1F EQ PUSH2 0xB19 JUMPI DUP1 PUSH4 0xBB994D48 EQ PUSH2 0xB3A JUMPI DUP1 PUSH4 0xBBE4EB49 EQ PUSH2 0xB4D JUMPI DUP1 PUSH4 0xBDC8144B EQ PUSH2 0xB5A JUMPI DUP1 PUSH4 0xC065CA07 EQ PUSH2 0xB6D JUMPI DUP1 PUSH4 0xC0993EEA EQ PUSH2 0xB82 JUMPI DUP1 PUSH4 0xC63D75B6 EQ PUSH2 0xBA9 JUMPI DUP1 PUSH4 0xC6E6F592 EQ PUSH2 0xBBC JUMPI DUP1 PUSH4 0xC8D74B60 EQ PUSH2 0xBCF JUMPI DUP1 PUSH4 0xC8DFFA95 EQ PUSH2 0xBE4 JUMPI DUP1 PUSH4 0xC9A16EA4 EQ PUSH2 0xBED JUMPI DUP1 PUSH4 0xD4AE064F EQ PUSH2 0xC00 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0xC15 JUMPI DUP1 PUSH4 0xD538E904 EQ PUSH2 0xC28 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0xC3B JUMPI DUP1 PUSH4 0xD81A09F6 EQ PUSH2 0xC4E JUMPI DUP1 PUSH4 0xD9A0E97A EQ PUSH2 0xC61 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xC69 JUMPI DUP1 PUSH4 0xDF69B22A EQ PUSH2 0xCA2 JUMPI DUP1 PUSH4 0xE5236CC9 EQ PUSH2 0xCB5 JUMPI DUP1 PUSH4 0xECF70858 EQ PUSH2 0xCBD JUMPI DUP1 PUSH4 0xEF8B30F7 EQ PUSH2 0xBBC JUMPI DUP1 PUSH4 0xF1DAEBA8 EQ PUSH2 0xCC6 JUMPI DUP1 PUSH4 0xF5B944EB EQ PUSH2 0xCDB JUMPI DUP1 PUSH4 0xF6D7BFA0 EQ PUSH2 0xCF0 JUMPI DUP1 PUSH4 0xF828F50B EQ PUSH2 0xD03 JUMPI DUP1 PUSH4 0xFC0E74D1 EQ PUSH2 0xD0C JUMPI DUP1 PUSH4 0xFD967F47 EQ PUSH2 0xD20 JUMPI DUP1 PUSH4 0xFEC61F06 EQ PUSH2 0xD29 JUMPI DUP1 PUSH4 0xFF1E7F08 EQ PUSH2 0xD3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x435DA5 EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0x1E1D114 EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x50B JUMPI DUP1 PUSH4 0x3DCD12C EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0x6580F2D EQ PUSH2 0x540 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0x7A2D13A EQ PUSH2 0x568 JUMPI DUP1 PUSH4 0x835A3FC EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0x952864E EQ PUSH2 0x584 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x58D JUMPI DUP1 PUSH4 0xA28A477 EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0xAD283D0 EQ PUSH2 0x5B3 JUMPI DUP1 PUSH4 0x16B87AC0 EQ PUSH2 0x5C8 JUMPI DUP1 PUSH4 0x16D3BFBB EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x604 JUMPI DUP1 PUSH4 0x223E5479 EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x61F JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x632 JUMPI DUP1 PUSH4 0x2D632692 EQ PUSH2 0x645 JUMPI DUP1 PUSH4 0x2D772168 EQ PUSH2 0x64E JUMPI DUP1 PUSH4 0x2DD31000 EQ PUSH2 0x661 JUMPI DUP1 PUSH4 0x2E0F2625 EQ PUSH2 0x688 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x6AF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x6C2 JUMPI DUP1 PUSH4 0x34B5FAB6 EQ PUSH2 0x6F0 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x703 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x70C JUMPI DUP1 PUSH4 0x36FBA084 EQ PUSH2 0x71F JUMPI DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x72B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x751 JUMPI DUP1 PUSH4 0x39EBF823 EQ PUSH2 0x764 JUMPI DUP1 PUSH4 0x3CD7B5AB EQ PUSH2 0x7AB JUMPI DUP1 PUSH4 0x3F7B5E40 EQ PUSH2 0x7B4 JUMPI DUP1 PUSH4 0x402D267D EQ PUSH2 0x7BC JUMPI DUP1 PUSH4 0x405977E7 EQ PUSH2 0x7CF JUMPI DUP1 PUSH4 0x46E6AC49 EQ PUSH2 0x7E2 JUMPI DUP1 PUSH4 0x4800D97F EQ PUSH2 0x7F5 JUMPI DUP1 PUSH4 0x48EA7127 EQ PUSH2 0x829 JUMPI DUP1 PUSH4 0x4BBD71E9 EQ PUSH2 0x83C JUMPI DUP1 PUSH4 0x4CDAD506 EQ PUSH2 0x568 JUMPI DUP1 PUSH4 0x4CE1D38A EQ PUSH2 0x84F JUMPI DUP1 PUSH4 0x4CFE51DC EQ PUSH2 0x864 JUMPI DUP1 PUSH4 0x4D4BB197 EQ PUSH2 0x879 JUMPI DUP1 PUSH4 0x4FB3CCC5 EQ PUSH2 0x88E JUMPI DUP1 PUSH4 0x5141EEBB EQ PUSH2 0x8A1 JUMPI DUP1 PUSH4 0x53A66132 EQ PUSH2 0x8AA JUMPI DUP1 PUSH4 0x5A569099 EQ PUSH2 0x8CD JUMPI DUP1 PUSH4 0x5BF6B4FB EQ PUSH2 0x8E0 JUMPI DUP1 PUSH4 0x629B9142 EQ PUSH2 0x8F5 JUMPI DUP1 PUSH4 0x633F228C EQ PUSH2 0x908 JUMPI DUP1 PUSH4 0x652DA324 EQ PUSH2 0x91B JUMPI DUP1 PUSH4 0x65CB6765 EQ PUSH2 0x930 JUMPI DUP1 PUSH4 0x6853920E EQ PUSH2 0x943 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x12 SLOAD PUSH2 0x4E0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4ED SWAP2 SWAP1 PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FE PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4ED SWAP2 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH2 0x51E PUSH2 0x519 CALLDATASIZE PUSH1 0x4 PUSH2 0x4EFA JUMP JUMPDEST PUSH2 0xD60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4ED SWAP2 SWAP1 PUSH2 0x4F23 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x54E CALLDATASIZE PUSH1 0x4 PUSH2 0x5066 JUMP JUMPDEST PUSH2 0xD97 JUMP JUMPDEST PUSH2 0x55B PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4ED SWAP2 SWAP1 PUSH2 0x5150 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x576 CALLDATASIZE PUSH1 0x4 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0xE62 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x51E PUSH2 0x59B CALLDATASIZE PUSH1 0x4 PUSH2 0x5182 JUMP JUMPDEST PUSH2 0xE6F JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x5AE CALLDATASIZE PUSH1 0x4 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0xE83 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5D1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x5D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x51BF JUMP JUMPDEST PUSH2 0xE90 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4FE PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0xEB7 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x61A CALLDATASIZE PUSH1 0x4 PUSH2 0x51BF JUMP JUMPDEST PUSH2 0xEC1 JUMP JUMPDEST PUSH2 0x51E PUSH2 0x62D CALLDATASIZE PUSH1 0x4 PUSH2 0x51E0 JUMP JUMPDEST PUSH2 0xEE2 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x640 CALLDATASIZE PUSH1 0x4 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0xF33 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x65C CALLDATASIZE PUSH1 0x4 PUSH2 0x51BF JUMP JUMPDEST PUSH2 0xF48 JUMP JUMPDEST PUSH2 0x4E0 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x6BD CALLDATASIZE PUSH1 0x4 PUSH2 0x5230 JUMP JUMPDEST PUSH2 0xFEC JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH2 0x4ED SWAP2 SWAP1 PUSH2 0x526C JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x6FE CALLDATASIZE PUSH1 0x4 PUSH2 0x527A JUMP JUMPDEST PUSH2 0x100D JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x71A CALLDATASIZE PUSH1 0x4 PUSH2 0x5230 JUMP JUMPDEST PUSH2 0x105B JUMP JUMPDEST PUSH2 0x4FE PUSH5 0xE8D4A51000 DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x51E PUSH2 0x75F CALLDATASIZE PUSH1 0x4 PUSH2 0x5182 JUMP JUMPDEST PUSH2 0x1096 JUMP JUMPDEST PUSH2 0x79B PUSH2 0x772 CALLDATASIZE PUSH1 0x4 PUSH2 0x51BF JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP3 SWAP1 SWAP4 ADD SLOAD SWAP1 SWAP3 SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4ED SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x52DA JUMP JUMPDEST PUSH2 0x4FE PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0xA DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x7CA CALLDATASIZE PUSH1 0x4 PUSH2 0x51BF JUMP JUMPDEST PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x7DD CALLDATASIZE PUSH1 0x4 PUSH2 0x5182 JUMP JUMPDEST PUSH2 0x10AE JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x7F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5182 JUMP JUMPDEST PUSH2 0x131E JUMP JUMPDEST PUSH2 0x81C PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4ED SWAP2 SWAP1 PUSH2 0x5347 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x837 CALLDATASIZE PUSH1 0x4 PUSH2 0x51BF JUMP JUMPDEST PUSH2 0x135C JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x84A CALLDATASIZE PUSH1 0x4 PUSH2 0x51BF JUMP JUMPDEST PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5F5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5D9B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5E5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x4E0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x51E PUSH2 0x8B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x5161 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x8DB CALLDATASIZE PUSH1 0x4 PUSH2 0x5182 JUMP JUMPDEST PUSH2 0x1422 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5D7B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x903 CALLDATASIZE PUSH1 0x4 PUSH2 0x51BF JUMP JUMPDEST PUSH2 0x1468 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x916 CALLDATASIZE PUSH1 0x4 PUSH2 0x539F JUMP JUMPDEST PUSH2 0x14A3 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CDB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x93E CALLDATASIZE PUSH1 0x4 PUSH2 0x527A JUMP JUMPDEST PUSH2 0x1588 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x951 CALLDATASIZE PUSH1 0x4 PUSH2 0x5182 JUMP JUMPDEST PUSH2 0x1595 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x96C CALLDATASIZE PUSH1 0x4 PUSH2 0x5230 JUMP JUMPDEST PUSH2 0x1672 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x97F CALLDATASIZE PUSH1 0x4 PUSH2 0x51BF JUMP JUMPDEST PUSH2 0x1692 JUMP JUMPDEST PUSH2 0x55B PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x312E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x9B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x51BF JUMP JUMPDEST PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x9D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x16EB JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x4E0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x51E PUSH2 0xA05 CALLDATASIZE PUSH1 0x4 PUSH2 0x5230 JUMP JUMPDEST PUSH2 0x1744 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0xA18 CALLDATASIZE PUSH1 0x4 PUSH2 0x5230 JUMP JUMPDEST PUSH2 0x176D JUMP JUMPDEST PUSH2 0x55B PUSH2 0x1782 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0xA33 CALLDATASIZE PUSH1 0x4 PUSH2 0x51BF JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x178F JUMP JUMPDEST PUSH2 0x5DB PUSH2 0xA5B CALLDATASIZE PUSH1 0x4 PUSH2 0x53F9 JUMP JUMPDEST PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x4E0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5E9B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x51E PUSH2 0xA9E CALLDATASIZE PUSH1 0x4 PUSH2 0x5182 JUMP JUMPDEST PUSH2 0x181C JUMP JUMPDEST PUSH2 0x5DB PUSH2 0xAB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x5182 JUMP JUMPDEST PUSH2 0x1829 JUMP JUMPDEST PUSH2 0x51E PUSH2 0xAC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x5182 JUMP JUMPDEST PUSH2 0x184B JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5EBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH2 0x4E0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0xB14 CALLDATASIZE PUSH1 0x4 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x189D JUMP JUMPDEST PUSH2 0xB2C PUSH2 0xB27 CALLDATASIZE PUSH1 0x4 PUSH2 0x51BF JUMP JUMPDEST PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4ED SWAP3 SWAP2 SWAP1 PUSH2 0x541A JUMP JUMPDEST PUSH2 0x5DB PUSH2 0xB48 CALLDATASIZE PUSH1 0x4 PUSH2 0x51BF JUMP JUMPDEST PUSH2 0x18E9 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x51E SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0xB68 CALLDATASIZE PUSH1 0x4 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x190C JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5DDB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0xBB7 CALLDATASIZE PUSH1 0x4 PUSH2 0x51BF JUMP JUMPDEST PUSH2 0x19A0 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0xBCA CALLDATASIZE PUSH1 0x4 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x19B9 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0xBFB CALLDATASIZE PUSH1 0x4 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x19C6 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5EDB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x51E PUSH2 0xC23 CALLDATASIZE PUSH1 0x4 PUSH2 0x5449 JUMP JUMPDEST PUSH2 0x1A26 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0xC36 CALLDATASIZE PUSH1 0x4 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0xC49 CALLDATASIZE PUSH1 0x4 PUSH2 0x5230 JUMP JUMPDEST PUSH2 0x1A7B JUMP JUMPDEST PUSH2 0x4FE PUSH2 0xC5C CALLDATASIZE PUSH1 0x4 PUSH2 0x5066 JUMP JUMPDEST PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x1ACB JUMP JUMPDEST PUSH2 0x4FE PUSH2 0xC77 CALLDATASIZE PUSH1 0x4 PUSH2 0x54E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0xCB0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x1AD5 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x1B8F JUMP JUMPDEST PUSH2 0x4FE PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5E1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5DFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x5DB PUSH2 0xCFE CALLDATASIZE PUSH1 0x4 PUSH2 0x5182 JUMP JUMPDEST PUSH2 0x1C93 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH2 0x51E SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5D5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x4E0 PUSH2 0xD4C CALLDATASIZE PUSH1 0x4 PUSH2 0x5161 JUMP JUMPDEST PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD5B PUSH2 0x1D6A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xD91 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA1 PUSH2 0x1D7C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAE DUP8 PUSH1 0x0 PUSH2 0x1DA5 JUMP JUMPDEST SWAP1 POP PUSH2 0xDBF CALLER DUP8 DUP8 DUP5 DUP12 DUP10 DUP10 PUSH2 0x1E3B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDCB PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1A DUP1 SLOAD PUSH2 0xDE1 SWAP1 PUSH2 0x5520 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE0D SWAP1 PUSH2 0x5520 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE5A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE2F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE5A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE3D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD91 DUP3 PUSH1 0x0 PUSH2 0x1DA5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7C CALLER DUP5 DUP5 PUSH2 0x1ED8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD91 DUP3 PUSH1 0x1 PUSH2 0x1F70 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5D7B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xEA8 DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH2 0xEB3 DUP3 PUSH1 0x1 PUSH2 0x202B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD5B PUSH2 0x2093 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5DDB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xED9 DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH2 0xEB3 DUP3 PUSH2 0x20AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADDRESS EQ DUP1 PUSH2 0xF02 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO JUMPDEST ISZERO PUSH2 0xF20 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF2B DUP5 DUP5 DUP5 PUSH2 0x210F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xF60 DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0xF8F JUMPI PUSH1 0x40 MLOAD PUSH4 0xF3C3867 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT PUSH1 0xC SLOAD EQ PUSH2 0xFB3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4E414185 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5D3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xFF5 DUP3 PUSH2 0xF33 JUMP JUMPDEST PUSH2 0xFFE DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x1008 DUP4 DUP4 PUSH2 0x2131 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x101B DUP6 DUP6 DUP6 PUSH2 0x21B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x102A DUP3 PUSH1 0x1 PUSH2 0x1F70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x1051 SWAP1 DUP3 SWAP1 PUSH2 0x257F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x108C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1083 SWAP1 PUSH2 0x554C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEB3 DUP3 DUP3 PUSH2 0x2595 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7C CALLER DUP5 DUP5 PUSH2 0x25FA JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD91 DUP3 PUSH2 0x2648 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5EBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x10C6 DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x10CE PUSH2 0x1D7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x1106 JUMPI PUSH1 0x40 MLOAD PUSH4 0x631BC21 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP1 ISZERO DUP1 PUSH2 0x112D JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x114B JUMPI PUSH1 0x40 MLOAD PUSH4 0x7C946ED7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP4 GT ISZERO PUSH2 0x1157 JUMPI DUP1 SWAP3 POP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1187 SWAP2 SWAP1 PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11C8 SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST PUSH2 0x11D2 SWAP2 SWAP1 PUSH2 0x55E1 JUMP JUMPDEST PUSH2 0x11DC SWAP2 SWAP1 PUSH2 0x5616 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x11FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x7C946ED7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x122B PUSH32 0x0 CALLER ADDRESS DUP8 PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x1256 SWAP1 DUP5 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x126F SWAP2 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1288 SWAP2 SWAP1 PUSH2 0x563D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5F1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x12B1 DUP8 DUP3 PUSH2 0x562A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12BF SWAP3 SWAP2 SWAP1 PUSH2 0x541A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x12D2 DUP6 CALLER DUP4 PUSH2 0x2802 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xE94E7F88819F66C19B097748CB754149F63B1A176ED425DEE1F1EE933E6D09B0 DUP6 PUSH1 0x40 MLOAD PUSH2 0x130B SWAP2 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x1008 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1338 DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x1340 PUSH2 0x1D7C JUMP JUMPDEST PUSH2 0x134A DUP5 DUP5 PUSH2 0x28CA JUMP JUMPDEST SWAP2 POP PUSH2 0x1355 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CDB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1374 DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x28709A2DAB2A5D5E8688E96159011151C51644AB21839A8A45B449634D7C8B2B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5F5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x13D7 DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE6E3F8BEDA82A13C441D76EFD4A6335760F219F38C60502E6680060874E109D SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD DUP3 GT ISZERO PUSH2 0x145E JUMPI PUSH1 0x40 MLOAD PUSH4 0x37DEAE07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE7C DUP4 DUP4 PUSH2 0x2FF7 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5DFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1480 DUP2 PUSH2 0x201E JUMP JUMPDEST POP PUSH1 0x13 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5D9B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x14BB DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x153C JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x14DA JUMPI PUSH2 0x14DA PUSH2 0x5650 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x14EF SWAP2 SWAP1 PUSH2 0x51BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SUB PUSH2 0x1529 JUMPI PUSH1 0x40 MLOAD PUSH4 0x631BC21 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 PUSH2 0x1534 DUP2 PUSH2 0x5666 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x14BE JUMP JUMPDEST POP PUSH2 0x1549 PUSH1 0x4 DUP5 DUP5 PUSH2 0x4DC6 JUMP JUMPDEST POP PUSH32 0xBC0CB8C5CCEE13E6A2FD26A699F57AD7FF6E454E6AAE97EC41CD2EB9EBD63A5 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x157B SWAP3 SWAP2 SWAP1 PUSH2 0x56EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF2B DUP5 DUP5 DUP5 PUSH2 0x21B5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5DFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x15AD DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x15B7 DUP3 DUP5 PUSH2 0x2595 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x1395522074BE2925CC0FE997DC4FE5D15A507C2A971E00C315E5A2E08C9B0E50 DUP4 PUSH1 0x40 MLOAD PUSH2 0x15F0 SWAP2 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1628 JUMPI PUSH1 0x40 MLOAD PUSH4 0x967642D9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x12 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x13 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE93BAA0B608A7D420822B6B90CFCCCB70574363BA4FD26EF5AC17DD465016C4 SWAP1 PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x167C PUSH2 0x1D7C JUMP JUMPDEST PUSH2 0x1687 CALLER DUP4 DUP6 PUSH2 0x314D JUMP JUMPDEST SWAP1 POP PUSH2 0xD91 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x16CF JUMPI PUSH2 0x16AC PUSH2 0x32A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD91 SWAP2 SWAP1 PUSH2 0x562A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5D1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1703 DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH1 0xB DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x1A4494BEED88920B88742CC58F2744E198F55FF192635A1FBABC6BE8FFADE81 SWAP1 PUSH2 0x1738 SWAP1 DUP5 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1777 PUSH2 0x1D7C JUMP JUMPDEST PUSH2 0x1687 CALLER DUP4 DUP6 PUSH2 0x3303 JUMP JUMPDEST PUSH1 0x1B DUP1 SLOAD PUSH2 0xDE1 SWAP1 PUSH2 0x5520 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD5B PUSH2 0x17BF PUSH32 0x0 PUSH1 0xA PUSH2 0x580B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5D9B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x17DE DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 ISZERO ISZERO OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x1F88E73EBC721F227812938FE07A069EC1F7136AAFACB397ED460BD15DEE13F1 SWAP1 PUSH2 0x1738 SWAP1 DUP5 SWAP1 PUSH2 0x4F23 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7C CALLER DUP5 DUP5 PUSH2 0x3456 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5DFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1841 DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x15B7 DUP3 DUP5 PUSH2 0x2131 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADDRESS EQ DUP1 PUSH2 0x186B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO JUMPDEST ISZERO PUSH2 0x1889 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1894 CALLER DUP5 DUP5 PUSH2 0x348B JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD91 DUP3 PUSH1 0x1 PUSH2 0x1DA5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x18C5 DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x18CD PUSH2 0x1D7C JUMP JUMPDEST PUSH2 0x18D6 DUP5 PUSH2 0x3588 JUMP JUMPDEST SWAP3 POP SWAP3 POP PUSH2 0x18E3 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5E9B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1901 DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH2 0xEB3 DUP3 PUSH1 0x0 PUSH2 0x202B JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1924 DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x1953 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF3C3867 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x197D JUMPI PUSH1 0x40 MLOAD PUSH4 0x64B99911 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5DBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x1738 SWAP1 DUP5 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x19AC DUP4 PUSH2 0x2648 JUMP JUMPDEST SWAP1 POP PUSH2 0xE7C DUP2 PUSH1 0x0 PUSH2 0x1F70 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD91 DUP3 PUSH1 0x0 PUSH2 0x1F70 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5DFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x19DE DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 JUMPDEST PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH32 0x9F6D8CEB5FE3A6380949B0777BD5802511579B6FBBC87194C108A91D372F9527 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A37 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x36BC JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5DFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1A5D DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x1A84 DUP3 PUSH2 0xF33 JUMP JUMPDEST PUSH2 0x1A8D DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x1008 DUP4 DUP4 PUSH2 0x2595 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AA1 PUSH2 0x1D7C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AAE DUP8 PUSH1 0x1 PUSH2 0x1F70 JUMP JUMPDEST SWAP1 POP PUSH2 0x1ABF CALLER DUP8 DUP8 DUP11 DUP6 DUP10 DUP10 PUSH2 0x1E3B JUMP JUMPDEST POP SWAP1 POP PUSH2 0xDCB PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD5B PUSH2 0x32A5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5EDB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1AED DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH32 0x0 DUP3 GT ISZERO PUSH2 0x1B2E JUMPI PUSH1 0x40 MLOAD PUSH4 0xFDFBB0B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x1B5A JUMPI ADDRESS PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1B4F SWAP2 PUSH2 0x38AC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x16 DUP2 SWAP1 SSTORE PUSH1 0x15 SSTORE JUMPDEST PUSH1 0x14 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xF361AED463DA6FA20358E45C6209F1D3E16D4ECA706E6EAB0B0AEB338729C77A SWAP1 PUSH2 0x1738 SWAP1 DUP5 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5D5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1BA7 DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x1BD6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x631BC21 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1C24 JUMPI PUSH1 0xE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5D3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP3 SWAP1 LOG2 JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5DBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x1C47 SWAP2 PUSH2 0x5845 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1C67 CALLER PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5CBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1829 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x4426AA1FB73E391071491FCFE21A88B5C38A0A0333A1F6E77161470439704CF8 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5E1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1CAB DUP2 PUSH2 0x201E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x1CE3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x631BC21 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 ADD DUP5 SWAP1 SSTORE MLOAD CALLER SWAP1 PUSH32 0xB3EEF2123FEC1523A6BBC90ACEB203000154C1A4974335FE06B544C7534D4B89 SWAP1 PUSH2 0x1D33 SWAP1 DUP7 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1D50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH2 0xD5B SWAP2 SWAP1 PUSH2 0x563D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1D9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1083 SWAP1 PUSH2 0x588A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP4 EQ DUP1 PUSH2 0x1DB5 JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x1DC1 JUMPI POP DUP2 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DCB PUSH2 0x2093 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x1DDE JUMPI DUP4 SWAP2 POP POP PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DE8 PUSH2 0x1D6A JUMP JUMPDEST PUSH2 0x1DF2 SWAP1 DUP7 PUSH2 0x55E1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E00 DUP4 DUP4 PUSH2 0x5616 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP6 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1E16 JUMPI PUSH2 0x1E16 PUSH2 0x581A JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x1E2B JUMPI POP PUSH2 0x1E28 DUP4 DUP4 PUSH2 0x589A JUMP JUMPDEST ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xDCB JUMPI PUSH2 0x1051 PUSH1 0x1 DUP3 PUSH2 0x563D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E49 DUP8 DUP8 DUP7 DUP7 PUSH2 0x3963 JUMP JUMPDEST PUSH2 0x1E54 DUP7 DUP10 DUP7 PUSH2 0x3A07 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1E61 DUP8 DUP6 PUSH2 0x3A2B JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1E74 DUP10 DUP10 DUP9 DUP11 DUP7 DUP7 DUP12 PUSH2 0x407F JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xFBDE797D201C681B91056529119E0B02407C7BB96A4A2C75C01FC9667232C8DB DUP6 DUP11 PUSH1 0x40 MLOAD PUSH2 0x1EC3 SWAP3 SWAP2 SWAP1 PUSH2 0x541A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 PUSH2 0x1EF7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO JUMPDEST ISZERO PUSH2 0x1F15 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP9 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5E7B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x1F5E SWAP1 DUP7 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP4 EQ DUP1 PUSH2 0x1F80 JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x1F8C JUMPI POP DUP2 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F96 PUSH2 0x2093 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1FA2 PUSH2 0x1D6A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x1FC9 JUMPI DUP2 PUSH1 0x0 SUB PUSH2 0x1FBE JUMPI DUP5 SWAP3 POP POP POP PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x0 SWAP3 POP POP POP PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD5 DUP4 DUP8 PUSH2 0x55E1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1FE3 DUP4 DUP4 PUSH2 0x5616 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP7 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1FF9 JUMPI PUSH2 0x1FF9 PUSH2 0x581A JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x200E JUMPI POP PUSH2 0x200B DUP4 DUP4 PUSH2 0x589A JUMP JUMPDEST ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1051 JUMPI PUSH2 0x1A3A PUSH1 0x1 DUP3 PUSH2 0x563D JUMP JUMPDEST PUSH2 0x2028 DUP2 CALLER PUSH2 0x411F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7A163BD7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xF42C77AE SWAP1 PUSH2 0x205D SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x58AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2077 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x208B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x209D PUSH2 0x32A5 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0xD5B SWAP2 SWAP1 PUSH2 0x562A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x223E5479 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x223E5479 SWAP1 PUSH2 0x20DA SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2108 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x211C DUP5 CALLER DUP5 PUSH2 0x4178 JUMP JUMPDEST PUSH2 0x2127 DUP5 DUP5 DUP5 PUSH2 0x348B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x213B DUP3 DUP3 PUSH2 0x1744 JUMP JUMPDEST PUSH2 0xEB3 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x2171 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x21DA SWAP1 DUP3 PUSH2 0x1DA5 JUMP JUMPDEST PUSH1 0xF SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x227C JUMPI PUSH1 0xF SLOAD PUSH1 0x40 MLOAD PUSH4 0x2319B8CF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2319B8CF SWAP1 PUSH2 0x2223 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x5907 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2242 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2266 SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2274 JUMPI DUP1 SWAP2 POP JUMPDEST POP SWAP1 POP PUSH2 0xE7C JUMP JUMPDEST PUSH1 0xA SLOAD DUP1 DUP3 GT ISZERO PUSH2 0x2576 JUMPI DUP4 MLOAD DUP2 SWAP1 PUSH1 0x0 SWAP1 DUP2 SWAP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x22A1 JUMPI POP PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x2305 JUMPI PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x22FB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x22DD JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x2307 JUMP JUMPDEST DUP7 JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x256F JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2329 JUMPI PUSH2 0x2329 PUSH2 0x5650 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x3 PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x0 SUB PUSH2 0x237C JUMPI PUSH1 0x40 MLOAD PUSH4 0x631BC21 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x23AC PUSH2 0x238B DUP8 DUP11 PUSH2 0x562A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x257F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x23BA DUP4 DUP4 PUSH2 0x2FF7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7A2D13A DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD905777E ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F9 SWAP2 SWAP1 PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2416 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x243A SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2456 SWAP2 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2473 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2497 SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST SWAP1 POP PUSH2 0x24A3 DUP3 DUP5 PUSH2 0x562A JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x24CE JUMPI DUP3 PUSH2 0x24B5 DUP3 DUP5 PUSH2 0x55E1 JUMP JUMPDEST PUSH2 0x24BF SWAP2 SWAP1 PUSH2 0x5616 JUMP JUMPDEST SWAP2 POP PUSH2 0x24CB DUP3 DUP3 PUSH2 0x563D JUMP JUMPDEST SWAP3 POP JUMPDEST DUP3 PUSH1 0x0 SUB PUSH2 0x24DF JUMPI POP POP POP POP PUSH2 0x255D JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x24F0 JUMPI POP PUSH2 0x2710 DUP14 LT JUMPDEST ISZERO PUSH2 0x2530 JUMPI PUSH2 0x2710 DUP14 PUSH2 0x2503 DUP6 DUP12 PUSH2 0x563D JUMP JUMPDEST PUSH2 0x250D SWAP2 SWAP1 PUSH2 0x55E1 JUMP JUMPDEST PUSH2 0x2517 SWAP2 SWAP1 PUSH2 0x5616 JUMP JUMPDEST PUSH2 0x2521 DUP4 DUP10 PUSH2 0x563D JUMP JUMPDEST GT ISZERO PUSH2 0x2530 JUMPI POP POP POP POP PUSH2 0x256F JUMP JUMPDEST PUSH2 0x253A DUP4 DUP10 PUSH2 0x563D JUMP JUMPDEST SWAP8 POP DUP10 DUP9 LT PUSH2 0x254C JUMPI POP POP POP POP PUSH2 0x256F JUMP JUMPDEST PUSH2 0x2556 DUP3 DUP9 PUSH2 0x563D JUMP JUMPDEST SWAP7 POP POP POP POP POP JUMPDEST DUP1 PUSH2 0x2567 DUP2 PUSH2 0x5666 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x230C JUMP JUMPDEST POP SWAP2 SWAP4 POP POP POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x258E JUMPI DUP2 PUSH2 0xE7C JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x259F DUP3 DUP3 PUSH2 0x1744 JUMP JUMPDEST ISZERO PUSH2 0xEB3 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x262F SWAP1 DUP5 SWAP1 PUSH2 0x563D JUMP JUMPDEST SWAP1 POP PUSH2 0x263C DUP6 DUP6 DUP4 PUSH2 0x1ED8 JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ DUP1 PUSH2 0x2668 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST ISZERO PUSH2 0x2675 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x26F4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23551789 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x46AA2F12 SWAP1 PUSH2 0x26B3 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE7C SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26FE PUSH2 0x1D6A JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 SWAP2 POP DUP1 DUP3 LT PUSH2 0x2716 JUMPI POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xDCB DUP3 DUP3 PUSH2 0x562A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 PUSH2 0x273D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO JUMPDEST DUP1 PUSH2 0x274F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST ISZERO PUSH2 0x276D JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x279D SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x5934 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27E0 SWAP2 SWAP1 PUSH2 0x5967 JUMP JUMPDEST PUSH2 0x27FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1083 SWAP1 PUSH2 0x59AE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 PUSH2 0x281F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST ISZERO PUSH2 0x283D JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x286B SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x59BE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x288A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28AE SWAP2 SWAP1 PUSH2 0x5967 JUMP JUMPDEST PUSH2 0x1008 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1083 SWAP1 PUSH2 0x59AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x13 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x2904 JUMPI PUSH1 0x0 SWAP2 POP JUMPDEST DUP1 DUP3 SUB PUSH2 0x2924 JUMPI PUSH1 0x40 MLOAD PUSH4 0x84DF06B PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2C38 JUMPI PUSH1 0x0 PUSH2 0x2938 DUP4 DUP4 PUSH2 0x562A JUMP JUMPDEST SWAP1 POP PUSH1 0xB SLOAD DUP2 PUSH1 0xA SLOAD PUSH2 0x294B SWAP2 SWAP1 PUSH2 0x563D JUMP JUMPDEST LT ISZERO PUSH2 0x296E JUMPI PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH2 0x2961 SWAP2 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x296E JUMPI POP DUP1 JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6C82BBBF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x7A2D13A SWAP1 DUP3 SWAP1 PUSH4 0xD905777E SWAP1 PUSH2 0x29A5 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29E6 SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A02 SWAP2 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A1F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A43 SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x2A66 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7C946ED7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2A72 JUMPI DUP1 SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x2A7E DUP9 DUP5 PUSH2 0x2FF7 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2A9F JUMPI PUSH1 0x40 MLOAD PUSH4 0x39589FDD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2AEE SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B2F SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST SWAP1 POP PUSH2 0x2B3B DUP10 DUP6 PUSH2 0x41D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2B8A SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2BCB SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2BE2 PUSH2 0x2BDC DUP5 DUP5 PUSH2 0x562A JUMP JUMPDEST DUP9 PUSH2 0x257F JUMP JUMPDEST SWAP1 POP DUP6 DUP2 GT ISZERO PUSH2 0x2BF0 JUMPI DUP1 SWAP6 POP JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2C02 SWAP2 SWAP1 PUSH2 0x563D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2C1B SWAP2 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2C2B SWAP1 POP DUP7 DUP9 PUSH2 0x562A JUMP JUMPDEST SWAP8 POP POP POP POP POP POP POP PUSH2 0x2FA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP3 GT ISZERO PUSH2 0x2C75 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD49D8C23 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x402D267D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x402D267D SWAP1 PUSH2 0x2CA4 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2CC1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CE5 SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x2D08 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7C946ED7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2D14 DUP4 DUP6 PUSH2 0x562A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2D21 JUMPI POP DUP1 JUMPDEST PUSH1 0xB SLOAD PUSH1 0xA SLOAD GT PUSH2 0x2D45 JUMPI PUSH1 0x40 MLOAD PUSH4 0x356680B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD PUSH1 0xA SLOAD PUSH2 0x2D57 SWAP2 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2D65 JUMPI DUP1 SWAP2 POP JUMPDEST DUP2 ISZERO PUSH2 0x2FA5 JUMPI PUSH2 0x2D96 PUSH32 0x0 DUP10 DUP5 PUSH2 0x432D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2DE5 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E26 SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6E553F65 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 PUSH4 0x6E553F65 SWAP1 PUSH2 0x2E57 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x59CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E9A SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2EEA SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F07 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F2B SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST SWAP1 POP PUSH2 0x2F59 PUSH32 0x0 DUP12 PUSH1 0x0 PUSH2 0x432D JUMP JUMPDEST PUSH2 0x2F63 DUP2 DUP4 PUSH2 0x562A JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2F77 SWAP2 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2F90 SWAP2 SWAP1 PUSH2 0x563D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2FA0 SWAP1 POP DUP5 DUP8 PUSH2 0x563D JUMP JUMPDEST SWAP7 POP POP POP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP5 SWAP1 SSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5F1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x2FE7 SWAP1 DUP5 SWAP1 DUP7 SWAP1 PUSH2 0x541A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 DUP4 SWAP2 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x303B SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3058 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x307C SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7A2D13A DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30AC SWAP2 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x30C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30ED SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO DUP1 PUSH2 0x30FC JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x310D JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3119 DUP3 DUP8 PUSH2 0x55E1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3127 DUP6 DUP4 PUSH2 0x5616 JUMP JUMPDEST PUSH2 0x3131 SWAP1 DUP9 PUSH2 0x562A JUMP JUMPDEST SWAP1 POP PUSH2 0x313D DUP6 DUP4 PUSH2 0x589A JUMP JUMPDEST ISZERO PUSH2 0x1A3A JUMPI PUSH2 0x1A37 PUSH1 0x1 DUP3 PUSH2 0x563D JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x317F JUMPI PUSH1 0x40 MLOAD PUSH4 0xF3C3867 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3188 DUP4 PUSH2 0x2648 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x31A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x25D16C51 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x31F8 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x5934 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3217 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x323B SWAP2 SWAP1 PUSH2 0x5967 JUMP JUMPDEST POP DUP2 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x324E SWAP2 SWAP1 PUSH2 0x563D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH2 0x3260 DUP4 DUP6 PUSH2 0x43F5 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5EFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3295 SWAP3 SWAP2 SWAP1 PUSH2 0x541A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x0 SWAP1 DUP2 TIMESTAMP DUP3 GT ISZERO PUSH2 0x32E6 JUMPI PUSH5 0xE8D4A51000 PUSH1 0x17 SLOAD TIMESTAMP PUSH2 0x32C8 SWAP2 SWAP1 PUSH2 0x562A JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH2 0x32D5 SWAP2 SWAP1 PUSH2 0x55E1 JUMP JUMPDEST PUSH2 0x32DF SWAP2 SWAP1 PUSH2 0x5616 JUMP JUMPDEST SWAP1 POP PUSH2 0xD91 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xD91 JUMPI POP ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x3335 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF3C3867 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3342 DUP4 PUSH1 0x1 PUSH2 0x1DA5 JUMP JUMPDEST SWAP1 POP PUSH2 0x334D DUP5 PUSH2 0x2648 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x336D JUMPI PUSH1 0x40 MLOAD PUSH4 0x25D16C51 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x33BD SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x5934 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x33DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3400 SWAP2 SWAP1 PUSH2 0x5967 JUMP JUMPDEST POP DUP1 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3413 SWAP2 SWAP1 PUSH2 0x563D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x3423 SWAP1 POP DUP4 DUP6 PUSH2 0x44A6 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5EFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 DUP7 PUSH1 0x40 MLOAD PUSH2 0x3295 SWAP3 SWAP2 SWAP1 PUSH2 0x541A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x262F SWAP1 DUP5 SWAP1 PUSH2 0x562A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x34C5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x356680B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 PUSH2 0x34E2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO JUMPDEST ISZERO PUSH2 0x3500 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x350A DUP3 DUP3 PUSH2 0x562A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x3539 DUP4 DUP3 PUSH2 0x563D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP8 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5E3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x3579 SWAP1 DUP8 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SUB PUSH2 0x35C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x631BC21 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x35CA PUSH2 0x453F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x35D6 DUP6 PUSH2 0x456F JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x35E7 DUP7 DUP5 DUP5 PUSH2 0x46A5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x35FE DUP4 DUP4 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x4813 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x3610 DUP4 DUP6 DUP9 DUP9 DUP14 PUSH2 0x4898 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x361E DUP3 DUP3 PUSH2 0x4BA8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 TIMESTAMP PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x2 ADD SLOAD SWAP1 DUP7 ADD MLOAD PUSH32 0x7F2AD1D3BA35276F35EF140F83E3E0F17B23064FD710113D3F7A5AB30D267811 SWAP3 DUP11 SWAP3 DUP11 SWAP3 SWAP1 SWAP2 PUSH2 0x3677 SWAP2 SWAP1 PUSH2 0x1DA5 JUMP JUMPDEST PUSH2 0x368E DUP10 PUSH1 0x20 ADD MLOAD DUP11 PUSH1 0x40 ADD MLOAD PUSH2 0x17BF SWAP2 SWAP1 PUSH2 0x563D JUMP JUMPDEST DUP11 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x36A5 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x59E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP4 SWAP8 SWAP3 SWAP7 POP SWAP2 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH2 0x36E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP6 LT ISZERO PUSH2 0x3706 JUMPI PUSH1 0x40 MLOAD PUSH4 0x63BEF561 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH2 0x374B SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5E5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP14 SWAP2 DUP14 SWAP2 DUP14 SWAP2 DUP9 SWAP2 DUP15 SWAP2 ADD PUSH2 0x5A36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x19 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x377A SWAP3 SWAP2 SWAP1 PUSH2 0x5A5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x37B7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5A8F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x37D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 PUSH2 0x380E JUMPI POP DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x382C JUMPI PUSH1 0x40 MLOAD PUSH4 0x10454C99 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3837 DUP13 DUP13 DUP13 PUSH2 0x1ED8 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x385C DUP4 PUSH2 0x5666 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5E7B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP13 PUSH1 0x40 MLOAD PUSH2 0x3892 SWAP2 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x38E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39996567 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x390D SWAP1 DUP5 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3926 SWAP2 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5E3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x3957 SWAP1 DUP7 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x398A JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x39AD JUMPI PUSH1 0x40 MLOAD PUSH4 0x1A7ED0A1 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x39CE JUMPI PUSH1 0x40 MLOAD PUSH4 0x7C946ED7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x27FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x39996567 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1008 JUMPI PUSH2 0x1008 DUP4 DUP4 DUP4 PUSH2 0x4178 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AA4 SWAP2 SWAP1 PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3AC1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3AE5 SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 ADD MLOAD DUP2 MLOAD SWAP2 SWAP3 POP LT ISZERO PUSH2 0x406A JUMPI PUSH1 0x0 DUP5 MLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x3B14 JUMPI POP PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x3B78 JUMPI PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x3B6E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B50 JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x3B7A JUMP JUMPDEST DUP5 JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD DUP4 MLOAD SWAP2 SWAP3 POP PUSH2 0x3B8D SWAP2 PUSH2 0x562A JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x4039 JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3BB2 JUMPI PUSH2 0x3BB2 PUSH2 0x5650 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x3 PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x0 SUB PUSH2 0x3C05 JUMPI PUSH1 0x40 MLOAD PUSH4 0x631BC21 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x60 DUP7 ADD MLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x3C33 SWAP1 DUP4 PUSH2 0x257F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7A2D13A DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD905777E ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C72 SWAP2 SWAP1 PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C8F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CB3 SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CCF SWAP2 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3CEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D10 SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3D1E DUP6 DUP5 PUSH2 0x2FF7 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x3E24 JUMPI PUSH2 0x3D30 DUP2 DUP5 PUSH2 0x562A JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x3D6A JUMPI PUSH1 0x0 PUSH2 0x3D43 DUP3 DUP6 PUSH2 0x562A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x3D50 DUP5 DUP5 PUSH2 0x55E1 JUMP JUMPDEST PUSH2 0x3D5A SWAP2 SWAP1 PUSH2 0x5616 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D66 DUP3 DUP5 PUSH2 0x563D JUMP JUMPDEST SWAP4 POP POP JUMPDEST PUSH2 0x3D74 DUP2 DUP5 PUSH2 0x562A JUMP JUMPDEST SWAP3 POP DUP1 DUP9 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x3D88 SWAP2 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x60 DUP9 ADD DUP1 MLOAD DUP3 SWAP2 SWAP1 PUSH2 0x3D9F SWAP1 DUP4 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x40 DUP9 ADD DUP1 MLOAD DUP3 SWAP2 SWAP1 PUSH2 0x3DB6 SWAP1 DUP4 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP1 MSTORE POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x3DC7 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x3E24 JUMPI PUSH1 0x0 PUSH2 0x3DD8 DUP3 DUP7 PUSH2 0x562A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP4 SWAP1 SSTORE MLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5F1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x3E1A SWAP1 DUP9 SWAP1 DUP6 SWAP1 PUSH2 0x541A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST PUSH2 0x3E2E DUP4 DUP4 PUSH2 0x257F JUMP JUMPDEST SWAP3 POP DUP3 PUSH1 0x0 SUB PUSH2 0x3E42 JUMPI POP POP POP POP POP PUSH2 0x4027 JUMP JUMPDEST PUSH2 0x3E4C DUP6 DUP5 PUSH2 0x41D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x3E9B SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3EB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3EDC SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP10 PUSH1 0x80 ADD MLOAD DUP3 PUSH2 0x3EF0 SWAP2 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 DUP3 GT ISZERO PUSH2 0x3F27 JUMPI DUP7 DUP3 GT ISZERO PUSH2 0x3F0C JUMPI DUP7 SWAP6 POP PUSH2 0x3F3C JUMP JUMPDEST PUSH2 0x3F16 DUP7 DUP4 PUSH2 0x562A JUMP JUMPDEST PUSH2 0x3F20 SWAP1 DUP8 PUSH2 0x563D JUMP JUMPDEST SWAP6 POP PUSH2 0x3F3C JUMP JUMPDEST DUP6 DUP3 LT ISZERO PUSH2 0x3F3C JUMPI PUSH2 0x3F39 DUP3 DUP8 PUSH2 0x562A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x3F46 DUP2 DUP8 PUSH2 0x562A JUMP JUMPDEST DUP12 PUSH1 0x20 ADD DUP2 DUP2 MLOAD PUSH2 0x3F57 SWAP2 SWAP1 PUSH2 0x563D JUMP JUMPDEST SWAP1 MSTORE POP DUP11 MLOAD DUP2 SWAP1 DUP13 SWAP1 PUSH2 0x3F6B SWAP1 DUP4 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x40 DUP12 ADD DUP1 MLOAD DUP8 SWAP2 SWAP1 PUSH2 0x3F82 SWAP1 DUP4 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x0 PUSH2 0x3F91 DUP6 DUP9 PUSH2 0x563D JUMP JUMPDEST PUSH2 0x3F9B SWAP1 DUP10 PUSH2 0x562A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP4 SWAP1 SSTORE MLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5F1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x3FDD SWAP1 DUP12 SWAP1 DUP6 SWAP1 PUSH2 0x541A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x20 DUP13 ADD MLOAD DUP13 MLOAD GT PUSH2 0x3FFF JUMPI POP POP POP POP POP POP POP POP POP PUSH2 0x4039 JUMP JUMPDEST PUSH1 0x80 DUP13 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP13 ADD DUP1 MLOAD DUP9 SWAP2 SWAP1 PUSH2 0x401A SWAP1 DUP4 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP1 MSTORE POP POP POP POP POP POP POP POP POP POP JUMPDEST DUP1 PUSH2 0x4031 DUP2 PUSH2 0x5666 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3B95 JUMP JUMPDEST POP DUP2 MLOAD PUSH1 0x20 DUP4 ADD MLOAD LT ISZERO PUSH2 0x4060 JUMPI PUSH1 0x40 MLOAD PUSH4 0x96D80433 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x9 SSTORE JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 POP SWAP1 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP3 DUP5 GT DUP1 ISZERO PUSH2 0x408F JUMPI POP PUSH2 0x2710 DUP2 LT JUMPDEST ISZERO PUSH2 0x40D4 JUMPI PUSH2 0x2710 PUSH2 0x40A1 DUP3 DUP7 PUSH2 0x55E1 JUMP JUMPDEST PUSH2 0x40AB SWAP2 SWAP1 PUSH2 0x5616 JUMP JUMPDEST PUSH2 0x40B5 DUP5 DUP7 PUSH2 0x562A JUMP JUMPDEST GT ISZERO PUSH2 0x40D4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7F65E39 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x40DE DUP6 DUP8 PUSH2 0x38AC JUMP JUMPDEST PUSH2 0x40E8 DUP4 DUP4 PUSH2 0x562A JUMP JUMPDEST PUSH1 0xA SSTORE PUSH2 0x4116 PUSH32 0x0 DUP9 DUP6 PUSH2 0x2802 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4129 DUP3 DUP3 PUSH2 0x1744 JUMP JUMPDEST PUSH2 0xEB3 JUMPI PUSH2 0x4136 DUP2 PUSH2 0x4C49 JUMP JUMPDEST PUSH2 0x4141 DUP4 PUSH1 0x20 PUSH2 0x4C5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4152 SWAP3 SWAP2 SWAP1 PUSH2 0x5ACC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x1083 SWAP2 PUSH1 0x4 ADD PUSH2 0x5150 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x41BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x17E286B PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2108 DUP5 DUP5 PUSH2 0x41CE DUP6 DUP6 PUSH2 0x562A JUMP JUMPDEST PUSH2 0x1ED8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42B7 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA28A477 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4204 SWAP2 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4221 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4245 SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x4271 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x428E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42B2 SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5D043B29 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xBA087652 SWAP1 PUSH2 0x42EA SWAP1 DUP5 SWAP1 ADDRESS SWAP1 DUP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x5B1E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4309 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27FC SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 PUSH2 0x434A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST ISZERO PUSH2 0x4368 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH2 0x4396 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x59BE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x43D9 SWAP2 SWAP1 PUSH2 0x5967 JUMP JUMPDEST PUSH2 0x1008 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1083 SWAP1 PUSH2 0x5B6C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x441E JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4428 PUSH2 0x2093 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4434 PUSH2 0x1D6A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 SUB PUSH2 0x4447 JUMPI POP DUP5 PUSH2 0x448C JUMP JUMPDEST DUP6 DUP3 GT ISZERO PUSH2 0x4474 JUMPI PUSH2 0x4459 DUP7 DUP4 PUSH2 0x562A JUMP JUMPDEST PUSH2 0x4463 DUP5 DUP9 PUSH2 0x55E1 JUMP JUMPDEST PUSH2 0x446D SWAP2 SWAP1 PUSH2 0x5616 JUMP JUMPDEST SWAP1 POP PUSH2 0x448C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1083 SWAP1 PUSH2 0x5BA2 JUMP JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x44A0 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0xD91 JUMP JUMPDEST PUSH2 0xDCB DUP2 DUP7 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x44CD JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x44F5 SWAP1 DUP5 SWAP1 PUSH2 0x563D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x450E SWAP2 SWAP1 PUSH2 0x563D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5E3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x3957 SWAP1 DUP7 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4549 PUSH2 0x32A5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x4556 JUMPI POP JUMP JUMPDEST TIMESTAMP PUSH1 0x15 SLOAD GT ISZERO PUSH2 0x4565 JUMPI TIMESTAMP PUSH1 0x17 SSTORE JUMPDEST PUSH2 0x2028 DUP2 ADDRESS PUSH2 0x38AC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45A0 SWAP2 SWAP1 PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x45BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x45E1 SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7A2D13A DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4611 SWAP2 SWAP1 PUSH2 0x4ECA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x462E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4652 SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP2 SWAP3 POP DUP1 DUP3 DUP5 GT ISZERO PUSH2 0x468B JUMPI PUSH2 0x4684 DUP4 DUP6 PUSH2 0x562A JUMP JUMPDEST SWAP2 POP PUSH2 0x4698 JUMP JUMPDEST PUSH2 0x4695 DUP5 DUP5 PUSH2 0x562A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 SWAP8 SWAP1 SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x46AD PUSH2 0x4E29 JUMP JUMPDEST PUSH2 0x46B5 PUSH2 0x4E29 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xF2B JUMPI PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x921F8A8F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x921F8A8F SWAP1 PUSH2 0x46FA SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x5BB2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4718 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x473C SWAP2 SWAP1 PUSH2 0x5BCD JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE DUP1 DUP3 MSTORE ISZERO PUSH2 0xF2B JUMPI PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7D3277F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x47CC SWAP2 SWAP1 PUSH2 0x5C20 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP5 ADD MSTORE SWAP1 POP PUSH2 0xFFFF DUP2 AND ISZERO PUSH2 0x2576 JUMPI DUP2 MLOAD PUSH2 0x2710 SWAP1 PUSH2 0x47FB SWAP1 PUSH2 0xFFFF DUP5 AND SWAP1 PUSH2 0x55E1 JUMP JUMPDEST PUSH2 0x4805 SWAP2 SWAP1 PUSH2 0x5616 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x481B PUSH2 0x4E5A JUMP JUMPDEST PUSH2 0x4823 PUSH2 0x4E5A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x482F DUP6 DUP8 PUSH2 0x563D JUMP JUMPDEST GT ISZERO PUSH2 0xF2B JUMPI PUSH2 0x4849 PUSH2 0x4842 DUP6 DUP8 PUSH2 0x563D JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1F70 JUMP JUMPDEST DUP2 MLOAD DUP3 SWAP1 PUSH2 0x4858 SWAP1 DUP4 SWAP1 PUSH2 0x563D JUMP JUMPDEST SWAP1 MSTORE POP DUP4 ISZERO PUSH2 0xF2B JUMPI PUSH2 0x4875 PUSH2 0x486E DUP5 DUP7 PUSH2 0x562A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F70 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE DUP3 ISZERO PUSH2 0xF2B JUMPI PUSH2 0x488B DUP4 PUSH1 0x0 PUSH2 0x1F70 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP8 PUSH1 0x20 ADD MLOAD GT ISZERO PUSH2 0x49FD JUMPI PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x49A0 SWAP3 SWAP2 PUSH2 0x42B2 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH2 0x490A SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH1 0x4 ADD PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4927 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x494B SWAP2 SWAP1 PUSH2 0x55AA JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP3 PUSH4 0xDD62ED3E SWAP3 PUSH2 0x4271 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x5C53 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD DUP2 SWAP1 MSTORE PUSH1 0xD SLOAD PUSH2 0x49E1 SWAP2 PUSH32 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 ADDRESS SWAP1 PUSH2 0x2720 JUMP JUMPDEST DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x49F7 SWAP2 SWAP1 PUSH2 0x563D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP6 ISZERO PUSH2 0x4A4D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x4A2E SWAP1 DUP5 SWAP1 PUSH2 0x563D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4A47 SWAP2 SWAP1 PUSH2 0x563D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP8 PUSH1 0x20 ADD MLOAD DUP8 PUSH2 0x4A5F SWAP2 SWAP1 PUSH2 0x563D JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x4A6D JUMPI POP PUSH1 0x14 SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x4A8E JUMPI PUSH2 0x4A8B DUP8 PUSH1 0x20 ADD MLOAD DUP8 PUSH2 0x4A85 SWAP2 SWAP1 PUSH2 0x563D JUMP JUMPDEST ADDRESS PUSH2 0x43F5 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x4ADE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x4ABF SWAP1 DUP5 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4AD8 SWAP2 SWAP1 PUSH2 0x562A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x4AF9 SWAP1 DUP4 SWAP1 PUSH2 0x562A JUMP JUMPDEST DUP10 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x4B5A JUMPI DUP9 MLOAD PUSH2 0x4B13 SWAP1 PUSH2 0x42B2 DUP5 DUP5 PUSH2 0x563D JUMP JUMPDEST DUP1 DUP11 MSTORE PUSH2 0x4B20 SWAP1 ADDRESS PUSH2 0x38AC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B30 DUP11 PUSH1 0x0 ADD MLOAD DUP5 PUSH2 0x257F JUMP JUMPDEST SWAP1 POP PUSH2 0x4B3C DUP2 DUP5 PUSH2 0x562A JUMP JUMPDEST DUP11 MLOAD SWAP1 SWAP4 POP PUSH2 0x4B4C SWAP1 DUP3 SWAP1 PUSH2 0x562A JUMP JUMPDEST PUSH2 0x4B56 SWAP1 DUP4 PUSH2 0x562A JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH1 0x20 DUP10 ADD MLOAD ISZERO PUSH2 0x4B7F JUMPI PUSH1 0x20 DUP10 ADD MLOAD PUSH1 0xD SLOAD PUSH2 0x4B7F SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x44A6 JUMP JUMPDEST PUSH1 0x40 DUP10 ADD MLOAD ISZERO PUSH2 0x4B9B JUMPI PUSH2 0x4B9B DUP10 PUSH1 0x40 ADD MLOAD DUP10 PUSH1 0x60 ADD MLOAD PUSH2 0x44A6 JUMP JUMPDEST SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BB4 DUP3 DUP5 PUSH2 0x563D JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x4C3F JUMPI PUSH1 0x0 TIMESTAMP PUSH1 0x15 SLOAD GT ISZERO PUSH2 0x4BE3 JUMPI TIMESTAMP PUSH1 0x15 SLOAD PUSH2 0x4BD6 SWAP2 SWAP1 PUSH2 0x562A JUMP JUMPDEST PUSH2 0x4BE0 SWAP1 DUP6 PUSH2 0x55E1 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x14 SLOAD DUP6 PUSH2 0x4BF4 SWAP2 SWAP1 PUSH2 0x55E1 JUMP JUMPDEST PUSH2 0x4BFE SWAP1 DUP5 PUSH2 0x563D JUMP JUMPDEST PUSH2 0x4C08 SWAP2 SWAP1 PUSH2 0x5616 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x4C1A PUSH5 0xE8D4A51000 DUP6 PUSH2 0x55E1 JUMP JUMPDEST PUSH2 0x4C24 SWAP2 SWAP1 PUSH2 0x5616 JUMP JUMPDEST PUSH1 0x16 SSTORE PUSH2 0x4C31 DUP2 TIMESTAMP PUSH2 0x563D JUMP JUMPDEST PUSH1 0x15 SSTORE POP POP TIMESTAMP PUSH1 0x17 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x16 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD91 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x4C6A DUP4 PUSH1 0x2 PUSH2 0x55E1 JUMP JUMPDEST PUSH2 0x4C75 SWAP1 PUSH1 0x2 PUSH2 0x563D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4C8C JUMPI PUSH2 0x4C8C PUSH2 0x4F60 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4CB6 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x4CD1 JUMPI PUSH2 0x4CD1 PUSH2 0x5650 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x4D00 JUMPI PUSH2 0x4D00 PUSH2 0x5650 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x4D24 DUP5 PUSH1 0x2 PUSH2 0x55E1 JUMP JUMPDEST PUSH2 0x4D2F SWAP1 PUSH1 0x1 PUSH2 0x563D JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x4DA7 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x4D63 JUMPI PUSH2 0x4D63 PUSH2 0x5650 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4D79 JUMPI PUSH2 0x4D79 PUSH2 0x5650 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x4DA0 DUP2 PUSH2 0x5C61 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D32 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xE7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1083 SWAP1 PUSH2 0x5CAA JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x4E19 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x4E19 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 CALLDATALOAD AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x4DE6 JUMP JUMPDEST POP PUSH2 0x4E25 SWAP3 SWAP2 POP PUSH2 0x4E7B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x4E25 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4E7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD91 DUP3 PUSH2 0x4E90 JUMP JUMPDEST PUSH2 0x4EB0 DUP2 PUSH2 0x4E9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xD91 DUP3 DUP5 PUSH2 0x4EA7 JUMP JUMPDEST DUP1 PUSH2 0x4EB0 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xD91 DUP3 DUP5 PUSH2 0x4EC4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND JUMPDEST DUP2 EQ PUSH2 0x2028 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xD91 DUP2 PUSH2 0x4ED8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F0F JUMPI PUSH2 0x4F0F PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF2B DUP5 DUP5 PUSH2 0x4EEF JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x4EB0 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xD91 DUP3 DUP5 PUSH2 0x4F1B JUMP JUMPDEST DUP1 PUSH2 0x4EE4 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xD91 DUP2 PUSH2 0x4F31 JUMP JUMPDEST PUSH2 0x4EE4 DUP2 PUSH2 0x4E9C JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xD91 DUP2 PUSH2 0x4F42 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x4F7F DUP3 PUSH2 0x4F56 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x4F9C JUMPI PUSH2 0x4F9C PUSH2 0x4F60 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FAE PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x4FBA DUP3 DUP3 PUSH2 0x4F76 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x4FD8 JUMPI PUSH2 0x4FD8 PUSH2 0x4F60 JUMP JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FF5 PUSH2 0x4FF0 DUP5 PUSH2 0x4FBF JUMP JUMPDEST PUSH2 0x4FA3 JUMP JUMPDEST DUP4 DUP2 MSTORE SWAP1 POP PUSH1 0x20 DUP1 DUP3 ADD SWAP1 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x5014 JUMPI PUSH2 0x5014 PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5038 JUMPI DUP1 PUSH2 0x5029 DUP9 DUP3 PUSH2 0x4F4B JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x5016 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5056 JUMPI PUSH2 0x5056 PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF2B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4FE2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x5081 JUMPI PUSH2 0x5081 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x508D DUP9 DUP9 PUSH2 0x4F37 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x509E DUP9 DUP3 DUP10 ADD PUSH2 0x4F4B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x50AF DUP9 DUP3 DUP10 ADD PUSH2 0x4F4B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x50C0 DUP9 DUP3 DUP10 ADD PUSH2 0x4F37 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x50DF JUMPI PUSH2 0x50DF PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x50EB DUP9 DUP3 DUP10 ADD PUSH2 0x5042 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5113 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x50FB JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5126 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH2 0x513D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x50F8 JUMP JUMPDEST PUSH2 0x5146 DUP2 PUSH2 0x4F56 JUMP JUMPDEST SWAP1 SWAP4 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xE7C DUP2 DUP5 PUSH2 0x511C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5176 JUMPI PUSH2 0x5176 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF2B DUP5 DUP5 PUSH2 0x4F37 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5198 JUMPI PUSH2 0x5198 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x51A4 DUP6 DUP6 PUSH2 0x4F4B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x51B5 DUP6 DUP3 DUP7 ADD PUSH2 0x4F37 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x51D4 JUMPI PUSH2 0x51D4 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF2B DUP5 DUP5 PUSH2 0x4F4B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x51F8 JUMPI PUSH2 0x51F8 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5204 DUP7 DUP7 PUSH2 0x4F4B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x5215 DUP7 DUP3 DUP8 ADD PUSH2 0x4F4B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x5226 DUP7 DUP3 DUP8 ADD PUSH2 0x4F37 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5246 JUMPI PUSH2 0x5246 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5252 DUP6 DUP6 PUSH2 0x4F37 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x51B5 DUP6 DUP3 DUP7 ADD PUSH2 0x4F4B JUMP JUMPDEST PUSH1 0xFF DUP2 AND PUSH2 0x4EB0 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xD91 DUP3 DUP5 PUSH2 0x5263 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5292 JUMPI PUSH2 0x5292 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x529E DUP7 DUP7 PUSH2 0x4F4B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x52AF DUP7 DUP3 DUP8 ADD PUSH2 0x4F37 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x52CE JUMPI PUSH2 0x52CE PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5226 DUP7 DUP3 DUP8 ADD PUSH2 0x5042 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x52E8 DUP3 DUP8 PUSH2 0x4EC4 JUMP JUMPDEST PUSH2 0x52F5 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x4EC4 JUMP JUMPDEST PUSH2 0x5302 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4EC4 JUMP JUMPDEST PUSH2 0xDCB PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x4EC4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD91 PUSH2 0x5323 PUSH2 0x5320 DUP5 PUSH2 0x4E90 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x4E90 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD91 DUP3 PUSH2 0x530F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD91 DUP3 PUSH2 0x5328 JUMP JUMPDEST PUSH2 0x4EB0 DUP2 PUSH2 0x5333 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xD91 DUP3 DUP5 PUSH2 0x533E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x536A JUMPI PUSH2 0x536A PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x5384 JUMPI PUSH2 0x5384 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x4078 JUMPI PUSH2 0x4078 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x53B5 JUMPI PUSH2 0x53B5 PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x53CE JUMPI PUSH2 0x53CE PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x53DA DUP6 DUP3 DUP7 ADD PUSH2 0x5355 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x4EE4 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xD91 DUP2 PUSH2 0x53E6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x540E JUMPI PUSH2 0x540E PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF2B DUP5 DUP5 PUSH2 0x53EE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x5428 DUP3 DUP6 PUSH2 0x4EC4 JUMP JUMPDEST PUSH2 0xE7C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4EC4 JUMP JUMPDEST PUSH1 0xFF DUP2 AND PUSH2 0x4EE4 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xD91 DUP2 PUSH2 0x5435 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x5467 JUMPI PUSH2 0x5467 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5473 DUP11 DUP11 PUSH2 0x4F4B JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x5484 DUP11 DUP3 DUP12 ADD PUSH2 0x4F4B JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x5495 DUP11 DUP3 DUP12 ADD PUSH2 0x4F37 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x54A6 DUP11 DUP3 DUP12 ADD PUSH2 0x4F37 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x54B7 DUP11 DUP3 DUP12 ADD PUSH2 0x543E JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x54C8 DUP11 DUP3 DUP12 ADD PUSH2 0x4F37 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x54D9 DUP11 DUP3 DUP12 ADD PUSH2 0x4F37 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x54FE JUMPI PUSH2 0x54FE PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5252 DUP6 DUP6 PUSH2 0x4F4B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x5534 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x5546 JUMPI PUSH2 0x5546 PUSH2 0x550A JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xD91 DUP2 PUSH1 0x2F DUP2 MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x20 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xD91 DUP2 PUSH2 0x4F31 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x55BF JUMPI PUSH2 0x55BF PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF2B DUP5 DUP5 PUSH2 0x559F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x55FB JUMPI PUSH2 0x55FB PUSH2 0x55CB JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x5625 JUMPI PUSH2 0x5625 PUSH2 0x5600 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xD91 JUMPI PUSH2 0xD91 PUSH2 0x55CB JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xD91 JUMPI PUSH2 0xD91 PUSH2 0x55CB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 SUB PUSH2 0x5679 JUMPI PUSH2 0x5679 PUSH2 0x55CB JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x568C DUP4 DUP4 PUSH2 0x4EA7 JUMP JUMPDEST POP POP PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7C PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x4F4B JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 ADD SWAP4 POP DUP2 DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x56E0 JUMPI PUSH2 0x56C5 DUP3 DUP5 PUSH2 0x5694 JUMP JUMPDEST PUSH2 0x56CF DUP9 DUP3 PUSH2 0x5680 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x56B3 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xF2B DUP2 DUP5 DUP7 PUSH2 0x56A3 JUMP JUMPDEST DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x573C JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x571B JUMPI PUSH2 0x571B PUSH2 0x55CB JUMP JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x5729 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST DUP1 MUL PUSH2 0x5735 DUP6 PUSH1 0x1 SHR SWAP1 JUMP JUMPDEST SWAP5 POP PUSH2 0x5700 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x5754 JUMPI POP PUSH1 0x1 PUSH2 0xE7C JUMP JUMPDEST DUP2 PUSH2 0x5761 JUMPI POP PUSH1 0x0 PUSH2 0xE7C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x5777 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x5781 JUMPI PUSH2 0x57AE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xE7C JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x5792 JUMPI PUSH2 0x5792 PUSH2 0x55CB JUMP JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x57A8 JUMPI PUSH2 0x57A8 PUSH2 0x55CB JUMP JUMPDEST POP PUSH2 0xE7C JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x57E1 JUMPI POP DUP2 DUP2 EXP DUP4 DUP2 GT ISZERO PUSH2 0x57DC JUMPI PUSH2 0x57DC PUSH2 0x55CB JUMP JUMPDEST PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x57EE DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x56FD JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x5804 JUMPI PUSH2 0x5804 PUSH2 0x55CB JUMP JUMPDEST MUL SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7C PUSH1 0x0 NOT DUP5 DUP5 PUSH2 0x5745 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD91 PUSH2 0x5320 DUP4 DUP2 JUMP JUMPDEST PUSH2 0x4EB0 DUP2 PUSH2 0x5830 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xD91 DUP3 DUP5 PUSH2 0x583C JUMP JUMPDEST PUSH1 0x1F DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE SWAP2 POP JUMPDEST POP PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xD91 DUP2 PUSH2 0x5853 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x58A9 JUMPI PUSH2 0x58A9 PUSH2 0x5600 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x58BC DUP3 DUP6 PUSH2 0x4EA7 JUMP JUMPDEST PUSH2 0xE7C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4F1B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D3 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 DUP4 ADD DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x56E0 JUMPI DUP2 MLOAD PUSH2 0x58F6 DUP9 DUP3 PUSH2 0x5680 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x58E2 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x5915 DUP3 DUP7 PUSH2 0x4EA7 JUMP JUMPDEST PUSH2 0x5922 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4EC4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0xDCB DUP2 DUP5 PUSH2 0x58C9 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x5942 DUP3 DUP7 PUSH2 0x4EA7 JUMP JUMPDEST PUSH2 0x594F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4EA7 JUMP JUMPDEST PUSH2 0xF2B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4EC4 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xD91 DUP2 PUSH2 0x53E6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x597C JUMPI PUSH2 0x597C PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF2B DUP5 DUP5 PUSH2 0x595C JUMP JUMPDEST PUSH1 0xF DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD PUSH15 0x1D1C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL DUP2 MSTORE SWAP2 POP PUSH2 0x5883 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xD91 DUP2 PUSH2 0x5988 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x5428 DUP3 DUP6 PUSH2 0x4EA7 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x59DA DUP3 DUP6 PUSH2 0x4EC4 JUMP JUMPDEST PUSH2 0xE7C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4EA7 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD PUSH2 0x59F5 DUP3 DUP10 PUSH2 0x4EC4 JUMP JUMPDEST PUSH2 0x5A02 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x4EC4 JUMP JUMPDEST PUSH2 0x5A0F PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x4EC4 JUMP JUMPDEST PUSH2 0x5A1C PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x4EC4 JUMP JUMPDEST PUSH2 0x5A29 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x4EC4 JUMP JUMPDEST PUSH2 0x1A3A PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x4EC4 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD PUSH2 0x5A44 DUP3 DUP10 PUSH2 0x4EC4 JUMP JUMPDEST PUSH2 0x5A51 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x4EA7 JUMP JUMPDEST PUSH2 0x5A0F PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x4EA7 JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x5A75 DUP3 DUP6 PUSH2 0x4EC4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x5A85 DUP3 DUP5 PUSH2 0x4EC4 JUMP JUMPDEST POP PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x5A9D DUP3 DUP8 PUSH2 0x4EC4 JUMP JUMPDEST PUSH2 0x52F5 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x5263 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AB4 DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5AC2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x50F8 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH23 0x20B1B1B2B9B9A1B7B73A3937B61D1030B1B1B7BAB73A1 PUSH1 0x4D SHL DUP2 MSTORE PUSH1 0x17 ADD PUSH1 0x0 PUSH2 0x5AF8 DUP3 DUP6 PUSH2 0x5AAA JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL DUP2 MSTORE PUSH1 0x11 ADD SWAP2 POP PUSH2 0xF2B DUP3 DUP5 PUSH2 0x5AAA JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x5B2C DUP3 DUP7 PUSH2 0x4EC4 JUMP JUMPDEST PUSH2 0x5B39 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4EA7 JUMP JUMPDEST PUSH2 0xF2B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4EA7 JUMP JUMPDEST PUSH1 0xF DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD PUSH15 0x185C1C1C9BDD985B0819985A5B1959 PUSH1 0x8A SHL DUP2 MSTORE SWAP2 POP PUSH2 0x5883 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xD91 DUP2 PUSH2 0x5B46 JUMP JUMPDEST PUSH1 0xF DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD PUSH15 0xC2DADEEADCE840E8DEDE40D0D2CED PUSH1 0x8B SHL DUP2 MSTORE SWAP2 POP PUSH2 0x5883 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xD91 DUP2 PUSH2 0x5B7C JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x5BC0 DUP3 DUP7 PUSH2 0x4EA7 JUMP JUMPDEST PUSH2 0x594F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4EC4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5BE3 JUMPI PUSH2 0x5BE3 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5BEF DUP6 DUP6 PUSH2 0x559F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x51B5 DUP6 DUP3 DUP7 ADD PUSH2 0x559F JUMP JUMPDEST PUSH2 0xFFFF DUP2 AND PUSH2 0x4EE4 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xD91 DUP2 PUSH2 0x5C00 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xD91 DUP2 PUSH2 0x4F42 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5C36 JUMPI PUSH2 0x5C36 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5C42 DUP6 DUP6 PUSH2 0x5C0A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x51B5 DUP6 DUP3 DUP7 ADD PUSH2 0x5C15 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x59DA DUP3 DUP6 PUSH2 0x4EA7 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x5C70 JUMPI PUSH2 0x5C70 PUSH2 0x55CB JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5883 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xD91 DUP2 PUSH2 0x5C78 JUMP INVALID ISZERO 0x2E 0xBB 0xA5 PUSH12 0x9738EE3D8BAEA1B76FA31DCD 0xCD PUSH26 0xB1929BFEA7D58EE12CFDF1A653CD9F023A942EE35097EAD74B25 SDIV 0xBE 0xA9 CALLCODE 0xC5 0xD4 PUSH21 0x65DB92DD195CF7F01A41CFE1633076A97F32AE349B 0x28 PUSH24 0x2E7B1483F67A926F150CBC501D02BDBD77389325ABC723F4 0xDD PUSH3 0x68E1C3 PUSH21 0x639E36D629C765285EE7003913389D582C300F186D 0xDE SWAP8 PUSH24 0x7D215DB24FB9FEE4DED85C66B422ABD7162A1CAA6ED3EC4C SUB 0x1F PUSH13 0xD29ADA52D45F7CCFF42F059D4E SELFBALANCE 0xC3 CREATE 0x27 0xC4 DIFFICULTY 0x27 0x22 JUMPI 0x26 PUSH16 0x7E88B981E142F0AA38FBFD78EA672C1C MULMOD 0xCD SWAP6 0xC5 BYTE 0xF9 POP SWAP16 PUSH5 0x6F3615FF00 PUSH18 0xAAE8652BD821471EE9037FD72C862F91C9D8 SWAP14 PUSH2 0x35B1 SWAP9 PUSH20 0xB921C90B702CB2E175C371B8430026B9577E6911 NOT 0xAE JUMP GAS 0xAB DUP9 DUP12 0xCA 0x5E NOT 0xE2 GAS SGT 0xDB PUSH28 0xC9144305BF55CB0F3F4D724F730E5ACDD622A0E761830CC61F2707E 0xA7 0xBB SGT DUP1 ADDMOD 0xBF SWAP14 0xDA PUSH32 0x7D34C77736D0A116604E95EA16F206625BAD3D9112D5609B8D356E6FBD514CD1 0xF6 SWAP10 DUP1 0xD4 0xCE 0x2B RETURNDATACOPY PUSH15 0x68E1789ACE7CBB3CDF689B8EA3E9D2 PUSH6 0xF66BC4E0A990 PUSH10 0x268217017D38D2A5A559 0xAB 0xC6 0x27 NOT 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF PUSH15 0x71EDAE12B1B97F4D1F60370FEF1010 0x5F LOG2 STATICCALL 0xAE ADD 0x26 GT 0x4A AND SWAP13 PUSH5 0x845D6126C9 DUP13 JUMPDEST 0xE1 0xE5 0xEB 0xEC PUSH30 0x5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B9256F430D649A DUP7 BLOCKHASH 0xE4 DUP16 0xF9 0xBF 0xBC CALLDATALOAD EXTCODESIZE EXTCODEHASH SWAP10 0xED PUSH4 0x1638578 0x21 0xB3 0xB4 SMOD 0x5E CODESIZE PUSH18 0xDAFBF5900D80DEF0427DAAC599092FCB16B2 XOR ADDMOD 0xEC PUSH9 0xDD9A2E1EAE89D1E8DB 0x21 CALLDATALOAD PUSH20 0x75A18EAEA71A088B547B8C932B48861853B3434D SWAP11 ORIGIN BLOCKHASH 0xB9 DIFFICULTY PUSH7 0xC607E28B696595 0xDC 0xBC SHR SDIV 0x24 0xF BALANCE SELFDESTRUCT GASPRICE 0xD0 PUSH8 0xEF1EE35CE4997762 PUSH22 0x2E3A095284754544F4C709D75E2B8821AD6E0E26207E 0xC 0xB4 0xD2 TIMESTAMP 0xD0 PUSH31 0xEB1CBB1CFD853E645BDCD27CC5484F952F0DBBE8C2C0170206C50EC0CAFA1C 0xD 0xBD SUB 0xE7 RETURNDATACOPY PUSH8 0xC2A960178DF30A0A ADDRESS 0xEE 0x2E PUSH10 0xD1171AC0A63777A6733C 0xDA 0x21 0xAE 0xC9 0xED RETURNDATASIZE BASEFEE LOG4 REVERT GT CALLCODE PUSH20 0xC934A691DEC5E5589CA2646970667358221220DC 0xD9 ADDRESS 0xA9 DUP11 PUSH19 0x6B092EC8B55124692BECB7843441F6C97E5458 0xC8 0xF7 0xEC SSTORE CALLER DUP16 0xBC PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ","sourceMap":"1031:74998:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2499:26:23;;;;;-1:-1:-1;;;;;2499:26:23;;;;;;;;;;:::i;:::-;;;;;;;;70717:102:11;;;:::i;:::-;;;;;;;:::i;2732:202:0:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4198:74:23:-;;-1:-1:-1;;;;;;;;;;;4198:74:23;;66167:441:11;;;;;;:::i;:::-;;:::i;2198:27::-;;;:::i;:::-;;;;;;;:::i;71963:151::-;;;;;;:::i;:::-;;:::i;1751:31:23:-;;;;;;2850:34;;;;;;66829:144:11;;;;;;:::i;:::-;;:::i;74351:149::-;;;;;;:::i;:::-;;:::i;3954:80:23:-;;-1:-1:-1;;;;;;;;;;;3954:80:23;;62197:144:11;;;;;;:::i;:::-;;:::i;:::-;;2541:44;;;;;70075:118;;;:::i;61325:133::-;;;;;;:::i;:::-;;:::i;67752:279::-;;;;;;:::i;:::-;;:::i;4504:129:0:-;;;;;;:::i;:::-;;:::i;2954:35:23:-;;;;;;53668:409:11;;;;;;:::i;:::-;;:::i;2503:32::-;;;;;2441:33;;;;;4929:145:0;;;;;;:::i;:::-;;:::i;70507:98:11:-;70589:8;70507:98;;;;;;:::i;73791:356::-;;;;;;:::i;:::-;;:::i;3427:31:23:-;;;;;;6038:214:0;;;;;;:::i;:::-;;:::i;439:56:23:-;;482:13;439:56;;70285:96:11;70368:5;70285:96;;68305:164;;;;;;:::i;:::-;;:::i;738:52:23:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1607:30::-;;;;;;272:38;;308:2;272:38;;72323:124:11;;;;;;:::i;:::-;;:::i;59760:1444::-;;;;;;:::i;:::-;;:::i;63123:187::-;;;;;;:::i;:::-;;:::i;2384:29::-;;;;;;;;;;;;:::i;51582:182::-;;;;;;:::i;:::-;;:::i;54261:234::-;;;;;;:::i;:::-;;:::i;3864:84:23:-;;-1:-1:-1;;;;;;;;;;;3864:84:23;;3704:66;;-1:-1:-1;;;;;;;;;;;3704:66:23;;3464:138;;-1:-1:-1;;;;;;;;;;;3464:138:23;;1990:25;;;;;-1:-1:-1;;;;;1990:25:23;;;3051:34;;;;;;2392:41;;;;;;:::i;:::-;;;;;;;;;;;;;;;;75125:418:11;;;;;;:::i;:::-;;:::i;4530:80:23:-;;-1:-1:-1;;;;;;;;;;;4530:80:23;;57793:145:11;;;;;;:::i;:::-;;:::i;51943:529::-;;;;;;:::i;:::-;;:::i;3622:76:23:-;;-1:-1:-1;;;;;;;;;;;3622:76:23;;73236:184:11;;;;;;:::i;:::-;;:::i;56830:172::-;;;;;;:::i;:::-;;:::i;57993:283::-;;;:::i;64190:162::-;;;;;;:::i;:::-;;:::i;69762:217::-;;;;;;:::i;:::-;;:::i;535:44:23:-;;;;;;;;;;;;;;;-1:-1:-1;;;535:44:23;;;;;3236:41;;;;;;:::i;:::-;;;;;;;;;;;;;;54609:214:11;;;;;;:::i;:::-;;:::i;3151:31:23:-;;;;;;2153:34;;;;;-1:-1:-1;;;;;2153:34:23;;;3021:145:0;;;;;;:::i;:::-;;:::i;64559:156:11:-;;;;;;:::i;:::-;;:::i;2274:29::-;;;:::i;2242:40:23:-;;;;;;:::i;:::-;;;;;;;;;;;;;;58805:141:11;;;:::i;52676:198::-;;;;;;:::i;:::-;;:::i;2067:33:23:-;;;;;-1:-1:-1;;;;;2067:33:23;;;4438:86;;-1:-1:-1;;;;;;;;;;;4438:86:23;;2153:49:0;;2198:4;2153:49;;68707:164:11;;;;;;:::i;:::-;;:::i;56429:166::-;;;;;;:::i;:::-;;:::i;67190:273::-;;;;;;:::i;:::-;;:::i;3776:82:23:-;;-1:-1:-1;;;;;;;;;;;3776:82:23;;4278:68;;-1:-1:-1;;;;;;;;;;;4278:68:23;;2631:32;;;;;-1:-1:-1;;;;;2631:32:23;;;71667:145:11;;;;;;:::i;:::-;;:::i;59147:175::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;61545:143::-;;;;;;:::i;:::-;;:::i;952:27:23:-;;;;;;;;;53061:366:11;;;;;;:::i;:::-;;:::i;4352:80:23:-;;-1:-1:-1;;;;;;;;;;;4352:80:23;;3283:138;;3326:95;3283:138;;72650:213:11;;;;;;:::i;:::-;;:::i;70970:151::-;;;;;;:::i;:::-;;:::i;4694:64:23:-;;-1:-1:-1;;;;;;;;;;;4694:64:23;;1456:30;;;;;;57340:181:11;;;;;;:::i;:::-;;:::i;4040:82:23:-;;-1:-1:-1;;;;;;;;;;;4040:82:23;;69338:282:11;;;;;;:::i;:::-;;:::i;57082:178::-;;;;;;:::i;:::-;;:::i;5354:147:0:-;;;;;;:::i;:::-;;:::i;65235:393:11:-;;;;;;:::i;:::-;;:::i;58439:108::-;;;:::i;75549:142::-;;;;;;:::i;:::-;-1:-1:-1;;;;;75658:17:11;;;75632:7;75658:17;;;:10;:17;;;;;;;;:26;;;;;;;;;;;;;75549:142;55376:763;;;;;;:::i;:::-;;:::i;63380:542::-;;;:::i;1901:27:23:-;;;;;;4616:72;;-1:-1:-1;;;;;;;;;;;4616:72:23;;4128:64;;-1:-1:-1;;;;;;;;;;;4128:64:23;;62548:350:11;;;;;;:::i;:::-;;:::i;1348:32:23:-;;;;;;2772:20;;;;;-1:-1:-1;;;2772:20:23;;;;;;345:39;;379:5;345:39;;4764:74;;-1:-1:-1;;;;;;;;;;;4764:74:23;;842:29;;;;;;:::i;:::-;;:::i;70717:102:11:-;70772:7;70798:14;:12;:14::i;:::-;70791:21;;70717:102;:::o;2732:202:0:-;2817:4;-1:-1:-1;;;;;;2840:47:0;;-1:-1:-1;;;2840:47:0;;:87;;-1:-1:-1;;;;;;;;;;937:40:7;;;2891:36:0;2833:94;2732:202;-1:-1:-1;;2732:202:0:o;66167:441:11:-;66365:7;2261:21:2;:19;:21::i;:::-;66384:14:11::1;66401:45;66418:6;66426:19;66401:16;:45::i;:::-;66384:62;;66527:74;66535:10;66547:8;66557:5;66564:6;66572;66580:7;66589:11;66527:7;:74::i;:::-;66520:81;;;2303:20:2::0;1716:1;2809:22;;2629:209;2303:20;66167:441:11;;;;;;;:::o;2198:27::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;71963:151::-;72036:7;72062:45;72079:6;72087:19;72062:16;:45::i;66829:144::-;66906:4;66929:37;66938:10;66950:7;66959:6;66929:8;:37::i;:::-;66922:44;66829:144;-1:-1:-1;;;66829:144:11:o;74351:149::-;74424:7;74450:43;74467:6;74475:17;74450:16;:43::i;62197:144::-;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;62303:31:11::1;62319:8;62329:4;62303:15;:31::i;:::-;62197:144:::0;;:::o;70075:118::-;70146:7;70172:14;:12;:14::i;61325:133::-;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;61426:25:11::1;61439:11;61426:12;:25::i;67752:279::-:0;67851:4;-1:-1:-1;;;;;67871:25:11;;67891:4;67871:25;;:51;;-1:-1:-1;;;;;;67900:22:11;;;67871:51;67867:102;;;67945:13;;-1:-1:-1;;;67945:13:11;;;;;;;;;;;67867:102;67985:39;67999:6;68007:8;68017:6;67985:13;:39::i;:::-;67978:46;67752:279;-1:-1:-1;;;;67752:279:11:o;4504:129:0:-;4578:7;4604:12;;;;;;;;;;:22;;;;4504:129::o;53668:409:11:-;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;53792:8:11::1;::::0;-1:-1:-1;;;53792:8:11;::::1;;;:16;;53804:4;53792:16:::0;53788:74:::1;;53831:20;;-1:-1:-1::0;;;53831:20:11::1;;;;;;;;;;;53788:74;-1:-1:-1::0;;53875:12:11::1;;:33;53871:90;;53931:19;;-1:-1:-1::0;;;53931:19:11::1;;;;;;;;;;;53871:90;53970:18;:40:::0;;-1:-1:-1;;;;;;53970:40:11::1;-1:-1:-1::0;;;;;53970:40:11;::::1;::::0;;::::1;::::0;;;54025:45:::1;::::0;-1:-1:-1;;;;;;;;;;;54025:45:11;-1:-1:-1;;54025:45:11::1;53668:409:::0;;:::o;4929:145:0:-;5012:18;5025:4;5012:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;73791:356:11:-;73899:7;73918:25;73946:41;73959:5;73966:7;73975:11;73946:12;:41::i;:::-;73918:69;;73997:24;74024:54;74041:17;74060;74024:16;:54::i;:::-;-1:-1:-1;;;;;74122:17:11;;;;;;:10;:17;;;;;;73997:81;;-1:-1:-1;74095:45:11;;73997:81;;74095:8;:45::i;:::-;74088:52;73791:356;-1:-1:-1;;;;;;73791:356:11:o;6038:214:0:-;-1:-1:-1;;;;;6133:23:0;;719:10:5;6133:23:0;6125:83;;;;-1:-1:-1;;;6125:83:0;;;;;;;:::i;:::-;;;;;;;;;6219:26;6231:4;6237:7;6219:11;:26::i;68305:164:11:-;68392:4;68415:47;68434:10;68446:7;68455:6;68415:18;:47::i;72323:124::-;72393:7;72419:21;72431:8;72419:11;:21::i;59760:1444::-;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;2261:21:2::1;:19;:21::i;:::-;-1:-1:-1::0;;;;;59881:20:11;::::2;;::::0;;;:10:::2;:20;::::0;;;;:31;:36;;59877:92:::2;;59940:18;;-1:-1:-1::0;;;59940:18:11::2;;;;;;;;;;;59877:92;-1:-1:-1::0;;;;;60036:20:11;::::2;60014:19;60036:20:::0;;;:10:::2;:20;::::0;;;;:32:::2;;::::0;60083:16;;;:31:::2;;-1:-1:-1::0;60103:11:11;;60083:31:::2;60079:80;;;60137:11;;-1:-1:-1::0;;;60137:11:11::2;;;;;;;;;;;60079:80;60182:11;60173:6;:20;60169:71;;;60218:11;60209:20;;60169:71;60465:14;60535:11;60526:6;60489:8;-1:-1:-1::0;;;;;60482:26:11::2;;60517:4;60482:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;;;:::i;:::-;:64;;;;:::i;:::-;60465:81;;60571:1;60561:6;:11;60557:60;;60595:11;;-1:-1:-1::0;;;60595:11:11::2;;;;;;;;;;;60557:60;60627:73;60658:5;60666:10;60686:4;60693:6;60627:22;:73::i;:::-;-1:-1:-1::0;;;;;60742:20:11;::::2;;::::0;;;:10:::2;:20;::::0;;;;:32:::2;;:42:::0;;60778:6;;60742:20;:42:::2;::::0;60778:6;;60742:42:::2;:::i;:::-;;;;;;;;60841:6;60822:15;;:25;;;;;;;:::i;:::-;;;;;;;;60907:6;60888:15;;:25;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;60956:56:11;::::2;-1:-1:-1::0;;;;;;;;;;;60978:11:11;60991:20:::2;61005:6:::0;60978:11;60991:20:::2;:::i;:::-;60956:56;;;;;;;:::i;:::-;;;;;;;;61069:48;61088:8;61098:10;61110:6;61069:18;:48::i;:::-;61180:8;-1:-1:-1::0;;;;;61166:31:11::2;;61190:6;61166:31;;;;;;:::i;:::-;;;;;;;;59867:1337;;2303:20:2::1;1716:1:::0;2809:22;;2629:209;63123:187:11;63244:7;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;2261:21:2::1;:19;:21::i;:::-;63270:33:11::2;63282:8;63292:10;63270:11;:33::i;:::-;63263:40;;2303:20:2::1;1716:1:::0;2809:22;;2629:209;2303:20:::1;63123:187:11::0;;;;;:::o;51582:182::-;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;51685:10:11::1;:26:::0;;-1:-1:-1;;;;;;51685:26:11::1;-1:-1:-1::0;;;;;51685:26:11;::::1;::::0;;::::1;::::0;;;51726:31:::1;::::0;::::1;::::0;-1:-1:-1;;51726:31:11::1;51582:182:::0;;:::o;54261:234::-;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;54384:19:11::1;:42:::0;;-1:-1:-1;;;;;;54384:42:11::1;-1:-1:-1::0;;;;;54384:42:11;::::1;::::0;;::::1;::::0;;;54441:47:::1;::::0;::::1;::::0;-1:-1:-1;;54441:47:11::1;54261:234:::0;;:::o;75125:418::-;-1:-1:-1;;;;;75349:20:11;;75236:7;75349:20;;;:10;:20;;;;;:32;;;:47;-1:-1:-1;75345:121:11;;;75419:36;;-1:-1:-1;;;75419:36:11;;;;;;;;;;;75345:121;75482:54;75513:8;75523:12;75482:30;:54::i;57793:145::-;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;-1:-1:-1;57897:17:11::1;:34:::0;;-1:-1:-1;;;;;;57897:34:11::1;-1:-1:-1::0;;;;;57897:34:11;;;::::1;::::0;;;::::1;::::0;;57793:145::o;51943:529::-;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;52125:6:11::1;52120:225;52137:26:::0;;::::1;52120:225;;;52184:16;52203:15;;52219:1;52203:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;52239:20:11;::::1;;::::0;;;:10:::1;:20;::::0;;;;:31;52184:37;;-1:-1:-1;52239:36:11;52235:100:::1;;52302:18;;-1:-1:-1::0;;;52302:18:11::1;;;;;;;;;;;52235:100;-1:-1:-1::0;52165:3:11;::::1;::::0;::::1;:::i;:::-;;;;52120:225;;;-1:-1:-1::0;52385:30:11::1;:12;52400:15:::0;;52385:30:::1;:::i;:::-;;52430:35;52449:15;;52430:35;;;;;;;:::i;:::-;;;;;;;;51943:529:::0;;;:::o;73236:184::-;73346:7;73372:41;73385:5;73392:7;73401:11;73372:12;:41::i;56830:172::-;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;56932:26:11::1;56944:4;56950:7;56932:11;:26::i;:::-;56981:7;-1:-1:-1::0;;;;;56973:22:11::1;;56990:4;56973:22;;;;;;:::i;:::-;;;;;;;;56830:172:::0;;;:::o;57993:283::-;58068:17;;-1:-1:-1;;;;;58068:17:11;58054:10;:31;58050:102;;58108:33;;-1:-1:-1;;;58108:33:11;;;;;;;;;;;58050:102;58161:11;:24;;58175:10;-1:-1:-1;;;;;;58161:24:11;;;;;;;;58195:17;:30;;;;;;;58240:29;;;;-1:-1:-1;;58240:29:11;57993:283::o;64190:162::-;64281:7;2261:21:2;:19;:21::i;:::-;64307:38:11::1;64316:10;64328:8;64338:6;64307:8;:38::i;:::-;64300:45;;2303:20:2::0;1716:1;2809:22;;2629:209;69762:217:11;69827:7;69865:4;-1:-1:-1;;;;;69849:21:11;;;69846:94;;69912:17;:15;:17::i;:::-;-1:-1:-1;;;;;69893:16:11;;;;;;:10;:16;;;;;;:36;;;;:::i;69846:94::-;-1:-1:-1;;;;;;69956:16:11;;;;;:10;:16;;;;;;;69762:217::o;54609:214::-;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;54724::11::1;:36:::0;;;54775:41:::1;::::0;::::1;::::0;::::1;::::0;54743:17;;54775:41:::1;:::i;:::-;;;;;;;;54609:214:::0;;:::o;3021:145:0:-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:0;;;;;;;;;;;;;;;3021:145::o;64559:156:11:-;64647:7;2261:21:2;:19;:21::i;:::-;64673:35:11::1;64679:10;64691:8;64701:6;64673:5;:35::i;2274:29::-:0;;;;;;;:::i;58805:141::-;58862:7;58888:51;58905:12;58909:8;58905:2;:12;:::i;:::-;58919:19;58888:16;:51::i;52676:198::-;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;52779:15:11::1;:34:::0;;-1:-1:-1;;52779:34:11::1;::::0;::::1;;;::::0;;52828:39:::1;::::0;::::1;::::0;::::1;::::0;52779:34;;52828:39:::1;:::i;68707:164::-:0;68794:4;68817:47;68836:10;68848:7;68857:6;68817:18;:47::i;56429:166::-;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;56526:25:11::1;56537:4;56543:7;56526:10;:25::i;67190:273::-:0;67269:4;-1:-1:-1;;;;;67289:25:11;;67309:4;67289:25;;:51;;-1:-1:-1;;;;;;67318:22:11;;;67289:51;67285:102;;;67363:13;;-1:-1:-1;;;67363:13:11;;;;;;;;;;;67285:102;67396:39;67406:10;67418:8;67428:6;67396:9;:39::i;:::-;-1:-1:-1;67452:4:11;67190:273;;;;:::o;71667:145::-;71736:7;71762:43;71779:6;71787:17;71762:16;:43::i;59147:175::-;59256:7;59265;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;2261:21:2::1;:19;:21::i;:::-;59291:24:11::2;59306:8;59291:14;:24::i;:::-;59284:31;;;;2303:20:2::1;1716:1:::0;2809:22;;2629:209;2303:20:::1;59147:175:11::0;;;;:::o;61545:143::-;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;61649:32:11::1;61665:8;61675:5;61649:15;:32::i;53061:366::-:0;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;53173:8:11::1;::::0;-1:-1:-1;;;53173:8:11;::::1;;;:16;;53185:4;53173:16:::0;53169:74:::1;;53212:20;;-1:-1:-1::0;;;53212:20:11::1;;;;;;;;;;;53169:74;53256:18;::::0;-1:-1:-1;;;;;53256:18:11::1;:32:::0;53252:83:::1;;53311:13;;-1:-1:-1::0;;;53311:13:11::1;;;;;;;;;;;53252:83;53344:12;:28:::0;;;53387:33:::1;::::0;-1:-1:-1;;;;;;;;;;;53387:33:11;::::1;::::0;53359:13;;53387:33:::1;:::i;72650:213::-:0;72717:7;72736:24;72763:21;72775:8;72763:11;:21::i;:::-;72736:48;;72801:55;72818:16;72836:19;72801:16;:55::i;70970:151::-;71043:7;71069:45;71086:6;71094:19;71069:16;:45::i;57340:181::-;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;57446:5:11::1;57428:15:::0;;;:9:::1;:15;::::0;;;;:23;;-1:-1:-1;;57428:23:11::1;::::0;;;57466:48:::1;;::::0;57484:4;;57466:48:::1;::::0;;;::::1;57340:181:::0;;:::o;69338:282::-;69540:4;69563:50;69571:5;69578:7;69587:6;69595:8;69605:1;69608;69611;69563:7;:50::i;:::-;69556:57;;69338:282;;;;;;;;;;:::o;57082:178::-;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;57168:15:11::1;::::0;;;:9:::1;:15;::::0;;;;:22;;-1:-1:-1;;57168:22:11::1;57186:4;57168:22;::::0;;57205:48:::1;::::0;5354:147:0;5438:18;5451:4;5438:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;65235:393:11:-:0;65435:7;2261:21:2;:19;:21::i;:::-;65454:14:11::1;65471:43;65488:6;65496:17;65471:16;:43::i;:::-;65454:60;;65524:74;65532:10;65544:8;65554:5;65561:6;65569;65577:7;65586:11;65524:7;:74::i;:::-;-1:-1:-1::0;65615:6:11;-1:-1:-1;2303:20:2;1716:1;2809:22;;2629:209;58439:108:11;58497:7;58523:17;:15;:17::i;55376:763::-;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;55587:8:11::1;55561:23;:34;55557:97;;;55618:25;;-1:-1:-1::0;;;55618:25:11::1;;;;;;;;;;;55557:97;55731:23;55758:1;55731:28:::0;55727:286:::1;;55858:4;55839:25;::::0;;;:10:::1;:25;::::0;;;;;55827:53:::1;::::0;:11:::1;:53::i;:::-;55963:1;55941:19;:23:::0;;;55978:20:::1;:24:::0;55727:286:::1;56022:19;:45:::0;;;56082:50:::1;::::0;::::1;::::0;::::1;::::0;56044:23;;56082:50:::1;:::i;63380:542::-:0;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;63465:8:11::1;::::0;-1:-1:-1;;;63465:8:11;::::1;;;:16;;63477:4;63465:16:::0;63461:72:::1;;63504:18;;-1:-1:-1::0;;;63504:18:11::1;;;;;;;;;;;63461:72;63574:8;:15:::0;;-1:-1:-1;;;;63574:15:11::1;-1:-1:-1::0;;;63574:15:11::1;::::0;;63639:18:::1;::::0;-1:-1:-1;;;;;63639:18:11::1;:32:::0;63635:149:::1;;63687:18;:31:::0;;-1:-1:-1;;;;;;63687:31:11::1;::::0;;63737:36:::1;::::0;63716:1:::1;::::0;-1:-1:-1;;;;;;;;;;;63737:36:11;63716:1;;63737:36:::1;63635:149;63809:1;63794:12;:16:::0;;;63825:21:::1;::::0;-1:-1:-1;;;;;;;;;;;63825:21:11;::::1;::::0;::::1;:::i;:::-;;;;;;;;63857:33;63865:10;-1:-1:-1::0;;;;;;;;;;;63857:7:11::1;:33::i;:::-;63905:10;::::0;::::1;::::0;;;::::1;63380:542:::0;:::o;62548:350::-;-1:-1:-1;;;;;;;;;;;2631:16:0;2642:4;2631:10;:16::i;:::-;-1:-1:-1;;;;;62679:20:11;::::1;;::::0;;;:10:::1;:20;::::0;;;;:31;:36;;62675:92:::1;;62738:18;;-1:-1:-1::0;;;62738:18:11::1;;;;;;;;;;;62675:92;-1:-1:-1::0;;;;;62776:20:11;::::1;;::::0;;;:10:::1;:20;::::0;;;;;;;;:28:::1;:41:::0;;;62832:59;62858:10:::1;::::0;62832:59:::1;::::0;::::1;::::0;62807:10;;62832:59:::1;:::i;:::-;;;;;;;;62548:350:::0;;;:::o;842:29:23:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;842:29:23;;-1:-1:-1;842:29:23;:::o;9158:113:11:-;9205:7;9249:15;;9231;;:33;;;;:::i;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:2;;;;;;;:::i;:::-;1759:1;2598:7;:18;2336:287::o;9366:633:11:-;9450:7;-1:-1:-1;;9473:6:11;:27;:42;;;-1:-1:-1;9504:11:11;;9473:42;9469:86;;;-1:-1:-1;9538:6:11;9531:13;;9469:86;9565:26;9594:14;:12;:14::i;:::-;9565:43;;9676:18;9698:1;9676:23;9672:67;;9722:6;9715:13;;;;;9672:67;9749:17;9778:14;:12;:14::i;:::-;9769:23;;:6;:23;:::i;:::-;9749:43;-1:-1:-1;9802:14:11;9819:30;9831:18;9749:43;9819:30;:::i;:::-;9802:47;-1:-1:-1;9875:17:11;9863:8;:29;;;;;;;;:::i;:::-;;:68;;;;-1:-1:-1;9896:30:11;9908:18;9896:9;:30;:::i;:::-;:35;;9863:68;9859:110;;;9947:11;9957:1;9947:11;;:::i;24119:689::-;24350:7;24369:55;24385:8;24395:5;24402:12;24416:7;24369:15;:55::i;:::-;24434:45;24451:5;24458:6;24466:12;24434:16;:45::i;:::-;24490:23;24515:21;24540:36;24556:6;24564:11;24540:15;:36::i;:::-;24489:87;;;;24586:95;24602:8;24612:5;24619:12;24633:6;24641:15;24658:13;24673:7;24586:15;:95::i;:::-;24732:5;-1:-1:-1;;;;;24705:64:11;24722:8;-1:-1:-1;;;;;24705:64:11;24714:6;-1:-1:-1;;;;;24705:64:11;;24739:15;24756:12;24705:64;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;24786:15:11;24119:689;-1:-1:-1;;;;;;;;24119:689:11:o;4967:314::-;5051:4;-1:-1:-1;;;;;5071:19:11;;;;:44;;-1:-1:-1;;;;;;5094:21:11;;;5071:44;5067:95;;;5138:13;;-1:-1:-1;;;5138:13:11;;;;;;;;;;;5067:95;-1:-1:-1;;;;;5171:17:11;;;;;;;:10;:17;;;;;;;;:26;;;;;;;;;;;;;;:35;;;5221:32;-1:-1:-1;;;;;;;;;;;5221:32:11;;;5200:6;;5221:32;:::i;:::-;;;;;;;;-1:-1:-1;5270:4:11;4967:314;;;;;:::o;10094:893::-;10178:7;-1:-1:-1;;10201:6:11;:27;:42;;;-1:-1:-1;10232:11:11;;10201:42;10197:86;;;-1:-1:-1;10266:6:11;10259:13;;10197:86;10293:26;10322:14;:12;:14::i;:::-;10293:43;;10346:26;10375:14;:12;:14::i;:::-;10346:43;;10412:18;10434:1;10412:23;10408:315;;10530:18;10552:1;10530:23;10526:187;;10580:6;10573:13;;;;;;10526:187;10697:1;10690:8;;;;;;10526:187;10733:17;10753:27;10762:18;10753:6;:27;:::i;:::-;10733:47;-1:-1:-1;10790:14:11;10807:30;10819:18;10733:47;10807:30;:::i;:::-;10790:47;-1:-1:-1;10863:17:11;10851:8;:29;;;;;;;;:::i;:::-;;:68;;;;-1:-1:-1;10884:30:11;10896:18;10884:9;:30;:::i;:::-;:35;;10851:68;10847:110;;;10935:11;10945:1;10935:11;;:::i;3460:103:0:-;3526:30;3537:4;719:10:5;3526::0;:30::i;:::-;3460:103;:::o;34734:190:11:-;34869:15;;34852:65;;-1:-1:-1;;;34852:65:11;;-1:-1:-1;;;;;34869:15:11;;;;34852:48;;:65;;34901:8;;34911:5;;34852:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34734:190;;:::o;8306:117::-;8353:7;8399:17;:15;:17::i;:::-;8379;;:37;;;;:::i;34557:171::-;34680:15;;34663:58;;-1:-1:-1;;;34663:58:11;;-1:-1:-1;;;;;34680:15:11;;;;34663:45;;:58;;34709:11;;34663:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34557:171;:::o;4738:223::-;4829:4;4845:43;4861:6;4869:10;4881:6;4845:15;:43::i;:::-;4898:35;4908:6;4916:8;4926:6;4898:9;:35::i;:::-;-1:-1:-1;4950:4:11;4738:223;;;;;:::o;7587:233:0:-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:0;;;;;;;;;:36;;-1:-1:-1;;7708:36:0;7740:4;7708:36;;;7790:12;719:10:5;;640:96;7790:12:0;-1:-1:-1;;;;;7763:40:0;7781:7;-1:-1:-1;;;;;7763:40:0;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;15452:3802:11:-;-1:-1:-1;;;;;15692:17:11;;15571:7;15692:17;;;:10;:17;;;;;;15571:7;;15675:56;;15571:7;15675:16;:56::i;:::-;15803:19;;15655:76;;-1:-1:-1;;;;;;15803:19:11;:33;15799:308;;15895:19;;15874:94;;-1:-1:-1;;;15874:94:11;;15852:19;;-1:-1:-1;;;;;15895:19:11;;15874:64;;:94;;15939:5;;15946:8;;15956:11;;15874:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15852:116;;16000:9;15986:11;:23;15982:85;;;16041:11;16029:23;;15982:85;-1:-1:-1;16087:9:11;-1:-1:-1;16080:16:11;;15799:308;16202:15;;16231:23;;;16227:2994;;;16593:18;;16328:11;;16313:12;;;;16593:23;;;;:43;;-1:-1:-1;16621:15:11;;;;16620:16;16593:43;:72;;16653:12;16593:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16593:72:11;;;;;;;;;;;;;;;;;;;;;;;;16639:11;16593:72;16556:109;;16685:9;16680:2377;16704:17;:24;16700:1;:28;16680:2377;;;16753:16;16772:17;16790:1;16772:20;;;;;;;;:::i;:::-;;;;;;;16753:39;;16864:10;:20;16875:8;-1:-1:-1;;;;;16864:20:11;-1:-1:-1;;;;;16864:20:11;;;;;;;;;;;;:31;;;16899:1;16864:36;16860:108;;16931:18;;-1:-1:-1;;;16931:18:11;;;;;;;;;;;16860:108;17072:18;17093:204;17123:16;17135:4;17123:9;:16;:::i;:::-;-1:-1:-1;;;;;17205:20:11;;;;;;:10;:20;;;;;:32;;;17093:8;:204::i;:::-;17072:225;;17377:22;17402:52;17433:8;17443:10;17402:30;:52::i;:::-;17377:77;;17538:21;17572:8;-1:-1:-1;;;;;17562:35:11;;17629:8;-1:-1:-1;;;;;17619:29:11;;17657:4;17619:44;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17562:119;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17538:143;-1:-1:-1;17792:27:11;17805:14;17792:10;:27;:::i;:::-;17776:13;:43;17772:368;;;17974:10;17940:30;17957:13;17940:14;:30;:::i;:::-;17939:45;;;;:::i;:::-;17922:62;-1:-1:-1;18091:30:11;17922:62;18091:13;:30;:::i;:::-;18078:43;;17772:368;18216:10;18230:1;18216:15;18212:70;;18255:8;;;;;;18212:70;18402:1;18385:14;:18;:40;;;;;379:5:23;18407:8:11;:18;18385:40;18381:348;;;379:5:23;18575:8:11;18554:17;18561:10;18554:4;:17;:::i;:::-;18553:30;;;;:::i;:::-;:40;;;;:::i;:::-;18529:21;18536:14;18529:4;:21;:::i;:::-;:64;18525:186;;;18683:5;;;;;;18525:186;18791:18;18799:10;18791:18;;:::i;:::-;;;18889:9;18881:4;:17;18877:69;;18922:5;;;;;;18877:69;19020:22;19028:14;19020:22;;:::i;:::-;;;16735:2322;;;;16680:2377;16730:3;;;;:::i;:::-;;;;16680:2377;;;-1:-1:-1;19206:4:11;;-1:-1:-1;;;16227:2994:11;-1:-1:-1;19238:9:11;15452:3802;-1:-1:-1;;;;15452:3802:11:o;588:104:9:-;646:7;676:1;672;:5;:13;;684:1;672:13;;;-1:-1:-1;680:1:9;;588:104;-1:-1:-1;588:104:9:o;7991:234:0:-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:12;;;;;;;;;;;-1:-1:-1;;;;;8112:29:0;;;;;;;;;;:37;;-1:-1:-1;;8112:37:0;;;8168:40;719:10:5;;8112:12:0;;8168:40;;8144:5;8168:40;7991:234;;:::o;5287:244:11:-;-1:-1:-1;;;;;5420:17:11;;;5381:4;5420:17;;;:10;:17;;;;;;;;:26;;;;;;;;;;;;5381:4;;5420:35;;5449:6;;5420:35;:::i;:::-;5397:58;;5465:38;5474:5;5481:7;5490:12;5465:8;:38::i;:::-;-1:-1:-1;5520:4:11;;5287:244;-1:-1:-1;;;;;5287:244:11:o;13966:808::-;14028:7;-1:-1:-1;;;;;14051:25:11;;14071:4;14051:25;;:51;;-1:-1:-1;;;;;;14080:22:11;;;14051:51;14047:90;;;-1:-1:-1;14125:1:11;;13966:808;-1:-1:-1;13966:808:11:o;14047:90::-;14243:18;;-1:-1:-1;;;;;14243:18:11;14275:39;;14271:205;;14387:78;;-1:-1:-1;;;14387:78:11;;-1:-1:-1;;;;;14387:68:11;;;;;:78;;14456:8;;14387:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;14271:205::-;14525:26;14554:14;:12;:14::i;:::-;14608:12;;14525:43;;-1:-1:-1;14634:41:11;;;14630:80;;-1:-1:-1;14698:1:11;;13966:808;-1:-1:-1;;;;13966:808:11:o;14630:80::-;14727:40;14749:18;14727:19;:40;:::i;11537:332::-;-1:-1:-1;;;;;11657:19:11;;;;:43;;-1:-1:-1;;;;;;11680:20:11;;;11657:43;:69;;;-1:-1:-1;;;;;;11704:22:11;;;11657:69;11653:120;;;11749:13;;-1:-1:-1;;;11749:13:11;;;;;;;;;;;11653:120;11790:52;;-1:-1:-1;;;11790:52:11;;-1:-1:-1;;;;;11790:26:11;;;;;:52;;11817:6;;11825:8;;11835:6;;11790:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11782:80;;;;-1:-1:-1;;;11782:80:11;;;;;;;:::i;:::-;11537:332;;;;:::o;12005:276::-;-1:-1:-1;;;;;12105:19:11;;;;:45;;-1:-1:-1;;;;;;12128:22:11;;;12105:45;12101:96;;;12173:13;;-1:-1:-1;;;12173:13:11;;;;;;;;;;;12101:96;12214:40;;-1:-1:-1;;;12214:40:11;;-1:-1:-1;;;;;12214:22:11;;;;;:40;;12237:8;;12247:6;;12214:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12206:68;;;;-1:-1:-1;;;12206:68:11;;;;;;;:::i;35384:5314::-;-1:-1:-1;;;;;35638:20:11;;35461:7;35638:20;;;:10;:20;;;;;:32;;;35745:8;;35548:10;;35638:32;-1:-1:-1;;;35745:8:11;;;;:16;;35757:4;35745:16;35741:58;;35787:1;35777:11;;35741:58;35824:11;35813:7;:22;35809:77;;35858:17;;-1:-1:-1;;;35858:17:11;;;;;;;;;;;35809:77;35914:7;35900:11;:21;35896:4623;;;35964:24;35991:21;36005:7;35991:11;:21;:::i;:::-;35964:48;;36119:16;;36100;36082:15;;:34;;;;:::i;:::-;:53;36078:330;;;36193:15;;36174:16;;:34;;;;:::i;:::-;36155:53;;36310:11;36291:16;:30;36287:107;;;-1:-1:-1;36364:11:11;36287:107;36598:44;;-1:-1:-1;;;36598:44:11;;36539:20;;-1:-1:-1;;;;;36562:35:11;;;;;;;36598:29;;:44;;36636:4;;36598:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;36562:81;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;36539:104;;36678:1;36662:12;:17;36658:74;;36706:11;;-1:-1:-1;;;36706:11:11;;;;;;;;;;;36658:74;36832:16;36817:12;:31;36813:101;;;36887:12;36868:31;;36813:101;37041:29;37073:58;37104:8;37114:16;37073:30;:58::i;:::-;37041:90;-1:-1:-1;37149:26:11;;37145:101;;37202:29;;-1:-1:-1;;;37202:29:11;;;;;;;;;;;37145:101;37338:30;;-1:-1:-1;;;37338:30:11;;37317:18;;-1:-1:-1;;;;;37338:5:11;:15;;;;:30;;37362:4;;37338:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;37317:51;;37382:49;37404:8;37414:16;37382:21;:49::i;:::-;37467:30;;-1:-1:-1;;;37467:30:11;;37445:19;;-1:-1:-1;;;;;37467:5:11;:15;;;;:30;;37491:4;;37467:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;37445:52;-1:-1:-1;37697:17:11;37717:47;37726:24;37740:10;37445:52;37726:24;:::i;:::-;37752:11;37717:8;:47::i;:::-;37697:67;;37860:16;37848:9;:28;37844:95;;;37915:9;37896:28;;37844:95;38003:9;37984:15;;:28;;;;;;;:::i;:::-;;;;;;;;38131:16;38112:15;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;38172:30:11;;-1:-1:-1;38186:16:11;38172:11;:30;:::i;:::-;38162:40;;35923:2290;;;;;;35896:4623;;;-1:-1:-1;;;;;38403:20:11;;;;;;:10;:20;;;;;;;;:28;;38393:38;;38389:107;;;38458:23;;-1:-1:-1;;;38458:23:11;;;;;;;;;;;38389:107;38619:45;;-1:-1:-1;;;38619:45:11;;38591:25;;-1:-1:-1;;;;;38619:30:11;;;;;:45;;38658:4;;38619:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;38591:73;;38703:1;38682:17;:22;38678:79;;38731:11;;-1:-1:-1;;;38731:11:11;;;;;;;;;;;38678:79;38838:23;38864:21;38874:11;38864:7;:21;:::i;:::-;38838:47;;38921:17;38903:15;:35;38899:157;;;-1:-1:-1;39024:17:11;38899:157;39093:16;;39074:15;;:35;39070:100;;39136:19;;-1:-1:-1;;;39136:19:11;;;;;;;;;;;39070:100;39183:21;39225:16;;39207:15;;:34;;;;:::i;:::-;39183:58;;39355:13;39337:15;:31;39333:101;;;39406:13;39388:31;;39333:101;39484:19;;39480:1029;;39599:60;39625:5;39633:8;39643:15;39599:17;:60::i;:::-;39767:30;;-1:-1:-1;;;39767:30:11;;39746:18;;-1:-1:-1;;;;;39767:5:11;:15;;;;:30;;39791:4;;39767:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;39815:59;;-1:-1:-1;;;39815:59:11;;39746:51;;-1:-1:-1;;;;;;39815:27:11;;;;;:59;;39843:15;;39868:4;;39815:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;39914:30:11;;-1:-1:-1;;;39914:30:11;;39892:19;;-1:-1:-1;;;;;39914:5:11;:15;;;;:30;;39938:4;;39914:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;39892:52;;40026:46;40052:5;40060:8;40070:1;40026:17;:46::i;:::-;40272:24;40285:11;40272:10;:24;:::i;:::-;40254:42;;40369:15;40350;;:34;;;;;;;:::i;:::-;;;;;;;;40421:15;40402;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;40465:29:11;;-1:-1:-1;40479:15:11;40465:11;:29;:::i;:::-;40455:39;;39505:1004;;39480:1029;38219:2300;;;35896:4623;-1:-1:-1;;;;;40566:20:11;;;;;;:10;:20;;;;;;;:32;;:42;;;40624:43;-1:-1:-1;;;;;;;;;;;40624:43:11;;;40646:11;;40601:7;;40624:43;:::i;:::-;;;;;;;;-1:-1:-1;40684:7:11;35384:5314;-1:-1:-1;;;35384:5314:11:o;21543:1174::-;-1:-1:-1;;;;;21757:20:11;;21646:7;21757:20;;;:10;:20;;;;;;:32;;;21884:44;;-1:-1:-1;;;21884:44:11;;21646:7;;21757:32;;21646:7;;21757:20;21884:29;;:44;;21922:4;;21884:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21862:66;;21938:22;21973:8;-1:-1:-1;;;;;21963:35:11;;21999:11;21963:48;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21938:73;;22078:19;22060:14;:37;;:65;;;-1:-1:-1;22101:24:11;;22060:65;22056:104;;;22148:1;22141:8;;;;;;;22056:104;22421:17;22441:29;22456:14;22441:12;:29;:::i;:::-;22421:49;-1:-1:-1;22480:23:11;22521:31;22533:19;22421:49;22521:31;:::i;:::-;22506:46;;:12;:46;:::i;:::-;22480:72;-1:-1:-1;22595:31:11;22607:19;22595:9;:31;:::i;:::-;:36;22591:87;;22647:20;22666:1;22647:20;;:::i;19446:751::-;19556:8;;19533:7;;-1:-1:-1;;;19556:8:11;;;;:16;;19568:4;19556:16;19552:74;;19595:20;;-1:-1:-1;;;19595:20:11;;;;;;;;;;;19552:74;19648:22;19660:9;19648:11;:22::i;:::-;19639:6;:31;19635:89;;;19693:20;;-1:-1:-1;;;19693:20:11;;;;;;;;;;;19635:89;19785:53;;-1:-1:-1;;;19785:53:11;;-1:-1:-1;;;;;19785:5:11;:18;;;;:53;;19804:10;;19824:4;;19831:6;;19785:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;19913:6;19894:15;;:25;;;;;;;:::i;:::-;;;;-1:-1:-1;19984:14:11;;-1:-1:-1;20001:40:11;20023:6;20031:9;20001:21;:40::i;:::-;19984:57;-1:-1:-1;20141:9:11;-1:-1:-1;;;;;20125:42:11;20133:6;-1:-1:-1;;;;;20125:42:11;-1:-1:-1;;;;;;;;;;;20152:6:11;20160;20125:42;;;;;;;:::i;:::-;;;;;;;;20184:6;19446:751;-1:-1:-1;;;;19446:751:11:o;7598:620::-;7699:20;;7648:7;;;7797:15;7773:39;;7769:408;;;482:13:23;7976:16:11;;7958:15;:34;;;;:::i;:::-;7935:19;;:58;;;;:::i;:::-;:77;;;;:::i;:::-;7914:98;;7769:408;;;8033:26;;8029:148;;-1:-1:-1;8160:4:11;8141:25;;;;:10;:25;;;;;;8193:18;7598:620;-1:-1:-1;;7598:620:11:o;20386:886::-;20493:8;;20470:7;;-1:-1:-1;;;20493:8:11;;;;:16;;20505:4;20493:16;20489:74;;20532:20;;-1:-1:-1;;;20532:20:11;;;;;;;;;;;20489:74;20619:14;20636:43;20653:6;20661:17;20636:16;:43::i;:::-;20619:60;-1:-1:-1;20771:22:11;20783:9;20771:11;:22::i;:::-;20762:6;:31;20758:89;;;20816:20;;-1:-1:-1;;;20816:20:11;;;;;;;;;;;20758:89;20908:53;;-1:-1:-1;;;20908:53:11;;-1:-1:-1;;;;;20908:5:11;:18;;;;:53;;20927:10;;20947:4;;20954:6;;20908:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;21036:6;21017:15;;:25;;;;;;;:::i;:::-;;;;-1:-1:-1;21107:31:11;;-1:-1:-1;21120:6:11;21128:9;21107:12;:31::i;:::-;21216:9;-1:-1:-1;;;;;21200:42:11;21208:6;-1:-1:-1;;;;;21200:42:11;-1:-1:-1;;;;;;;;;;;21227:6:11;21235;21200:42;;;;;;;:::i;5537:244::-;-1:-1:-1;;;;;5670:17:11;;;5631:4;5670:17;;;:10;:17;;;;;;;;:26;;;;;;;;;;;;5631:4;;5670:35;;5699:6;;5670:35;:::i;4182:550::-;-1:-1:-1;;;;;4295:18:11;;4270:22;4295:18;;;:10;:18;;;;;;4327:23;;;4323:80;;;4373:19;;-1:-1:-1;;;4373:19:11;;;;;;;;;;;4323:80;-1:-1:-1;;;;;4416:20:11;;;;:46;;-1:-1:-1;;;;;;4440:22:11;;;4416:46;4412:97;;;4485:13;;-1:-1:-1;;;4485:13:11;;;;;;;;;;;4412:97;4540:23;4557:6;4540:14;:23;:::i;:::-;-1:-1:-1;;;;;4519:18:11;;;;;;;:10;:18;;;;;;:44;;;;4599:20;;;;;;;4652:24;4670:6;4599:20;4652:24;:::i;:::-;-1:-1:-1;;;;;4629:20:11;;;;;;;:10;:20;;;;;;;:47;;;;4691:34;;;;;;-1:-1:-1;;;;;;;;;;;4691:34:11;;;4718:6;;4691:34;:::i;:::-;;;;;;;;4260:472;;4182:550;;;:::o;41532:1383::-;-1:-1:-1;;;;;41671:20:11;;41592:7;41671:20;;;:10;:20;;;;;:31;41592:7;;41671:36;;41667:92;;41730:18;;-1:-1:-1;;;41730:18:11;;;;;;;;;;;41667:92;41838:21;:19;:21::i;:::-;41871:12;41885;41901:30;41922:8;41901:20;:30::i;:::-;41870:61;;;;41942:25;41970:33;41982:8;41992:4;41998;41970:11;:33::i;:::-;41942:61;;42014:29;42046:66;42072:4;42078;:14;;;42094:4;:17;;;42046:25;:66::i;:::-;42014:98;;42124:30;42156:25;42185:62;42212:6;42220:4;42226;42232;42238:8;42185:26;:62::i;:::-;42123:124;;;;42258:67;42283:22;42307:17;42258:24;:67::i;:::-;-1:-1:-1;;;;;42386:20:11;;;;;;:10;:20;;;;;;42420:15;42386:31;;;:49;42619:32;;;42682:25;;;;42531:347;;42583:4;;42601;;42619:32;;42665:64;;42682:25;42665:16;:64::i;:::-;42743:94;42788:6;:27;;;42760:6;:25;;;:55;;;;:::i;42743:94::-;42851:4;:17;;;42531:347;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;42897:4:11;;42903;;-1:-1:-1;41532:1383:11;;-1:-1:-1;;;;;41532:1383:11:o;5787:1155::-;5987:4;-1:-1:-1;;;;;6007:19:11;;6003:70;;6049:13;;-1:-1:-1;;;6049:13:11;;;;;;;;;;;6003:70;6097:15;6086:8;:26;6082:84;;;6135:20;;-1:-1:-1;;;6135:20:11;;;;;;;;;;;6082:84;-1:-1:-1;;;;;6191:13:11;;6175;6191;;;:6;:13;;;;;;;;;6246:69;;6191:13;;6175;6246:69;;-1:-1:-1;;;;;;;;;;;3507:95:23;6198:5:11;;6282:7;;6291:6;;6191:13;;6306:8;;6246:69;;:::i;:::-;;;;;;;;;;;;;6236:80;;;;;;6215:101;;6327:14;6429:16;;6463:10;6367:120;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6344:153;;;;;;6327:170;;6508:24;6535:26;6545:6;6553:1;6556;6559;6535:26;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6535:26:11;;-1:-1:-1;;6535:26:11;;;-1:-1:-1;;;;;;;6575:30:11;;;;:59;;;6629:5;-1:-1:-1;;;;;6609:25:11;:16;-1:-1:-1;;;;;6609:25:11;;;6575:59;6571:126;;;6657:29;;-1:-1:-1;;;6657:29:11;;;;;;;;;;;6571:126;6768:32;6777:5;6784:7;6793:6;6768:8;:32::i;:::-;-1:-1:-1;;;;;;6851:13:11;;;;;;:6;:13;;;;;:15;;;;;;:::i;:::-;;;;;;6898:7;-1:-1:-1;;;;;6882:32:11;6891:5;-1:-1:-1;;;;;6882:32:11;-1:-1:-1;;;;;;;;;;;6907:6:11;6882:32;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;6931:4:11;;5787:1155;-1:-1:-1;;;;;;;;;;;5787:1155:11:o;6948:285::-;-1:-1:-1;;;;;7023:17:11;;;;;;:10;:17;;;;;;:26;-1:-1:-1;7019:84:11;;;7072:20;;-1:-1:-1;;;7072:20:11;;;;;;;;;;;7019:84;-1:-1:-1;;;;;7112:17:11;;;;;;:10;:17;;;;;:27;;7133:6;;7112:17;:27;;7133:6;;7112:27;:::i;:::-;;;;;;;;7170:6;7149:17;;:27;;;;;;;:::i;:::-;;;;-1:-1:-1;;7191:35:11;;7215:1;;-1:-1:-1;;;;;7191:35:11;;;-1:-1:-1;;;;;;;;;;;7191:35:11;;;7219:6;;7191:35;:::i;:::-;;;;;;;;6948:285;;:::o;24878:485::-;-1:-1:-1;;;;;25041:22:11;;25037:73;;25086:13;;-1:-1:-1;;;25086:13:11;;;;;;;;;;;25037:73;379:5:23;25123:7:11;:17;25119:64;;;25163:9;;-1:-1:-1;;;25163:9:11;;;;;;;;;;;25119:64;25212:1;25196:12;:17;25192:66;;25236:11;;-1:-1:-1;;;25236:11:11;;;;;;;;;;;25192:66;-1:-1:-1;;;;;25271:17:11;;;;;;:10;:17;;;;;;:32;-1:-1:-1;25267:90:11;;;25326:20;;-1:-1:-1;;;25326:20:11;;;;;;;;;;;25418:194;25530:5;-1:-1:-1;;;;;25520:15:11;:6;-1:-1:-1;;;;;25520:15:11;;25516:90;;25551:44;25567:5;25574:6;25582:12;25551:15;:44::i;25699:7840::-;25788:7;25797;25855:28;25886:280;;;;;;;;25933:6;25886:280;;;;25968:15;;25886:280;;;;26012:15;;25886:280;;;;26055:1;25886:280;;;;26087:5;-1:-1:-1;;;;;26087:15:11;;26111:4;26087:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25886:280;;26154:1;25886:280;;;;;26319:19;;;26295:21;;25855:311;;-1:-1:-1;;26291:7180:11;;;26394:34;26431:11;:18;26453:1;26431:23;;:43;;;;-1:-1:-1;26459:15:11;;;;26458:16;26431:43;:72;;26491:12;26431:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26431:72:11;;;;;;;;;;;;;;;;;;;;;;;;26477:11;26431:72;26712:19;;;;26688:21;;26394:109;;-1:-1:-1;26688:43:11;;;:::i;:::-;26667:18;;;:64;26840:6;26835:6323;26856:17;:24;26852:1;:28;26835:6323;;;26905:16;26924:17;26942:1;26924:20;;;;;;;;:::i;:::-;;;;;;;26905:39;;27038:10;:20;27049:8;-1:-1:-1;;;;;27038:20:11;-1:-1:-1;;;;;27038:20:11;;;;;;;;;;;;:31;;;27073:1;27038:36;27034:108;;27105:18;;-1:-1:-1;;;27105:18:11;;;;;;;;;;;27034:108;-1:-1:-1;;;;;27236:20:11;;27214:19;27236:20;;;:10;:20;;;;;:32;;;27397:18;;;;27236:32;;27214:19;27388:41;;27236:32;27388:8;:41::i;:::-;27361:68;;27587:23;27623:8;-1:-1:-1;;;;;27613:35:11;;27680:8;-1:-1:-1;;;;;27670:29:11;;27708:4;27670:44;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27613:119;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27587:145;;28282:29;28314:58;28345:8;28355:16;28314:30;:58::i;:::-;28282:90;-1:-1:-1;28394:25:11;;28390:2099;;28635:40;28654:21;28635:16;:40;:::i;:::-;28617:15;:58;28613:610;;;28765:14;28782:40;28801:21;28782:16;:40;:::i;:::-;28765:57;-1:-1:-1;28765:57:11;28975:39;28999:15;28975:21;:39;:::i;:::-;:48;;;;:::i;:::-;28951:72;-1:-1:-1;29161:39:11;28951:72;29161:15;:39;:::i;:::-;29142:58;;28677:546;28613:610;29360:41;29380:21;29360:41;;:::i;:::-;;;29448:21;29423:5;:21;;:46;;;;;;;:::i;:::-;;;-1:-1:-1;29671:18:11;;;:43;;29693:21;;29671:18;:43;;29693:21;;29671:43;:::i;:::-;;;-1:-1:-1;29736:19:11;;;:44;;29759:21;;29736:19;:44;;29759:21;;29736:44;:::i;:::-;;;-1:-1:-1;30009:20:11;;:49;;;;;30057:1;30033:21;:25;30009:49;30005:466;;;30151:15;30169:35;30183:21;30169:11;:35;:::i;:::-;-1:-1:-1;;;;;30284:20:11;;;;;;:10;:20;;;;;;;:32;;:42;;;30405:43;30151:53;;-1:-1:-1;30284:20:11;-1:-1:-1;;;;;;;;;;;30405:43:11;;;30427:11;;30151:53;;30405:43;:::i;:::-;;;;;;;;30060:411;30005:466;30595:43;30604:16;30622:15;30595:8;:43::i;:::-;30576:62;;30698:16;30718:1;30698:21;30694:76;;30743:8;;;;;;;30694:76;30830:49;30852:8;30862:16;30830:21;:49::i;:::-;30919:30;;-1:-1:-1;;;30919:30:11;;30897:19;;-1:-1:-1;;;;;30919:5:11;:15;;;;:30;;30943:4;;30919:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30897:52;;31052:17;31086:5;:21;;;31072:11;:35;;;;:::i;:::-;31052:55;;31125:12;31225:16;31213:9;:28;31209:628;;;31350:11;31338:9;:23;31334:273;;;31470:11;31451:30;;31209:628;;31334:273;31556:28;31568:16;31556:9;:28;:::i;:::-;31536:48;;;;:::i;:::-;;;31209:628;;;31743:16;31731:9;:28;31727:110;;;31790:28;31809:9;31790:16;:28;:::i;:::-;31783:35;;31727:110;32063:23;32082:4;32063:16;:23;:::i;:::-;32040:5;:19;;:46;;;;;;;:::i;:::-;;;-1:-1:-1;32104:29:11;;32129:4;;32104:5;;:29;;32129:4;;32104:29;:::i;:::-;;;-1:-1:-1;32151:19:11;;;:39;;32174:16;;32151:19;:39;;32174:16;;32151:39;:::i;:::-;;;-1:-1:-1;32302:16:11;32336:40;32355:21;32336:16;:40;:::i;:::-;32321:56;;:11;:56;:::i;:::-;-1:-1:-1;;;;;32441:20:11;;;;;;:10;:20;;;;;;;:32;;:43;;;32546:44;32302:75;;-1:-1:-1;32441:20:11;-1:-1:-1;;;;;;;;;;;32546:44:11;;;32568:11;;32302:75;;32546:44;:::i;:::-;;;;;;;;32718:19;;;;32693:21;;:44;32689:96;;32761:5;;;;;;;;;;;32689:96;32898:21;;;:35;;;33105:18;;;:38;;33127:16;;33105:18;:38;;33127:16;;33105:38;:::i;:::-;;;-1:-1:-1;;;;;;;;;;26835:6323:11;26882:3;;;;:::i;:::-;;;;26835:6323;;;-1:-1:-1;33285:21:11;;33263:19;;;;:43;33259:109;;;33333:20;;-1:-1:-1;;;33333:20:11;;;;;;;;;;;33259:109;-1:-1:-1;33441:19:11;;;;33423:15;:37;26291:7180;33489:21;;33512:19;;;;;33489:21;;-1:-1:-1;33512:19:11;-1:-1:-1;25699:7840:11;;;;;;:::o;33626:898::-;33950:15;33941:6;:24;:45;;;;;379:5:23;33969:7:11;:17;33941:45;33937:247;;;379:5:23;34093:16:11;34102:7;34093:6;:16;:::i;:::-;:26;;;;:::i;:::-;34066:24;34075:15;34066:6;:24;:::i;:::-;:53;34062:112;;;34146:13;;-1:-1:-1;;;34146:13:11;;;;;;;;;;;34062:112;34260:32;34272:12;34286:5;34260:11;:32::i;:::-;34357:31;34373:15;34357:13;:31;:::i;:::-;34339:15;:49;34456:61;34483:5;34491:8;34501:15;34456:18;:61::i;:::-;33626:898;;;;;;;:::o;3844:479:0:-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:0;;;;;;;;;;-1:-1:-1;;;3970:336:0;;;;;;;:::i;3802:374:11:-;-1:-1:-1;;;;;3982:17:11;;;3955:24;3982:17;;;:10;:17;;;;;;;;:26;;;;;;;;;;4022:25;;;4018:91;;;4070:28;;-1:-1:-1;;;4070:28:11;;;;;;;;;;;4018:91;4118:51;4127:5;4134:7;4143:25;4162:6;4143:16;:25;:::i;:::-;4118:8;:51::i;22944:552::-;23118:22;23143:233;23175:8;-1:-1:-1;;;;;23165:35:11;;23201:16;23165:53;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23281:44;;-1:-1:-1;;;23281:44:11;;-1:-1:-1;;;;;23281:29:11;;;;;:44;;23319:4;;23281:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23143:8;:233::i;:::-;23417:72;;-1:-1:-1;;;23417:72:11;;23118:258;;-1:-1:-1;;;;;;23417:26:11;;;;;:72;;23118:258;;23468:4;;;;23417:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;11126:271::-;-1:-1:-1;;;;;11224:19:11;;;;:44;;-1:-1:-1;;;;;;11247:21:11;;;11224:44;11220:95;;;11291:13;;-1:-1:-1;;;11291:13:11;;;;;;;;;;;11220:95;11332:38;;-1:-1:-1;;;11332:38:11;;-1:-1:-1;;;;;11332:21:11;;;;;:38;;11354:7;;11363:6;;11332:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11324:66;;;;-1:-1:-1;;;11324:66:11;;;;;;;:::i;12790:1154::-;12874:7;-1:-1:-1;;;;;12897:23:11;;12893:74;;12943:13;;-1:-1:-1;;;12943:13:11;;;;;;;;;;;12893:74;12976:26;13005:14;:12;:14::i;:::-;12976:43;;13029:26;13058:14;:12;:14::i;:::-;13029:43;;13082:17;13151:18;13173:1;13151:23;13147:612;;-1:-1:-1;13202:6:11;13147:612;;;13250:6;13229:18;:27;13225:534;;;13315:27;13336:6;13315:18;:27;:::i;:::-;13284;13293:18;13284:6;:27;:::i;:::-;:59;;;;:::i;:::-;13272:71;;13225:534;;;13723:25;;-1:-1:-1;;;13723:25:11;;;;;;;:::i;13225:534::-;13818:9;13831:1;13818:14;13814:53;;13855:1;13848:8;;;;;;;13814:53;13877:34;13890:9;13901;12287:288;-1:-1:-1;;;;;12367:23:11;;12363:74;;12413:13;;-1:-1:-1;;;12413:13:11;;;;;;;;;;;12363:74;-1:-1:-1;;;;;12446:21:11;;;;;;:10;:21;;;;;:31;;12471:6;;12446:21;:31;;12471:6;;12446:31;:::i;:::-;;;;;;;;12508:6;12487:17;;:27;;;;;;;:::i;:::-;;;;-1:-1:-1;;12529:39:11;;-1:-1:-1;;;;;12529:39:11;;;12546:1;;-1:-1:-1;;;;;;;;;;;12529:39:11;;;12561:6;;12529:39;:::i;8570:507::-;8675:26;8704:17;:15;:17::i;:::-;8675:46;;8774:18;8796:1;8774:23;8770:36;;8799:7;8570:507::o;8770:36::-;8893:15;8870:20;;:38;8866:103;;;8943:15;8924:16;:34;8866:103;9024:46;9036:18;9064:4;9024:11;:46::i;42970:1078::-;43041:12;43055;43317:22;43352:8;-1:-1:-1;;;;;43342:29:11;;43380:4;43342:44;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;43317:69;;43446:26;43485:8;-1:-1:-1;;;;;43475:35:11;;43511:14;43475:51;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;43619:20:11;;43597:19;43619:20;;;:10;:20;;;;;:32;;;43446:80;;-1:-1:-1;43597:19:11;43778:32;;;43774:236;;;43865:32;43886:11;43865:18;:32;:::i;:::-;43857:40;;43774:236;;;43967:32;43981:18;43967:11;:32;:::i;:::-;43959:40;;43774:236;44028:5;;44035;;-1:-1:-1;42970:1078:11;-1:-1:-1;;;;;42970:1078:11:o;44140:966::-;44225:20;;:::i;:::-;44257:25;;:::i;:::-;44369:10;;-1:-1:-1;;;;;44369:10:11;:24;44365:713;;44459:10;;44447:52;;-1:-1:-1;;;44447:52:11;;-1:-1:-1;;;;;44459:10:11;;;;44447:30;;:52;;44478:8;;44488:4;;44494;;44447:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;44426:17;;;44409:90;;;;44583:18;44579:489;;44621:21;44765:7;-1:-1:-1;;;;;44756:35:11;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;44710:83:11;44727:25;;;44710:83;;-1:-1:-1;44832:18:11;;;;44828:226;;44985:14;;379:5:23;;44985:40:11;;45002:23;;;;44985:40;:::i;:::-;:50;;;;:::i;:::-;44965:17;;;:70;44603:465;45095:4;44140:966;-1:-1:-1;;;;44140:966:11:o;45180:1137::-;45293:22;;:::i;:::-;45475:29;;:::i;:::-;45602:1;45583:16;45590:9;45583:4;:16;:::i;:::-;:20;45579:708;;;45726:53;45743:16;45750:9;45743:4;:16;:::i;:::-;45761:17;45726:16;:53::i;:::-;45703:76;;:6;;:76;;;;;:::i;:::-;;;-1:-1:-1;45910:13:11;;45906:371;;46040:63;46057:24;46069:12;46057:9;:24;:::i;:::-;46083:19;46040:16;:63::i;:::-;46010:27;;;:93;46125:16;;46121:142;;46193:51;46210:12;46224:19;46193:16;:51::i;:::-;46165:25;;;:79;:25;45180:1137;-1:-1:-1;;;;45180:1137:11:o;46403:3288::-;46611:30;46643:25;46767:26;46827:1;46807:4;:17;;;:21;46803:528;;;46948:17;;;;46992:10;;46976:27;;-1:-1:-1;;;46976:27:11;;46939:110;;46948:17;46967:81;;-1:-1:-1;;;;;46976:5:11;:15;;;;;:27;;46992:10;;;;;46976:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;47021:10;;47005:42;;-1:-1:-1;;;47005:42:11;;-1:-1:-1;;;;;47005:5:11;:15;;;;;:42;;47021:10;;;;;47041:4;;47005:42;;;:::i;46939:110::-;46919:17;;;:130;;;47169:10;;47130:84;;47161:5;;-1:-1:-1;;;;;47169:10:11;;47189:4;;47130:22;:84::i;:::-;47303:4;:17;;;47284:15;;:36;;;;;;;:::i;:::-;;;;-1:-1:-1;;46803:528:11;47383:8;;47379:169;;-1:-1:-1;;;;;47460:20:11;;;;;;:10;:20;;;;;:32;;:40;;47496:4;;47460:20;:40;;47496:4;;47460:40;:::i;:::-;;;;;;;;47533:4;47514:15;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;;47379:169:11;47643:1;47623:4;:17;;;47616:4;:24;;;;:::i;:::-;:28;:56;;;;-1:-1:-1;47648:19:11;;:24;;47616:56;47612:170;;;47709:62;47738:4;:17;;;47731:4;:24;;;;:::i;:::-;47765:4;47709:21;:62::i;:::-;47688:83;;47612:170;47836:8;;47832:116;;-1:-1:-1;;;;;47860:20:11;;;;;;:10;:20;;;;;:32;;:40;;47896:4;;47860:20;:40;;47896:4;;47860:40;:::i;:::-;;;;;;;;47933:4;47914:15;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;;47832:116:11;48283:4;48230:31;48264:25;;;:10;:25;;;;;;:46;;48292:18;;48264:46;:::i;:::-;48653:19;;48230:80;;-1:-1:-1;48653:23:11;48649:637;;48774:19;;48765:75;;48795:44;48821:18;48795:23;:44;:::i;48765:75::-;48743:97;;;48854:47;;48895:4;48854:11;:47::i;:::-;49005:23;49031:49;49040:6;:19;;;49061:18;49031:8;:49::i;:::-;49005:75;-1:-1:-1;49158:37:11;49005:75;49158:37;;:::i;:::-;49237:19;;49158:37;;-1:-1:-1;49237:37:11;;49259:15;;49237:37;:::i;:::-;49209:66;;;;:::i;:::-;;;48678:608;48649:637;49375:27;;;;:31;49371:115;;49435:27;;;;49464:10;;49422:53;;49435:27;-1:-1:-1;;;;;49464:10:11;49422:12;:53::i;:::-;49500:25;;;;:29;49496:126;;49545:66;49558:6;:25;;;49585:4;:25;;;49545:12;:66::i;:::-;49640:23;49665:18;;-1:-1:-1;46403:3288:11;-1:-1:-1;;;;;;46403:3288:11:o;49781:1676::-;49954:25;49982:42;50007:17;49982:22;:42;:::i;:::-;49954:70;-1:-1:-1;50038:21:11;;50034:1417;;50075:28;50219:15;50196:20;;:38;50192:338;;;50499:15;50476:20;;:38;;;;:::i;:::-;50450:65;;:22;:65;:::i;:::-;50427:88;;50192:338;50691:30;50791:17;50768:19;;50748:17;:39;;;;:::i;:::-;50725:62;;:20;:62;:::i;:::-;50724:84;;;;:::i;:::-;50691:117;-1:-1:-1;50691:117:11;50904:36;482:13:23;50904:17:11;:36;:::i;:::-;:61;;;;:::i;:::-;50882:19;:83;51081:40;51099:22;51081:15;:40;:::i;:::-;51058:20;:63;-1:-1:-1;;51214:15:11;51195:16;:34;4929:145:0;;;:::o;50034:1417:11:-;51439:1;51417:19;:23;49883:1574;49781:1676;;:::o;2407:149:6:-;2465:13;2497:52;-1:-1:-1;;;;;2509:22:6;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;-1:-1:-1;;;;;1940:25:6;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:6;;1918:47;;-1:-1:-1;;;1975:6:6;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:6;;;;;;;;;-1:-1:-1;;;2000:6:6;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:6;;;;;;;;-1:-1:-1;2030:9:6;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:6;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:6;;;;;;;;-1:-1:-1;2141:1:6;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:6;;2162:55;;;;-1:-1:-1;;;2162:55:6;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;7:126:25;-1:-1:-1;;;;;73:54:25;;7:126::o;139:96::-;176:7;205:24;223:5;205:24;:::i;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;496:2;481:18;;509:71;485:9;553:6;509:71;:::i;676:118::-;781:5;763:24;593:77;800:222;931:2;916:18;;944:71;920:9;988:6;944:71;:::i;1510:120::-;-1:-1:-1;;;;;;1420:78:25;;1582:23;1575:5;1572:34;1562:62;;1620:1;1617;1610:12;1636:137;1706:20;;1735:32;1706:20;1735:32;:::i;1779:327::-;1837:6;1886:2;1874:9;1865:7;1861:23;1857:32;1854:119;;;1892:79;1031:74998:11;;;1892:79:25;2012:1;2037:52;2081:7;2061:9;2037:52;:::i;2208:109::-;2182:13;;2175:21;2289;2112:90;2323:210;2448:2;2433:18;;2461:65;2437:9;2499:6;2461:65;:::i;2974:122::-;3065:5;3047:24;593:77;3102:139;3173:20;;3202:33;3173:20;3202:33;:::i;3247:122::-;3320:24;3338:5;3320:24;:::i;3375:139::-;3446:20;;3475:33;3446:20;3475:33;:::i;3643:102::-;3735:2;3715:14;-1:-1:-1;;3711:28:25;;3643:102::o;3751:180::-;-1:-1:-1;;;3796:1:25;3789:88;3896:4;3893:1;3886:15;3920:4;3917:1;3910:15;3937:281;4020:27;4042:4;4020:27;:::i;:::-;4012:6;4008:40;4150:6;4138:10;4135:22;-1:-1:-1;;;;;4102:10:25;4099:34;4096:62;4093:88;;;4161:18;;:::i;:::-;4197:2;4190:22;-1:-1:-1;;3937:281:25:o;4224:129::-;4258:6;4285:20;1094:2;1088:9;;1028:75;4285:20;4275:30;;4314:33;4342:4;4334:6;4314:33;:::i;:::-;4224:129;;;:::o;4359:311::-;4436:4;-1:-1:-1;;;;;4518:6:25;4515:30;4512:56;;;4548:18;;:::i;:::-;-1:-1:-1;4598:4:25;4586:17;;;4648:15;;4359:311::o;4816:710::-;4912:5;4937:81;4953:64;5010:6;4953:64;:::i;:::-;4937:81;:::i;:::-;5053:21;;;4928:90;-1:-1:-1;5101:4:25;5090:16;;;;5142:17;;5130:30;;5172:15;;;5169:122;;;5202:79;1031:74998:11;;;5202:79:25;5317:6;5300:220;5334:6;5329:3;5326:15;5300:220;;;5409:3;5438:37;5471:3;5459:10;5438:37;:::i;:::-;5426:50;;-1:-1:-1;5505:4:25;5496:14;;;;5351;5300:220;;;5304:21;4918:608;;4816:710;;;;;:::o;5549:370::-;5620:5;5669:3;5662:4;5654:6;5650:17;5646:27;5636:122;;5677:79;1031:74998:11;;;5677:79:25;5794:6;5781:20;5819:94;5909:3;5901:6;5894:4;5886:6;5882:17;5819:94;:::i;5925:1121::-;6045:6;6053;6061;6069;6077;6126:3;6114:9;6105:7;6101:23;6097:33;6094:120;;;6133:79;1031:74998:11;;;6133:79:25;6253:1;6278:53;6323:7;6303:9;6278:53;:::i;:::-;6268:63;;6224:117;6380:2;6406:53;6451:7;6442:6;6431:9;6427:22;6406:53;:::i;:::-;6396:63;;6351:118;6508:2;6534:53;6579:7;6570:6;6559:9;6555:22;6534:53;:::i;:::-;6524:63;;6479:118;6636:2;6662:53;6707:7;6698:6;6687:9;6683:22;6662:53;:::i;:::-;6652:63;;6607:118;6792:3;6781:9;6777:19;6764:33;-1:-1:-1;;;;;6816:6:25;6813:30;6810:117;;;6846:79;1031:74998:11;;;6846:79:25;6951:78;7021:7;7012:6;7001:9;6997:22;6951:78;:::i;:::-;6941:88;;6735:304;5925:1121;;;;;;;;:::o;7332:246::-;7413:1;7423:113;7437:6;7434:1;7431:13;7423:113;;;7513:11;;;7507:18;7494:11;;;7487:39;7459:2;7452:10;7423:113;;;-1:-1:-1;;7570:1:25;7552:16;;7545:27;7332:246::o;7584:377::-;7672:3;7700:39;7733:5;7132:12;;7052:99;7700:39;7263:19;;;7315:4;7306:14;;7748:78;;7835:65;7893:6;7888:3;7881:4;7874:5;7870:16;7835:65;:::i;:::-;7925:29;7947:6;7925:29;:::i;:::-;7916:39;;;;7584:377;-1:-1:-1;;;7584:377:25:o;7967:313::-;8118:2;8131:47;;;8103:18;;8195:78;8103:18;8259:6;8195:78;:::i;8286:329::-;8345:6;8394:2;8382:9;8373:7;8369:23;8365:32;8362:119;;;8400:79;1031:74998:11;;;8400:79:25;8520:1;8545:53;8590:7;8570:9;8545:53;:::i;8621:474::-;8689:6;8697;8746:2;8734:9;8725:7;8721:23;8717:32;8714:119;;;8752:79;1031:74998:11;;;8752:79:25;8872:1;8897:53;8942:7;8922:9;8897:53;:::i;:::-;8887:63;;8843:117;8999:2;9025:53;9070:7;9061:6;9050:9;9046:22;9025:53;:::i;:::-;9015:63;;8970:118;8621:474;;;;;:::o;9101:329::-;9160:6;9209:2;9197:9;9188:7;9184:23;9180:32;9177:119;;;9215:79;1031:74998:11;;;9215:79:25;9335:1;9360:53;9405:7;9385:9;9360:53;:::i;9436:619::-;9513:6;9521;9529;9578:2;9566:9;9557:7;9553:23;9549:32;9546:119;;;9584:79;1031:74998:11;;;9584:79:25;9704:1;9729:53;9774:7;9754:9;9729:53;:::i;:::-;9719:63;;9675:117;9831:2;9857:53;9902:7;9893:6;9882:9;9878:22;9857:53;:::i;:::-;9847:63;;9802:118;9959:2;9985:53;10030:7;10021:6;10010:9;10006:22;9985:53;:::i;:::-;9975:63;;9930:118;9436:619;;;;;:::o;10669:474::-;10737:6;10745;10794:2;10782:9;10773:7;10769:23;10765:32;10762:119;;;10800:79;1031:74998:11;;;10800:79:25;10920:1;10945:53;10990:7;10970:9;10945:53;:::i;:::-;10935:63;;10891:117;11047:2;11073:53;11118:7;11109:6;11098:9;11094:22;11073:53;:::i;11241:112::-;11224:4;11213:16;;11324:22;11149:86;11359:214;11486:2;11471:18;;11499:67;11475:9;11539:6;11499:67;:::i;11579:829::-;11681:6;11689;11697;11746:2;11734:9;11725:7;11721:23;11717:32;11714:119;;;11752:79;1031:74998:11;;;11752:79:25;11872:1;11897:53;11942:7;11922:9;11897:53;:::i;:::-;11887:63;;11843:117;11999:2;12025:53;12070:7;12061:6;12050:9;12046:22;12025:53;:::i;:::-;12015:63;;11970:118;12155:2;12144:9;12140:18;12127:32;-1:-1:-1;;;;;12178:6:25;12175:30;12172:117;;;12208:79;1031:74998:11;;;12208:79:25;12313:78;12383:7;12374:6;12363:9;12359:22;12313:78;:::i;12414:553::-;12629:3;12614:19;;12643:71;12618:9;12687:6;12643:71;:::i;:::-;12724:72;12792:2;12781:9;12777:18;12768:6;12724:72;:::i;:::-;12806;12874:2;12863:9;12859:18;12850:6;12806:72;:::i;:::-;12888;12956:2;12945:9;12941:18;12932:6;12888:72;:::i;13039:142::-;13089:9;13122:53;13140:34;13149:24;13167:5;13149:24;:::i;:::-;659:5;593:77;13140:34;13122:53;:::i;13187:126::-;13237:9;13270:37;13301:5;13270:37;:::i;13319:140::-;13383:9;13416:37;13447:5;13416:37;:::i;13465:159::-;13566:51;13611:5;13566:51;:::i;13630:250::-;13775:2;13760:18;;13788:85;13764:9;13846:6;13788:85;:::i;14026:568::-;14099:8;14109:6;14159:3;14152:4;14144:6;14140:17;14136:27;14126:122;;14167:79;1031:74998:11;;;14167:79:25;-1:-1:-1;14267:20:25;;-1:-1:-1;;;;;14299:30:25;;14296:117;;;14332:79;1031:74998:11;;;14332:79:25;14446:4;14438:6;14434:17;14422:29;;14500:3;14492:4;14484:6;14480:17;14470:8;14466:32;14463:41;14460:128;;;14507:79;1031:74998:11;;;14600:559:25;14686:6;14694;14743:2;14731:9;14722:7;14718:23;14714:32;14711:119;;;14749:79;1031:74998:11;;;14749:79:25;14869:31;;-1:-1:-1;;;;;14916:30:25;;14913:117;;;14949:79;1031:74998:11;;;14949:79:25;15062:80;15134:7;15125:6;15114:9;15110:22;15062:80;:::i;:::-;15044:98;;;;14840:312;14600:559;;;;;:::o;16125:116::-;2182:13;;2175:21;16195;2112:90;16247:133;16315:20;;16344:30;16315:20;16344:30;:::i;16386:323::-;16442:6;16491:2;16479:9;16470:7;16466:23;16462:32;16459:119;;;16497:79;1031:74998:11;;;16497:79:25;16617:1;16642:50;16684:7;16664:9;16642:50;:::i;16715:332::-;16874:2;16859:18;;16887:71;16863:9;16931:6;16887:71;:::i;:::-;16968:72;17036:2;17025:9;17021:18;17012:6;16968:72;:::i;17053:118::-;11224:4;11213:16;;17124:22;11149:86;17177:135;17246:20;;17275:31;17246:20;17275:31;:::i;17318:1199::-;17429:6;17437;17445;17453;17461;17469;17477;17526:3;17514:9;17505:7;17501:23;17497:33;17494:120;;;17533:79;1031:74998:11;;;17533:79:25;17653:1;17678:53;17723:7;17703:9;17678:53;:::i;:::-;17668:63;;17624:117;17780:2;17806:53;17851:7;17842:6;17831:9;17827:22;17806:53;:::i;:::-;17796:63;;17751:118;17908:2;17934:53;17979:7;17970:6;17959:9;17955:22;17934:53;:::i;:::-;17924:63;;17879:118;18036:2;18062:53;18107:7;18098:6;18087:9;18083:22;18062:53;:::i;:::-;18052:63;;18007:118;18164:3;18191:51;18234:7;18225:6;18214:9;18210:22;18191:51;:::i;:::-;18181:61;;18135:117;18291:3;18318:53;18363:7;18354:6;18343:9;18339:22;18318:53;:::i;:::-;18308:63;;18262:119;18420:3;18447:53;18492:7;18483:6;18472:9;18468:22;18447:53;:::i;:::-;18437:63;;18391:119;17318:1199;;;;;;;;;;:::o;18523:474::-;18591:6;18599;18648:2;18636:9;18627:7;18623:23;18619:32;18616:119;;;18654:79;1031:74998:11;;;18654:79:25;18774:1;18799:53;18844:7;18824:9;18799:53;:::i;19003:180::-;-1:-1:-1;;;19048:1:25;19041:88;19148:4;19145:1;19138:15;19172:4;19169:1;19162:15;19189:320;19270:1;19260:12;;19317:1;19307:12;;;19328:81;;19394:4;19386:6;19382:17;19372:27;;19328:81;19456:2;19448:6;19445:14;19425:18;19422:38;19419:84;;19475:18;;:::i;:::-;19240:269;19189:320;;;:::o;20127:419::-;20331:2;20344:47;;;20316:18;;20408:131;20316:18;19982:2;7263:19;;19655:34;7315:4;7306:14;;19632:58;-1:-1:-1;;;19707:15:25;;;19700:42;20103:12;;;19755:366;20552:143;20634:13;;20656:33;20634:13;20656:33;:::i;20701:351::-;20771:6;20820:2;20808:9;20799:7;20795:23;20791:32;20788:119;;;20826:79;1031:74998:11;;;20826:79:25;20946:1;20971:64;21027:7;21007:9;20971:64;:::i;21058:180::-;-1:-1:-1;;;21103:1:25;21096:88;21203:4;21200:1;21193:15;21227:4;21224:1;21217:15;21244:348;21284:7;21529:1;-1:-1:-1;;21457:74:25;21454:1;21451:81;21446:1;21439:9;21432:17;21428:105;21425:131;;;21536:18;;:::i;:::-;-1:-1:-1;21577:9:25;;21244:348::o;21598:180::-;-1:-1:-1;;;21643:1:25;21636:88;21743:4;21740:1;21733:15;21767:4;21764:1;21757:15;21784:185;21824:1;21914;21904:35;;21919:18;;:::i;:::-;-1:-1:-1;21954:9:25;;21784:185::o;21975:194::-;22106:9;;;22128:11;;;22125:37;;;22142:18;;:::i;22175:191::-;22304:9;;;22326:10;;;22323:36;;;22339:18;;:::i;22372:180::-;-1:-1:-1;;;22417:1:25;22410:88;22517:4;22514:1;22507:15;22541:4;22538:1;22531:15;22558:233;22597:3;-1:-1:-1;;22659:5:25;22656:77;22653:103;;22736:18;;:::i;:::-;-1:-1:-1;22783:1:25;22772:13;;22558:233::o;23209:179::-;23278:10;23299:46;23341:3;23333:6;23299:46;:::i;:::-;-1:-1:-1;;23377:4:25;23368:14;;23209:179::o;23394:122::-;23446:5;23471:39;23506:2;23501:3;23497:12;23492:3;23471:39;:::i;23673:699::-;7263:19;;;23802:3;7315:4;7306:14;;23818:93;-1:-1:-1;23987:5:25;24016:7;24047:1;24032:315;24057:6;24054:1;24051:13;24032:315;;;24127:42;24162:6;24153:7;24127:42;:::i;:::-;24189:63;24248:3;24233:13;24189:63;:::i;:::-;24182:70;-1:-1:-1;23626:4:25;23617:14;;24265:72;-1:-1:-1;;24079:1:25;24072:9;24032:315;;;-1:-1:-1;24363:3:25;;23673:699;-1:-1:-1;;;;;23673:699:25:o;24378:393::-;24569:2;24582:47;;;24554:18;;24646:118;24554:18;24750:6;24742;24646:118;:::i;24885:848::-;24977:6;25001:5;25015:712;25036:1;25026:8;25023:15;25015:712;;;25131:4;25126:3;25122:14;25116:4;25113:24;25110:50;;;25140:18;;:::i;:::-;25190:1;25180:8;25176:16;25173:451;;;25594:16;;;;25173:451;25645:15;;25685:32;25708:8;24863:1;24859:13;;24777:102;25685:32;25673:44;;25015:712;;;24885:848;;;;;;;:::o;25739:1073::-;25793:5;25984:8;25974:40;;-1:-1:-1;26005:1:25;26007:5;;25974:40;26033:4;26023:36;;-1:-1:-1;26050:1:25;26052:5;;26023:36;26119:4;26167:1;26162:27;;;;26203:1;26198:191;;;;26112:277;;26162:27;26180:1;26171:10;;26182:5;;;26198:191;26243:3;26233:8;26230:17;26227:43;;;26250:18;;:::i;:::-;26299:8;26296:1;26292:16;26283:25;;26334:3;26327:5;26324:14;26321:40;;;26341:18;;:::i;:::-;26374:5;;;26112:277;;26498:2;26488:8;26485:16;26479:3;26473:4;26470:13;26466:36;26448:2;26438:8;26435:16;26430:2;26424:4;26421:12;26417:35;26401:111;26398:246;;;-1:-1:-1;26544:19:25;;;26579:14;;;26576:40;;;26596:18;;:::i;:::-;26629:5;;26398:246;26669:42;26707:3;26697:8;26691:4;26688:1;26669:42;:::i;:::-;26654:57;;;;26743:4;26738:3;26734:14;26727:5;26724:25;26721:51;;;26752:18;;:::i;:::-;26790:16;;25739:1073;-1:-1:-1;;25739:1073:25:o;26818:285::-;26878:5;26992:104;-1:-1:-1;;27019:8:25;27013:4;26992:104;:::i;27109:180::-;-1:-1:-1;;;27154:1:25;27147:88;27254:4;27251:1;27244:15;27278:4;27275:1;27268:15;27386:158;27444:9;27477:61;27495:42;27530:5;27495:42;593:77;27550:147;27645:45;27684:5;27645:45;:::i;27703:238::-;27842:2;27827:18;;27855:79;27831:9;27907:6;27855:79;:::i;28134:366::-;28361:2;7263:19;;28276:3;7315:4;7306:14;;28087:33;28064:57;;28290:74;-1:-1:-1;28373:93:25;-1:-1:-1;28491:2:25;28482:12;;28134:366::o;28506:419::-;28710:2;28723:47;;;28695:18;;28787:131;28695:18;28787:131;:::i;28931:176::-;28963:1;29053;29043:35;;29058:18;;:::i;:::-;-1:-1:-1;29092:9:25;;28931:176::o;29113:320::-;29266:2;29251:18;;29279:71;29255:9;29323:6;29279:71;:::i;:::-;29360:66;29422:2;29411:9;29407:18;29398:6;29360:66;:::i;29846:732::-;29965:3;29994:54;30042:5;7132:12;;7052:99;29994:54;7263:19;;;7315:4;7306:14;;;;29670;;;30284:1;30269:284;30294:6;30291:1;30288:13;30269:284;;;30370:6;30364:13;30397:63;30456:3;30441:13;30397:63;:::i;:::-;30390:70;-1:-1:-1;23626:4:25;23617:14;;30473:70;-1:-1:-1;;30316:1:25;30309:9;30269:284;;30584:593;30821:2;30806:18;;30834:71;30810:9;30878:6;30834:71;:::i;:::-;30915:72;30983:2;30972:9;30968:18;30959:6;30915:72;:::i;:::-;31034:9;31028:4;31024:20;31019:2;31008:9;31004:18;30997:48;31062:108;31165:4;31156:6;31062:108;:::i;31183:442::-;31370:2;31355:18;;31383:71;31359:9;31427:6;31383:71;:::i;:::-;31464:72;31532:2;31521:9;31517:18;31508:6;31464:72;:::i;:::-;31546;31614:2;31603:9;31599:18;31590:6;31546:72;:::i;31631:137::-;31710:13;;31732:30;31710:13;31732:30;:::i;31774:345::-;31841:6;31890:2;31878:9;31869:7;31865:23;31861:32;31858:119;;;31896:79;1031:74998:11;;;31896:79:25;32016:1;32041:61;32094:7;32074:9;32041:61;:::i;32296:366::-;32523:2;7263:19;;32438:3;7315:4;7306:14;;-1:-1:-1;;;32242:41:25;;32452:74;-1:-1:-1;32535:93:25;32125:165;32668:419;32872:2;32885:47;;;32857:18;;32949:131;32857:18;32949:131;:::i;33093:332::-;33252:2;33237:18;;33265:71;33241:9;33309:6;33265:71;:::i;33431:332::-;33590:2;33575:18;;33603:71;33579:9;33647:6;33603:71;:::i;:::-;33684:72;33752:2;33741:9;33737:18;33728:6;33684:72;:::i;33769:775::-;34040:3;34025:19;;34054:71;34029:9;34098:6;34054:71;:::i;:::-;34135:72;34203:2;34192:9;34188:18;34179:6;34135:72;:::i;:::-;34217;34285:2;34274:9;34270:18;34261:6;34217:72;:::i;:::-;34299;34367:2;34356:9;34352:18;34343:6;34299:72;:::i;:::-;34381:73;34449:3;34438:9;34434:19;34425:6;34381:73;:::i;:::-;34464;34532:3;34521:9;34517:19;34508:6;34464:73;:::i;34550:775::-;34821:3;34806:19;;34835:71;34810:9;34879:6;34835:71;:::i;:::-;34916:72;34984:2;34973:9;34969:18;34960:6;34916:72;:::i;:::-;34998;35066:2;35055:9;35051:18;35042:6;34998:72;:::i;36359:663::-;-1:-1:-1;;;35602:90:25;;36097:1;36088:11;36600:3;36780:75;36088:11;36842:6;36780:75;:::i;:::-;36880:2;36875:3;36871:12;36864:19;;36893:75;36964:3;36955:6;36893:75;:::i;:::-;-1:-1:-1;36993:2:25;36984:12;;36359:663;-1:-1:-1;;36359:663:25:o;37028:545::-;37239:3;37224:19;;37253:71;37228:9;37297:6;37253:71;:::i;:::-;37334:68;37398:2;37387:9;37383:18;37374:6;37334:68;:::i;38166:390::-;38272:3;38300:39;38333:5;7132:12;;7052:99;38300:39;38453:65;38511:6;38506:3;38499:4;38492:5;38488:16;38453:65;:::i;:::-;38534:16;;;;;38166:390;-1:-1:-1;;38166:390:25:o;39143:967::-;-1:-1:-1;;;37696:49:25;;38151:2;38142:12;39525:3;39712:95;38142:12;39794:6;39712:95;:::i;:::-;-1:-1:-1;;;38679:43:25;;39128:2;39119:12;;-1:-1:-1;39989:95:25;39119:12;40071:6;39989:95;:::i;40116:442::-;40303:2;40288:18;;40316:71;40292:9;40360:6;40316:71;:::i;:::-;40397:72;40465:2;40454:9;40450:18;40441:6;40397:72;:::i;:::-;40479;40547:2;40536:9;40532:18;40523:6;40479:72;:::i;40735:366::-;40962:2;7263:19;;40877:3;7315:4;7306:14;;-1:-1:-1;;;40681:41:25;;40891:74;-1:-1:-1;40974:93:25;40564:165;41107:419;41311:2;41324:47;;;41296:18;;41388:131;41296:18;41388:131;:::i;41703:366::-;41930:2;7263:19;;41845:3;7315:4;7306:14;;-1:-1:-1;;;41649:41:25;;41859:74;-1:-1:-1;41942:93:25;41532:165;42075:419;42279:2;42292:47;;;42264:18;;42356:131;42264:18;42356:131;:::i;42500:442::-;42687:2;42672:18;;42700:71;42676:9;42744:6;42700:71;:::i;:::-;42781:72;42849:2;42838:9;42834:18;42825:6;42781:72;:::i;42948:507::-;43027:6;43035;43084:2;43072:9;43063:7;43059:23;43055:32;43052:119;;;43090:79;1031:74998:11;;;43090:79:25;43210:1;43235:64;43291:7;43271:9;43235:64;:::i;:::-;43225:74;;43181:128;43348:2;43374:64;43430:7;43421:6;43410:9;43406:22;43374:64;:::i;43556:120::-;43537:6;43526:18;;43628:23;43461:89;43682:141;43763:13;;43785:32;43763:13;43785:32;:::i;43829:143::-;43911:13;;43933:33;43911:13;43933:33;:::i;43978:505::-;44056:6;44064;44113:2;44101:9;44092:7;44088:23;44084:32;44081:119;;;44119:79;1031:74998:11;;;44119:79:25;44239:1;44264:63;44319:7;44299:9;44264:63;:::i;:::-;44254:73;;44210:127;44376:2;44402:64;44458:7;44449:6;44438:9;44434:22;44402:64;:::i;44489:332::-;44648:2;44633:18;;44661:71;44637:9;44705:6;44661:71;:::i;44827:171::-;44866:3;44880:33;44922:41;;44943:18;;:::i;:::-;-1:-1:-1;;;44979:13:25;;44827:171::o;45192:366::-;45419:2;7263:19;;;45144:34;7306:14;;45121:58;;;45334:3;45431:93;45004:182;45564:419;45768:2;45781:47;;;45753:18;;45845:131;45753:18;45845:131;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"4899200","executionCost":"infinite","totalCost":"infinite"},"external":{"ACCOUNTANT_MANAGER()":"infinite","ADD_STRATEGY_MANAGER()":"infinite","API_VERSION()":"infinite","ASSET()":"infinite","DEBT_MANAGER()":"infinite","DEBT_PURCHASER()":"infinite","DECIMALS()":"infinite","DEFAULT_ADMIN_ROLE()":"624","DEPOSIT_LIMIT_MANAGER()":"infinite","DOMAIN_SEPARATOR()":"2923","DOMAIN_TYPE_HASH()":"910","EMERGENCY_MANAGER()":"infinite","FACTORY()":"infinite","FORCE_REVOKE_MANAGER()":"infinite","MAX_BPS()":"1394","MAX_BPS_EXTENDED()":"867","MAX_DEBT_MANAGER()":"infinite","MAX_QUEUE()":"977","MINIMUM_IDLE_MANAGER()":"infinite","ONE_YEAR()":"infinite","PERMIT_TYPE_HASH()":"infinite","PROFIT_UNLOCK_MANAGER()":"infinite","QUEUE_MANAGER()":"infinite","REPORTING_MANAGER()":"infinite","REVOKE_STRATEGY_MANAGER()":"infinite","ROLE_MANAGER()":"infinite","WITHDRAW_LIMIT_MANAGER()":"infinite","acceptRoleManager()":"51892","accountant()":"infinite","addRole(address,bytes32)":"infinite","addStrategy(address)":"infinite","allowance(address,address)":"infinite","approve(address,uint256)":"infinite","assessShareOfUnrealisedLosses(address,uint256)":"infinite","asset()":"infinite","balanceOf(address)":"infinite","buyDebt(address,uint256)":"infinite","closeOpenRole(bytes32)":"infinite","convertToAssets(uint256)":"infinite","convertToShares(uint256)":"infinite","decimals()":"infinite","decreaseAllowance(address,uint256)":"infinite","defaultQueue(uint256)":"infinite","deposit(uint256,address)":"infinite","depositLimit()":"3340","depositLimitModule()":"infinite","forceRevokeStrategy(address)":"infinite","fullProfitUnlockDate()":"2769","futureRoleManager()":"infinite","getRoleAdmin(bytes32)":"infinite","grantRole(bytes32,address)":"infinite","hasRole(bytes32,address)":"infinite","increaseAllowance(address,uint256)":"infinite","lastProfitUpdate()":"2504","maxDeposit(address)":"infinite","maxMint(address)":"infinite","maxRedeem(address,uint256,address[])":"infinite","maxWithdraw(address,uint256,address[])":"infinite","minimumTotalIdle()":"2527","mint(uint256,address)":"infinite","name()":"infinite","nonces(address)":"infinite","openRoles(bytes32)":"infinite","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","previewDeposit(uint256)":"infinite","previewMint(uint256)":"infinite","previewRedeem(uint256)":"infinite","previewWithdraw(uint256)":"infinite","pricePerShare()":"infinite","processReport(address)":"infinite","profitMaxUnlockTime()":"2549","profitUnlockingRate()":"3341","redeem(uint256,address,address,uint256,address[])":"infinite","removeRole(address,bytes32)":"infinite","renounceRole(bytes32,address)":"infinite","revokeRole(bytes32,address)":"infinite","revokeStrategy(address)":"infinite","roleManager()":"infinite","roles(address)":"infinite","setAccountant(address)":"infinite","setDefaultQueue(address[])":"infinite","setDepositLimit(uint256)":"infinite","setDepositLimitModule(address)":"infinite","setMinimumTotalIdle(uint256)":"infinite","setOpenRole(bytes32)":"infinite","setProfitMaxUnlockTime(uint256)":"infinite","setUseDefaultQueue(bool)":"infinite","setWithdrawLimitModule(address)":"infinite","shutdown()":"3504","shutdownVault()":"infinite","strategies(address)":"infinite","supportsInterface(bytes4)":"infinite","symbol()":"infinite","totalAssets()":"infinite","totalDebtAmount()":"3098","totalIdleAmount()":"3055","totalSupply()":"infinite","totalSupplyAmount()":"3450","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","transferRoleManager(address)":"infinite","unlockedShares()":"infinite","updateDebt(address,uint256)":"infinite","updateMaxDebtForStrategy(address,uint256)":"infinite","useDefaultQueue()":"2959","withdraw(uint256,address,address,uint256,address[])":"infinite","withdrawLimitModule()":"infinite"},"internal":{"_addStrategy(address)":"infinite","_approve(address,address,uint256)":"infinite","_assessFees(address,uint256,uint256)":"infinite","_assessProfitAndLoss(address)":"infinite","_assessShareOfUnrealisedLosses(address,uint256)":"infinite","_burnShares(uint256,address)":"infinite","_burnUnlockedShares()":"infinite","_calculateShareManagement(uint256,uint256,uint256)":"infinite","_convertToAssets(uint256,enum Rounding)":"infinite","_convertToShares(uint256,enum Rounding)":"infinite","_decreaseAllowance(address,address,uint256)":"infinite","_deposit(address,address,uint256)":"infinite","_erc20SafeApprove(address,address,uint256)":"infinite","_erc20SafeTransfer(address,address,uint256)":"infinite","_erc20SafeTransferFrom(address,address,address,uint256)":"infinite","_finalizeRedeem(address,address,uint256,uint256,uint256,uint256,uint256)":"infinite","_handleAllowance(address,address,uint256)":"infinite","_handleShareBurnsAndIssues(struct ShareManagement memory,struct FeeAssessment memory,uint256,uint256,address)":"infinite","_increaseAllowance(address,address,uint256)":"infinite","_issueShares(uint256,address)":"infinite","_issueSharesForAmount(uint256,address)":"infinite","_manageUnlockingOfShares(uint256,uint256)":"infinite","_maxDeposit(address)":"infinite","_maxWithdraw(address,uint256,address[] memory)":"infinite","_mint(address,address,uint256)":"infinite","_permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","_processReport(address)":"infinite","_redeem(address,address,address,uint256,uint256,uint256,address[] memory)":"infinite","_revokeStrategy(address,bool)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_totalAssets()":"4316","_totalSupply()":"6576","_transfer(address,address,uint256)":"infinite","_transferFrom(address,address,uint256)":"infinite","_unlockedShares()":"infinite","_updateDebt(address,uint256)":"infinite","_validateRedeem(address,address,uint256,uint256)":"infinite","_withdrawAssets(uint256,address[] memory)":"infinite","_withdrawFromStrategy(address,uint256)":"infinite","domainSeparator()":"infinite"}},"methodIdentifiers":{"ACCOUNTANT_MANAGER()":"652da324","ADD_STRATEGY_MANAGER()":"c065ca07","API_VERSION()":"77e3b267","ASSET()":"4800d97f","DEBT_MANAGER()":"c8d74b60","DEBT_PURCHASER()":"ab5b4d49","DECIMALS()":"2e0f2625","DEFAULT_ADMIN_ROLE()":"a217fddf","DEPOSIT_LIMIT_MANAGER()":"a98222c4","DOMAIN_SEPARATOR()":"3644e515","DOMAIN_TYPE_HASH()":"c0993eea","EMERGENCY_MANAGER()":"fec61f06","FACTORY()":"2dd31000","FORCE_REVOKE_MANAGER()":"5bf6b4fb","MAX_BPS()":"fd967f47","MAX_BPS_EXTENDED()":"36fba084","MAX_DEBT_MANAGER()":"f1daeba8","MAX_QUEUE()":"3f7b5e40","MINIMUM_IDLE_MANAGER()":"0ad283d0","ONE_YEAR()":"16d3bfbb","PERMIT_TYPE_HASH()":"4d4bb197","PROFIT_UNLOCK_MANAGER()":"d4ae064f","QUEUE_MANAGER()":"4cfe51dc","REPORTING_MANAGER()":"03dcd12c","REVOKE_STRATEGY_MANAGER()":"9f3988f3","ROLE_MANAGER()":"f5b944eb","WITHDRAW_LIMIT_MANAGER()":"4ce1d38a","acceptRoleManager()":"6d020808","accountant()":"4fb3ccc5","addRole(address,bytes32)":"a73f7f8a","addStrategy(address)":"223e5479","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","assessShareOfUnrealisedLosses(address,uint256)":"5a569099","asset()":"38d52e0f","balanceOf(address)":"70a08231","buyDebt(address,uint256)":"405977e7","closeOpenRole(bytes32)":"c9a16ea4","convertToAssets(uint256)":"07a2d13a","convertToShares(uint256)":"c6e6f592","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","defaultQueue(uint256)":"ff1e7f08","deposit(uint256,address)":"6e553f65","depositLimit()":"ecf70858","depositLimitModule()":"9e34e348","forceRevokeStrategy(address)":"16b87ac0","fullProfitUnlockDate()":"2d632692","futureRoleManager()":"b3c187f2","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","increaseAllowance(address,uint256)":"39509351","lastProfitUpdate()":"8afca8f0","maxDeposit(address)":"402d267d","maxMint(address)":"c63d75b6","maxRedeem(address,uint256,address[])":"34b5fab6","maxWithdraw(address,uint256,address[])":"65cb6765","minimumTotalIdle()":"0835a3fc","mint(uint256,address)":"94bf804d","name()":"06fdde03","nonces(address)":"7ecebe00","openRoles(bytes32)":"53a66132","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","previewDeposit(uint256)":"ef8b30f7","previewMint(uint256)":"b3d7f6b9","previewRedeem(uint256)":"4cdad506","previewWithdraw(uint256)":"0a28a477","pricePerShare()":"99530b06","processReport(address)":"b6cc2d1f","profitMaxUnlockTime()":"0952864e","profitUnlockingRate()":"5141eebb","redeem(uint256,address,address,uint256,address[])":"06580f2d","removeRole(address,bytes32)":"6853920e","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","revokeStrategy(address)":"bb994d48","roleManager()":"00435da5","roles(address)":"99374642","setAccountant(address)":"48ea7127","setDefaultQueue(address[])":"633f228c","setDepositLimit(uint256)":"bdc8144b","setDepositLimitModule(address)":"2d772168","setMinimumTotalIdle(uint256)":"8212fd43","setOpenRole(bytes32)":"d538e904","setProfitMaxUnlockTime(uint256)":"df69b22a","setUseDefaultQueue(bool)":"9bbca884","setWithdrawLimitModule(address)":"4bbd71e9","shutdown()":"fc0e74d1","shutdownVault()":"e5236cc9","strategies(address)":"39ebf823","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalAssets()":"01e1d114","totalDebtAmount()":"c8dffa95","totalIdleAmount()":"3cd7b5ab","totalSupply()":"18160ddd","totalSupplyAmount()":"f828f50b","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferRoleManager(address)":"629b9142","unlockedShares()":"d9a0e97a","updateDebt(address,uint256)":"46e6ac49","updateMaxDebtForStrategy(address,uint256)":"f6d7bfa0","useDefaultQueue()":"bbe4eb49","withdraw(uint256,address,address,uint256,address[])":"d81a09f6","withdrawLimitModule()":"91986003"}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_roleManager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_profitMaxUnlockTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_strategyManagerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CallerIsNotTheFutureRoleManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DebtDidntChange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DebtHigherThanMaxDebt\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC20PermitExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC20PermitInvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExceedDepositLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InactiveStrategy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAssets\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientShares\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAsset\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAssetDecimals\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxLoss\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProfitUnlockTimeTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyAlreadyActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyDebtIsLessThanAssetsNeeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyHasDebt\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyHasUnrealisedLosses\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyIsShutdown\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooMuchLoss\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UsingDepositLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UsingModule\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroValue\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DebtPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentDebt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDebt\",\"type\":\"uint256\"}],\"name\":\"DebtUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"RoleSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"enum RoleStatusChange\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"RoleStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Shutdown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum StrategyChangeType\",\"name\":\"changeType\",\"type\":\"uint8\"}],\"name\":\"StrategyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gain\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loss\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentDebt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolFees\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalFees\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalRefunds\",\"type\":\"uint256\"}],\"name\":\"StrategyReported\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"accountant\",\"type\":\"address\"}],\"name\":\"UpdateAccountant\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"newDefaultQueue\",\"type\":\"address[]\"}],\"name\":\"UpdateDefaultQueue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositLimit\",\"type\":\"uint256\"}],\"name\":\"UpdateDepositLimit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositLimitModule\",\"type\":\"address\"}],\"name\":\"UpdateDepositLimitModule\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumTotalIdle\",\"type\":\"uint256\"}],\"name\":\"UpdateMinimumTotalIdle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"profitMaxUnlockTime\",\"type\":\"uint256\"}],\"name\":\"UpdateProfitMaxUnlockTime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"roleManager\",\"type\":\"address\"}],\"name\":\"UpdateRoleManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"useDefaultQueue\",\"type\":\"bool\"}],\"name\":\"UpdateUseDefaultQueue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"withdrawLimitModule\",\"type\":\"address\"}],\"name\":\"UpdateWithdrawLimitModule\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDebt\",\"type\":\"uint256\"}],\"name\":\"UpdatedMaxDebtForStrategy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACCOUNTANT_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ADD_STRATEGY_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"API_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ASSET\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEBT_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEBT_PURCHASER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEPOSIT_LIMIT_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EMERGENCY_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FORCE_REVOKE_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_BPS_EXTENDED\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_DEBT_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_QUEUE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_IDLE_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ONE_YEAR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROFIT_UNLOCK_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"QUEUE_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REPORTING_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REVOKE_STRATEGY_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROLE_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAW_LIMIT_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptRoleManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accountant\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"addRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newStrategy\",\"type\":\"address\"}],\"name\":\"addStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetsNeeded\",\"type\":\"uint256\"}],\"name\":\"assessShareOfUnrealisedLosses\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"closeOpenRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"defaultQueue\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositLimitModule\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"forceRevokeStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fullProfitUnlockDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"futureRoleManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastProfitUpdate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxLoss\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_strategies\",\"type\":\"address[]\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxLoss\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_strategies\",\"type\":\"address[]\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumTotalIdle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"openRoles\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pricePerShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"processReport\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"profitMaxUnlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"profitUnlockingRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxLoss\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_strategies\",\"type\":\"address[]\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"removeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"revokeStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"roleManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"roles\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAccountant\",\"type\":\"address\"}],\"name\":\"setAccountant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"newDefaultQueue\",\"type\":\"address[]\"}],\"name\":\"setDefaultQueue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_depositLimit\",\"type\":\"uint256\"}],\"name\":\"setDepositLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_depositLimitModule\",\"type\":\"address\"}],\"name\":\"setDepositLimitModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minimumTotalIdle\",\"type\":\"uint256\"}],\"name\":\"setMinimumTotalIdle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"setOpenRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newProfitMaxUnlockTime\",\"type\":\"uint256\"}],\"name\":\"setProfitMaxUnlockTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_useDefaultQueue\",\"type\":\"bool\"}],\"name\":\"setUseDefaultQueue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_withdrawLimitModule\",\"type\":\"address\"}],\"name\":\"setWithdrawLimitModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shutdown\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shutdownVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"strategies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"activation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastReport\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDebtAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalIdleAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupplyAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRoleManager\",\"type\":\"address\"}],\"name\":\"transferRoleManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockedShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"targetDebt\",\"type\":\"uint256\"}],\"name\":\"updateDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newMaxDebt\",\"type\":\"uint256\"}],\"name\":\"updateMaxDebtForStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"useDefaultQueue\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxLoss\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_strategies\",\"type\":\"address[]\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawLimitModule\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"asset()\":{\"details\":\"Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert.\"},\"convertToAssets(uint256)\":{\"details\":\"Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"convertToShares(uint256)\":{\"details\":\"Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"deposit(uint256,address)\":{\"details\":\"Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   deposit execution, and are accounted for during deposit. - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"maxDeposit(address)\":{\"details\":\"Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver, through a deposit call. - MUST return a limited value if receiver is subject to some deposit limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited. - MUST NOT revert.\"},\"maxMint(address)\":{\"details\":\"Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call. - MUST return a limited value if receiver is subject to some mint limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted. - MUST NOT revert.\"},\"mint(uint256,address)\":{\"details\":\"Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint   execution, and are accounted for during mint. - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"previewDeposit(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called   in the same transaction. - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the   deposit would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"previewMint(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the   same transaction. - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint   would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting.\"},\"previewRedeem(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the   same transaction. - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the   redemption would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by redeeming.\"},\"previewWithdraw(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if   called   in the same transaction. - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though   the withdrawal would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalAssets()\":{\"details\":\"Returns the total amount of the underlying asset that is \\u201cmanaged\\u201d by Vault. - SHOULD include any compounding that occurs from yield. - MUST be inclusive of any fees that are charged against assets in the Vault. - MUST NOT revert.\"}},\"stateVariables\":{\"name\":{\"details\":\"Returns the name of the token.\"},\"symbol\":{\"details\":\"Returns the symbol of the token.\"}},\"title\":\"Yearn V3 Vault\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"The Yearn VaultV3 is designed as a non-opinionated system to distribute funds of  depositors for a specific `asset` into different opportunities (aka Strategies) and manage accounting in a robust way.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FathomVault.sol\":\"FathomVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/Strings.sol\\\";\\nimport \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\\n     *\\n     * Format of the revert message is described in {_checkRole}.\\n     *\\n     * _Available since v4.6._\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        Strings.toHexString(account),\\n                        \\\" is missing role \\\",\\n                        Strings.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * May emit a {RoleGranted} event.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"},\"contracts/FathomVault.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\npragma solidity ^0.8.16;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/math/Math.sol\\\";\\nimport {AccessControl} from \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\nimport \\\"./Interfaces/IVault.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"./VaultStorage.sol\\\";\\nimport \\\"./Interfaces/IVaultEvents.sol\\\";\\nimport \\\"./Interfaces/IAccountant.sol\\\";\\nimport \\\"./Interfaces/IStrategy.sol\\\";\\nimport \\\"./Interfaces/IDepositLimitModule.sol\\\";\\nimport \\\"./Interfaces/IWithdrawLimitModule.sol\\\";\\nimport \\\"./Interfaces/IFactory.sol\\\";\\nimport \\\"./Interfaces/IStrategyManager.sol\\\";\\n\\n/**\\n@title Yearn V3 Vault\\n@notice The Yearn VaultV3 is designed as a non-opinionated system to distribute funds of \\ndepositors for a specific `asset` into different opportunities (aka Strategies)\\nand manage accounting in a robust way.\\n*/\\n\\n// Solidity version of the Vyper contract\\ncontract FathomVault is IERC20, IERC20Metadata, AccessControl, IVault, ReentrancyGuard, VaultStorage, IVaultEvents {\\n    // solhint-disable not-rely-on-time\\n    // solhint-disable function-max-lines\\n    // solhint-disable code-complexity\\n    // solhint-disable var-name-mixedcase\\n\\n    using Math for uint256;\\n\\n    error InvalidAssetDecimals();\\n    error ProfitUnlockTimeTooLong();\\n    error ERC20InsufficientAllowance();\\n    error InsufficientFunds();\\n    error ZeroAddress();\\n    error ERC20PermitExpired();\\n    error ERC20PermitInvalidSignature();\\n    error InsufficientShares();\\n    error InactiveStrategy();\\n    error StrategyIsShutdown();\\n    error ExceedDepositLimit();\\n    error ZeroValue();\\n    error MaxLoss();\\n    error InsufficientAssets();\\n    error TooMuchLoss();\\n    error InvalidAsset();\\n    error StrategyAlreadyActive();\\n    error StrategyHasDebt();\\n    error DebtDidntChange();\\n    error StrategyHasUnrealisedLosses();\\n    error DebtHigherThanMaxDebt();\\n    error UsingModule();\\n    error UsingDepositLimit();\\n    error CallerIsNotTheFutureRoleManager();\\n    error StrategyDebtIsLessThanAssetsNeeded();\\n\\n    // ERC20 - name of the vault's token\\n    string public override name;\\n    // ERC20 - symbol of the vault's token\\n    string public override symbol;\\n\\n    // IMMUTABLE\\n    // Address of the underlying token used by the vault\\n    IERC20 public immutable ASSET;\\n    // Token decimals\\n    uint256 public immutable DECIMALS;\\n    // Factory address\\n    address public immutable FACTORY;\\n    uint256 public immutable ONE_YEAR = 31556952;\\n\\n    // Constructor\\n    constructor(\\n        IERC20 _asset,\\n        string memory _name,\\n        string memory _symbol,\\n        address _roleManager,\\n        uint256 _profitMaxUnlockTime,\\n        address _strategyManagerAddress\\n    ) {\\n        ASSET = _asset;\\n        DECIMALS = IERC20Metadata(address(_asset)).decimals();\\n        if (DECIMALS >= 256) {\\n            revert InvalidAssetDecimals();\\n        }\\n\\n        FACTORY = msg.sender;\\n        // Must be less than one year for report cycles\\n        if (_profitMaxUnlockTime > 31556952) {\\n            revert ProfitUnlockTimeTooLong();\\n        }\\n\\n        profitMaxUnlockTime = _profitMaxUnlockTime;\\n\\n        name = _name;\\n        symbol = _symbol;\\n        roleManager = _roleManager;\\n\\n        DOMAIN_SEPARATOR = keccak256(\\n            abi.encode(\\n                DOMAIN_TYPE_HASH,\\n                keccak256(bytes(_name)), // \\\"Yearn Vault\\\" in the example\\n                keccak256(bytes(API_VERSION)), // API_VERSION in the example\\n                block.chainid, // Current chain ID\\n                address(this) // Address of the contract\\n            )\\n        );\\n\\n        strategyManager = _strategyManagerAddress;\\n    }\\n\\n    // SHARE MANAGEMENT\\n    // ERC20\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal {\\n        // Unlimited approval does nothing (saves an SSTORE)\\n        uint256 currentAllowance = _allowance[owner][spender];\\n        if (currentAllowance < amount) {\\n            revert ERC20InsufficientAllowance();\\n        }\\n        _approve(owner, spender, currentAllowance - amount);\\n    }\\n\\n    function _transfer(address sender, address receiver, uint256 amount) internal {\\n        uint256 currentBalance = _balanceOf[sender];\\n        if (currentBalance < amount) {\\n            revert InsufficientFunds();\\n        }\\n        if (sender == address(0) || receiver == address(0)) {\\n            revert ZeroAddress();\\n        }\\n\\n        _balanceOf[sender] = currentBalance - amount;\\n        uint256 receiverBalance = _balanceOf[receiver];\\n        _balanceOf[receiver] = receiverBalance + amount;\\n        emit Transfer(sender, receiver, amount);\\n    }\\n\\n    function _transferFrom(address sender, address receiver, uint256 amount) internal returns (bool) {\\n        _spendAllowance(sender, msg.sender, amount);\\n        _transfer(sender, receiver, amount);\\n        return true;\\n    }\\n\\n    function _approve(address owner, address spender, uint256 amount) internal returns (bool) {\\n        if (owner == address(0) || spender == address(0)) {\\n            revert ZeroAddress();\\n        }\\n        _allowance[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n        return true;\\n    }\\n\\n    function _increaseAllowance(address owner, address spender, uint256 amount) internal returns (bool) {\\n        uint256 newAllowance = _allowance[owner][spender] + amount;\\n        _approve(owner, spender, newAllowance);\\n        return true;\\n    }\\n\\n    function _decreaseAllowance(address owner, address spender, uint256 amount) internal returns (bool) {\\n        uint256 newAllowance = _allowance[owner][spender] - amount;\\n        _approve(owner, spender, newAllowance);\\n        return true;\\n    }\\n\\n    function _permit(\\n        address owner, \\n        address spender, \\n        uint256 amount, \\n        uint256 deadline, \\n        uint8 v, \\n        bytes32 r, \\n        bytes32 s\\n    ) internal returns (bool) {\\n        if (owner == address(0)) {\\n            revert ZeroAddress();\\n        }\\n        if (deadline < block.timestamp) {\\n            revert ERC20PermitExpired();\\n        }\\n        uint256 nonce = nonces[owner];\\n\\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPE_HASH, owner, spender, amount, nonce, deadline));\\n\\n        bytes32 digest = keccak256(\\n            abi.encodePacked(\\n                \\\"\\\\x19\\\\x01\\\",\\n                DOMAIN_SEPARATOR,\\n                structHash\\n            )\\n        );\\n\\n        address recoveredAddress = ecrecover(digest, v, r, s);\\n        if (recoveredAddress == address(0) || recoveredAddress != owner) {\\n            revert ERC20PermitInvalidSignature();\\n        }\\n        \\n        // Set the allowance to the specified amount\\n        _approve(owner, spender, amount);\\n\\n        // Increase nonce for the owner\\n        nonces[owner]++;\\n\\n        emit Approval(owner, spender, amount);\\n        return true;\\n    }\\n\\n    function _burnShares(uint256 shares, address owner) internal {\\n        if (_balanceOf[owner] < shares) {\\n            revert InsufficientShares();\\n        }\\n        _balanceOf[owner] -= shares;\\n        totalSupplyAmount -= shares;\\n        emit Transfer(owner, address(0), shares);\\n    }\\n\\n    // Returns the amount of shares that have been unlocked.\\n    // To avoid sudden pricePerShare spikes, profits must be processed \\n    // through an unlocking period. The mechanism involves shares to be \\n    // minted to the vault which are unlocked gradually over time. Shares \\n    // that have been locked are gradually unlocked over profitMaxUnlockTime.\\n    function _unlockedShares() internal view returns (uint256) {\\n        uint256 _fullProfitUnlockDate = fullProfitUnlockDate;\\n        uint256 currUnlockedShares = 0;\\n        if (_fullProfitUnlockDate > block.timestamp) {\\n            // If we have not fully unlocked, we need to calculate how much has been.\\n            currUnlockedShares = profitUnlockingRate * (block.timestamp - lastProfitUpdate) / MAX_BPS_EXTENDED;\\n        } else if (_fullProfitUnlockDate != 0) {\\n            // All shares have been unlocked\\n            currUnlockedShares = _balanceOf[address(this)];\\n        }\\n        return currUnlockedShares;\\n    }\\n    \\n    // Need to account for the shares issued to the vault that have unlocked.\\n    function _totalSupply() internal view returns (uint256) {\\n        return totalSupplyAmount - _unlockedShares();\\n    }\\n\\n    // Burns shares that have been unlocked since last update. \\n    // In case the full unlocking period has passed, it stops the unlocking.\\n    function _burnUnlockedShares() internal {\\n        // Get the amount of shares that have unlocked\\n        uint256 currUnlockedShares = _unlockedShares();\\n        // IF 0 there's nothing to do.\\n        if (currUnlockedShares == 0) return;\\n        \\n        // Only do an SSTORE if necessary\\n        if (fullProfitUnlockDate > block.timestamp) {\\n            lastProfitUpdate = block.timestamp;\\n        }\\n        \\n        // Burn the shares unlocked.\\n        _burnShares(currUnlockedShares, address(this));\\n    }\\n\\n    // Total amount of assets that are in the vault and in the strategies.\\n    function _totalAssets() internal view returns (uint256) {\\n        return totalIdleAmount + totalDebtAmount;\\n    }\\n\\n    // assets = shares * (total_assets / total_supply) --- (== price_per_share * shares)\\n    function _convertToAssets(uint256 shares, Rounding rounding) internal view returns (uint256) {\\n        if (shares == type(uint256).max || shares == 0) {\\n            return shares;\\n        }\\n\\n        uint256 currentTotalSupply = _totalSupply();\\n        // if total_supply is 0, price_per_share is 1\\n        if (currentTotalSupply == 0) {\\n            return shares;\\n        }\\n\\n        uint256 numerator = shares * _totalAssets();\\n        uint256 amount = numerator / currentTotalSupply;\\n        if (rounding == Rounding.ROUND_UP && numerator % currentTotalSupply != 0) {\\n            amount += 1;\\n        }\\n\\n        return amount;\\n    }\\n\\n    // shares = amount * (total_supply / total_assets) --- (== amount / price_per_share)\\n    function _convertToShares(uint256 assets, Rounding rounding) internal view returns (uint256) {\\n        if (assets == type(uint256).max || assets == 0) {\\n            return assets;\\n        }\\n\\n        uint256 currentTotalSupply = _totalSupply();\\n        uint256 currentTotalAssets = _totalAssets();\\n        \\n        if (currentTotalAssets == 0) {\\n            // if total_assets and total_supply is 0, price_per_share is 1\\n            if (currentTotalSupply == 0) {\\n                return assets;\\n            } else {\\n                // Else if total_supply > 0 price_per_share is 0\\n                return 0;\\n            }\\n        }\\n\\n        uint256 numerator = assets * currentTotalSupply;\\n        uint256 shares = numerator / currentTotalAssets;\\n        if (rounding == Rounding.ROUND_UP && numerator % currentTotalAssets != 0) {\\n            shares += 1;\\n        }\\n\\n        return shares;\\n    }\\n\\n    // Used only to approve tokens that are not the type managed by this Vault.\\n    // Used to handle non-compliant tokens like USDT\\n    function _erc20SafeApprove(address token, address spender, uint256 amount) internal {\\n        if (token == address(0) || spender == address(0)) {\\n            revert ZeroAddress();\\n        }\\n        require(IERC20(token).approve(spender, amount), \\\"approval failed\\\");\\n    }\\n\\n    // Used only to transfer tokens that are not the type managed by this Vault.\\n    // Used to handle non-compliant tokens like USDT\\n    function _erc20SafeTransferFrom(address token, address sender, address receiver, uint256 amount) internal {\\n        if (token == address(0) || sender == address(0) || receiver == address(0)) {\\n            revert ZeroAddress();\\n        }\\n        require(IERC20(token).transferFrom(sender, receiver, amount), \\\"transfer failed\\\");\\n    }\\n\\n    // Used only to send tokens that are not the type managed by this Vault.\\n    // Used to handle non-compliant tokens like USDT\\n    function _erc20SafeTransfer(address token, address receiver, uint256 amount) internal {\\n        if (token == address(0) || receiver == address(0)) {\\n            revert ZeroAddress();\\n        }\\n        require(IERC20(token).transfer(receiver, amount), \\\"transfer failed\\\");\\n    }\\n\\n    function _issueShares(uint256 shares, address recipient) internal {\\n        if (recipient == address(0)) {\\n            revert ZeroAddress();\\n        }\\n        _balanceOf[recipient] += shares;\\n        totalSupplyAmount += shares;\\n        emit Transfer(address(0), recipient, shares);\\n    }\\n\\n    // Issues shares that are worth 'amount' in the underlying token (asset).\\n    // WARNING: this takes into account that any new assets have been summed \\n    // to total_assets (otherwise pps will go down).\\n    function _issueSharesForAmount(uint256 amount, address recipient) internal returns (uint256) {\\n        if (recipient == address(0)) {\\n            revert ZeroAddress();\\n        }\\n        uint256 currentTotalSupply = _totalSupply();\\n        uint256 currentTotalAssets = _totalAssets();\\n        uint256 newShares = 0;\\n\\n        // If no supply PPS = 1.\\n        if (currentTotalSupply == 0) {\\n            newShares = amount;\\n        } else if (currentTotalAssets > amount) {\\n            newShares = amount * currentTotalSupply / (currentTotalAssets - amount);\\n        } else {\\n            // If total_supply > 0 but amount = totalAssets we want to revert because\\n            // after first deposit, getting here would mean that the rest of the shares\\n            // would be diluted to a price_per_share of 0. Issuing shares would then mean\\n            // either the new depositor or the previous depositors will loose money.\\n            revert(\\\"amount too high\\\");\\n        }\\n\\n        // We don't make the function revert\\n        if (newShares == 0) {\\n            return 0;\\n        }\\n\\n        _issueShares(newShares, recipient);\\n        return newShares;\\n    }\\n\\n\\n    // ERC4626\\n    function _maxDeposit(address receiver) internal view returns (uint256) {\\n        if (receiver == address(this) || receiver == address(0)) {\\n            return 0;\\n        }\\n\\n        // If there is a deposit limit module set use that.\\n        address currentDepositLimitModule = depositLimitModule;\\n        if (currentDepositLimitModule != address(0)) {\\n            // Use the deposit limit module logic\\n            return IDepositLimitModule(currentDepositLimitModule).availableDepositLimit(receiver);\\n        }\\n\\n        // Else use the standard flow.\\n        uint256 currentTotalAssets = _totalAssets();\\n        uint256 currentDepositLimit = depositLimit;\\n        if (currentTotalAssets >= currentDepositLimit) {\\n            return 0;\\n        }\\n\\n        return currentDepositLimit - currentTotalAssets;\\n    }\\n\\n    // @dev Returns the max amount of `asset` an `owner` can withdraw.\\n\\n    // This will do a full simulation of the withdraw in order to determine\\n    // how much is currently liquid and if the `max_loss` would allow for the \\n    // tx to not revert.\\n\\n    // This will track any expected loss to check if the tx will revert, but\\n    // not account for it in the amount returned since it is unrealised and \\n    // therefore will not be accounted for in the conversion rates.\\n\\n    // i.e. If we have 100 debt and 10 of unrealised loss, the max we can get\\n    // out is 90, but a user of the vault will need to call withdraw with 100\\n    // in order to get the full 90 out.\\n    function _maxWithdraw(address owner, uint256 _maxLoss, address[] memory _strategies)\\n        internal\\n        returns (uint256)\\n    {\\n        // Get the max amount for the owner if fully liquid.\\n        uint256 maxAssets = _convertToAssets(_balanceOf[owner], Rounding.ROUND_DOWN);\\n\\n        // If there is a withdraw limit module use that.\\n        if (withdrawLimitModule != address(0)) {\\n            uint256 moduleLimit = IWithdrawLimitModule(withdrawLimitModule).availableWithdrawLimit(owner, _maxLoss, _strategies);\\n            if (moduleLimit < maxAssets) {\\n                maxAssets = moduleLimit;\\n            }\\n            return maxAssets;\\n        }\\n\\n        // See if we have enough idle to service the withdraw.\\n        uint256 currentIdle = totalIdleAmount;\\n        if (maxAssets > currentIdle) {\\n            // Track how much we can pull.\\n            uint256 have = currentIdle;\\n            uint256 loss = 0;\\n            \\n            // Cache the default queue.\\n            // If a custom queue was passed, and we don't force the default queue.\\n            // Use the custom queue.\\n            address[] memory currentStrategies = _strategies.length != 0 && !useDefaultQueue ? _strategies : defaultQueue;\\n\\n            for (uint256 i = 0; i < currentStrategies.length; i++) {\\n                address strategy = currentStrategies[i];\\n                // Can't use an invalid strategy.\\n                if (strategies[strategy].activation == 0) {\\n                    revert InactiveStrategy();\\n                }\\n\\n                // Get the maximum amount the vault would withdraw from the strategy.\\n                uint256 toWithdraw = Math.min(\\n                    maxAssets - have, // What we still need for the full withdraw\\n                    strategies[strategy].currentDebt // The current debt the strategy has.\\n                    );\\n\\n                // Get any unrealised loss for the strategy.\\n                uint256 unrealisedLoss = _assessShareOfUnrealisedLosses(strategy, toWithdraw);\\n\\n                // See if any limit is enforced by the strategy.\\n                uint256 strategyLimit = IStrategy(strategy).convertToAssets(\\n                    IStrategy(strategy).maxRedeem(address(this))\\n                );\\n\\n                // Adjust accordingly if there is a max withdraw limit.\\n                if (strategyLimit < toWithdraw - unrealisedLoss) {\\n                    // lower unrealised loss to the proportional to the limit.\\n                    unrealisedLoss = (unrealisedLoss * strategyLimit) / toWithdraw;\\n                    // Still count the unrealised loss as withdrawable.\\n                    toWithdraw = strategyLimit + unrealisedLoss;\\n                }\\n\\n                // If 0 move on to the next strategy.\\n                if (toWithdraw == 0) {\\n                    continue;\\n                }\\n\\n                // If there would be a loss with a non-maximum `max_loss` value.\\n                if (unrealisedLoss > 0 && _maxLoss < MAX_BPS) {\\n                    // Check if the loss is greater than the allowed range.\\n                    if (loss + unrealisedLoss > (have + toWithdraw) * _maxLoss / MAX_BPS) {\\n                        // If so use the amounts up till now.\\n                        break;\\n                    }\\n                }\\n\\n                // Add to what we can pull.\\n                have += toWithdraw;\\n\\n                // If we have all we need break.\\n                if (have >= maxAssets) {\\n                    break;\\n                }\\n\\n                // Add any unrealised loss to the total\\n                loss += unrealisedLoss;\\n            }\\n\\n            // Update the max after going through the queue.\\n            // In case we broke early or exhausted the queue.\\n            maxAssets = have;\\n        }\\n\\n        return maxAssets;\\n    }\\n\\n    // Used for `deposit` calls to transfer the amount of `asset` to the vault, \\n    // issue the corresponding shares to the `recipient` and update all needed \\n    // vault accounting.\\n    function _deposit(address sender, address recipient, uint256 assets) internal returns (uint256) {\\n        if (shutdown == true) {\\n            revert StrategyIsShutdown();\\n        }\\n        if (assets > _maxDeposit(recipient)) {\\n            revert ExceedDepositLimit();\\n        }\\n\\n        // Transfer the tokens to the vault first.\\n        ASSET.transferFrom(msg.sender, address(this), assets);\\n        // Record the change in total assets.\\n        totalIdleAmount += assets;\\n\\n        // Issue the corresponding shares for assets.\\n        uint256 shares = _issueSharesForAmount(assets, recipient);\\n        if (shares < 0) {\\n            revert ZeroValue();\\n        }\\n\\n        emit Deposit(sender, recipient, assets, shares);\\n        return shares;\\n    }\\n\\n    // Used for `mint` calls to issue the corresponding shares to the `recipient`,\\n    // transfer the amount of `asset` to the vault, and update all needed vault \\n    // accounting.\\n    function _mint(address sender, address recipient, uint256 shares) internal returns (uint256) {\\n        if (shutdown == true) {\\n            revert StrategyIsShutdown();\\n        }\\n        // Get corresponding amount of assets.\\n        uint256 assets = _convertToAssets(shares, Rounding.ROUND_UP);\\n\\n        if (assets < 0) {\\n            revert ZeroValue();\\n        }\\n        if (assets > _maxDeposit(recipient)) {\\n            revert ExceedDepositLimit();\\n        }\\n\\n        // Transfer the tokens to the vault first.\\n        ASSET.transferFrom(msg.sender, address(this), assets);\\n        // Record the change in total assets.\\n        totalIdleAmount += assets;\\n\\n        // Issue the corresponding shares for assets.\\n        _issueShares(shares, recipient); // Assuming _issueShares is defined elsewhere\\n\\n        emit Deposit(sender, recipient, assets, shares);\\n        return assets;\\n    }\\n\\n    // Returns the share of losses that a user would take if withdrawing from this strategy\\n    // e.g. if the strategy has unrealised losses for 10% of its current debt and the user \\n    // wants to withdraw 1000 tokens, the losses that he will take are 100 token\\n    function _assessShareOfUnrealisedLosses(address strategy, uint256 assetsNeeded) internal view returns (uint256) {\\n        // Minimum of how much debt the debt should be worth.\\n        uint256 strategyCurrentDebt = strategies[strategy].currentDebt;\\n        // The actual amount that the debt is currently worth.\\n        uint256 vaultShares = IStrategy(strategy).balanceOf(address(this));\\n        uint256 strategyAssets = IStrategy(strategy).convertToAssets(vaultShares);\\n\\n        // If no losses, return 0\\n        if (strategyAssets >= strategyCurrentDebt || strategyCurrentDebt == 0) {\\n            return 0;\\n        }\\n\\n        // Users will withdraw assets_to_withdraw divided by loss ratio (strategy_assets / strategy_current_debt - 1),\\n        // but will only receive assets_to_withdraw.\\n        // NOTE: If there are unrealised losses, the user will take his share.\\n        uint256 numerator = assetsNeeded * strategyAssets;\\n        uint256 lossesUserShare = assetsNeeded - numerator / strategyCurrentDebt;\\n\\n        // Always round up.\\n        if (numerator % strategyCurrentDebt != 0) {\\n            lossesUserShare += 1;\\n        }\\n\\n        return lossesUserShare;\\n    }\\n\\n    // This takes the amount denominated in asset and performs a {redeem}\\n    // with the corresponding amount of shares.\\n    // We use {redeem} to natively take on losses without additional non-4626 standard parameters.\\n    function _withdrawFromStrategy(address strategy, uint256 assetsToWithdraw) internal {\\n        // Need to get shares since we use redeem to be able to take on losses.\\n        uint256 sharesToRedeem = Math.min(\\n            IStrategy(strategy).previewWithdraw(assetsToWithdraw), // Use previewWithdraw since it should round up.\\n            IStrategy(strategy).balanceOf(address(this)) // And check against our actual balance.\\n        );\\n\\n        // Redeem the shares.\\n        IStrategy(strategy).redeem(sharesToRedeem, address(this), address(this));\\n    }\\n\\n    // This will attempt to free up the full amount of assets equivalent to\\n    // `shares_to_burn` and transfer them to the `receiver`. If the vault does\\n    // not have enough idle funds it will go through any strategies provided by\\n    // either the withdrawer or the queue_manager to free up enough funds to \\n    // service the request.\\n\\n    // The vault will attempt to account for any unrealized losses taken on from\\n    // strategies since their respective last reports.\\n\\n    // Any losses realized during the withdraw from a strategy will be passed on\\n    // to the user that is redeeming their vault shares.\\n    function _redeem(\\n        address sender,\\n        address receiver,\\n        address owner,\\n        uint256 assets,\\n        uint256 sharesToBurn,\\n        uint256 maxLoss,\\n        address[] memory _strategies\\n    ) internal returns (uint256) {\\n        _validateRedeem(receiver, owner, sharesToBurn, maxLoss);\\n        _handleAllowance(owner, sender, sharesToBurn);\\n        (uint256 requestedAssets, uint256 currTotalIdle) = _withdrawAssets(assets, _strategies);\\n        _finalizeRedeem(receiver, owner, sharesToBurn, assets, requestedAssets, currTotalIdle, maxLoss);\\n        \\n        emit Withdraw(sender, receiver, owner, requestedAssets, sharesToBurn);\\n        return requestedAssets;\\n    }\\n\\n    // Validates the state and inputs for the redeem operation.\\n    function _validateRedeem(\\n        address receiver,\\n        address owner,\\n        uint256 sharesToBurn,\\n        uint256 maxLoss\\n    ) internal view {\\n        if (receiver == address(0)) {\\n            revert ZeroAddress();\\n        }\\n        if (maxLoss > MAX_BPS) {\\n            revert MaxLoss();\\n        }\\n        if (sharesToBurn <= 0) {\\n            revert ZeroValue();\\n        }\\n        if (_balanceOf[owner] < sharesToBurn) {\\n            revert InsufficientShares();\\n        }\\n    }\\n\\n    // Handles the allowance check and spending.\\n    function _handleAllowance(address owner, address sender, uint256 sharesToBurn) internal {\\n        if (sender != owner) {\\n            _spendAllowance(owner, sender, sharesToBurn);\\n        }\\n    }\\n\\n    // Withdraws assets from strategies as needed and handles unrealized losses.\\n    function _withdrawAssets(uint256 assets, address[] memory _strategies) internal returns (uint256, uint256) {\\n        // Initialize the state struct\\n        WithdrawalState memory state = WithdrawalState({\\n            requestedAssets: assets,\\n            currTotalIdle: totalIdleAmount,\\n            currTotalDebt: totalDebtAmount,\\n            assetsNeeded: 0,\\n            previousBalance: ASSET.balanceOf(address(this)),\\n            unrealisedLossesShare: 0\\n        });\\n\\n        // If there are not enough assets in the Vault contract, we try to free\\n        // funds from strategies.\\n        if (state.requestedAssets > state.currTotalIdle) {\\n            // Cache the default queue.\\n            address[] memory currentStrategies = _strategies.length != 0 && !useDefaultQueue ? _strategies : defaultQueue;\\n\\n            // Withdraw from strategies only what idle doesn't cover.\\n            // `assetsNeeded` is the total amount we need to fill the request.\\n            state.assetsNeeded = state.requestedAssets - state.currTotalIdle;\\n\\n            // Assuming _strategies is an array of addresses representing the strategies\\n            for (uint i = 0; i < currentStrategies.length; i++) {\\n                address strategy = currentStrategies[i];\\n                \\n                // Make sure we have a valid strategy.\\n                if (strategies[strategy].activation == 0) {\\n                    revert InactiveStrategy();\\n                }\\n\\n                // How much should the strategy have.\\n                uint256 currentDebt = strategies[strategy].currentDebt;\\n\\n                // What is the max amount to withdraw from this strategy.\\n                uint256 assetsToWithdraw = Math.min(state.assetsNeeded, currentDebt);\\n\\n                // Cache max_withdraw now for use if unrealized loss > 0\\n                // Use maxRedeem and convert since we use redeem.\\n                uint256 currMaxWithdraw = IStrategy(strategy).convertToAssets(\\n                    IStrategy(strategy).maxRedeem(address(this))\\n                );\\n\\n                // CHECK FOR UNREALIZED LOSSES\\n                // If unrealised losses > 0, then the user will take the proportional share \\n                // and realize it (required to avoid users withdrawing from lossy strategies).\\n                // NOTE: strategies need to manage the fact that realising part of the loss can \\n                // mean the realisation of 100% of the loss!! (i.e. if for withdrawing 10% of the\\n                // strategy it needs to unwind the whole position, generated losses might be bigger)\\n                uint256 unrealisedLossesShare = _assessShareOfUnrealisedLosses(strategy, assetsToWithdraw);\\n                if (unrealisedLossesShare > 0) {\\n                    // If max withdraw is limiting the amount to pull, we need to adjust the portion of \\n                    // the unrealized loss the user should take.\\n                    if (currMaxWithdraw < assetsToWithdraw - unrealisedLossesShare) {\\n                        // How much would we want to withdraw\\n                        uint256 wanted = assetsToWithdraw - unrealisedLossesShare;\\n                        // Get the proportion of unrealised comparing what we want vs. what we can get\\n                        unrealisedLossesShare = unrealisedLossesShare * currMaxWithdraw / wanted;\\n                        // Adjust assetsToWithdraw so all future calculations work correctly\\n                        assetsToWithdraw = currMaxWithdraw + unrealisedLossesShare;\\n                    }\\n                    \\n                    // User now \\\"needs\\\" less assets to be unlocked (as he took some as losses)\\n                    assetsToWithdraw -= unrealisedLossesShare;\\n                    state.requestedAssets -= unrealisedLossesShare;\\n                    // NOTE: done here instead of waiting for regular update of these values \\n                    // because it's a rare case (so we can save minor amounts of gas)\\n                    state.assetsNeeded -= unrealisedLossesShare;\\n                    state.currTotalDebt -= unrealisedLossesShare;\\n\\n                    // If max withdraw is 0 and unrealised loss is still > 0 then the strategy likely\\n                    // realized a 100% loss and we will need to realize that loss before moving on.\\n                    if (currMaxWithdraw == 0 && unrealisedLossesShare > 0) {\\n                        // Adjust the strategy debt accordingly.\\n                        uint256 newDebt = currentDebt - unrealisedLossesShare;\\n\\n                        // Update strategies storage\\n                        strategies[strategy].currentDebt = newDebt;\\n\\n                        // Log the debt update\\n                        emit DebtUpdated(strategy, currentDebt, newDebt);\\n                    }\\n                }\\n\\n                // Adjust based on the max withdraw of the strategy.\\n                assetsToWithdraw = Math.min(assetsToWithdraw, currMaxWithdraw);\\n\\n                // Can't withdraw 0.\\n                if (assetsToWithdraw == 0) {\\n                    continue;\\n                }\\n\\n                // WITHDRAW FROM STRATEGY\\n                _withdrawFromStrategy(strategy, assetsToWithdraw);\\n                uint256 postBalance = ASSET.balanceOf(address(this));\\n                \\n                // Always check withdrawn against the real amounts.\\n                uint256 withdrawn = postBalance - state.previousBalance;\\n                uint256 loss = 0;\\n                // Check if we redeemed too much.\\n                if (withdrawn > assetsToWithdraw) {\\n                    // Make sure we don't underflow in debt updates.\\n                    if (withdrawn > currentDebt) {\\n                        // Can't withdraw more than our debt.\\n                        assetsToWithdraw = currentDebt;\\n                    } else {\\n                        assetsToWithdraw += withdrawn - assetsToWithdraw;\\n                    }\\n                // If we have not received what we expected, we consider the difference a loss.\\n                } else if (withdrawn < assetsToWithdraw) {\\n                    loss = assetsToWithdraw - withdrawn;\\n                }\\n\\n                // NOTE: strategy's debt decreases by the full amount but the total idle increases \\n                // by the actual amount only (as the difference is considered lost).\\n                state.currTotalIdle += assetsToWithdraw - loss;\\n                state.requestedAssets -= loss;\\n                state.currTotalDebt -= assetsToWithdraw;\\n\\n                // Vault will reduce debt because the unrealised loss has been taken by user\\n                uint256 _newDebt = currentDebt - (assetsToWithdraw + unrealisedLossesShare);\\n\\n                // Update strategies storage\\n                strategies[strategy].currentDebt = _newDebt;\\n                // Log the debt update\\n                emit DebtUpdated(strategy, currentDebt, _newDebt);\\n\\n                // Break if we have enough total idle to serve initial request.\\n                if (state.requestedAssets <= state.currTotalIdle) {\\n                    break;\\n                }\\n\\n                // We update the previous_balance variable here to save gas in next iteration.\\n                state.previousBalance = postBalance;\\n\\n                // Reduce what we still need. Safe to use assets_to_withdraw \\n                // here since it has been checked against requested_assets\\n                state.assetsNeeded -= assetsToWithdraw;\\n            }\\n\\n            // If we exhaust the queue and still have insufficient total idle, revert.\\n            if (state.currTotalIdle < state.requestedAssets) {\\n                revert InsufficientAssets();\\n            }\\n\\n            // Commit memory to storage.\\n            totalDebtAmount = state.currTotalDebt;\\n        }\\n\\n        return (state.requestedAssets, state.currTotalIdle);\\n    }\\n\\n    // Finalizes the redeem operation by burning shares and transferring assets.\\n    function _finalizeRedeem(\\n        address receiver,\\n        address owner,\\n        uint256 sharesToBurn,\\n        uint256 assets,\\n        uint256 requestedAssets,\\n        uint256 currTotalIdle,\\n        uint256 maxLoss\\n    ) internal {\\n        // Check if there is a loss and a non-default value was set.\\n        if (assets > requestedAssets && maxLoss < MAX_BPS) {\\n            // Assure the loss is within the allowed range.\\n            if (assets - requestedAssets > assets * maxLoss / MAX_BPS) {\\n                revert TooMuchLoss();\\n            }\\n        }\\n\\n        // First burn the corresponding shares from the redeemer.\\n        _burnShares(sharesToBurn, owner);\\n        // Commit memory to storage.\\n        totalIdleAmount = currTotalIdle - requestedAssets;\\n        // Transfer the requested amount to the receiver.\\n        _erc20SafeTransfer(address(ASSET), receiver, requestedAssets);\\n    }\\n\\n    // STRATEGY MANAGEMENT\\n    function _addStrategy(address newStrategy) internal {\\n        // Delegate call to StrategyManager\\n        IStrategyManager(strategyManager).addStrategy(newStrategy);\\n    }\\n\\n    function _revokeStrategy(address strategy, bool force) internal {\\n        // Delegate call to StrategyManager\\n        IStrategyManager(strategyManager).revokeStrategy(strategy, force);\\n    }\\n\\n    // DEBT MANAGEMENT\\n    // The vault will re-balance the debt vs target debt. Target debt must be\\n    // smaller or equal to strategy's max_debt. This function will compare the \\n    // current debt with the target debt and will take funds or deposit new \\n    // funds to the strategy. \\n\\n    // The strategy can require a maximum amount of funds that it wants to receive\\n    // to invest. The strategy can also reject freeing funds if they are locked.\\n    function _updateDebt(address strategy, uint256 targetDebt) internal returns (uint256) {\\n        // How much we want the strategy to have.\\n        uint256 newDebt = targetDebt;\\n        // How much the strategy currently has.\\n        uint256 currentDebt = strategies[strategy].currentDebt;\\n\\n        // If the vault is shutdown we can only pull funds.\\n        if (shutdown == true) {\\n            newDebt = 0;\\n        }\\n\\n        if (newDebt == currentDebt) {\\n            revert DebtDidntChange();\\n        }\\n\\n        if (currentDebt > newDebt) {\\n            // Reduce debt\\n            uint256 assetsToWithdraw = currentDebt - newDebt;\\n\\n            // Respect minimum total idle in vault\\n            if (totalIdleAmount + assetsToWithdraw < minimumTotalIdle) {\\n                assetsToWithdraw = minimumTotalIdle - totalIdleAmount;\\n                // Cant withdraw more than the strategy has.\\n                if (assetsToWithdraw > currentDebt) {\\n                    assetsToWithdraw = currentDebt;\\n                }\\n            }\\n\\n            // Check how much we are able to withdraw.\\n            // Use maxRedeem and convert since we use redeem.\\n            uint256 withdrawable = IStrategy(strategy).convertToAssets(IStrategy(strategy).maxRedeem(address(this)));\\n\\n            if (withdrawable <= 0) {\\n                revert ZeroValue();\\n            }\\n\\n            // If insufficient withdrawable, withdraw what we can.\\n            if (withdrawable < assetsToWithdraw) {\\n                assetsToWithdraw = withdrawable;\\n            }\\n\\n            // If there are unrealised losses we don't let the vault reduce its debt until there is a new report\\n            uint256 unrealisedLossesShare = _assessShareOfUnrealisedLosses(strategy, assetsToWithdraw);\\n            if (unrealisedLossesShare != 0) {\\n                revert StrategyHasUnrealisedLosses();\\n            }\\n\\n            // Always check the actual amount withdrawn.\\n            uint256 preBalance = ASSET.balanceOf(address(this));\\n            _withdrawFromStrategy(strategy, assetsToWithdraw);\\n            uint256 postBalance = ASSET.balanceOf(address(this));\\n\\n            // making sure we are changing idle according to the real result no matter what. \\n            // We pull funds with {redeem} so there can be losses or rounding differences.\\n            uint256 withdrawn = Math.min(postBalance - preBalance, currentDebt);\\n\\n            // If we got too much make sure not to increase PPS.\\n            if (withdrawn > assetsToWithdraw) {\\n                assetsToWithdraw = withdrawn;\\n            }\\n\\n            // Update storage.\\n            totalIdleAmount += withdrawn; // actual amount we got.\\n            // Amount we tried to withdraw in case of losses\\n            totalDebtAmount -= assetsToWithdraw;\\n\\n            newDebt = currentDebt - assetsToWithdraw;\\n        } else {\\n            // We are increasing the strategies debt\\n\\n            // Revert if target_debt cannot be achieved due to configured max_debt for given strategy\\n            if (newDebt > strategies[strategy].maxDebt) {\\n                revert DebtHigherThanMaxDebt();\\n            }\\n\\n            // Vault is increasing debt with the strategy by sending more funds.\\n            uint256 currentMaxDeposit = IStrategy(strategy).maxDeposit(address(this));\\n            if (currentMaxDeposit <= 0) {\\n                revert ZeroValue();\\n            }\\n\\n            // Deposit the difference between desired and current.\\n            uint256 assetsToDeposit = newDebt - currentDebt;\\n            if (assetsToDeposit > currentMaxDeposit) {\\n                // Deposit as much as possible.\\n                assetsToDeposit = currentMaxDeposit;\\n            }\\n\\n            if (totalIdleAmount <= minimumTotalIdle) {\\n                revert InsufficientFunds();\\n            }\\n            uint256 availableIdle = totalIdleAmount - minimumTotalIdle;\\n\\n            // If insufficient funds to deposit, transfer only what is free.\\n            if (assetsToDeposit > availableIdle) {\\n                assetsToDeposit = availableIdle;\\n            }\\n\\n            // Can't Deposit 0.\\n            if (assetsToDeposit > 0) {\\n                // Approve the strategy to pull only what we are giving it.\\n                _erc20SafeApprove(address(ASSET), strategy, assetsToDeposit);\\n\\n                // Always update based on actual amounts deposited.\\n                uint256 preBalance = ASSET.balanceOf(address(this));\\n                IStrategy(strategy).deposit(assetsToDeposit, address(this));\\n                uint256 postBalance = ASSET.balanceOf(address(this));\\n\\n                // Make sure our approval is always back to 0.\\n                _erc20SafeApprove(address(ASSET), strategy, 0);\\n\\n                // Making sure we are changing according to the real result no \\n                // matter what. This will spend more gas but makes it more robust.\\n                assetsToDeposit = preBalance - postBalance;\\n\\n                // Update storage.\\n                totalIdleAmount -= assetsToDeposit;\\n                totalDebtAmount += assetsToDeposit;\\n\\n                newDebt = currentDebt + assetsToDeposit;\\n            }\\n        }\\n\\n        // Commit memory to storage.\\n        strategies[strategy].currentDebt = newDebt;\\n\\n        emit DebtUpdated(strategy, currentDebt, newDebt);\\n        return newDebt;\\n    }\\n\\n    // ACCOUNTING MANAGEMENT\\n    // Processing a report means comparing the debt that the strategy has taken \\n    // with the current amount of funds it is reporting. If the strategy owes \\n    // less than it currently has, it means it has had a profit, else (assets < debt) \\n    // it has had a loss.\\n\\n    // Different strategies might choose different reporting strategies: pessimistic, \\n    // only realised P&L, ... The best way to report depends on the strategy.\\n\\n    // The profit will be distributed following a smooth curve over the vaults \\n    // profit_max_unlock_time seconds. Losses will be taken immediately, first from the \\n    // profit buffer (avoiding an impact in pps), then will reduce pps.\\n\\n    // Any applicable fees are charged and distributed during the report as well\\n    // to the specified recipients.\\n    function _processReport(address strategy) internal returns (uint256, uint256) {\\n        // Make sure we have a valid strategy.\\n        if (strategies[strategy].activation == 0) {\\n            revert InactiveStrategy();\\n        }\\n\\n        // Burn shares that have been unlocked since the last update\\n        _burnUnlockedShares();\\n\\n        (uint256 gain, uint256 loss) = _assessProfitAndLoss(strategy);\\n\\n        FeeAssessment memory fees = _assessFees(strategy, gain, loss);\\n\\n        ShareManagement memory shares = _calculateShareManagement(loss, fees.totalFees, fees.protocolFees);\\n\\n        (uint256 previouslyLockedShares, uint256 newlyLockedShares) = _handleShareBurnsAndIssues(shares, fees, gain, loss, strategy);\\n\\n        _manageUnlockingOfShares(previouslyLockedShares, newlyLockedShares);\\n\\n        // Record the report of profit timestamp.\\n        strategies[strategy].lastReport = block.timestamp;\\n\\n        // We have to recalculate the fees paid for cases with an overall loss.\\n        emit StrategyReported(\\n            strategy,\\n            gain,\\n            loss,\\n            strategies[strategy].currentDebt,\\n            _convertToAssets(shares.protocolFeesShares, Rounding.ROUND_DOWN),\\n            _convertToAssets(shares.protocolFeesShares + shares.accountantFeesShares, Rounding.ROUND_DOWN),\\n            fees.totalRefunds\\n        );\\n\\n        return (gain, loss);\\n    }\\n\\n    // Assess the profit and loss of a strategy.\\n    function _assessProfitAndLoss(address strategy) internal view returns (uint256 gain, uint256 loss) {\\n        // Vault assesses profits using 4626 compliant interface.\\n        // NOTE: It is important that a strategies `convertToAssets` implementation\\n        // cannot be manipulated or else the vault could report incorrect gains/losses.\\n        uint256 strategyShares = IStrategy(strategy).balanceOf(address(this));\\n        // How much the vaults position is worth.\\n        uint256 currentTotalAssets = IStrategy(strategy).convertToAssets(strategyShares);\\n        // How much the vault had deposited to the strategy.\\n        uint256 currentDebt = strategies[strategy].currentDebt;\\n\\n        uint256 _gain = 0;\\n        uint256 _loss = 0;\\n\\n        // Compare reported assets vs. the current debt.\\n        if (currentTotalAssets > currentDebt) {\\n            // We have a gain.\\n            _gain = currentTotalAssets - currentDebt;\\n        } else {\\n            // We have a loss.\\n            _loss = currentDebt - currentTotalAssets;\\n        }\\n\\n        return (_gain, _loss);\\n    }\\n\\n    // Calculate and distribute any fees and refunds from the strategy's performance.\\n    function _assessFees(address strategy, uint256 gain, uint256 loss) internal returns (FeeAssessment memory) {\\n        FeeAssessment memory fees;\\n\\n        // If accountant is not set, fees and refunds remain unchanged.\\n        if (accountant != address(0)) {\\n            (fees.totalFees, fees.totalRefunds) = IAccountant(accountant).report(strategy, gain, loss);\\n\\n            // Protocol fees will be 0 if accountant fees are 0.\\n            if (fees.totalFees > 0) {\\n                uint16 protocolFeeBps;\\n                // Get the config for this vault.\\n                (protocolFeeBps, fees.protocolFeeRecipient) = IFactory(FACTORY).protocolFeeConfig();\\n                \\n                if (protocolFeeBps > 0) {\\n                    // Protocol fees are a percent of the fees the accountant is charging.\\n                    fees.protocolFees = fees.totalFees * uint256(protocolFeeBps) / MAX_BPS;\\n                }\\n            }\\n        }\\n\\n        return fees;\\n    }\\n\\n    // Calculate share management based on gains, losses, and fees.\\n    function _calculateShareManagement(uint256 loss, uint256 totalFees, uint256 protocolFees) internal view returns (ShareManagement memory) {\\n        // `shares_to_burn` is derived from amounts that would reduce the vaults PPS.\\n        // NOTE: this needs to be done before any pps changes\\n        ShareManagement memory shares;\\n\\n        // Only need to burn shares if there is a loss or fees.\\n        if (loss + totalFees > 0) {\\n            // The amount of shares we will want to burn to offset losses and fees.\\n            shares.sharesToBurn += _convertToShares(loss + totalFees, Rounding.ROUND_UP);\\n\\n            // Vault calculates the amount of shares to mint as fees before changing totalAssets / totalSupply.\\n            if (totalFees > 0) {\\n                // Accountant fees are total fees - protocol fees.\\n                shares.accountantFeesShares = _convertToShares(totalFees - protocolFees, Rounding.ROUND_DOWN);\\n                if (protocolFees > 0) {\\n                    shares.protocolFeesShares = _convertToShares(protocolFees, Rounding.ROUND_DOWN);\\n                }\\n            }\\n        }\\n\\n        return shares;\\n    }\\n\\n    // Handle the burning and issuing of shares based on the strategy's report.\\n    function _handleShareBurnsAndIssues(\\n        ShareManagement memory shares, \\n        FeeAssessment memory fees, \\n        uint256 gain, \\n        uint256 loss, \\n        address strategy\\n    ) internal returns (uint256 previouslyLockedShares, uint256 newlyLockedShares) {\\n        // Shares to lock is any amounts that would otherwise increase the vaults PPS.\\n        uint256 _newlyLockedShares;\\n        if (fees.totalRefunds > 0) {\\n            // Make sure we have enough approval and enough asset to pull.\\n            fees.totalRefunds = Math.min(fees.totalRefunds, Math.min(ASSET.balanceOf(accountant), ASSET.allowance(accountant, address(this))));\\n            // Transfer the refunded amount of asset to the vault.\\n            _erc20SafeTransferFrom(address(ASSET), accountant, address(this), fees.totalRefunds);\\n            // Update storage to increase total assets.\\n            totalIdleAmount += fees.totalRefunds;\\n        }\\n\\n        // Record any reported gains.\\n        if (gain > 0) {\\n            // NOTE: this will increase total_assets\\n            strategies[strategy].currentDebt += gain;\\n            totalDebtAmount += gain;\\n        }\\n\\n        // Mint anything we are locking to the vault.\\n        if (gain + fees.totalRefunds > 0 && profitMaxUnlockTime != 0) {\\n            _newlyLockedShares = _issueSharesForAmount(gain + fees.totalRefunds, address(this));\\n        }\\n\\n        // Strategy is reporting a loss\\n        if (loss > 0) {\\n            strategies[strategy].currentDebt -= loss;\\n            totalDebtAmount -= loss;\\n        }\\n\\n        // NOTE: should be precise (no new unlocked shares due to above's burn of shares)\\n        // newly_locked_shares have already been minted / transferred to the vault, so they need to be subtracted\\n        // no risk of underflow because they have just been minted.\\n        uint256 _previouslyLockedShares = _balanceOf[address(this)] - _newlyLockedShares;\\n\\n        // Now that pps has updated, we can burn the shares we intended to burn as a result of losses/fees.\\n        // NOTE: If a value reduction (losses / fees) has occurred, prioritize burning locked profit to avoid\\n        // negative impact on price per share. Price per share is reduced only if losses exceed locked value.\\n        if (shares.sharesToBurn > 0) {\\n            // Cant burn more than the vault owns.\\n            shares.sharesToBurn = Math.min(shares.sharesToBurn, _previouslyLockedShares + _newlyLockedShares);\\n            _burnShares(shares.sharesToBurn, address(this));\\n\\n            // We burn first the newly locked shares, then the previously locked shares.\\n            uint256 sharesNotToLock = Math.min(shares.sharesToBurn, _newlyLockedShares);\\n            // Reduce the amounts to lock by how much we burned\\n            _newlyLockedShares -= sharesNotToLock;\\n            _previouslyLockedShares -= (shares.sharesToBurn - sharesNotToLock);\\n        }\\n\\n        // Issue shares for fees that were calculated above if applicable.\\n        if (shares.accountantFeesShares > 0) {\\n            _issueShares(shares.accountantFeesShares, accountant);\\n        }\\n\\n        if (shares.protocolFeesShares > 0) {\\n            _issueShares(shares.protocolFeesShares, fees.protocolFeeRecipient);\\n        }\\n\\n        return (_previouslyLockedShares, _newlyLockedShares);\\n    }\\n\\n    // Manage the unlocking of shares over time based on the vault's configuration.\\n    function _manageUnlockingOfShares(uint256 previouslyLockedShares, uint256 newlyLockedShares) internal {\\n        // Update unlocking rate and time to fully unlocked.\\n        uint256 totalLockedShares = previouslyLockedShares + newlyLockedShares;\\n        if (totalLockedShares > 0) {\\n            uint256 previouslyLockedTime = 0;\\n            // Check if we need to account for shares still unlocking.\\n            if (fullProfitUnlockDate > block.timestamp) {\\n                // There will only be previously locked shares if time remains.\\n                // We calculate this here since it will not occur every time we lock shares.\\n                previouslyLockedTime = previouslyLockedShares * (fullProfitUnlockDate - block.timestamp);\\n            }\\n\\n            // newProfitLockingPeriod is a weighted average between the remaining time of the previously locked shares and the profitMaxUnlockTime\\n            uint256 newProfitLockingPeriod = (previouslyLockedTime + newlyLockedShares * profitMaxUnlockTime) / totalLockedShares;\\n            // Calculate how many shares unlock per second.\\n            profitUnlockingRate = totalLockedShares * MAX_BPS_EXTENDED / newProfitLockingPeriod;\\n            // Calculate how long until the full amount of shares is unlocked.\\n            fullProfitUnlockDate = block.timestamp + newProfitLockingPeriod;\\n            // Update the last profitable report timestamp.\\n            lastProfitUpdate = block.timestamp;\\n        } else {\\n            // NOTE: only setting this to 0 will turn in the desired effect, no need \\n            // to update last_profit_update or full_profit_unlock_date\\n            profitUnlockingRate = 0;\\n        }\\n    }\\n\\n    // SETTERS\\n    // @notice Set the new accountant address.\\n    // @param new_accountant The new accountant address.\\n    function setAccountant(address newAccountant) external override onlyRole(ACCOUNTANT_MANAGER) {\\n        accountant = newAccountant;\\n        emit UpdateAccountant(newAccountant);\\n    }\\n\\n    // @notice Set the new default queue array.\\n    // @dev Will check each strategy to make sure it is active.\\n    // @param new_default_queue The new default queue array.\\n    function setDefaultQueue(address[] calldata newDefaultQueue) external override onlyRole(QUEUE_MANAGER) {\\n        // Make sure every strategy in the new queue is active.\\n        for (uint i = 0; i < newDefaultQueue.length; i++) {\\n            address strategy = newDefaultQueue[i];\\n            if (strategies[strategy].activation == 0) {\\n                revert InactiveStrategy();\\n            }\\n        }\\n        // Save the new queue.\\n        defaultQueue = newDefaultQueue;\\n        emit UpdateDefaultQueue(newDefaultQueue);\\n    }\\n\\n    // @notice Set a new value for `use_default_queue`.\\n    // @dev If set `True` the default queue will always be\\n    //  used no matter whats passed in.\\n    // @param use_default_queue new value.\\n    function setUseDefaultQueue(bool _useDefaultQueue) external override onlyRole(QUEUE_MANAGER) {\\n        useDefaultQueue = _useDefaultQueue;\\n        emit UpdateUseDefaultQueue(_useDefaultQueue);\\n    }\\n\\n    // @notice Set the new deposit limit.\\n    // @dev Can not be changed if a deposit_limit_module\\n    //  is set or if shutdown.\\n    // @param deposit_limit The new deposit limit.\\n    function setDepositLimit(uint256 _depositLimit) external override onlyRole(DEPOSIT_LIMIT_MANAGER) {\\n        if (shutdown == true) {\\n            revert StrategyIsShutdown();\\n        }\\n        if (depositLimitModule != address(0)) {\\n            revert UsingModule();\\n        }\\n        depositLimit = _depositLimit;\\n        emit UpdateDepositLimit(_depositLimit);\\n    }\\n\\n    // @notice Set a contract to handle the deposit limit.\\n    // @dev The default `deposit_limit` will need to be set to\\n    //  max uint256 since the module will override it.\\n    // @param deposit_limit_module Address of the module.\\n    function setDepositLimitModule(address _depositLimitModule) external override onlyRole(DEPOSIT_LIMIT_MANAGER) {\\n        if (shutdown == true) {\\n            revert StrategyIsShutdown();\\n        }\\n        if (depositLimit != type(uint256).max) {\\n            revert UsingDepositLimit();\\n        }\\n        depositLimitModule = _depositLimitModule;\\n        emit UpdateDepositLimitModule(_depositLimitModule);\\n    }\\n\\n    // @notice Set a contract to handle the withdraw limit.\\n    // @dev This will override the default `max_withdraw`.\\n    // @param withdraw_limit_module Address of the module.\\n    function setWithdrawLimitModule(address _withdrawLimitModule) external override onlyRole(WITHDRAW_LIMIT_MANAGER) {\\n        withdrawLimitModule = _withdrawLimitModule;\\n        emit UpdateWithdrawLimitModule(_withdrawLimitModule);\\n    }\\n\\n    // @notice Set the new minimum total idle.\\n    // @param minimum_total_idle The new minimum total idle.\\n    function setMinimumTotalIdle(uint256 _minimumTotalIdle) external override onlyRole(MINIMUM_IDLE_MANAGER) {\\n        minimumTotalIdle = _minimumTotalIdle;\\n        emit UpdateMinimumTotalIdle(_minimumTotalIdle);\\n    }\\n\\n    // @notice Set the new profit max unlock time.\\n    // @dev The time is denominated in seconds and must be less than 1 year.\\n    //  We only need to update locking period if setting to 0,\\n    //  since the current period will use the old rate and on the next\\n    //  report it will be reset with the new unlocking time.\\n    \\n    //  Setting to 0 will cause any currently locked profit to instantly\\n    //  unlock and an immediate increase in the vaults Price Per Share.\\n\\n    // @param new_profit_max_unlock_time The new profit max unlock time.\\n    function setProfitMaxUnlockTime(uint256 _newProfitMaxUnlockTime) external override onlyRole(PROFIT_UNLOCK_MANAGER) {\\n        // Must be less than one year for report cycles\\n        if (_newProfitMaxUnlockTime > ONE_YEAR) {\\n            revert ProfitUnlockTimeTooLong();\\n        }\\n\\n        // If setting to 0 we need to reset any locked values.\\n        if (_newProfitMaxUnlockTime == 0) {\\n            // Burn any shares the vault still has.\\n            _burnShares(_balanceOf[address(this)], address(this));\\n            // Reset unlocking variables to 0.\\n            profitUnlockingRate = 0;\\n            fullProfitUnlockDate = 0;\\n        }\\n        profitMaxUnlockTime = _newProfitMaxUnlockTime;\\n        emit UpdateProfitMaxUnlockTime(_newProfitMaxUnlockTime);\\n    }\\n\\n    // ROLE MANAGEMENT\\n\\n    // @notice Add a new role to an address.\\n    // @dev This will add a new role to the account\\n    //  without effecting any of the previously held roles.\\n    // @param account The account to add a role to.\\n    // @param role The new role to add to account.\\n    function addRole(address account, bytes32 role) public override onlyRole(ROLE_MANAGER) {\\n        _grantRole(role, account);\\n        emit RoleSet(account, role);\\n    }\\n\\n    // @notice Remove a single role from an account.\\n    // @dev This will leave all other roles for the \\n    //  account unchanged.\\n    // @param account The account to remove a Role from.\\n    // @param role The Role to remove.\\n    function removeRole(address account, bytes32 role) external override onlyRole(ROLE_MANAGER) {\\n        _revokeRole(role, account);\\n        emit RoleSet(account, role);\\n    }\\n\\n    // @notice Set a role to be open.\\n    // @param role The role to set.\\n    function setOpenRole(bytes32 role) external override onlyRole(ROLE_MANAGER) {\\n        openRoles[role] = true;\\n        emit RoleStatusChanged(role, RoleStatusChange.OPENED);\\n    }\\n\\n    // @notice Close a opened role.\\n    // @param role The role to close.\\n    function closeOpenRole(bytes32 role) external override onlyRole(ROLE_MANAGER) {\\n        openRoles[role] = false;\\n        emit RoleStatusChanged(role, RoleStatusChange.CLOSED);\\n    }\\n\\n    // @notice Step 1 of 2 in order to transfer the \\n    //    role manager to a new address. This will set\\n    //    the future_role_manager. Which will then need\\n    //    to be accepted by the new manager.\\n    // @param role_manager The new role manager address.\\n    function transferRoleManager(address newRoleManager) external override onlyRole(ROLE_MANAGER) {\\n        futureRoleManager = newRoleManager;\\n    }\\n\\n    // @notice Accept the role manager transfer.\\n    function acceptRoleManager() external override {\\n        if (msg.sender != futureRoleManager) {\\n            revert CallerIsNotTheFutureRoleManager();\\n        }\\n        roleManager = msg.sender;\\n        futureRoleManager = address(0);\\n        emit UpdateRoleManager(msg.sender);\\n    }\\n\\n    // VAULT STATUS VIEWS\\n\\n    // @notice Get the amount of shares that have been unlocked.\\n    // @return The amount of shares that are have been unlocked.\\n    function unlockedShares() external view override returns (uint256) {\\n        return _unlockedShares();\\n    }\\n\\n    // @notice Get the price per share (pps) of the vault.\\n    // @dev This value offers limited precision. Integrations that require \\n    //    exact precision should use convertToAssets or convertToShares instead.\\n    // @return The price per share.\\n    function pricePerShare() external view override returns (uint256) {\\n        return _convertToAssets(10**DECIMALS, Rounding.ROUND_DOWN);\\n    }\\n\\n    // REPORTING MANAGEMENT\\n    \\n    // @notice Process the report of a strategy.\\n    // @param strategy The strategy to process the report for.\\n    // @return The gain and loss of the strategy.\\n    function processReport(address strategy) external override onlyRole(REPORTING_MANAGER) nonReentrant returns (uint256, uint256) {\\n        return _processReport(strategy);\\n    }\\n\\n    // @notice Used for governance to buy bad debt from the vault.\\n    // @dev This should only ever be used in an emergency in place\\n    //  of force revoking a strategy in order to not report a loss.\\n    //  It allows the DEBT_PURCHASER role to buy the strategies debt\\n    //  for an equal amount of `asset`. \\n\\n    // @param strategy The strategy to buy the debt for\\n    // @param amount The amount of debt to buy from the vault.\\n    function buyDebt(address strategy, uint256 amount) external override onlyRole(DEBT_PURCHASER) nonReentrant {\\n        if (strategies[strategy].activation == 0) {\\n            revert InactiveStrategy();\\n        }\\n\\n        // Cache the current debt.\\n        uint256 currentDebt = strategies[strategy].currentDebt;\\n\\n        if (currentDebt <= 0 || amount <= 0) {\\n            revert ZeroValue();\\n        }\\n\\n        if (amount > currentDebt) {\\n            amount = currentDebt;\\n        }\\n\\n        // We get the proportion of the debt that is being bought and\\n        // transfer the equivalent shares. We assume this is being used\\n        // due to strategy issues so won't rely on its conversion rates.\\n        uint256 shares = IERC20(strategy).balanceOf(address(this)) * amount / currentDebt;\\n\\n        if (shares <= 0) {\\n            revert ZeroValue();\\n        }\\n\\n        _erc20SafeTransferFrom(address(ASSET), msg.sender, address(this), amount);\\n\\n        // Lower strategy debt\\n        strategies[strategy].currentDebt -= amount;\\n        // lower total debt\\n        totalDebtAmount -= amount;\\n        // Increase total idle\\n        totalIdleAmount += amount;\\n\\n        // Log debt change\\n        emit DebtUpdated(strategy, currentDebt, currentDebt - amount);\\n\\n        // Transfer the strategies shares out\\n        _erc20SafeTransfer(strategy, msg.sender, shares);\\n\\n        // Log the debt purchase\\n        emit DebtPurchased(strategy, amount);\\n    }\\n\\n    // STRATEGY MANAGEMENT\\n\\n    // @notice Add a new strategy.\\n    // @param new_strategy The new strategy to add.\\n    function addStrategy(address newStrategy) external override onlyRole(ADD_STRATEGY_MANAGER) {\\n        _addStrategy(newStrategy);\\n    }\\n\\n    // @notice Revoke a strategy.\\n    // @param strategy The strategy to revoke.\\n    function revokeStrategy(address strategy) external override onlyRole(REVOKE_STRATEGY_MANAGER) {\\n        _revokeStrategy(strategy, false);\\n    }\\n\\n    // @notice Force revoke a strategy.\\n    // @dev The vault will remove the strategy and write off any debt left \\n    //    in it as a loss. This function is a dangerous function as it can force a \\n    //    strategy to take a loss. All possible assets should be removed from the \\n    //    strategy first via update_debt. If a strategy is removed erroneously it \\n    //    can be re-added and the loss will be credited as profit. Fees will apply.\\n    // @param strategy The strategy to force revoke.\\n    function forceRevokeStrategy(address strategy) external override onlyRole(FORCE_REVOKE_MANAGER) {\\n        _revokeStrategy(strategy, true);\\n    }\\n\\n    // DEBT MANAGEMENT\\n\\n    // @notice Update the max debt for a strategy.\\n    // @param strategy The strategy to update the max debt for.\\n    // @param new_max_debt The new max debt for the strategy.\\n    function updateMaxDebtForStrategy(address strategy, uint256 newMaxDebt) external override onlyRole(MAX_DEBT_MANAGER) {\\n        if (strategies[strategy].activation == 0) {\\n            revert InactiveStrategy();\\n        }\\n        strategies[strategy].maxDebt = newMaxDebt;\\n        emit UpdatedMaxDebtForStrategy(msg.sender, strategy, newMaxDebt);\\n    }\\n\\n    // @notice Update the debt for a strategy.\\n    // @param strategy The strategy to update the debt for.\\n    // @param target_debt The target debt for the strategy.\\n    // @return The amount of debt added or removed.\\n    function updateDebt(address strategy, uint256 targetDebt) external override onlyRole(DEBT_MANAGER) nonReentrant returns (uint256) {\\n        return _updateDebt(strategy, targetDebt);\\n    }\\n\\n    // EMERGENCY MANAGEMENT\\n\\n    // @notice Shutdown the vault.\\n    function shutdownVault() external override onlyRole(EMERGENCY_MANAGER) {\\n        if (shutdown == true) {\\n            revert InactiveStrategy();\\n        }\\n\\n        // Shutdown the vault.\\n        shutdown = true;\\n\\n        // Set deposit limit to 0.\\n        if (depositLimitModule != address(0)) {\\n            depositLimitModule = address(0);\\n            emit UpdateDepositLimitModule(address(0));\\n        }\\n\\n        depositLimit = 0;\\n        emit UpdateDepositLimit(0);\\n\\n        addRole(msg.sender, DEBT_MANAGER);\\n        emit Shutdown();\\n    }\\n\\n    // ## SHARE MANAGEMENT ##\\n    // ## ERC20 + ERC4626 ##\\n\\n    // @notice Deposit assets into the vault.\\n    // @param assets The amount of assets to deposit.\\n    // @param receiver The address to receive the shares.\\n    // @return The amount of shares minted.\\n    function deposit(uint256 assets, address receiver) external override nonReentrant returns (uint256) {\\n        return _deposit(msg.sender, receiver, assets);\\n    }\\n\\n    // @notice Mint shares for the receiver.\\n    // @param shares The amount of shares to mint.\\n    // @param receiver The address to receive the shares.\\n    // @return The amount of assets deposited.\\n    function mint(uint256 shares, address receiver) external override nonReentrant returns (uint256) {\\n        return _mint(msg.sender, receiver, shares);\\n    }\\n\\n    // @notice Withdraw an amount of asset to `receiver` burning `owner`s shares.\\n    // @dev The default behavior is to not allow any loss.\\n    // @param assets The amount of asset to withdraw.\\n    // @param receiver The address to receive the assets.\\n    // @param owner The address who's shares are being burnt.\\n    // @param max_loss Optional amount of acceptable loss in Basis Points.\\n    // @param strategies Optional array of strategies to withdraw from.\\n    // @return The amount of shares actually burnt.\\n    function withdraw(\\n        uint256 assets,\\n        address receiver,\\n        address owner,\\n        uint256 maxLoss,\\n        address[] memory _strategies\\n    ) external override nonReentrant returns (uint256) {\\n        uint256 shares = _convertToShares(assets, Rounding.ROUND_UP);\\n        _redeem(msg.sender, receiver, owner, assets, shares, maxLoss, _strategies);\\n        return shares;\\n    }\\n\\n    // @notice Redeems an amount of shares of `owners` shares sending funds to `receiver`.\\n    // @dev The default behavior is to allow losses to be realized.\\n    // @param shares The amount of shares to burn.\\n    // @param receiver The address to receive the assets.\\n    // @param owner The address who's shares are being burnt.\\n    // @param max_loss Optional amount of acceptable loss in Basis Points.\\n    // @param strategies Optional array of strategies to withdraw from.\\n    // @return The amount of assets actually withdrawn.\\n    function redeem(\\n        uint256 shares,\\n        address receiver,\\n        address owner,\\n        uint256 maxLoss,\\n        address[] memory _strategies\\n    ) external override nonReentrant returns (uint256) {\\n        uint256 assets = _convertToAssets(shares, Rounding.ROUND_DOWN);\\n        // Always return the actual amount of assets withdrawn.\\n        return _redeem(msg.sender, receiver, owner, assets, shares, maxLoss, _strategies);\\n    }\\n\\n    // @notice Approve an address to spend the vault's shares.\\n    // @param spender The address to approve.\\n    // @param amount The amount of shares to approve.\\n    // @return True if the approval was successful.\\n    function approve(address spender, uint256 amount) external override returns (bool) {\\n        return _approve(msg.sender, spender, amount);\\n    }\\n\\n    // @notice Transfer shares to a receiver.\\n    // @param receiver The address to transfer shares to.\\n    // @param amount The amount of shares to transfer.\\n    // @return True if the transfer was successful.\\n    function transfer(address receiver, uint256 amount) external override returns (bool) {\\n        if (receiver == address(this) || receiver == address(0)) {\\n            revert ZeroAddress();\\n        }\\n        _transfer(msg.sender, receiver, amount);\\n        return true;\\n    }\\n\\n    // @notice Transfer shares from a sender to a receiver.\\n    // @param sender The address to transfer shares from.\\n    // @param receiver The address to transfer shares to.\\n    // @param amount The amount of shares to transfer.\\n    // @return True if the transfer was successful.\\n    function transferFrom(address sender, address receiver, uint256 amount) external override returns (bool) {\\n        if (receiver == address(this) || receiver == address(0)) {\\n            revert ZeroAddress();\\n        }\\n        return _transferFrom(sender, receiver, amount);\\n    }\\n\\n    // ## ERC20+4626 compatibility\\n\\n    // @notice Increase the allowance for a spender.\\n    // @param spender The address to increase the allowance for.\\n    // @param amount The amount to increase the allowance by.\\n    // @return True if the increase was successful.\\n    function increaseAllowance(address spender, uint256 amount) external override returns (bool) {\\n        return _increaseAllowance(msg.sender, spender, amount);\\n    }\\n\\n    // @notice Decrease the allowance for a spender.\\n    // @param spender The address to decrease the allowance for.\\n    // @param amount The amount to decrease the allowance by.\\n    // @return True if the decrease was successful.\\n    function decreaseAllowance(address spender, uint256 amount) external override returns (bool) {\\n        return _decreaseAllowance(msg.sender, spender, amount);\\n    }\\n\\n    // @notice Approve an address to spend the vault's shares.\\n    // @param owner The address to approve.\\n    // @param spender The address to approve.\\n    // @param amount The amount of shares to approve.\\n    // @param deadline The deadline for the permit.\\n    // @param v The v component of the signature.\\n    // @param r The r component of the signature.\\n    // @param s The s component of the signature.\\n    // @return True if the approval was successful.\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 amount,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external override returns (bool) {\\n        return _permit(owner, spender, amount, deadline, v, r, s);\\n    }\\n\\n    // @notice Get the balance of a user.\\n    // @param addr The address to get the balance of.\\n    // @return The balance of the user.\\n    function balanceOf(address addr) external view override returns (uint256) {\\n        if(addr == address(this)) {\\n            return _balanceOf[addr] - _unlockedShares();\\n        }\\n        return _balanceOf[addr];\\n    }\\n\\n    // @notice Get the total supply of shares.\\n    // @return The total supply of shares.\\n    function totalSupply() external view override(IERC20, IVault) returns (uint256) {\\n        return _totalSupply();\\n    }\\n\\n    // @notice Get the address of the asset.\\n    // @return The address of the asset.\\n    function asset() external view override returns (address) {\\n        return address(ASSET);\\n    }\\n\\n    // @notice Get the number of decimals of the asset/share.\\n    // @return The number of decimals of the asset/share.\\n    function decimals() external view override returns (uint8) {\\n        return uint8(DECIMALS);\\n    }\\n\\n    // @notice Get the total assets held by the vault.\\n    // @return The total assets held by the vault.\\n    function totalAssets() external view override returns (uint256) {\\n        return _totalAssets();\\n    }\\n\\n    // @notice Convert an amount of assets to shares.\\n    // @param assets The amount of assets to convert.\\n    // @return The amount of shares.\\n    function convertToShares(uint256 assets) external view override returns (uint256) {\\n        return _convertToShares(assets, Rounding.ROUND_DOWN);\\n    }\\n\\n    // @notice Preview the amount of shares that would be minted for a deposit.\\n    // @param assets The amount of assets to deposit.\\n    // @return The amount of shares that would be minted.\\n    function previewDeposit(uint256 assets) external view override returns (uint256) {\\n        return _convertToShares(assets, Rounding.ROUND_DOWN);\\n    }\\n\\n    // @notice Preview the amount of assets that would be deposited for a mint.\\n    // @param shares The amount of shares to mint.\\n    // @return The amount of assets that would be deposited.\\n    function previewMint(uint256 shares) external view override returns (uint256) {\\n        return _convertToAssets(shares, Rounding.ROUND_UP);\\n    }\\n\\n    // @notice Convert an amount of shares to assets.\\n    // @param shares The amount of shares to convert.\\n    // @return The amount of assets.\\n    function convertToAssets(uint256 shares) external view override returns (uint256) {\\n        return _convertToAssets(shares, Rounding.ROUND_DOWN);\\n    }\\n\\n    // @notice Get the maximum amount of assets that can be deposited.\\n    // @param receiver The address that will receive the shares.\\n    // @return The maximum amount of assets that can be deposited.\\n    function maxDeposit(address receiver) external view override returns (uint256) {\\n        return _maxDeposit(receiver);\\n    }\\n\\n    // @notice Get the maximum amount of shares that can be minted.\\n    // @param receiver The address that will receive the shares.\\n    // @return The maximum amount of shares that can be minted.\\n    function maxMint(address receiver) external view override returns (uint256) {\\n        uint256 maxDepositAmount = _maxDeposit(receiver);\\n        return _convertToShares(maxDepositAmount, Rounding.ROUND_DOWN);\\n    }\\n\\n    // @notice Get the maximum amount of assets that can be withdrawn.\\n    // @dev Complies to normal 4626 interface and takes custom params.\\n    // @param owner The address that owns the shares.\\n    // @param max_loss Custom max_loss if any.\\n    // @param strategies Custom strategies queue if any.\\n    // @return The maximum amount of assets that can be withdrawn.\\n    function maxWithdraw(address owner, uint256 maxLoss, address[] memory _strategies) external override returns (uint256) {\\n        return _maxWithdraw(owner, maxLoss, _strategies);\\n    }\\n\\n    // @notice Get the maximum amount of shares that can be redeemed.\\n    // @dev Complies to normal 4626 interface and takes custom params.\\n    // @param owner The address that owns the shares.\\n    // @param max_loss Custom max_loss if any.\\n    // @param strategies Custom strategies queue if any.\\n    // @return The maximum amount of shares that can be redeemed.\\n    function maxRedeem(address owner, uint256 maxLoss, address[] memory _strategies) external override returns (uint256) {\\n        uint256 maxWithdrawAmount = _maxWithdraw(owner, maxLoss, _strategies);\\n        uint256 sharesEquivalent = _convertToShares(maxWithdrawAmount, Rounding.ROUND_UP);\\n        return Math.min(sharesEquivalent, _balanceOf[owner]);\\n    }\\n\\n    // @notice Preview the amount of shares that would be redeemed for a withdraw.\\n    // @param assets The amount of assets to withdraw.\\n    // @return The amount of shares that would be redeemed.\\n    function previewWithdraw(uint256 assets) external view override returns (uint256) {\\n        return _convertToShares(assets, Rounding.ROUND_UP);\\n    }\\n\\n    // @notice Preview the amount of assets that would be withdrawn for a redeem.\\n    // @param shares The amount of shares to redeem.\\n    // @return The amount of assets that would be withdrawn.\\n    function previewRedeem(uint256 shares) external view override returns (uint256) {\\n        return _convertToAssets(shares, Rounding.ROUND_DOWN);\\n    }\\n\\n    // @notice Assess the share of unrealised losses that a strategy has.\\n    // @param strategy The address of the strategy.\\n    // @param assets_needed The amount of assets needed to be withdrawn.\\n    // @return The share of unrealised losses that the strategy has.\\n    function assessShareOfUnrealisedLosses(address strategy, uint256 assetsNeeded) external view override returns (uint256) {\\n        // Assuming strategies mapping and _assess_share_of_unrealised_losses are defined\\n        if (strategies[strategy].currentDebt < assetsNeeded) {\\n            revert StrategyDebtIsLessThanAssetsNeeded();\\n        }\\n        return _assessShareOfUnrealisedLosses(strategy, assetsNeeded);\\n    }\\n\\n    function allowance(address owner, address spender) external view override returns (uint256) {\\n        return _allowance[owner][spender];\\n    }\\n\\n    // # eip-1344\\n\\n    // EIP-712 domain separator\\n    function domainSeparator() internal view returns (bytes32) {\\n        return keccak256(abi.encode(\\n            DOMAIN_TYPE_HASH,\\n            keccak256(\\\"Yearn Vault\\\"),\\n            keccak256(bytes(API_VERSION)),\\n            block.chainid,\\n            address(this)\\n        ));\\n    }\\n}\",\"keccak256\":\"0xd05e2e1349b78a33944f3b1b3d42b1dc4b78020eb8669954b46d80b43d8c84c0\",\"license\":\"GNU AGPLv3\"},\"contracts/Interfaces/IAccountant.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.16;\\n\\ninterface IAccountant {\\n    function report(address strategy, uint256 gain, uint256 loss) external returns (uint256, uint256);\\n}\",\"keccak256\":\"0x0f704ea311ec644bcb45f1de8c501af3d70cb09b5c01d9c861c14b3ef9be47f8\",\"license\":\"GPL-3.0\"},\"contracts/Interfaces/IDepositLimitModule.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.16;\\n\\ninterface IDepositLimitModule {\\n    function availableDepositLimit(address receiver) external view returns (uint256);\\n}\",\"keccak256\":\"0x84e894f08cbdee58c0df13247ca971da0ae1ca59b2d36d9bd5fb321f8328d3dd\",\"license\":\"GPL-3.0\"},\"contracts/Interfaces/IERC4626.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC4626.sol)\\n\\npragma solidity ^0.8.16;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\n/**\\n * @dev Interface of the ERC4626 \\\"Tokenized Vault Standard\\\", as defined in\\n * https://eips.ethereum.org/EIPS/eip-4626[ERC-4626].\\n *\\n * _Available since v4.7._\\n */\\ninterface IERC4626 is IERC20, IERC20Metadata {\\n    // solhint-disable ordering\\n    // solhint-disable max-line-length\\n    event Deposit(address indexed sender, address indexed owner, uint256 assets, uint256 shares);\\n\\n    event Withdraw(\\n        address indexed sender,\\n        address indexed receiver,\\n        address indexed owner,\\n        uint256 assets,\\n        uint256 shares\\n    );\\n\\n    /**\\n     * @dev Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing.\\n     *\\n     * - MUST be an ERC-20 token contract.\\n     * - MUST NOT revert.\\n     */\\n    function asset() external view returns (address assetTokenAddress);\\n\\n    /**\\n     * @dev Returns the total amount of the underlying asset that is \\u201cmanaged\\u201d by Vault.\\n     *\\n     * - SHOULD include any compounding that occurs from yield.\\n     * - MUST be inclusive of any fees that are charged against assets in the Vault.\\n     * - MUST NOT revert.\\n     */\\n    function totalAssets() external view returns (uint256 totalManagedAssets);\\n\\n    /**\\n     * @dev Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal\\n     * scenario where all the conditions are met.\\n     *\\n     * - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\\n     * - MUST NOT show any variations depending on the caller.\\n     * - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\\n     * - MUST NOT revert.\\n     *\\n     * NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the\\n     * \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and\\n     * from.\\n     */\\n    function convertToShares(uint256 assets) external view returns (uint256 shares);\\n\\n    /**\\n     * @dev Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal\\n     * scenario where all the conditions are met.\\n     *\\n     * - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\\n     * - MUST NOT show any variations depending on the caller.\\n     * - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\\n     * - MUST NOT revert.\\n     *\\n     * NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the\\n     * \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and\\n     * from.\\n     */\\n    function convertToAssets(uint256 shares) external view returns (uint256 assets);\\n\\n    /**\\n     * @dev Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver,\\n     * through a deposit call.\\n     *\\n     * - MUST return a limited value if receiver is subject to some deposit limit.\\n     * - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited.\\n     * - MUST NOT revert.\\n     */\\n    function maxDeposit(address receiver) external view returns (uint256 maxAssets);\\n\\n    /**\\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given\\n     * current on-chain conditions.\\n     *\\n     * - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit\\n     *   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called\\n     *   in the same transaction.\\n     * - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the\\n     *   deposit would be accepted, regardless if the user has enough tokens approved, etc.\\n     * - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\\n     * - MUST NOT revert.\\n     *\\n     * NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in\\n     * share price or some other type of condition, meaning the depositor will lose assets by depositing.\\n     */\\n    function previewDeposit(uint256 assets) external view returns (uint256 shares);\\n\\n    /**\\n     * @dev Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens.\\n     *\\n     * - MUST emit the Deposit event.\\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\\n     *   deposit execution, and are accounted for during deposit.\\n     * - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not\\n     *   approving enough underlying tokens to the Vault contract, etc).\\n     *\\n     * NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\\n     */\\n    function deposit(uint256 assets, address receiver) external returns (uint256 shares);\\n\\n    /**\\n     * @dev Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call.\\n     * - MUST return a limited value if receiver is subject to some mint limit.\\n     * - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted.\\n     * - MUST NOT revert.\\n     */\\n    function maxMint(address receiver) external view returns (uint256 maxShares);\\n\\n    /**\\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given\\n     * current on-chain conditions.\\n     *\\n     * - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call\\n     *   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the\\n     *   same transaction.\\n     * - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint\\n     *   would be accepted, regardless if the user has enough tokens approved, etc.\\n     * - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\\n     * - MUST NOT revert.\\n     *\\n     * NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in\\n     * share price or some other type of condition, meaning the depositor will lose assets by minting.\\n     */\\n    function previewMint(uint256 shares) external view returns (uint256 assets);\\n\\n    /**\\n     * @dev Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens.\\n     *\\n     * - MUST emit the Deposit event.\\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint\\n     *   execution, and are accounted for during mint.\\n     * - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not\\n     *   approving enough underlying tokens to the Vault contract, etc).\\n     *\\n     * NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\\n     */\\n    function mint(uint256 shares, address receiver) external returns (uint256 assets);\\n\\n    /**\\n     * @dev Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the\\n     * Vault, through a withdraw call.\\n     *\\n     * - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\\n     * - MUST NOT revert.\\n     */\\n    function maxWithdraw(address owner, uint256 maxLoss, address[] memory strategies) external returns (uint256 maxAssets);\\n\\n    /**\\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block,\\n     * given current on-chain conditions.\\n     *\\n     * - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw\\n     *   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if\\n     *   called\\n     *   in the same transaction.\\n     * - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though\\n     *   the withdrawal would be accepted, regardless if the user has enough shares, etc.\\n     * - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\\n     * - MUST NOT revert.\\n     *\\n     * NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in\\n     * share price or some other type of condition, meaning the depositor will lose assets by depositing.\\n     */\\n    function previewWithdraw(uint256 assets) external view returns (uint256 shares);\\n\\n    /**\\n     * @dev Burns shares from owner and sends exactly assets of underlying tokens to receiver.\\n     *\\n     * - MUST emit the Withdraw event.\\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\\n     *   withdraw execution, and are accounted for during withdraw.\\n     * - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner\\n     *   not having enough shares, etc).\\n     *\\n     * Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\\n     * Those methods should be performed separately.\\n     */\\n    function withdraw(uint256 assets, address receiver, address owner, uint256 maxLoss, address[] memory strategies) external returns (uint256 shares);\\n\\n    /**\\n     * @dev Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault,\\n     * through a redeem call.\\n     *\\n     * - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\\n     * - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock.\\n     * - MUST NOT revert.\\n     */\\n    function maxRedeem(address owner, uint256 maxLoss, address[] memory strategies) external returns (uint256 maxShares);\\n\\n    /**\\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block,\\n     * given current on-chain conditions.\\n     *\\n     * - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call\\n     *   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the\\n     *   same transaction.\\n     * - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the\\n     *   redemption would be accepted, regardless if the user has enough shares, etc.\\n     * - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\\n     * - MUST NOT revert.\\n     *\\n     * NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in\\n     * share price or some other type of condition, meaning the depositor will lose assets by redeeming.\\n     */\\n    function previewRedeem(uint256 shares) external view returns (uint256 assets);\\n\\n    /**\\n     * @dev Burns exactly shares from owner and sends assets of underlying tokens to receiver.\\n     *\\n     * - MUST emit the Withdraw event.\\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\\n     *   redeem execution, and are accounted for during redeem.\\n     * - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner\\n     *   not having enough shares, etc).\\n     *\\n     * NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\\n     * Those methods should be performed separately.\\n     */\\n    function redeem(uint256 shares, address receiver, address owner, uint256 maxLoss, address[] memory strategies) external returns (uint256 assets);\\n}\",\"keccak256\":\"0xe2e626a58bddb0c8b459117fcf8f2b746431da070ea8d80d3d56bca5f1c8fa1d\",\"license\":\"MIT\"},\"contracts/Interfaces/IFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.16;\\n\\ninterface IFactory {\\n    function protocolFeeConfig() external view returns (uint16, address);\\n}\",\"keccak256\":\"0x40d6ccadd2d8acc52c61503f36d78c893d0841b427a390b52382b03368ddd9db\",\"license\":\"GPL-3.0\"},\"contracts/Interfaces/IStrategy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.16;\\n\\ninterface IStrategy {\\n    function redeem(uint256 shares, address receiver, address owner) external returns (uint256);\\n    function deposit(uint256 assets, address receiver) external returns (uint256);\\n    function asset() external view returns (address);\\n    function balanceOf(address owner) external view returns (uint256);\\n    function maxDeposit(address receiver) external view returns (uint256);\\n    function totalAssets() external view returns (uint256);\\n    function convertToAssets(uint256 shares) external view returns (uint256);\\n    function convertToShares(uint256 assets) external view returns (uint256);\\n    function previewWithdraw(uint256 assets) external view returns (uint256);\\n    function maxRedeem(address owner) external view returns (uint256);\\n}\",\"keccak256\":\"0x4a4ac422957ef074941cce14aa4a41619eec52ffffcf5cc2d5fbbd07b8875554\",\"license\":\"GPL-3.0\"},\"contracts/Interfaces/IStrategyManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.16;\\n\\ninterface IStrategyManager {\\n    function addStrategy(address newStrategy) external;\\n    function revokeStrategy(address strategy, bool force) external;\\n}\",\"keccak256\":\"0x2305ec7d9d517661a568a2d29552e00521fe62c77d98682101aba0013ceff319\",\"license\":\"GPL-3.0\"},\"contracts/Interfaces/IVault.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.16;\\n\\nimport {IERC4626} from \\\"./IERC4626.sol\\\";\\nimport \\\"../VaultStructs.sol\\\";\\n\\ninterface IVault is IERC4626 {\\n    function setAccountant(address newAccountant) external;\\n\\n    function setDefaultQueue(address[] memory newDefaultQueue) external;\\n\\n    function setUseDefaultQueue(bool) external;\\n\\n    function setDepositLimit(uint256 depositLimit) external;\\n\\n    function setDepositLimitModule(\\n        address newDepositLimitModule\\n    ) external;\\n\\n    function setWithdrawLimitModule(\\n        address newWithdrawLimitModule\\n    ) external;\\n\\n    function setMinimumTotalIdle(uint256 minimumTotalIdle) external;\\n\\n    function setProfitMaxUnlockTime(\\n        uint256 newProfitMaxUnlockTime\\n    ) external;\\n\\n    function addRole(address account, bytes32 role) external;\\n\\n    function removeRole(address account, bytes32 role) external;\\n\\n    function setOpenRole(bytes32 role) external;\\n\\n    function closeOpenRole(bytes32 role) external;\\n\\n    function transferRoleManager(address roleManager) external;\\n\\n    function acceptRoleManager() external;\\n\\n    function processReport(\\n        address strategy\\n    ) external returns (uint256, uint256);\\n\\n    function buyDebt(address strategy, uint256 amount) external;\\n\\n    function addStrategy(address newStrategy) external;\\n\\n    function revokeStrategy(address strategy) external;\\n\\n    function forceRevokeStrategy(address strategy) external;\\n\\n    function updateMaxDebtForStrategy(\\n        address strategy,\\n        uint256 newMaxDebt\\n    ) external;\\n\\n    function updateDebt(\\n        address strategy,\\n        uint256 targetDebt\\n    ) external returns (uint256);\\n\\n    function shutdownVault() external;\\n\\n    //// NON-STANDARD ERC-4626 FUNCTIONS \\\\\\\\\\\\\\\\\\n\\n    function withdraw(\\n        uint256 assets,\\n        address receiver,\\n        address owner,\\n        uint256 maxLoss,\\n        address[] memory strategies\\n    ) external returns (uint256);\\n\\n    function redeem(\\n        uint256 shares,\\n        address receiver,\\n        address owner,\\n        uint256 maxLoss,\\n        address[] memory strategies\\n    ) external returns (uint256);\\n\\n    //// NON-STANDARD ERC-20 FUNCTIONS \\\\\\\\\\\\\\\\\\n\\n    function increaseAllowance(\\n        address spender,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    function decreaseAllowance(\\n        address spender,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 amount,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (bool);\\n\\n    function maxWithdraw(\\n        address owner,\\n        uint256 maxLoss,\\n        address[] memory strategies\\n    ) external returns (uint256);\\n\\n    function maxRedeem(\\n        address owner,\\n        uint256 maxLoss,\\n        address[] memory strategies\\n    ) external returns (uint256);\\n\\n    function unlockedShares() external view returns (uint256);\\n\\n    function pricePerShare() external view returns (uint256);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function assessShareOfUnrealisedLosses(\\n        address strategy,\\n        uint256 assetsNeeded\\n    ) external view returns (uint256);\\n}\",\"keccak256\":\"0x18fbaf32ae88d871f55ea1bbc8e4d59d9098c5df948963b1b0d61524fc1f75e5\",\"license\":\"GPL-3.0\"},\"contracts/Interfaces/IVaultEvents.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL 3.0\\n// Copyright Fathom 2023\\n\\npragma solidity ^0.8.16;\\n\\nimport \\\"../VaultStructs.sol\\\";\\n\\ninterface IVaultEvents {\\n    // STRATEGY EVENTS\\n    event StrategyChanged(address indexed strategy, StrategyChangeType changeType);\\n    event StrategyReported(\\n        address indexed strategy,\\n        uint256 gain,\\n        uint256 loss,\\n        uint256 currentDebt,\\n        uint256 protocolFees,\\n        uint256 totalFees,\\n        uint256 totalRefunds\\n    );\\n    // DEBT MANAGEMENT EVENTS\\n    event DebtUpdated(\\n        address indexed strategy,\\n        uint256 currentDebt,\\n        uint256 newDebt\\n    );\\n    // ROLE UPDATES\\n    event RoleSet(address indexed account, bytes32 role);\\n    event RoleStatusChanged(bytes32 indexed role, RoleStatusChange indexed status);\\n    event UpdateRoleManager(address indexed roleManager);\\n\\n    event UpdateAccountant(address indexed accountant);\\n    event UpdateDefaultQueue(address[] newDefaultQueue);\\n    event UpdateUseDefaultQueue(bool useDefaultQueue);\\n    event UpdatedMaxDebtForStrategy(\\n        address indexed sender,\\n        address indexed strategy,\\n        uint256 newDebt\\n    );\\n    event UpdateDepositLimit(uint256 depositLimit);\\n    event UpdateMinimumTotalIdle(uint256 minimumTotalIdle);\\n    event UpdateProfitMaxUnlockTime(uint256 profitMaxUnlockTime);\\n    event DebtPurchased(address indexed strategy, uint256 amount);\\n    event Shutdown();\\n\\n    // STORAGE MANAGEMENT EVENTS\\n    event UpdateDepositLimitModule(address indexed depositLimitModule);\\n    event UpdateWithdrawLimitModule(address indexed withdrawLimitModule);\\n}\",\"keccak256\":\"0x809fab69d54383c6137fea5d99022f5c3773701f9c7ae46235ab354aaf5d0702\",\"license\":\"AGPL 3.0\"},\"contracts/Interfaces/IWithdrawLimitModule.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.16;\\n\\ninterface IWithdrawLimitModule {\\n    function availableWithdrawLimit(address owner, uint256 maxLoss, address[] calldata strategies) external returns (uint256);\\n}\",\"keccak256\":\"0xffae5d1b3b7b503e76d5b86e65d2a231274190efdf4dce364255bf20f208ebca\",\"license\":\"GPL-3.0\"},\"contracts/VaultStorage.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL 3.0\\n// Copyright Fathom 2023\\n\\npragma solidity ^0.8.16;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./VaultStructs.sol\\\";\\n\\ncontract VaultStorage {\\n    // CONSTANTS\\n    // The max length the withdrawal queue can be.\\n    uint256 public constant MAX_QUEUE = 10;\\n    // 100% in Basis Points.\\n    uint256 public constant MAX_BPS = 10000;\\n    // Extended for profit locking calculations.\\n    uint256 public constant MAX_BPS_EXTENDED = 1000000000000;\\n    // The version of this vault.\\n    string public constant API_VERSION = \\\"1.0.0\\\";\\n\\n    address internal strategyManager;\\n\\n    // STORAGE\\n    // HashMap that records all the strategies that are allowed to receive assets from the vault.\\n    mapping(address => StrategyParams) public strategies;\\n\\n    // The current default withdrawal queue.\\n    address[] public defaultQueue;\\n\\n    // Should the vault use the default_queue regardless whats passed in.\\n    bool public useDefaultQueue;\\n\\n    // ERC20 - amount of shares per account\\n    mapping(address => uint256) internal _balanceOf;\\n    // ERC20 - owner -> (spender -> amount)\\n    mapping(address => mapping(address => uint256)) internal _allowance;\\n\\n    // Total amount of shares that are currently minted including those locked.\\n    // NOTE: To get the ERC20 compliant version use totalSupply().\\n    uint256 public totalSupplyAmount;\\n\\n    // Total amount of assets that has been deposited in strategies.\\n    uint256 public totalDebtAmount;\\n    // Current assets held in the vault contract. Replacing balanceOf(this) to avoid price_per_share manipulation.\\n    uint256 public totalIdleAmount;\\n    // Minimum amount of assets that should be kept in the vault contract to allow for fast, cheap redeems.\\n    uint256 public minimumTotalIdle;\\n    // Maximum amount of tokens that the vault can accept. If totalAssets > deposit_limit, deposits will revert.\\n    uint256 public depositLimit;\\n    // Contract that charges fees and can give refunds.\\n    address public accountant;\\n    // Contract to control the deposit limit.\\n    address public depositLimitModule;\\n    // Contract to control the withdraw limit.\\n    address public withdrawLimitModule;\\n\\n    // HashMap mapping addresses to their roles\\n    mapping(address => bytes32) public roles;\\n    // HashMap mapping roles to their permissioned state. If false, the role is not open to the public.\\n    mapping(bytes32 => bool) public openRoles;\\n\\n    // Address that can add and remove roles to addresses.\\n    address public roleManager;\\n    // Temporary variable to store the address of the next role_manager until the role is accepted.\\n    address public futureRoleManager;\\n\\n    // State of the vault - if set to true, only withdrawals will be available. It can't be reverted.\\n    bool public shutdown;\\n    // The amount of time profits will unlock over.\\n    uint256 public profitMaxUnlockTime;\\n    // The timestamp of when the current unlocking period ends.\\n    uint256 public fullProfitUnlockDate;\\n    // The per second rate at which profit will unlock.\\n    uint256 public profitUnlockingRate;\\n    // Last timestamp of the most recent profitable report.\\n    uint256 public lastProfitUpdate;\\n\\n    // EIP-2612 permit() nonces and typehashes\\n    mapping(address => uint256) public nonces;\\n    bytes32 public constant DOMAIN_TYPE_HASH = keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\");\\n    bytes32 public DOMAIN_SEPARATOR;\\n    bytes32 public constant PERMIT_TYPE_HASH = keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\");\\n\\n    // Roles\\n    bytes32 public constant ACCOUNTANT_MANAGER = keccak256(\\\"ACCOUNTANT_MANAGER\\\");\\n    bytes32 public constant QUEUE_MANAGER = keccak256(\\\"QUEUE_MANAGER\\\");\\n    bytes32 public constant DEPOSIT_LIMIT_MANAGER = keccak256(\\\"DEPOSIT_LIMIT_MANAGER\\\");\\n    bytes32 public constant WITHDRAW_LIMIT_MANAGER = keccak256(\\\"WITHDRAW_LIMIT_MANAGER\\\");\\n    bytes32 public constant MINIMUM_IDLE_MANAGER = keccak256(\\\"MINIMUM_IDLE_MANAGER\\\");\\n    bytes32 public constant PROFIT_UNLOCK_MANAGER = keccak256(\\\"PROFIT_UNLOCK_MANAGER\\\");\\n    bytes32 public constant ROLE_MANAGER = keccak256(\\\"ROLE_MANAGER\\\");\\n    bytes32 public constant REPORTING_MANAGER = keccak256(\\\"REPORTING_MANAGER\\\");\\n    bytes32 public constant DEBT_PURCHASER = keccak256(\\\"DEBT_PURCHASER\\\");\\n    bytes32 public constant ADD_STRATEGY_MANAGER = keccak256(\\\"ADD_STRATEGY_MANAGER\\\");\\n    bytes32 public constant REVOKE_STRATEGY_MANAGER = keccak256(\\\"REVOKE_STRATEGY_MANAGER\\\");\\n    bytes32 public constant FORCE_REVOKE_MANAGER = keccak256(\\\"FORCE_REVOKE_MANAGER\\\");\\n    bytes32 public constant MAX_DEBT_MANAGER = keccak256(\\\"MAX_DEBT_MANAGER\\\");\\n    bytes32 public constant DEBT_MANAGER = keccak256(\\\"DEBT_MANAGER\\\");\\n    bytes32 public constant EMERGENCY_MANAGER = keccak256(\\\"EMERGENCY_MANAGER\\\");         \\n}\",\"keccak256\":\"0xa7029c463d9744c3cc4f9ae9c28c5586c90dc8b066f8a2fbf8624fc34add438c\",\"license\":\"AGPL 3.0\"},\"contracts/VaultStructs.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL 3.0\\n// Copyright Fathom 2023\\n\\npragma solidity ^0.8.16;\\n\\nstruct StrategyParams {\\n    uint256 activation;\\n    uint256 lastReport;\\n    uint256 currentDebt;\\n    uint256 maxDebt;\\n}\\n\\nstruct FeeAssessment {\\n    uint256 totalFees;\\n    uint256 totalRefunds;\\n    uint256 protocolFees;\\n    address protocolFeeRecipient;\\n}\\n\\nstruct ShareManagement {\\n    uint256 sharesToBurn;\\n    uint256 accountantFeesShares;\\n    uint256 protocolFeesShares;\\n}\\n\\nstruct WithdrawalState {\\n    uint256 requestedAssets;\\n    uint256 currTotalIdle;\\n    uint256 currTotalDebt;\\n    uint256 assetsNeeded;\\n    uint256 previousBalance;\\n    uint256 unrealisedLossesShare;\\n}\\n\\n// ENUMS\\nenum StrategyChangeType {\\n    ADDED, // Corresponds to the strategy being added.\\n    REVOKED // Corresponds to the strategy being revoked.\\n}\\n\\nenum RoleStatusChange {\\n    OPENED, // Corresponds to a role being opened.\\n    CLOSED // Corresponds to a role being closed.\\n}\\n\\nenum Rounding {\\n    ROUND_DOWN, // Corresponds to rounding down to the nearest whole number.\\n    ROUND_UP // Corresponds to rounding up to the nearest whole number.\\n}\",\"keccak256\":\"0x98a7128599e8f99c1be3515d79e4aff06cd0d604b6b10d13f87ffe1210330cc4\",\"license\":\"AGPL 3.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":24,"contract":"contracts/FathomVault.sol:FathomVault","label":"_roles","offset":0,"slot":"0","type":"t_mapping(t_bytes32,t_struct(RoleData)19_storage)"},{"astId":399,"contract":"contracts/FathomVault.sol:FathomVault","label":"_status","offset":0,"slot":"1","type":"t_uint256"},{"astId":7573,"contract":"contracts/FathomVault.sol:FathomVault","label":"strategyManager","offset":0,"slot":"2","type":"t_address"},{"astId":7578,"contract":"contracts/FathomVault.sol:FathomVault","label":"strategies","offset":0,"slot":"3","type":"t_mapping(t_address,t_struct(StrategyParams)7734_storage)"},{"astId":7581,"contract":"contracts/FathomVault.sol:FathomVault","label":"defaultQueue","offset":0,"slot":"4","type":"t_array(t_address)dyn_storage"},{"astId":7583,"contract":"contracts/FathomVault.sol:FathomVault","label":"useDefaultQueue","offset":0,"slot":"5","type":"t_bool"},{"astId":7587,"contract":"contracts/FathomVault.sol:FathomVault","label":"_balanceOf","offset":0,"slot":"6","type":"t_mapping(t_address,t_uint256)"},{"astId":7593,"contract":"contracts/FathomVault.sol:FathomVault","label":"_allowance","offset":0,"slot":"7","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":7595,"contract":"contracts/FathomVault.sol:FathomVault","label":"totalSupplyAmount","offset":0,"slot":"8","type":"t_uint256"},{"astId":7597,"contract":"contracts/FathomVault.sol:FathomVault","label":"totalDebtAmount","offset":0,"slot":"9","type":"t_uint256"},{"astId":7599,"contract":"contracts/FathomVault.sol:FathomVault","label":"totalIdleAmount","offset":0,"slot":"10","type":"t_uint256"},{"astId":7601,"contract":"contracts/FathomVault.sol:FathomVault","label":"minimumTotalIdle","offset":0,"slot":"11","type":"t_uint256"},{"astId":7603,"contract":"contracts/FathomVault.sol:FathomVault","label":"depositLimit","offset":0,"slot":"12","type":"t_uint256"},{"astId":7605,"contract":"contracts/FathomVault.sol:FathomVault","label":"accountant","offset":0,"slot":"13","type":"t_address"},{"astId":7607,"contract":"contracts/FathomVault.sol:FathomVault","label":"depositLimitModule","offset":0,"slot":"14","type":"t_address"},{"astId":7609,"contract":"contracts/FathomVault.sol:FathomVault","label":"withdrawLimitModule","offset":0,"slot":"15","type":"t_address"},{"astId":7613,"contract":"contracts/FathomVault.sol:FathomVault","label":"roles","offset":0,"slot":"16","type":"t_mapping(t_address,t_bytes32)"},{"astId":7617,"contract":"contracts/FathomVault.sol:FathomVault","label":"openRoles","offset":0,"slot":"17","type":"t_mapping(t_bytes32,t_bool)"},{"astId":7619,"contract":"contracts/FathomVault.sol:FathomVault","label":"roleManager","offset":0,"slot":"18","type":"t_address"},{"astId":7621,"contract":"contracts/FathomVault.sol:FathomVault","label":"futureRoleManager","offset":0,"slot":"19","type":"t_address"},{"astId":7623,"contract":"contracts/FathomVault.sol:FathomVault","label":"shutdown","offset":20,"slot":"19","type":"t_bool"},{"astId":7625,"contract":"contracts/FathomVault.sol:FathomVault","label":"profitMaxUnlockTime","offset":0,"slot":"20","type":"t_uint256"},{"astId":7627,"contract":"contracts/FathomVault.sol:FathomVault","label":"fullProfitUnlockDate","offset":0,"slot":"21","type":"t_uint256"},{"astId":7629,"contract":"contracts/FathomVault.sol:FathomVault","label":"profitUnlockingRate","offset":0,"slot":"22","type":"t_uint256"},{"astId":7631,"contract":"contracts/FathomVault.sol:FathomVault","label":"lastProfitUpdate","offset":0,"slot":"23","type":"t_uint256"},{"astId":7635,"contract":"contracts/FathomVault.sol:FathomVault","label":"nonces","offset":0,"slot":"24","type":"t_mapping(t_address,t_uint256)"},{"astId":7642,"contract":"contracts/FathomVault.sol:FathomVault","label":"DOMAIN_SEPARATOR","offset":0,"slot":"25","type":"t_bytes32"},{"astId":1902,"contract":"contracts/FathomVault.sol:FathomVault","label":"name","offset":0,"slot":"26","type":"t_string_storage"},{"astId":1905,"contract":"contracts/FathomVault.sol:FathomVault","label":"symbol","offset":0,"slot":"27","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_bytes32)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(StrategyParams)7734_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct StrategyParams)","numberOfBytes":"32","value":"t_struct(StrategyParams)7734_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_bool)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(RoleData)19_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)19_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(RoleData)19_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":16,"contract":"contracts/FathomVault.sol:FathomVault","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":18,"contract":"contracts/FathomVault.sol:FathomVault","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_struct(StrategyParams)7734_storage":{"encoding":"inplace","label":"struct StrategyParams","members":[{"astId":7727,"contract":"contracts/FathomVault.sol:FathomVault","label":"activation","offset":0,"slot":"0","type":"t_uint256"},{"astId":7729,"contract":"contracts/FathomVault.sol:FathomVault","label":"lastReport","offset":0,"slot":"1","type":"t_uint256"},{"astId":7731,"contract":"contracts/FathomVault.sol:FathomVault","label":"currentDebt","offset":0,"slot":"2","type":"t_uint256"},{"astId":7733,"contract":"contracts/FathomVault.sol:FathomVault","label":"maxDebt","offset":0,"slot":"3","type":"t_uint256"}],"numberOfBytes":"128"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"notice":"The Yearn VaultV3 is designed as a non-opinionated system to distribute funds of  depositors for a specific `asset` into different opportunities (aka Strategies) and manage accounting in a robust way.","version":1}}},"contracts/Interfaces/IAccountant.sol":{"IAccountant":{"abi":[{"inputs":[{"internalType":"address","name":"strategy","type":"address"},{"internalType":"uint256","name":"gain","type":"uint256"},{"internalType":"uint256","name":"loss","type":"uint256"}],"name":"report","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"report(address,uint256,uint256)":"921f8a8f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gain\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loss\",\"type\":\"uint256\"}],\"name\":\"report\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces/IAccountant.sol\":\"IAccountant\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/Interfaces/IAccountant.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.16;\\n\\ninterface IAccountant {\\n    function report(address strategy, uint256 gain, uint256 loss) external returns (uint256, uint256);\\n}\",\"keccak256\":\"0x0f704ea311ec644bcb45f1de8c501af3d70cb09b5c01d9c861c14b3ef9be47f8\",\"license\":\"GPL-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Interfaces/IDepositLimitModule.sol":{"IDepositLimitModule":{"abi":[{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"availableDepositLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"availableDepositLimit(address)":"46aa2f12"}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"availableDepositLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces/IDepositLimitModule.sol\":\"IDepositLimitModule\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/Interfaces/IDepositLimitModule.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.16;\\n\\ninterface IDepositLimitModule {\\n    function availableDepositLimit(address receiver) external view returns (uint256);\\n}\",\"keccak256\":\"0x84e894f08cbdee58c0df13247ca971da0ae1ca59b2d36d9bd5fb321f8328d3dd\",\"license\":\"GPL-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Interfaces/IERC4626.sol":{"IERC4626":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"receiver","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"asset","outputs":[{"internalType":"address","name":"assetTokenAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"convertToAssets","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"convertToShares","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"maxDeposit","outputs":[{"internalType":"uint256","name":"maxAssets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"maxMint","outputs":[{"internalType":"uint256","name":"maxShares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"maxLoss","type":"uint256"},{"internalType":"address[]","name":"strategies","type":"address[]"}],"name":"maxRedeem","outputs":[{"internalType":"uint256","name":"maxShares","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"maxLoss","type":"uint256"},{"internalType":"address[]","name":"strategies","type":"address[]"}],"name":"maxWithdraw","outputs":[{"internalType":"uint256","name":"maxAssets","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewDeposit","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewMint","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewRedeem","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewWithdraw","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"maxLoss","type":"uint256"},{"internalType":"address[]","name":"strategies","type":"address[]"}],"name":"redeem","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAssets","outputs":[{"internalType":"uint256","name":"totalManagedAssets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"maxLoss","type":"uint256"},{"internalType":"address[]","name":"strategies","type":"address[]"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC4626 \"Tokenized Vault Standard\", as defined in https://eips.ethereum.org/EIPS/eip-4626[ERC-4626]. _Available since v4.7._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"asset()":{"details":"Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"convertToAssets(uint256)":{"details":"Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and from."},"convertToShares(uint256)":{"details":"Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and from."},"decimals()":{"details":"Returns the decimals places of the token."},"deposit(uint256,address)":{"details":"Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   deposit execution, and are accounted for during deposit. - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."},"maxDeposit(address)":{"details":"Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver, through a deposit call. - MUST return a limited value if receiver is subject to some deposit limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited. - MUST NOT revert."},"maxMint(address)":{"details":"Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call. - MUST return a limited value if receiver is subject to some mint limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted. - MUST NOT revert."},"maxRedeem(address,uint256,address[])":{"details":"Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault, through a redeem call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock. - MUST NOT revert."},"maxWithdraw(address,uint256,address[])":{"details":"Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the Vault, through a withdraw call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST NOT revert."},"mint(uint256,address)":{"details":"Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint   execution, and are accounted for during mint. - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."},"name()":{"details":"Returns the name of the token."},"previewDeposit(uint256)":{"details":"Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called   in the same transaction. - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the   deposit would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing."},"previewMint(uint256)":{"details":"Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the   same transaction. - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint   would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting."},"previewRedeem(uint256)":{"details":"Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the   same transaction. - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the   redemption would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by redeeming."},"previewWithdraw(uint256)":{"details":"Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if   called   in the same transaction. - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though   the withdrawal would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing."},"redeem(uint256,address,address,uint256,address[])":{"details":"Burns exactly shares from owner and sends assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   redeem execution, and are accounted for during redeem. - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately."},"symbol()":{"details":"Returns the symbol of the token."},"totalAssets()":{"details":"Returns the total amount of the underlying asset that is “managed” by Vault. - SHOULD include any compounding that occurs from yield. - MUST be inclusive of any fees that are charged against assets in the Vault. - MUST NOT revert."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"withdraw(uint256,address,address,uint256,address[])":{"details":"Burns shares from owner and sends exactly assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   withdraw execution, and are accounted for during withdraw. - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","asset()":"38d52e0f","balanceOf(address)":"70a08231","convertToAssets(uint256)":"07a2d13a","convertToShares(uint256)":"c6e6f592","decimals()":"313ce567","deposit(uint256,address)":"6e553f65","maxDeposit(address)":"402d267d","maxMint(address)":"c63d75b6","maxRedeem(address,uint256,address[])":"34b5fab6","maxWithdraw(address,uint256,address[])":"65cb6765","mint(uint256,address)":"94bf804d","name()":"06fdde03","previewDeposit(uint256)":"ef8b30f7","previewMint(uint256)":"b3d7f6b9","previewRedeem(uint256)":"4cdad506","previewWithdraw(uint256)":"0a28a477","redeem(uint256,address,address,uint256,address[])":"06580f2d","symbol()":"95d89b41","totalAssets()":"01e1d114","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdraw(uint256,address,address,uint256,address[])":"d81a09f6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"assetTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxLoss\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxShares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxLoss\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxLoss\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalManagedAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxLoss\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC4626 \\\"Tokenized Vault Standard\\\", as defined in https://eips.ethereum.org/EIPS/eip-4626[ERC-4626]. _Available since v4.7._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"asset()\":{\"details\":\"Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"convertToAssets(uint256)\":{\"details\":\"Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"convertToShares(uint256)\":{\"details\":\"Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"deposit(uint256,address)\":{\"details\":\"Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   deposit execution, and are accounted for during deposit. - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"maxDeposit(address)\":{\"details\":\"Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver, through a deposit call. - MUST return a limited value if receiver is subject to some deposit limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited. - MUST NOT revert.\"},\"maxMint(address)\":{\"details\":\"Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call. - MUST return a limited value if receiver is subject to some mint limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted. - MUST NOT revert.\"},\"maxRedeem(address,uint256,address[])\":{\"details\":\"Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault, through a redeem call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock. - MUST NOT revert.\"},\"maxWithdraw(address,uint256,address[])\":{\"details\":\"Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the Vault, through a withdraw call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST NOT revert.\"},\"mint(uint256,address)\":{\"details\":\"Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint   execution, and are accounted for during mint. - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"previewDeposit(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called   in the same transaction. - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the   deposit would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"previewMint(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the   same transaction. - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint   would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting.\"},\"previewRedeem(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the   same transaction. - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the   redemption would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by redeeming.\"},\"previewWithdraw(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if   called   in the same transaction. - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though   the withdrawal would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"redeem(uint256,address,address,uint256,address[])\":{\"details\":\"Burns exactly shares from owner and sends assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   redeem execution, and are accounted for during redeem. - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalAssets()\":{\"details\":\"Returns the total amount of the underlying asset that is \\u201cmanaged\\u201d by Vault. - SHOULD include any compounding that occurs from yield. - MUST be inclusive of any fees that are charged against assets in the Vault. - MUST NOT revert.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"withdraw(uint256,address,address,uint256,address[])\":{\"details\":\"Burns shares from owner and sends exactly assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   withdraw execution, and are accounted for during withdraw. - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces/IERC4626.sol\":\"IERC4626\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"contracts/Interfaces/IERC4626.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC4626.sol)\\n\\npragma solidity ^0.8.16;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\n/**\\n * @dev Interface of the ERC4626 \\\"Tokenized Vault Standard\\\", as defined in\\n * https://eips.ethereum.org/EIPS/eip-4626[ERC-4626].\\n *\\n * _Available since v4.7._\\n */\\ninterface IERC4626 is IERC20, IERC20Metadata {\\n    // solhint-disable ordering\\n    // solhint-disable max-line-length\\n    event Deposit(address indexed sender, address indexed owner, uint256 assets, uint256 shares);\\n\\n    event Withdraw(\\n        address indexed sender,\\n        address indexed receiver,\\n        address indexed owner,\\n        uint256 assets,\\n        uint256 shares\\n    );\\n\\n    /**\\n     * @dev Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing.\\n     *\\n     * - MUST be an ERC-20 token contract.\\n     * - MUST NOT revert.\\n     */\\n    function asset() external view returns (address assetTokenAddress);\\n\\n    /**\\n     * @dev Returns the total amount of the underlying asset that is \\u201cmanaged\\u201d by Vault.\\n     *\\n     * - SHOULD include any compounding that occurs from yield.\\n     * - MUST be inclusive of any fees that are charged against assets in the Vault.\\n     * - MUST NOT revert.\\n     */\\n    function totalAssets() external view returns (uint256 totalManagedAssets);\\n\\n    /**\\n     * @dev Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal\\n     * scenario where all the conditions are met.\\n     *\\n     * - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\\n     * - MUST NOT show any variations depending on the caller.\\n     * - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\\n     * - MUST NOT revert.\\n     *\\n     * NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the\\n     * \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and\\n     * from.\\n     */\\n    function convertToShares(uint256 assets) external view returns (uint256 shares);\\n\\n    /**\\n     * @dev Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal\\n     * scenario where all the conditions are met.\\n     *\\n     * - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\\n     * - MUST NOT show any variations depending on the caller.\\n     * - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\\n     * - MUST NOT revert.\\n     *\\n     * NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the\\n     * \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and\\n     * from.\\n     */\\n    function convertToAssets(uint256 shares) external view returns (uint256 assets);\\n\\n    /**\\n     * @dev Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver,\\n     * through a deposit call.\\n     *\\n     * - MUST return a limited value if receiver is subject to some deposit limit.\\n     * - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited.\\n     * - MUST NOT revert.\\n     */\\n    function maxDeposit(address receiver) external view returns (uint256 maxAssets);\\n\\n    /**\\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given\\n     * current on-chain conditions.\\n     *\\n     * - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit\\n     *   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called\\n     *   in the same transaction.\\n     * - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the\\n     *   deposit would be accepted, regardless if the user has enough tokens approved, etc.\\n     * - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\\n     * - MUST NOT revert.\\n     *\\n     * NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in\\n     * share price or some other type of condition, meaning the depositor will lose assets by depositing.\\n     */\\n    function previewDeposit(uint256 assets) external view returns (uint256 shares);\\n\\n    /**\\n     * @dev Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens.\\n     *\\n     * - MUST emit the Deposit event.\\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\\n     *   deposit execution, and are accounted for during deposit.\\n     * - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not\\n     *   approving enough underlying tokens to the Vault contract, etc).\\n     *\\n     * NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\\n     */\\n    function deposit(uint256 assets, address receiver) external returns (uint256 shares);\\n\\n    /**\\n     * @dev Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call.\\n     * - MUST return a limited value if receiver is subject to some mint limit.\\n     * - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted.\\n     * - MUST NOT revert.\\n     */\\n    function maxMint(address receiver) external view returns (uint256 maxShares);\\n\\n    /**\\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given\\n     * current on-chain conditions.\\n     *\\n     * - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call\\n     *   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the\\n     *   same transaction.\\n     * - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint\\n     *   would be accepted, regardless if the user has enough tokens approved, etc.\\n     * - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\\n     * - MUST NOT revert.\\n     *\\n     * NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in\\n     * share price or some other type of condition, meaning the depositor will lose assets by minting.\\n     */\\n    function previewMint(uint256 shares) external view returns (uint256 assets);\\n\\n    /**\\n     * @dev Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens.\\n     *\\n     * - MUST emit the Deposit event.\\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint\\n     *   execution, and are accounted for during mint.\\n     * - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not\\n     *   approving enough underlying tokens to the Vault contract, etc).\\n     *\\n     * NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\\n     */\\n    function mint(uint256 shares, address receiver) external returns (uint256 assets);\\n\\n    /**\\n     * @dev Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the\\n     * Vault, through a withdraw call.\\n     *\\n     * - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\\n     * - MUST NOT revert.\\n     */\\n    function maxWithdraw(address owner, uint256 maxLoss, address[] memory strategies) external returns (uint256 maxAssets);\\n\\n    /**\\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block,\\n     * given current on-chain conditions.\\n     *\\n     * - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw\\n     *   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if\\n     *   called\\n     *   in the same transaction.\\n     * - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though\\n     *   the withdrawal would be accepted, regardless if the user has enough shares, etc.\\n     * - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\\n     * - MUST NOT revert.\\n     *\\n     * NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in\\n     * share price or some other type of condition, meaning the depositor will lose assets by depositing.\\n     */\\n    function previewWithdraw(uint256 assets) external view returns (uint256 shares);\\n\\n    /**\\n     * @dev Burns shares from owner and sends exactly assets of underlying tokens to receiver.\\n     *\\n     * - MUST emit the Withdraw event.\\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\\n     *   withdraw execution, and are accounted for during withdraw.\\n     * - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner\\n     *   not having enough shares, etc).\\n     *\\n     * Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\\n     * Those methods should be performed separately.\\n     */\\n    function withdraw(uint256 assets, address receiver, address owner, uint256 maxLoss, address[] memory strategies) external returns (uint256 shares);\\n\\n    /**\\n     * @dev Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault,\\n     * through a redeem call.\\n     *\\n     * - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\\n     * - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock.\\n     * - MUST NOT revert.\\n     */\\n    function maxRedeem(address owner, uint256 maxLoss, address[] memory strategies) external returns (uint256 maxShares);\\n\\n    /**\\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block,\\n     * given current on-chain conditions.\\n     *\\n     * - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call\\n     *   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the\\n     *   same transaction.\\n     * - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the\\n     *   redemption would be accepted, regardless if the user has enough shares, etc.\\n     * - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\\n     * - MUST NOT revert.\\n     *\\n     * NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in\\n     * share price or some other type of condition, meaning the depositor will lose assets by redeeming.\\n     */\\n    function previewRedeem(uint256 shares) external view returns (uint256 assets);\\n\\n    /**\\n     * @dev Burns exactly shares from owner and sends assets of underlying tokens to receiver.\\n     *\\n     * - MUST emit the Withdraw event.\\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\\n     *   redeem execution, and are accounted for during redeem.\\n     * - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner\\n     *   not having enough shares, etc).\\n     *\\n     * NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\\n     * Those methods should be performed separately.\\n     */\\n    function redeem(uint256 shares, address receiver, address owner, uint256 maxLoss, address[] memory strategies) external returns (uint256 assets);\\n}\",\"keccak256\":\"0xe2e626a58bddb0c8b459117fcf8f2b746431da070ea8d80d3d56bca5f1c8fa1d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Interfaces/IFactory.sol":{"IFactory":{"abi":[{"inputs":[],"name":"protocolFeeConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"protocolFeeConfig()":"07d3277f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"protocolFeeConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces/IFactory.sol\":\"IFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/Interfaces/IFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.16;\\n\\ninterface IFactory {\\n    function protocolFeeConfig() external view returns (uint16, address);\\n}\",\"keccak256\":\"0x40d6ccadd2d8acc52c61503f36d78c893d0841b427a390b52382b03368ddd9db\",\"license\":\"GPL-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Interfaces/ISharesManager.sol":{"ISharesManager":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"strategy","type":"address"},{"internalType":"uint256","name":"assetsNeeded","type":"uint256"}],"name":"assessShareOfUnrealisedLosses","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"burnShares","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"burnUnlockedShares","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"enum Rounding","name":"rounding","type":"uint8"}],"name":"convertToAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"enum Rounding","name":"rounding","type":"uint8"}],"name":"convertToShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"erc20SafeApprove","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"erc20SafeTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"erc20SafeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"sharesToBurn","type":"uint256"},{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"uint256","name":"requestedAssets","type":"uint256"},{"internalType":"uint256","name":"currTotalIdle","type":"uint256"},{"internalType":"uint256","name":"maxLoss","type":"uint256"}],"name":"finalizeRedeem","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"sharesToBurn","type":"uint256"}],"name":"handleAllowance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"issueShares","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"issueSharesForAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"maxDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"_maxLoss","type":"uint256"},{"internalType":"address[]","name":"_strategies","type":"address[]"}],"name":"maxWithdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"uint256","name":"sharesToBurn","type":"uint256"},{"internalType":"uint256","name":"maxLoss","type":"uint256"},{"internalType":"address[]","name":"_strategies","type":"address[]"}],"name":"redeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"spendAllowance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockedShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"sharesToBurn","type":"uint256"},{"internalType":"uint256","name":"maxLoss","type":"uint256"}],"name":"validateRedeem","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address[]","name":"_strategies","type":"address[]"}],"name":"withdrawAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"strategy","type":"address"},{"internalType":"uint256","name":"assetsToWithdraw","type":"uint256"}],"name":"withdrawFromStrategy","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,address,uint256)":"e1f21c67","assessShareOfUnrealisedLosses(address,uint256)":"5a569099","burnShares(uint256,address)":"99167fb4","burnUnlockedShares()":"e0bf18ad","convertToAssets(uint256,uint8)":"7ff00077","convertToShares(uint256,uint8)":"5d4086af","decreaseAllowance(address,address,uint256)":"d73b1dc9","deposit(address,address,uint256)":"8340f549","erc20SafeApprove(address,address,uint256)":"c0349694","erc20SafeTransfer(address,address,uint256)":"ec6e566e","erc20SafeTransferFrom(address,address,address,uint256)":"4542abe2","finalizeRedeem(address,address,uint256,uint256,uint256,uint256,uint256)":"28116b69","handleAllowance(address,address,uint256)":"c342cd27","increaseAllowance(address,address,uint256)":"6c43a2ca","issueShares(uint256,address)":"ca4c1c37","issueSharesForAmount(uint256,address)":"7659bcc6","maxDeposit(address)":"402d267d","maxWithdraw(address,uint256,address[])":"65cb6765","mint(address,address,uint256)":"c6c3bbe6","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","redeem(address,address,address,uint256,uint256,uint256,address[])":"46b79135","spendAllowance(address,address,uint256)":"dd8aaa4f","totalAssets()":"01e1d114","totalSupply()":"18160ddd","transfer(address,address,uint256)":"beabacc8","transferFrom(address,address,uint256)":"23b872dd","unlockedShares()":"d9a0e97a","validateRedeem(address,address,uint256,uint256)":"0573299b","withdrawAssets(uint256,address[])":"84e6c8ff","withdrawFromStrategy(address,uint256)":"b53d0958"}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetsNeeded\",\"type\":\"uint256\"}],\"name\":\"assessShareOfUnrealisedLosses\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burnShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnUnlockedShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"enum Rounding\",\"name\":\"rounding\",\"type\":\"uint8\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"enum Rounding\",\"name\":\"rounding\",\"type\":\"uint8\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"erc20SafeApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"erc20SafeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"erc20SafeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sharesToBurn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedAssets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currTotalIdle\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoss\",\"type\":\"uint256\"}],\"name\":\"finalizeRedeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sharesToBurn\",\"type\":\"uint256\"}],\"name\":\"handleAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"issueShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"issueSharesForAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxLoss\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_strategies\",\"type\":\"address[]\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharesToBurn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoss\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_strategies\",\"type\":\"address[]\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"spendAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockedShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sharesToBurn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoss\",\"type\":\"uint256\"}],\"name\":\"validateRedeem\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_strategies\",\"type\":\"address[]\"}],\"name\":\"withdrawAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetsToWithdraw\",\"type\":\"uint256\"}],\"name\":\"withdrawFromStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces/ISharesManager.sol\":\"ISharesManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/Interfaces/ISharesManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.16;\\n\\nimport \\\"../VaultStructs.sol\\\";\\n\\ninterface ISharesManager {\\n    // solhint-disable max-line-length\\n    // solhint-disable ordering\\n\\n    function spendAllowance(address owner, address spender, uint256 amount) external;\\n    function transfer(address sender, address receiver, uint256 amount) external;\\n    function transferFrom(address sender, address receiver, uint256 amount) external returns (bool);\\n    function approve(address owner, address spender, uint256 amount) external returns (bool);\\n    function increaseAllowance(address owner, address spender, uint256 amount) external returns (bool);\\n    function decreaseAllowance(address owner, address spender, uint256 amount) external returns (bool);\\n    function permit(address owner, address spender, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s) external returns (bool);\\n    function burnShares(uint256 shares, address owner) external;\\n    function unlockedShares() external view returns (uint256);\\n    function totalSupply() external view returns (uint256);\\n    function burnUnlockedShares() external;\\n    function totalAssets() external view returns (uint256);\\n    function convertToAssets(uint256 shares, Rounding rounding) external view returns (uint256);\\n    function convertToShares(uint256 assets, Rounding rounding) external view returns (uint256);\\n    function erc20SafeApprove(address token, address spender, uint256 amount) external;\\n    function erc20SafeTransferFrom(address token, address sender, address receiver, uint256 amount) external;\\n    function erc20SafeTransfer(address token, address receiver, uint256 amount) external;\\n    function issueShares(uint256 shares, address recipient) external;\\n    function issueSharesForAmount(uint256 amount, address recipient) external returns (uint256);\\n    function maxDeposit(address receiver) external view returns (uint256);\\n    function maxWithdraw(address owner, uint256 _maxLoss, address[] memory _strategies) external returns (uint256);\\n    function deposit(address sender, address recipient, uint256 assets) external returns (uint256);\\n    function mint(address sender, address recipient, uint256 shares) external returns (uint256);\\n    function assessShareOfUnrealisedLosses(address strategy, uint256 assetsNeeded) external view returns (uint256);\\n    function withdrawFromStrategy(address strategy, uint256 assetsToWithdraw) external;\\n    function redeem(address sender, address receiver, address owner, uint256 assets, uint256 sharesToBurn, uint256 maxLoss, address[] memory _strategies) external returns (uint256);\\n    function validateRedeem(address receiver, address owner, uint256 sharesToBurn, uint256 maxLoss) external view;\\n    function handleAllowance(address owner, address sender, uint256 sharesToBurn) external;\\n    function withdrawAssets(uint256 assets, address[] memory _strategies) external returns (uint256, uint256);\\n    function finalizeRedeem(address receiver, address owner, uint256 sharesToBurn, uint256 assets, uint256 requestedAssets, uint256 currTotalIdle, uint256 maxLoss) external;\\n\\n\\n}\",\"keccak256\":\"0x3ed5df669f6e064f4e257234ce6fceb702b04687b7382f31a638442b7f5089f9\",\"license\":\"GPL-3.0\"},\"contracts/VaultStructs.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL 3.0\\n// Copyright Fathom 2023\\n\\npragma solidity ^0.8.16;\\n\\nstruct StrategyParams {\\n    uint256 activation;\\n    uint256 lastReport;\\n    uint256 currentDebt;\\n    uint256 maxDebt;\\n}\\n\\nstruct FeeAssessment {\\n    uint256 totalFees;\\n    uint256 totalRefunds;\\n    uint256 protocolFees;\\n    address protocolFeeRecipient;\\n}\\n\\nstruct ShareManagement {\\n    uint256 sharesToBurn;\\n    uint256 accountantFeesShares;\\n    uint256 protocolFeesShares;\\n}\\n\\nstruct WithdrawalState {\\n    uint256 requestedAssets;\\n    uint256 currTotalIdle;\\n    uint256 currTotalDebt;\\n    uint256 assetsNeeded;\\n    uint256 previousBalance;\\n    uint256 unrealisedLossesShare;\\n}\\n\\n// ENUMS\\nenum StrategyChangeType {\\n    ADDED, // Corresponds to the strategy being added.\\n    REVOKED // Corresponds to the strategy being revoked.\\n}\\n\\nenum RoleStatusChange {\\n    OPENED, // Corresponds to a role being opened.\\n    CLOSED // Corresponds to a role being closed.\\n}\\n\\nenum Rounding {\\n    ROUND_DOWN, // Corresponds to rounding down to the nearest whole number.\\n    ROUND_UP // Corresponds to rounding up to the nearest whole number.\\n}\",\"keccak256\":\"0x98a7128599e8f99c1be3515d79e4aff06cd0d604b6b10d13f87ffe1210330cc4\",\"license\":\"AGPL 3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Interfaces/IStrategy.sol":{"IStrategy":{"abi":[{"inputs":[],"name":"asset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"convertToAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"convertToShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"maxDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"maxRedeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewWithdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"redeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"asset()":"38d52e0f","balanceOf(address)":"70a08231","convertToAssets(uint256)":"07a2d13a","convertToShares(uint256)":"c6e6f592","deposit(uint256,address)":"6e553f65","maxDeposit(address)":"402d267d","maxRedeem(address)":"d905777e","previewWithdraw(uint256)":"0a28a477","redeem(uint256,address,address)":"ba087652","totalAssets()":"01e1d114"}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces/IStrategy.sol\":\"IStrategy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/Interfaces/IStrategy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.16;\\n\\ninterface IStrategy {\\n    function redeem(uint256 shares, address receiver, address owner) external returns (uint256);\\n    function deposit(uint256 assets, address receiver) external returns (uint256);\\n    function asset() external view returns (address);\\n    function balanceOf(address owner) external view returns (uint256);\\n    function maxDeposit(address receiver) external view returns (uint256);\\n    function totalAssets() external view returns (uint256);\\n    function convertToAssets(uint256 shares) external view returns (uint256);\\n    function convertToShares(uint256 assets) external view returns (uint256);\\n    function previewWithdraw(uint256 assets) external view returns (uint256);\\n    function maxRedeem(address owner) external view returns (uint256);\\n}\",\"keccak256\":\"0x4a4ac422957ef074941cce14aa4a41619eec52ffffcf5cc2d5fbbd07b8875554\",\"license\":\"GPL-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Interfaces/IStrategyManager.sol":{"IStrategyManager":{"abi":[{"inputs":[{"internalType":"address","name":"newStrategy","type":"address"}],"name":"addStrategy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"strategy","type":"address"},{"internalType":"bool","name":"force","type":"bool"}],"name":"revokeStrategy","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"addStrategy(address)":"223e5479","revokeStrategy(address,bool)":"f42c77ae"}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newStrategy\",\"type\":\"address\"}],\"name\":\"addStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"}],\"name\":\"revokeStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces/IStrategyManager.sol\":\"IStrategyManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/Interfaces/IStrategyManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.16;\\n\\ninterface IStrategyManager {\\n    function addStrategy(address newStrategy) external;\\n    function revokeStrategy(address strategy, bool force) external;\\n}\",\"keccak256\":\"0x2305ec7d9d517661a568a2d29552e00521fe62c77d98682101aba0013ceff319\",\"license\":\"GPL-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Interfaces/IVault.sol":{"IVault":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"receiver","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"acceptRoleManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"addRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newStrategy","type":"address"}],"name":"addStrategy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"strategy","type":"address"},{"internalType":"uint256","name":"assetsNeeded","type":"uint256"}],"name":"assessShareOfUnrealisedLosses","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"asset","outputs":[{"internalType":"address","name":"assetTokenAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"strategy","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"buyDebt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"closeOpenRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"convertToAssets","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"convertToShares","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"strategy","type":"address"}],"name":"forceRevokeStrategy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"maxDeposit","outputs":[{"internalType":"uint256","name":"maxAssets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"maxMint","outputs":[{"internalType":"uint256","name":"maxShares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"maxLoss","type":"uint256"},{"internalType":"address[]","name":"strategies","type":"address[]"}],"name":"maxRedeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"maxLoss","type":"uint256"},{"internalType":"address[]","name":"strategies","type":"address[]"}],"name":"maxWithdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewDeposit","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewMint","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewRedeem","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewWithdraw","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pricePerShare","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"strategy","type":"address"}],"name":"processReport","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"maxLoss","type":"uint256"},{"internalType":"address[]","name":"strategies","type":"address[]"}],"name":"redeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"removeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"strategy","type":"address"}],"name":"revokeStrategy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newAccountant","type":"address"}],"name":"setAccountant","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"newDefaultQueue","type":"address[]"}],"name":"setDefaultQueue","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"depositLimit","type":"uint256"}],"name":"setDepositLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newDepositLimitModule","type":"address"}],"name":"setDepositLimitModule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"minimumTotalIdle","type":"uint256"}],"name":"setMinimumTotalIdle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"setOpenRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newProfitMaxUnlockTime","type":"uint256"}],"name":"setProfitMaxUnlockTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"","type":"bool"}],"name":"setUseDefaultQueue","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newWithdrawLimitModule","type":"address"}],"name":"setWithdrawLimitModule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"shutdownVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAssets","outputs":[{"internalType":"uint256","name":"totalManagedAssets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"roleManager","type":"address"}],"name":"transferRoleManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockedShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"strategy","type":"address"},{"internalType":"uint256","name":"targetDebt","type":"uint256"}],"name":"updateDebt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"strategy","type":"address"},{"internalType":"uint256","name":"newMaxDebt","type":"uint256"}],"name":"updateMaxDebtForStrategy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"maxLoss","type":"uint256"},{"internalType":"address[]","name":"strategies","type":"address[]"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"asset()":{"details":"Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"convertToAssets(uint256)":{"details":"Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and from."},"convertToShares(uint256)":{"details":"Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and from."},"decimals()":{"details":"Returns the decimals places of the token."},"deposit(uint256,address)":{"details":"Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   deposit execution, and are accounted for during deposit. - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."},"maxDeposit(address)":{"details":"Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver, through a deposit call. - MUST return a limited value if receiver is subject to some deposit limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited. - MUST NOT revert."},"maxMint(address)":{"details":"Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call. - MUST return a limited value if receiver is subject to some mint limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted. - MUST NOT revert."},"maxRedeem(address,uint256,address[])":{"details":"Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault, through a redeem call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock. - MUST NOT revert."},"maxWithdraw(address,uint256,address[])":{"details":"Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the Vault, through a withdraw call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST NOT revert."},"mint(uint256,address)":{"details":"Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint   execution, and are accounted for during mint. - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."},"name()":{"details":"Returns the name of the token."},"previewDeposit(uint256)":{"details":"Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called   in the same transaction. - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the   deposit would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing."},"previewMint(uint256)":{"details":"Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the   same transaction. - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint   would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting."},"previewRedeem(uint256)":{"details":"Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the   same transaction. - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the   redemption would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by redeeming."},"previewWithdraw(uint256)":{"details":"Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if   called   in the same transaction. - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though   the withdrawal would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing."},"redeem(uint256,address,address,uint256,address[])":{"details":"Burns exactly shares from owner and sends assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   redeem execution, and are accounted for during redeem. - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately."},"symbol()":{"details":"Returns the symbol of the token."},"totalAssets()":{"details":"Returns the total amount of the underlying asset that is “managed” by Vault. - SHOULD include any compounding that occurs from yield. - MUST be inclusive of any fees that are charged against assets in the Vault. - MUST NOT revert."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"withdraw(uint256,address,address,uint256,address[])":{"details":"Burns shares from owner and sends exactly assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   withdraw execution, and are accounted for during withdraw. - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptRoleManager()":"6d020808","addRole(address,bytes32)":"a73f7f8a","addStrategy(address)":"223e5479","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","assessShareOfUnrealisedLosses(address,uint256)":"5a569099","asset()":"38d52e0f","balanceOf(address)":"70a08231","buyDebt(address,uint256)":"405977e7","closeOpenRole(bytes32)":"c9a16ea4","convertToAssets(uint256)":"07a2d13a","convertToShares(uint256)":"c6e6f592","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","deposit(uint256,address)":"6e553f65","forceRevokeStrategy(address)":"16b87ac0","increaseAllowance(address,uint256)":"39509351","maxDeposit(address)":"402d267d","maxMint(address)":"c63d75b6","maxRedeem(address,uint256,address[])":"34b5fab6","maxWithdraw(address,uint256,address[])":"65cb6765","mint(uint256,address)":"94bf804d","name()":"06fdde03","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","previewDeposit(uint256)":"ef8b30f7","previewMint(uint256)":"b3d7f6b9","previewRedeem(uint256)":"4cdad506","previewWithdraw(uint256)":"0a28a477","pricePerShare()":"99530b06","processReport(address)":"b6cc2d1f","redeem(uint256,address,address,uint256,address[])":"06580f2d","removeRole(address,bytes32)":"6853920e","revokeStrategy(address)":"bb994d48","setAccountant(address)":"48ea7127","setDefaultQueue(address[])":"633f228c","setDepositLimit(uint256)":"bdc8144b","setDepositLimitModule(address)":"2d772168","setMinimumTotalIdle(uint256)":"8212fd43","setOpenRole(bytes32)":"d538e904","setProfitMaxUnlockTime(uint256)":"df69b22a","setUseDefaultQueue(bool)":"9bbca884","setWithdrawLimitModule(address)":"4bbd71e9","shutdownVault()":"e5236cc9","symbol()":"95d89b41","totalAssets()":"01e1d114","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferRoleManager(address)":"629b9142","unlockedShares()":"d9a0e97a","updateDebt(address,uint256)":"46e6ac49","updateMaxDebtForStrategy(address,uint256)":"f6d7bfa0","withdraw(uint256,address,address,uint256,address[])":"d81a09f6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptRoleManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"addRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newStrategy\",\"type\":\"address\"}],\"name\":\"addStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetsNeeded\",\"type\":\"uint256\"}],\"name\":\"assessShareOfUnrealisedLosses\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"assetTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"closeOpenRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"forceRevokeStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxLoss\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxLoss\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pricePerShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"processReport\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxLoss\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"removeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"revokeStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAccountant\",\"type\":\"address\"}],\"name\":\"setAccountant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"newDefaultQueue\",\"type\":\"address[]\"}],\"name\":\"setDefaultQueue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"depositLimit\",\"type\":\"uint256\"}],\"name\":\"setDepositLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDepositLimitModule\",\"type\":\"address\"}],\"name\":\"setDepositLimitModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minimumTotalIdle\",\"type\":\"uint256\"}],\"name\":\"setMinimumTotalIdle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"setOpenRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newProfitMaxUnlockTime\",\"type\":\"uint256\"}],\"name\":\"setProfitMaxUnlockTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"setUseDefaultQueue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newWithdrawLimitModule\",\"type\":\"address\"}],\"name\":\"setWithdrawLimitModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shutdownVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalManagedAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"roleManager\",\"type\":\"address\"}],\"name\":\"transferRoleManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockedShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"targetDebt\",\"type\":\"uint256\"}],\"name\":\"updateDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newMaxDebt\",\"type\":\"uint256\"}],\"name\":\"updateMaxDebtForStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxLoss\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"asset()\":{\"details\":\"Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"convertToAssets(uint256)\":{\"details\":\"Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"convertToShares(uint256)\":{\"details\":\"Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"deposit(uint256,address)\":{\"details\":\"Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   deposit execution, and are accounted for during deposit. - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"maxDeposit(address)\":{\"details\":\"Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver, through a deposit call. - MUST return a limited value if receiver is subject to some deposit limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited. - MUST NOT revert.\"},\"maxMint(address)\":{\"details\":\"Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call. - MUST return a limited value if receiver is subject to some mint limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted. - MUST NOT revert.\"},\"maxRedeem(address,uint256,address[])\":{\"details\":\"Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault, through a redeem call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock. - MUST NOT revert.\"},\"maxWithdraw(address,uint256,address[])\":{\"details\":\"Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the Vault, through a withdraw call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST NOT revert.\"},\"mint(uint256,address)\":{\"details\":\"Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint   execution, and are accounted for during mint. - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"previewDeposit(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called   in the same transaction. - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the   deposit would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"previewMint(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the   same transaction. - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint   would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting.\"},\"previewRedeem(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the   same transaction. - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the   redemption would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by redeeming.\"},\"previewWithdraw(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if   called   in the same transaction. - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though   the withdrawal would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"redeem(uint256,address,address,uint256,address[])\":{\"details\":\"Burns exactly shares from owner and sends assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   redeem execution, and are accounted for during redeem. - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalAssets()\":{\"details\":\"Returns the total amount of the underlying asset that is \\u201cmanaged\\u201d by Vault. - SHOULD include any compounding that occurs from yield. - MUST be inclusive of any fees that are charged against assets in the Vault. - MUST NOT revert.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"withdraw(uint256,address,address,uint256,address[])\":{\"details\":\"Burns shares from owner and sends exactly assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   withdraw execution, and are accounted for during withdraw. - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces/IVault.sol\":\"IVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"contracts/Interfaces/IERC4626.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC4626.sol)\\n\\npragma solidity ^0.8.16;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\n/**\\n * @dev Interface of the ERC4626 \\\"Tokenized Vault Standard\\\", as defined in\\n * https://eips.ethereum.org/EIPS/eip-4626[ERC-4626].\\n *\\n * _Available since v4.7._\\n */\\ninterface IERC4626 is IERC20, IERC20Metadata {\\n    // solhint-disable ordering\\n    // solhint-disable max-line-length\\n    event Deposit(address indexed sender, address indexed owner, uint256 assets, uint256 shares);\\n\\n    event Withdraw(\\n        address indexed sender,\\n        address indexed receiver,\\n        address indexed owner,\\n        uint256 assets,\\n        uint256 shares\\n    );\\n\\n    /**\\n     * @dev Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing.\\n     *\\n     * - MUST be an ERC-20 token contract.\\n     * - MUST NOT revert.\\n     */\\n    function asset() external view returns (address assetTokenAddress);\\n\\n    /**\\n     * @dev Returns the total amount of the underlying asset that is \\u201cmanaged\\u201d by Vault.\\n     *\\n     * - SHOULD include any compounding that occurs from yield.\\n     * - MUST be inclusive of any fees that are charged against assets in the Vault.\\n     * - MUST NOT revert.\\n     */\\n    function totalAssets() external view returns (uint256 totalManagedAssets);\\n\\n    /**\\n     * @dev Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal\\n     * scenario where all the conditions are met.\\n     *\\n     * - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\\n     * - MUST NOT show any variations depending on the caller.\\n     * - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\\n     * - MUST NOT revert.\\n     *\\n     * NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the\\n     * \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and\\n     * from.\\n     */\\n    function convertToShares(uint256 assets) external view returns (uint256 shares);\\n\\n    /**\\n     * @dev Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal\\n     * scenario where all the conditions are met.\\n     *\\n     * - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\\n     * - MUST NOT show any variations depending on the caller.\\n     * - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\\n     * - MUST NOT revert.\\n     *\\n     * NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the\\n     * \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and\\n     * from.\\n     */\\n    function convertToAssets(uint256 shares) external view returns (uint256 assets);\\n\\n    /**\\n     * @dev Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver,\\n     * through a deposit call.\\n     *\\n     * - MUST return a limited value if receiver is subject to some deposit limit.\\n     * - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited.\\n     * - MUST NOT revert.\\n     */\\n    function maxDeposit(address receiver) external view returns (uint256 maxAssets);\\n\\n    /**\\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given\\n     * current on-chain conditions.\\n     *\\n     * - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit\\n     *   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called\\n     *   in the same transaction.\\n     * - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the\\n     *   deposit would be accepted, regardless if the user has enough tokens approved, etc.\\n     * - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\\n     * - MUST NOT revert.\\n     *\\n     * NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in\\n     * share price or some other type of condition, meaning the depositor will lose assets by depositing.\\n     */\\n    function previewDeposit(uint256 assets) external view returns (uint256 shares);\\n\\n    /**\\n     * @dev Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens.\\n     *\\n     * - MUST emit the Deposit event.\\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\\n     *   deposit execution, and are accounted for during deposit.\\n     * - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not\\n     *   approving enough underlying tokens to the Vault contract, etc).\\n     *\\n     * NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\\n     */\\n    function deposit(uint256 assets, address receiver) external returns (uint256 shares);\\n\\n    /**\\n     * @dev Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call.\\n     * - MUST return a limited value if receiver is subject to some mint limit.\\n     * - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted.\\n     * - MUST NOT revert.\\n     */\\n    function maxMint(address receiver) external view returns (uint256 maxShares);\\n\\n    /**\\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given\\n     * current on-chain conditions.\\n     *\\n     * - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call\\n     *   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the\\n     *   same transaction.\\n     * - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint\\n     *   would be accepted, regardless if the user has enough tokens approved, etc.\\n     * - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\\n     * - MUST NOT revert.\\n     *\\n     * NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in\\n     * share price or some other type of condition, meaning the depositor will lose assets by minting.\\n     */\\n    function previewMint(uint256 shares) external view returns (uint256 assets);\\n\\n    /**\\n     * @dev Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens.\\n     *\\n     * - MUST emit the Deposit event.\\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint\\n     *   execution, and are accounted for during mint.\\n     * - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not\\n     *   approving enough underlying tokens to the Vault contract, etc).\\n     *\\n     * NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\\n     */\\n    function mint(uint256 shares, address receiver) external returns (uint256 assets);\\n\\n    /**\\n     * @dev Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the\\n     * Vault, through a withdraw call.\\n     *\\n     * - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\\n     * - MUST NOT revert.\\n     */\\n    function maxWithdraw(address owner, uint256 maxLoss, address[] memory strategies) external returns (uint256 maxAssets);\\n\\n    /**\\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block,\\n     * given current on-chain conditions.\\n     *\\n     * - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw\\n     *   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if\\n     *   called\\n     *   in the same transaction.\\n     * - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though\\n     *   the withdrawal would be accepted, regardless if the user has enough shares, etc.\\n     * - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\\n     * - MUST NOT revert.\\n     *\\n     * NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in\\n     * share price or some other type of condition, meaning the depositor will lose assets by depositing.\\n     */\\n    function previewWithdraw(uint256 assets) external view returns (uint256 shares);\\n\\n    /**\\n     * @dev Burns shares from owner and sends exactly assets of underlying tokens to receiver.\\n     *\\n     * - MUST emit the Withdraw event.\\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\\n     *   withdraw execution, and are accounted for during withdraw.\\n     * - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner\\n     *   not having enough shares, etc).\\n     *\\n     * Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\\n     * Those methods should be performed separately.\\n     */\\n    function withdraw(uint256 assets, address receiver, address owner, uint256 maxLoss, address[] memory strategies) external returns (uint256 shares);\\n\\n    /**\\n     * @dev Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault,\\n     * through a redeem call.\\n     *\\n     * - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\\n     * - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock.\\n     * - MUST NOT revert.\\n     */\\n    function maxRedeem(address owner, uint256 maxLoss, address[] memory strategies) external returns (uint256 maxShares);\\n\\n    /**\\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block,\\n     * given current on-chain conditions.\\n     *\\n     * - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call\\n     *   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the\\n     *   same transaction.\\n     * - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the\\n     *   redemption would be accepted, regardless if the user has enough shares, etc.\\n     * - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\\n     * - MUST NOT revert.\\n     *\\n     * NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in\\n     * share price or some other type of condition, meaning the depositor will lose assets by redeeming.\\n     */\\n    function previewRedeem(uint256 shares) external view returns (uint256 assets);\\n\\n    /**\\n     * @dev Burns exactly shares from owner and sends assets of underlying tokens to receiver.\\n     *\\n     * - MUST emit the Withdraw event.\\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\\n     *   redeem execution, and are accounted for during redeem.\\n     * - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner\\n     *   not having enough shares, etc).\\n     *\\n     * NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\\n     * Those methods should be performed separately.\\n     */\\n    function redeem(uint256 shares, address receiver, address owner, uint256 maxLoss, address[] memory strategies) external returns (uint256 assets);\\n}\",\"keccak256\":\"0xe2e626a58bddb0c8b459117fcf8f2b746431da070ea8d80d3d56bca5f1c8fa1d\",\"license\":\"MIT\"},\"contracts/Interfaces/IVault.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.16;\\n\\nimport {IERC4626} from \\\"./IERC4626.sol\\\";\\nimport \\\"../VaultStructs.sol\\\";\\n\\ninterface IVault is IERC4626 {\\n    function setAccountant(address newAccountant) external;\\n\\n    function setDefaultQueue(address[] memory newDefaultQueue) external;\\n\\n    function setUseDefaultQueue(bool) external;\\n\\n    function setDepositLimit(uint256 depositLimit) external;\\n\\n    function setDepositLimitModule(\\n        address newDepositLimitModule\\n    ) external;\\n\\n    function setWithdrawLimitModule(\\n        address newWithdrawLimitModule\\n    ) external;\\n\\n    function setMinimumTotalIdle(uint256 minimumTotalIdle) external;\\n\\n    function setProfitMaxUnlockTime(\\n        uint256 newProfitMaxUnlockTime\\n    ) external;\\n\\n    function addRole(address account, bytes32 role) external;\\n\\n    function removeRole(address account, bytes32 role) external;\\n\\n    function setOpenRole(bytes32 role) external;\\n\\n    function closeOpenRole(bytes32 role) external;\\n\\n    function transferRoleManager(address roleManager) external;\\n\\n    function acceptRoleManager() external;\\n\\n    function processReport(\\n        address strategy\\n    ) external returns (uint256, uint256);\\n\\n    function buyDebt(address strategy, uint256 amount) external;\\n\\n    function addStrategy(address newStrategy) external;\\n\\n    function revokeStrategy(address strategy) external;\\n\\n    function forceRevokeStrategy(address strategy) external;\\n\\n    function updateMaxDebtForStrategy(\\n        address strategy,\\n        uint256 newMaxDebt\\n    ) external;\\n\\n    function updateDebt(\\n        address strategy,\\n        uint256 targetDebt\\n    ) external returns (uint256);\\n\\n    function shutdownVault() external;\\n\\n    //// NON-STANDARD ERC-4626 FUNCTIONS \\\\\\\\\\\\\\\\\\n\\n    function withdraw(\\n        uint256 assets,\\n        address receiver,\\n        address owner,\\n        uint256 maxLoss,\\n        address[] memory strategies\\n    ) external returns (uint256);\\n\\n    function redeem(\\n        uint256 shares,\\n        address receiver,\\n        address owner,\\n        uint256 maxLoss,\\n        address[] memory strategies\\n    ) external returns (uint256);\\n\\n    //// NON-STANDARD ERC-20 FUNCTIONS \\\\\\\\\\\\\\\\\\n\\n    function increaseAllowance(\\n        address spender,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    function decreaseAllowance(\\n        address spender,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 amount,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (bool);\\n\\n    function maxWithdraw(\\n        address owner,\\n        uint256 maxLoss,\\n        address[] memory strategies\\n    ) external returns (uint256);\\n\\n    function maxRedeem(\\n        address owner,\\n        uint256 maxLoss,\\n        address[] memory strategies\\n    ) external returns (uint256);\\n\\n    function unlockedShares() external view returns (uint256);\\n\\n    function pricePerShare() external view returns (uint256);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function assessShareOfUnrealisedLosses(\\n        address strategy,\\n        uint256 assetsNeeded\\n    ) external view returns (uint256);\\n}\",\"keccak256\":\"0x18fbaf32ae88d871f55ea1bbc8e4d59d9098c5df948963b1b0d61524fc1f75e5\",\"license\":\"GPL-3.0\"},\"contracts/VaultStructs.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL 3.0\\n// Copyright Fathom 2023\\n\\npragma solidity ^0.8.16;\\n\\nstruct StrategyParams {\\n    uint256 activation;\\n    uint256 lastReport;\\n    uint256 currentDebt;\\n    uint256 maxDebt;\\n}\\n\\nstruct FeeAssessment {\\n    uint256 totalFees;\\n    uint256 totalRefunds;\\n    uint256 protocolFees;\\n    address protocolFeeRecipient;\\n}\\n\\nstruct ShareManagement {\\n    uint256 sharesToBurn;\\n    uint256 accountantFeesShares;\\n    uint256 protocolFeesShares;\\n}\\n\\nstruct WithdrawalState {\\n    uint256 requestedAssets;\\n    uint256 currTotalIdle;\\n    uint256 currTotalDebt;\\n    uint256 assetsNeeded;\\n    uint256 previousBalance;\\n    uint256 unrealisedLossesShare;\\n}\\n\\n// ENUMS\\nenum StrategyChangeType {\\n    ADDED, // Corresponds to the strategy being added.\\n    REVOKED // Corresponds to the strategy being revoked.\\n}\\n\\nenum RoleStatusChange {\\n    OPENED, // Corresponds to a role being opened.\\n    CLOSED // Corresponds to a role being closed.\\n}\\n\\nenum Rounding {\\n    ROUND_DOWN, // Corresponds to rounding down to the nearest whole number.\\n    ROUND_UP // Corresponds to rounding up to the nearest whole number.\\n}\",\"keccak256\":\"0x98a7128599e8f99c1be3515d79e4aff06cd0d604b6b10d13f87ffe1210330cc4\",\"license\":\"AGPL 3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Interfaces/IVaultEvents.sol":{"IVaultEvents":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"strategy","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"DebtPurchased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"strategy","type":"address"},{"indexed":false,"internalType":"uint256","name":"currentDebt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newDebt","type":"uint256"}],"name":"DebtUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"RoleSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"enum RoleStatusChange","name":"status","type":"uint8"}],"name":"RoleStatusChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"Shutdown","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"strategy","type":"address"},{"indexed":false,"internalType":"enum StrategyChangeType","name":"changeType","type":"uint8"}],"name":"StrategyChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"strategy","type":"address"},{"indexed":false,"internalType":"uint256","name":"gain","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"loss","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"currentDebt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"protocolFees","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalFees","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalRefunds","type":"uint256"}],"name":"StrategyReported","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"accountant","type":"address"}],"name":"UpdateAccountant","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address[]","name":"newDefaultQueue","type":"address[]"}],"name":"UpdateDefaultQueue","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"depositLimit","type":"uint256"}],"name":"UpdateDepositLimit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"depositLimitModule","type":"address"}],"name":"UpdateDepositLimitModule","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"minimumTotalIdle","type":"uint256"}],"name":"UpdateMinimumTotalIdle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"profitMaxUnlockTime","type":"uint256"}],"name":"UpdateProfitMaxUnlockTime","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"roleManager","type":"address"}],"name":"UpdateRoleManager","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"useDefaultQueue","type":"bool"}],"name":"UpdateUseDefaultQueue","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"withdrawLimitModule","type":"address"}],"name":"UpdateWithdrawLimitModule","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"strategy","type":"address"},{"indexed":false,"internalType":"uint256","name":"newDebt","type":"uint256"}],"name":"UpdatedMaxDebtForStrategy","type":"event"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DebtPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentDebt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDebt\",\"type\":\"uint256\"}],\"name\":\"DebtUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"RoleSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"enum RoleStatusChange\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"RoleStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Shutdown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum StrategyChangeType\",\"name\":\"changeType\",\"type\":\"uint8\"}],\"name\":\"StrategyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gain\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loss\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentDebt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolFees\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalFees\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalRefunds\",\"type\":\"uint256\"}],\"name\":\"StrategyReported\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"accountant\",\"type\":\"address\"}],\"name\":\"UpdateAccountant\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"newDefaultQueue\",\"type\":\"address[]\"}],\"name\":\"UpdateDefaultQueue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositLimit\",\"type\":\"uint256\"}],\"name\":\"UpdateDepositLimit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositLimitModule\",\"type\":\"address\"}],\"name\":\"UpdateDepositLimitModule\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumTotalIdle\",\"type\":\"uint256\"}],\"name\":\"UpdateMinimumTotalIdle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"profitMaxUnlockTime\",\"type\":\"uint256\"}],\"name\":\"UpdateProfitMaxUnlockTime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"roleManager\",\"type\":\"address\"}],\"name\":\"UpdateRoleManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"useDefaultQueue\",\"type\":\"bool\"}],\"name\":\"UpdateUseDefaultQueue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"withdrawLimitModule\",\"type\":\"address\"}],\"name\":\"UpdateWithdrawLimitModule\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDebt\",\"type\":\"uint256\"}],\"name\":\"UpdatedMaxDebtForStrategy\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces/IVaultEvents.sol\":\"IVaultEvents\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/Interfaces/IVaultEvents.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL 3.0\\n// Copyright Fathom 2023\\n\\npragma solidity ^0.8.16;\\n\\nimport \\\"../VaultStructs.sol\\\";\\n\\ninterface IVaultEvents {\\n    // STRATEGY EVENTS\\n    event StrategyChanged(address indexed strategy, StrategyChangeType changeType);\\n    event StrategyReported(\\n        address indexed strategy,\\n        uint256 gain,\\n        uint256 loss,\\n        uint256 currentDebt,\\n        uint256 protocolFees,\\n        uint256 totalFees,\\n        uint256 totalRefunds\\n    );\\n    // DEBT MANAGEMENT EVENTS\\n    event DebtUpdated(\\n        address indexed strategy,\\n        uint256 currentDebt,\\n        uint256 newDebt\\n    );\\n    // ROLE UPDATES\\n    event RoleSet(address indexed account, bytes32 role);\\n    event RoleStatusChanged(bytes32 indexed role, RoleStatusChange indexed status);\\n    event UpdateRoleManager(address indexed roleManager);\\n\\n    event UpdateAccountant(address indexed accountant);\\n    event UpdateDefaultQueue(address[] newDefaultQueue);\\n    event UpdateUseDefaultQueue(bool useDefaultQueue);\\n    event UpdatedMaxDebtForStrategy(\\n        address indexed sender,\\n        address indexed strategy,\\n        uint256 newDebt\\n    );\\n    event UpdateDepositLimit(uint256 depositLimit);\\n    event UpdateMinimumTotalIdle(uint256 minimumTotalIdle);\\n    event UpdateProfitMaxUnlockTime(uint256 profitMaxUnlockTime);\\n    event DebtPurchased(address indexed strategy, uint256 amount);\\n    event Shutdown();\\n\\n    // STORAGE MANAGEMENT EVENTS\\n    event UpdateDepositLimitModule(address indexed depositLimitModule);\\n    event UpdateWithdrawLimitModule(address indexed withdrawLimitModule);\\n}\",\"keccak256\":\"0x809fab69d54383c6137fea5d99022f5c3773701f9c7ae46235ab354aaf5d0702\",\"license\":\"AGPL 3.0\"},\"contracts/VaultStructs.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL 3.0\\n// Copyright Fathom 2023\\n\\npragma solidity ^0.8.16;\\n\\nstruct StrategyParams {\\n    uint256 activation;\\n    uint256 lastReport;\\n    uint256 currentDebt;\\n    uint256 maxDebt;\\n}\\n\\nstruct FeeAssessment {\\n    uint256 totalFees;\\n    uint256 totalRefunds;\\n    uint256 protocolFees;\\n    address protocolFeeRecipient;\\n}\\n\\nstruct ShareManagement {\\n    uint256 sharesToBurn;\\n    uint256 accountantFeesShares;\\n    uint256 protocolFeesShares;\\n}\\n\\nstruct WithdrawalState {\\n    uint256 requestedAssets;\\n    uint256 currTotalIdle;\\n    uint256 currTotalDebt;\\n    uint256 assetsNeeded;\\n    uint256 previousBalance;\\n    uint256 unrealisedLossesShare;\\n}\\n\\n// ENUMS\\nenum StrategyChangeType {\\n    ADDED, // Corresponds to the strategy being added.\\n    REVOKED // Corresponds to the strategy being revoked.\\n}\\n\\nenum RoleStatusChange {\\n    OPENED, // Corresponds to a role being opened.\\n    CLOSED // Corresponds to a role being closed.\\n}\\n\\nenum Rounding {\\n    ROUND_DOWN, // Corresponds to rounding down to the nearest whole number.\\n    ROUND_UP // Corresponds to rounding up to the nearest whole number.\\n}\",\"keccak256\":\"0x98a7128599e8f99c1be3515d79e4aff06cd0d604b6b10d13f87ffe1210330cc4\",\"license\":\"AGPL 3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Interfaces/IWithdrawLimitModule.sol":{"IWithdrawLimitModule":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"maxLoss","type":"uint256"},{"internalType":"address[]","name":"strategies","type":"address[]"}],"name":"availableWithdrawLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"availableWithdrawLimit(address,uint256,address[])":"2319b8cf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxLoss\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"availableWithdrawLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Interfaces/IWithdrawLimitModule.sol\":\"IWithdrawLimitModule\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/Interfaces/IWithdrawLimitModule.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.16;\\n\\ninterface IWithdrawLimitModule {\\n    function availableWithdrawLimit(address owner, uint256 maxLoss, address[] calldata strategies) external returns (uint256);\\n}\",\"keccak256\":\"0xffae5d1b3b7b503e76d5b86e65d2a231274190efdf4dce364255bf20f208ebca\",\"license\":\"GPL-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/StrategyManager.sol":{"StrategyManager":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"_asset","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InactiveStrategy","type":"error"},{"inputs":[],"name":"InvalidAsset","type":"error"},{"inputs":[],"name":"StrategyAlreadyActive","type":"error"},{"inputs":[],"name":"StrategyHasDebt","type":"error"},{"inputs":[],"name":"ZeroAddress","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"strategy","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"DebtPurchased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"strategy","type":"address"},{"indexed":false,"internalType":"uint256","name":"currentDebt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newDebt","type":"uint256"}],"name":"DebtUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"RoleSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"enum RoleStatusChange","name":"status","type":"uint8"}],"name":"RoleStatusChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"Shutdown","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"strategy","type":"address"},{"indexed":false,"internalType":"enum StrategyChangeType","name":"changeType","type":"uint8"}],"name":"StrategyChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"strategy","type":"address"},{"indexed":false,"internalType":"uint256","name":"gain","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"loss","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"currentDebt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"protocolFees","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalFees","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalRefunds","type":"uint256"}],"name":"StrategyReported","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"accountant","type":"address"}],"name":"UpdateAccountant","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address[]","name":"newDefaultQueue","type":"address[]"}],"name":"UpdateDefaultQueue","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"depositLimit","type":"uint256"}],"name":"UpdateDepositLimit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"depositLimitModule","type":"address"}],"name":"UpdateDepositLimitModule","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"minimumTotalIdle","type":"uint256"}],"name":"UpdateMinimumTotalIdle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"profitMaxUnlockTime","type":"uint256"}],"name":"UpdateProfitMaxUnlockTime","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"roleManager","type":"address"}],"name":"UpdateRoleManager","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"useDefaultQueue","type":"bool"}],"name":"UpdateUseDefaultQueue","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"withdrawLimitModule","type":"address"}],"name":"UpdateWithdrawLimitModule","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"strategy","type":"address"},{"indexed":false,"internalType":"uint256","name":"newDebt","type":"uint256"}],"name":"UpdatedMaxDebtForStrategy","type":"event"},{"inputs":[],"name":"ACCOUNTANT_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ADD_STRATEGY_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"API_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ASSET","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEBT_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEBT_PURCHASER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEPOSIT_LIMIT_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_TYPE_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EMERGENCY_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FORCE_REVOKE_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_BPS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_BPS_EXTENDED","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_DEBT_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_QUEUE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINIMUM_IDLE_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERMIT_TYPE_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROFIT_UNLOCK_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"QUEUE_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REPORTING_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REVOKE_STRATEGY_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ROLE_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WITHDRAW_LIMIT_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"accountant","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newStrategy","type":"address"}],"name":"addStrategy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"defaultQueue","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"depositLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"depositLimitModule","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fullProfitUnlockDate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"futureRoleManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastProfitUpdate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minimumTotalIdle","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"openRoles","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"profitMaxUnlockTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"profitUnlockingRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"strategy","type":"address"},{"internalType":"bool","name":"force","type":"bool"}],"name":"revokeStrategy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"roleManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"roles","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"shutdown","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"strategies","outputs":[{"internalType":"uint256","name":"activation","type":"uint256"},{"internalType":"uint256","name":"lastReport","type":"uint256"},{"internalType":"uint256","name":"currentDebt","type":"uint256"},{"internalType":"uint256","name":"maxDebt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalDebtAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalIdleAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupplyAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"useDefaultQueue","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawLimitModule","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"STRATEGY MANAGEMENT","version":1},"evm":{"bytecode":{"functionDebugData":{"@_7345":{"entryPoint":null,"id":7345,"parameterSlots":1,"returnSlots":0},"abi_decode_t_contract$_IERC20_$531_fromMemory":{"entryPoint":119,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IERC20_$531_fromMemory":{"entryPoint":130,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":66,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IERC20_$531":{"entryPoint":85,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_contract$_IERC20_$531":{"entryPoint":96,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1399:25","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:25","statements":[{"nodeType":"YulAssignment","src":"57:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:25"},"nodeType":"YulFunctionCall","src":"67:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:25","type":""}],"src":"7:75:25"},{"body":{"nodeType":"YulBlock","src":"177:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:25"},"nodeType":"YulFunctionCall","src":"187:12:25"},"nodeType":"YulExpressionStatement","src":"187:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:25"},{"body":{"nodeType":"YulBlock","src":"300:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:25"},"nodeType":"YulFunctionCall","src":"310:12:25"},"nodeType":"YulExpressionStatement","src":"310:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:25"},{"body":{"nodeType":"YulBlock","src":"379:81:25","statements":[{"nodeType":"YulAssignment","src":"389:65:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:25"},"nodeType":"YulFunctionCall","src":"400:54:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:25"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:25","type":""}],"src":"334:126:25"},{"body":{"nodeType":"YulBlock","src":"511:51:25","statements":[{"nodeType":"YulAssignment","src":"521:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:25"},"nodeType":"YulFunctionCall","src":"532:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:25"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:25","type":""}],"src":"466:96:25"},{"body":{"nodeType":"YulBlock","src":"627:51:25","statements":[{"nodeType":"YulAssignment","src":"637:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"666:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"648:17:25"},"nodeType":"YulFunctionCall","src":"648:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"637:7:25"}]}]},"name":"cleanup_t_contract$_IERC20_$531","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"609:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"619:7:25","type":""}],"src":"568:110:25"},{"body":{"nodeType":"YulBlock","src":"741:93:25","statements":[{"body":{"nodeType":"YulBlock","src":"812:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"821:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"824:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"814:6:25"},"nodeType":"YulFunctionCall","src":"814:12:25"},"nodeType":"YulExpressionStatement","src":"814:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"764:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"803:5:25"}],"functionName":{"name":"cleanup_t_contract$_IERC20_$531","nodeType":"YulIdentifier","src":"771:31:25"},"nodeType":"YulFunctionCall","src":"771:38:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"761:2:25"},"nodeType":"YulFunctionCall","src":"761:49:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"754:6:25"},"nodeType":"YulFunctionCall","src":"754:57:25"},"nodeType":"YulIf","src":"751:77:25"}]},"name":"validator_revert_t_contract$_IERC20_$531","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"734:5:25","type":""}],"src":"684:150:25"},{"body":{"nodeType":"YulBlock","src":"917:94:25","statements":[{"nodeType":"YulAssignment","src":"927:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"942:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"936:5:25"},"nodeType":"YulFunctionCall","src":"936:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"927:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"999:5:25"}],"functionName":{"name":"validator_revert_t_contract$_IERC20_$531","nodeType":"YulIdentifier","src":"958:40:25"},"nodeType":"YulFunctionCall","src":"958:47:25"},"nodeType":"YulExpressionStatement","src":"958:47:25"}]},"name":"abi_decode_t_contract$_IERC20_$531_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"895:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"903:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"911:5:25","type":""}],"src":"840:171:25"},{"body":{"nodeType":"YulBlock","src":"1108:288:25","statements":[{"body":{"nodeType":"YulBlock","src":"1154:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1156:77:25"},"nodeType":"YulFunctionCall","src":"1156:79:25"},"nodeType":"YulExpressionStatement","src":"1156:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1129:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"1138:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1125:3:25"},"nodeType":"YulFunctionCall","src":"1125:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"1150:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1121:3:25"},"nodeType":"YulFunctionCall","src":"1121:32:25"},"nodeType":"YulIf","src":"1118:119:25"},{"nodeType":"YulBlock","src":"1247:142:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1262:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1276:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1266:6:25","type":""}]},{"nodeType":"YulAssignment","src":"1291:88:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1351:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"1362:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1347:3:25"},"nodeType":"YulFunctionCall","src":"1347:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1371:7:25"}],"functionName":{"name":"abi_decode_t_contract$_IERC20_$531_fromMemory","nodeType":"YulIdentifier","src":"1301:45:25"},"nodeType":"YulFunctionCall","src":"1301:78:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1291:6:25"}]}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$531_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1078:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1089:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1101:6:25","type":""}],"src":"1017:379:25"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$531(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$531(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$531(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$531_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$531(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$531_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$531_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x10A1 CODESIZE SUB DUP1 PUSH3 0x10A1 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x31 SWAP2 PUSH2 0x82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH2 0xAB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F DUP3 PUSH2 0x42 JUMP JUMPDEST PUSH2 0x69 DUP2 PUSH2 0x55 JUMP JUMPDEST DUP2 EQ PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x4F DUP2 PUSH2 0x60 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x97 JUMPI PUSH2 0x97 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA3 DUP5 DUP5 PUSH2 0x77 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xFD3 PUSH3 0xCE PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x343 ADD MSTORE PUSH2 0x763 ADD MSTORE PUSH2 0xFD3 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x219 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x435DA5 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x3DCD12C EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x835A3FC EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x952864E EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xAD283D0 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x223E5479 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x2D632692 EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x36FBA084 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x39EBF823 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x3CD7B5AB EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x3F7B5E40 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x4800D97F EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x4CE1D38A EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x4CFE51DC EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x4D4BB197 EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0x4FB3CCC5 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0x5141EEBB EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x53A66132 EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0x5BF6B4FB EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0x652DA324 EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0x77E3B267 EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0x8AFCA8F0 EQ PUSH2 0x4D2 JUMPI DUP1 PUSH4 0x91986003 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0x99374642 EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0x9E34E348 EQ PUSH2 0x50E JUMPI DUP1 PUSH4 0x9F3988F3 EQ PUSH2 0x521 JUMPI DUP1 PUSH4 0xA98222C4 EQ PUSH2 0x548 JUMPI DUP1 PUSH4 0xAB5B4D49 EQ PUSH2 0x56F JUMPI DUP1 PUSH4 0xB3C187F2 EQ PUSH2 0x596 JUMPI DUP1 PUSH4 0xBBE4EB49 EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0xC065CA07 EQ PUSH2 0x5B6 JUMPI DUP1 PUSH4 0xC0993EEA EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0xC8D74B60 EQ PUSH2 0x604 JUMPI DUP1 PUSH4 0xC8DFFA95 EQ PUSH2 0x62B JUMPI DUP1 PUSH4 0xD4AE064F EQ PUSH2 0x634 JUMPI DUP1 PUSH4 0xECF70858 EQ PUSH2 0x65B JUMPI DUP1 PUSH4 0xF1DAEBA8 EQ PUSH2 0x664 JUMPI DUP1 PUSH4 0xF42C77AE EQ PUSH2 0x68B JUMPI DUP1 PUSH4 0xF5B944EB EQ PUSH2 0x69E JUMPI DUP1 PUSH4 0xF828F50B EQ PUSH2 0x6C5 JUMPI DUP1 PUSH4 0xFC0E74D1 EQ PUSH2 0x6CE JUMPI DUP1 PUSH4 0xFD967F47 EQ PUSH2 0x6E2 JUMPI DUP1 PUSH4 0xFEC61F06 EQ PUSH2 0x6EB JUMPI DUP1 PUSH4 0xFF1E7F08 EQ PUSH2 0x712 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x231 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH32 0x633076A97F32AE349B28772E7B1483F67A926F150CBC501D02BDBD77389325AB DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0xC4F JUMP JUMPDEST PUSH2 0x26E PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH32 0xC723F4DD6268E1C374639E36D629C765285EE7003913389D582C300F186DDE97 DUP2 JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x725 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26E PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH5 0xE8D4A51000 DUP2 JUMP JUMPDEST PUSH2 0x31D PUSH2 0x2F5 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0x26E PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH1 0xA DUP2 JUMP JUMPDEST PUSH2 0x365 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x26E PUSH32 0x69D1171AC0A63777A6733CDA21AEC9ED3D48A4FD11F273C934A691DEC5E5589C DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH32 0x862F91C9D89D6135B19873B921C90B702CB2E175C371B8430026B9577E691119 DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x231 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x426 PUSH2 0x411 CALLDATASIZE PUSH1 0x4 PUSH2 0xD3D JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0xD66 JUMP JUMPDEST PUSH2 0x26E PUSH32 0xEA672C1C09CD95C51AF9509F646F3615FF0071AAE8652BD821471EE9037FD72C DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH32 0xCD9F023A942EE35097EAD74B2505BEA9F2C5D47465DB92DD195CF7F01A41CFE1 DUP2 JUMP JUMPDEST PUSH2 0x4A5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x312E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST PUSH2 0x26E PUSH2 0x4C0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x231 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x4FC CALLDATASIZE PUSH1 0x4 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x231 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH32 0x6F430D649A8640E48FF9BFBC353B3F99ED630163857821B3B4075E3871DAFBF5 DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH32 0x2F0DBBE8C2C0170206C50EC0CAFA1C0DBD03E73E67C2A960178DF30A0A30EE2E DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH32 0x900D80DEF0427DAAC599092FCB16B21808EC68DD9A2E1EAE89D1E8DB21357375 DUP2 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x231 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x426 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH32 0x2A0E761830CC61F2707EA7BB138008BF9DDA7F7D34C77736D0A116604E95EA16 DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH32 0x152EBBA56B9738EE3D8BAEA1B76FA31DCDCD79B1929BFEA7D58EE12CFDF1A653 DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH32 0xA18EAEA71A088B547B8C932B48861853B3434D9A3240B94466C607E28B696595 DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH32 0x7CBB3CDF689B8EA3E9D265F66BC4E0A99069268217017D38D2A5A559ABC62719 DUP2 JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x699 CALLDATASIZE PUSH1 0x4 PUSH2 0xDF5 JUMP JUMPDEST PUSH2 0x92E JUMP JUMPDEST PUSH2 0x26E PUSH32 0xF206625BAD3D9112D5609B8D356E6FBD514CD1F69980D4CE2B3E6E68E1789ACE DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x426 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH32 0xD45F7CCFF42F059D4E47C3F027C444272257266F7E88B981E142F0AA38FBFD78 DUP2 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x720 CALLDATASIZE PUSH1 0x4 PUSH2 0xD3D JUMP JUMPDEST PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 PUSH2 0x743 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ADDRESS EQ JUMPDEST ISZERO PUSH2 0x761 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38D52E0F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7ED SWAP2 SWAP1 PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x814 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6448D6E9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x84B JUMPI PUSH1 0x40 MLOAD PUSH4 0xC976754D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE TIMESTAMP DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 DUP4 DUP6 ADD DUP2 DUP2 MSTORE PUSH1 0x60 DUP6 ADD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP4 MSTORE PUSH1 0x1 SWAP4 DUP5 SWAP1 MSTORE SWAP6 SWAP1 SWAP2 KECCAK256 SWAP4 MLOAD DUP5 SSTORE SWAP2 MLOAD SWAP1 DUP4 ADD SSTORE MLOAD PUSH1 0x2 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE SLOAD PUSH1 0xA DUP2 LT ISZERO PUSH2 0x8FA JUMPI DUP2 PUSH1 0x2 DUP3 PUSH2 0x8B9 DUP2 PUSH2 0xE74 JUMP JUMPDEST SWAP4 POP DUP2 SLOAD DUP2 LT PUSH2 0x8CB JUMPI PUSH2 0x8CB PUSH2 0xE8E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x922 SWAP2 SWAP1 PUSH2 0xEED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x966 JUMPI PUSH1 0x40 MLOAD PUSH4 0x631BC21 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x98E JUMPI POP DUP2 ISZERO JUMPDEST ISZERO PUSH2 0x9AC JUMPI PUSH1 0x40 MLOAD PUSH4 0x3546382F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x7 DUP1 SLOAD SWAP2 SWAP3 DUP4 SWAP3 PUSH2 0x9DC SWAP1 DUP5 SWAP1 PUSH2 0xEFB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7F2AD1D3BA35276F35EF140F83E3E0F17B23064FD710113D3F7A5AB30D267811 PUSH1 0x0 DUP4 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH2 0xA29 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE DUP4 DUP6 ADD DUP4 DUP2 MSTORE PUSH1 0x60 DUP1 DUP7 ADD DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP7 MSTORE PUSH1 0x1 SWAP5 DUP6 SWAP1 MSTORE SWAP7 SWAP1 SWAP5 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP1 MLOAD SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH1 0x2 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP3 MLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 SLOAD ISZERO PUSH2 0xB21 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xB1F JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAB7 JUMPI PUSH2 0xAB7 PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 POP DUP7 AND DUP2 EQ PUSH2 0xB0C JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xAEB JUMPI PUSH2 0xAEB PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST POP DUP1 PUSH2 0xB17 DUP2 PUSH2 0xE74 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA98 JUMP JUMPDEST POP JUMPDEST DUP1 MLOAD PUSH2 0xB34 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0xB95 JUMP JUMPDEST POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xB5D SWAP2 SWAP1 PUSH2 0xEED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xBEA JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xBEA JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xBB5 JUMP JUMPDEST POP PUSH2 0xBF6 SWAP3 SWAP2 POP PUSH2 0xBFA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xBF6 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC26 DUP3 PUSH2 0xC0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC35 DUP2 PUSH2 0xC1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xC26 DUP3 DUP5 PUSH2 0xC2C JUMP JUMPDEST DUP1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xC26 DUP3 DUP5 PUSH2 0xC49 JUMP JUMPDEST PUSH2 0xC66 DUP2 PUSH2 0xC1B JUMP JUMPDEST DUP2 EQ PUSH2 0xC71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xC26 DUP2 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC94 JUMPI PUSH2 0xC94 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCA0 DUP5 DUP5 PUSH2 0xC74 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0xCB6 DUP3 DUP8 PUSH2 0xC49 JUMP JUMPDEST PUSH2 0xCC3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xC49 JUMP JUMPDEST PUSH2 0xCD0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xC49 JUMP JUMPDEST PUSH2 0xCDD PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xC49 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC26 PUSH2 0xCFA PUSH2 0xCF7 DUP5 PUSH2 0xC0F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC26 DUP3 PUSH2 0xCE6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC26 DUP3 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0xC35 DUP2 PUSH2 0xD0A JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xC26 DUP3 DUP5 PUSH2 0xD15 JUMP JUMPDEST DUP1 PUSH2 0xC66 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xC26 DUP2 PUSH2 0xD2C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD52 JUMPI PUSH2 0xD52 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCA0 DUP5 DUP5 PUSH2 0xD32 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xC26 DUP3 DUP5 PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD8F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD77 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA2 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH2 0xDB9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xDDB DUP2 DUP5 PUSH2 0xD98 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0xC66 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xC26 DUP2 PUSH2 0xDE2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE0B JUMPI PUSH2 0xE0B PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE17 DUP6 DUP6 PUSH2 0xC74 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE28 DUP6 DUP3 DUP7 ADD PUSH2 0xDEA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0xC26 DUP2 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE52 JUMPI PUSH2 0xE52 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCA0 DUP5 DUP5 PUSH2 0xE32 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 SUB PUSH2 0xE87 JUMPI PUSH2 0xE87 PUSH2 0xE5E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0xC71 JUMPI PUSH2 0xC71 PUSH2 0xEA4 JUMP JUMPDEST DUP1 PUSH2 0xED4 DUP2 PUSH2 0xEBA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC26 DUP3 PUSH2 0xECA JUMP JUMPDEST PUSH2 0xC35 DUP2 PUSH2 0xED9 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xC26 DUP3 DUP5 PUSH2 0xEE4 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xC26 JUMPI PUSH2 0xC26 PUSH2 0xE5E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC26 PUSH2 0xCF7 DUP4 DUP2 JUMP JUMPDEST PUSH2 0xC35 DUP2 PUSH2 0xF0E JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD PUSH2 0xF31 DUP3 DUP10 PUSH2 0xF1A JUMP JUMPDEST PUSH2 0xF3E PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0xC49 JUMP JUMPDEST PUSH2 0xF4B PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0xF1A JUMP JUMPDEST PUSH2 0xF58 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0xF1A JUMP JUMPDEST PUSH2 0xF65 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0xF1A JUMP JUMPDEST PUSH2 0xF72 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0xF1A JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID 0xBC CREATE2 0x5F SGT PUSH18 0xEED7EDA89416C2984DA5475FCFF67E96FE8 0x5E JUMP 0xEE 0xD8 ADDMOD SSTORE SWAP11 MSTORE 0x22 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA7 0xB6 SWAP8 0x2B 0xCD DUP6 0xB0 0xB3 0xD2 0xBC DUP8 SWAP8 0x22 0x1F SIGNEXTEND 0xB4 0xAC 0xB9 0x4E 0xB4 SELFBALANCE 0xDC LOG1 0xDD 0xC9 0x5C 0xD8 PUSH30 0xA438F464736F6C6343000810003300000000000000000000000000000000 ","sourceMap":"251:2967:22:-:0;;;669:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;720:14:22;;;251:2967;;466:96:25;503:7;-1:-1:-1;;;;;400:54:25;;532:24;521:35;466:96;-1:-1:-1;;466:96:25:o;568:110::-;619:7;648:24;666:5;648:24;:::i;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;936:13;;958:47;936:13;958:47;:::i;1017:379::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;197:1;194;187:12;1156:79;1276:1;1301:78;1371:7;1351:9;1301:78;:::i;:::-;1291:88;1017:379;-1:-1:-1;;;;1017:379:25:o;:::-;251:2967:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ACCOUNTANT_MANAGER_7652":{"entryPoint":null,"id":7652,"parameterSlots":0,"returnSlots":0},"@ADD_STRATEGY_MANAGER_7697":{"entryPoint":null,"id":7697,"parameterSlots":0,"returnSlots":0},"@API_VERSION_7571":{"entryPoint":null,"id":7571,"parameterSlots":0,"returnSlots":0},"@ASSET_7334":{"entryPoint":null,"id":7334,"parameterSlots":0,"returnSlots":0},"@DEBT_MANAGER_7717":{"entryPoint":null,"id":7717,"parameterSlots":0,"returnSlots":0},"@DEBT_PURCHASER_7692":{"entryPoint":null,"id":7692,"parameterSlots":0,"returnSlots":0},"@DEPOSIT_LIMIT_MANAGER_7662":{"entryPoint":null,"id":7662,"parameterSlots":0,"returnSlots":0},"@DOMAIN_SEPARATOR_7642":{"entryPoint":null,"id":7642,"parameterSlots":0,"returnSlots":0},"@DOMAIN_TYPE_HASH_7640":{"entryPoint":null,"id":7640,"parameterSlots":0,"returnSlots":0},"@EMERGENCY_MANAGER_7722":{"entryPoint":null,"id":7722,"parameterSlots":0,"returnSlots":0},"@FORCE_REVOKE_MANAGER_7707":{"entryPoint":null,"id":7707,"parameterSlots":0,"returnSlots":0},"@MAX_BPS_7565":{"entryPoint":null,"id":7565,"parameterSlots":0,"returnSlots":0},"@MAX_BPS_EXTENDED_7568":{"entryPoint":null,"id":7568,"parameterSlots":0,"returnSlots":0},"@MAX_DEBT_MANAGER_7712":{"entryPoint":null,"id":7712,"parameterSlots":0,"returnSlots":0},"@MAX_QUEUE_7562":{"entryPoint":null,"id":7562,"parameterSlots":0,"returnSlots":0},"@MINIMUM_IDLE_MANAGER_7672":{"entryPoint":null,"id":7672,"parameterSlots":0,"returnSlots":0},"@PERMIT_TYPE_HASH_7647":{"entryPoint":null,"id":7647,"parameterSlots":0,"returnSlots":0},"@PROFIT_UNLOCK_MANAGER_7677":{"entryPoint":null,"id":7677,"parameterSlots":0,"returnSlots":0},"@QUEUE_MANAGER_7657":{"entryPoint":null,"id":7657,"parameterSlots":0,"returnSlots":0},"@REPORTING_MANAGER_7687":{"entryPoint":null,"id":7687,"parameterSlots":0,"returnSlots":0},"@REVOKE_STRATEGY_MANAGER_7702":{"entryPoint":null,"id":7702,"parameterSlots":0,"returnSlots":0},"@ROLE_MANAGER_7682":{"entryPoint":null,"id":7682,"parameterSlots":0,"returnSlots":0},"@WITHDRAW_LIMIT_MANAGER_7667":{"entryPoint":null,"id":7667,"parameterSlots":0,"returnSlots":0},"@accountant_7605":{"entryPoint":null,"id":7605,"parameterSlots":0,"returnSlots":0},"@addStrategy_7432":{"entryPoint":1829,"id":7432,"parameterSlots":1,"returnSlots":0},"@defaultQueue_7581":{"entryPoint":2923,"id":7581,"parameterSlots":0,"returnSlots":0},"@depositLimitModule_7607":{"entryPoint":null,"id":7607,"parameterSlots":0,"returnSlots":0},"@depositLimit_7603":{"entryPoint":null,"id":7603,"parameterSlots":0,"returnSlots":0},"@fullProfitUnlockDate_7627":{"entryPoint":null,"id":7627,"parameterSlots":0,"returnSlots":0},"@futureRoleManager_7621":{"entryPoint":null,"id":7621,"parameterSlots":0,"returnSlots":0},"@lastProfitUpdate_7631":{"entryPoint":null,"id":7631,"parameterSlots":0,"returnSlots":0},"@minimumTotalIdle_7601":{"entryPoint":null,"id":7601,"parameterSlots":0,"returnSlots":0},"@nonces_7635":{"entryPoint":null,"id":7635,"parameterSlots":0,"returnSlots":0},"@openRoles_7617":{"entryPoint":null,"id":7617,"parameterSlots":0,"returnSlots":0},"@profitMaxUnlockTime_7625":{"entryPoint":null,"id":7625,"parameterSlots":0,"returnSlots":0},"@profitUnlockingRate_7629":{"entryPoint":null,"id":7629,"parameterSlots":0,"returnSlots":0},"@revokeStrategy_7554":{"entryPoint":2350,"id":7554,"parameterSlots":2,"returnSlots":0},"@roleManager_7619":{"entryPoint":null,"id":7619,"parameterSlots":0,"returnSlots":0},"@roles_7613":{"entryPoint":null,"id":7613,"parameterSlots":0,"returnSlots":0},"@shutdown_7623":{"entryPoint":null,"id":7623,"parameterSlots":0,"returnSlots":0},"@strategies_7578":{"entryPoint":null,"id":7578,"parameterSlots":0,"returnSlots":0},"@totalDebtAmount_7597":{"entryPoint":null,"id":7597,"parameterSlots":0,"returnSlots":0},"@totalIdleAmount_7599":{"entryPoint":null,"id":7599,"parameterSlots":0,"returnSlots":0},"@totalSupplyAmount_7595":{"entryPoint":null,"id":7595,"parameterSlots":0,"returnSlots":0},"@useDefaultQueue_7583":{"entryPoint":null,"id":7583,"parameterSlots":0,"returnSlots":0},"@withdrawLimitModule_7609":{"entryPoint":null,"id":7609,"parameterSlots":0,"returnSlots":0},"abi_decode_t_address":{"entryPoint":3188,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":3634,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":3562,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":3378,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3199,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":3645,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bool":{"entryPoint":3573,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":3389,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3116,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3422,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":3145,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IERC20_$531_to_t_address_fromStack":{"entryPoint":3349,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_StrategyChangeType_$7766_to_t_uint8_fromStack":{"entryPoint":3812,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack":{"entryPoint":3866,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3480,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3131,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3430,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":3151,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$531__to_t_address__fromStack_reversed":{"entryPoint":3358,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_StrategyChangeType_$7766__to_t_uint8__fromStack_reversed":{"entryPoint":3821,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_0_by_1_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_rational_0_by_1_t_rational_0_by_1__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3875,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3530,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3240,"id":null,"parameterSlots":5,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3835,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3099,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_StrategyChangeType_$7766":{"entryPoint":3786,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_0_by_1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3087,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC20_$531_to_t_address":{"entryPoint":3338,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_StrategyChangeType_$7766_to_t_uint8":{"entryPoint":3801,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_0_by_1_to_t_uint256":{"entryPoint":3854,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":3327,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":3302,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3444,"id":null,"parameterSlots":3,"returnSlots":0},"identity":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":3700,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3678,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":3748,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3726,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"validator_assert_t_enum$_StrategyChangeType_$7766":{"entryPoint":3770,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3165,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":3554,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":3372,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11268:25","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:25","statements":[{"nodeType":"YulAssignment","src":"62:65:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:25"},"nodeType":"YulFunctionCall","src":"73:54:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:25"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:25","type":""}],"src":"7:126:25"},{"body":{"nodeType":"YulBlock","src":"184:51:25","statements":[{"nodeType":"YulAssignment","src":"194:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:25"},"nodeType":"YulFunctionCall","src":"205:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:25"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:25","type":""}],"src":"139:96:25"},{"body":{"nodeType":"YulBlock","src":"306:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:25"},"nodeType":"YulFunctionCall","src":"328:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:25"},"nodeType":"YulFunctionCall","src":"316:37:25"},"nodeType":"YulExpressionStatement","src":"316:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:25","type":""}],"src":"241:118:25"},{"body":{"nodeType":"YulBlock","src":"463:124:25","statements":[{"nodeType":"YulAssignment","src":"473:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:25"},"nodeType":"YulFunctionCall","src":"481:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:25"},"nodeType":"YulFunctionCall","src":"562:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:25"},"nodeType":"YulFunctionCall","src":"509:71:25"},"nodeType":"YulExpressionStatement","src":"509:71:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:25","type":""}],"src":"365:222:25"},{"body":{"nodeType":"YulBlock","src":"638:32:25","statements":[{"nodeType":"YulAssignment","src":"648:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"659:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"648:7:25"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"620:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"630:7:25","type":""}],"src":"593:77:25"},{"body":{"nodeType":"YulBlock","src":"741:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"758:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"781:5:25"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"763:17:25"},"nodeType":"YulFunctionCall","src":"763:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"751:6:25"},"nodeType":"YulFunctionCall","src":"751:37:25"},"nodeType":"YulExpressionStatement","src":"751:37:25"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"729:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"736:3:25","type":""}],"src":"676:118:25"},{"body":{"nodeType":"YulBlock","src":"898:124:25","statements":[{"nodeType":"YulAssignment","src":"908:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"920:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"931:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"916:3:25"},"nodeType":"YulFunctionCall","src":"916:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"908:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"988:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1001:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1012:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"997:3:25"},"nodeType":"YulFunctionCall","src":"997:17:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"944:43:25"},"nodeType":"YulFunctionCall","src":"944:71:25"},"nodeType":"YulExpressionStatement","src":"944:71:25"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"870:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"882:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"893:4:25","type":""}],"src":"800:222:25"},{"body":{"nodeType":"YulBlock","src":"1073:32:25","statements":[{"nodeType":"YulAssignment","src":"1083:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"1094:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1083:7:25"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1055:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1065:7:25","type":""}],"src":"1028:77:25"},{"body":{"nodeType":"YulBlock","src":"1176:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1193:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1216:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1198:17:25"},"nodeType":"YulFunctionCall","src":"1198:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1186:6:25"},"nodeType":"YulFunctionCall","src":"1186:37:25"},"nodeType":"YulExpressionStatement","src":"1186:37:25"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1164:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1171:3:25","type":""}],"src":"1111:118:25"},{"body":{"nodeType":"YulBlock","src":"1333:124:25","statements":[{"nodeType":"YulAssignment","src":"1343:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1355:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1366:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1351:3:25"},"nodeType":"YulFunctionCall","src":"1351:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1343:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1423:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1436:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1447:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1432:3:25"},"nodeType":"YulFunctionCall","src":"1432:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1379:43:25"},"nodeType":"YulFunctionCall","src":"1379:71:25"},"nodeType":"YulExpressionStatement","src":"1379:71:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1305:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1317:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1328:4:25","type":""}],"src":"1235:222:25"},{"body":{"nodeType":"YulBlock","src":"1503:35:25","statements":[{"nodeType":"YulAssignment","src":"1513:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1529:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1523:5:25"},"nodeType":"YulFunctionCall","src":"1523:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1513:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1496:6:25","type":""}],"src":"1463:75:25"},{"body":{"nodeType":"YulBlock","src":"1633:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1650:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1653:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1643:6:25"},"nodeType":"YulFunctionCall","src":"1643:12:25"},"nodeType":"YulExpressionStatement","src":"1643:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1544:117:25"},{"body":{"nodeType":"YulBlock","src":"1756:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1773:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1776:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1766:6:25"},"nodeType":"YulFunctionCall","src":"1766:12:25"},"nodeType":"YulExpressionStatement","src":"1766:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1667:117:25"},{"body":{"nodeType":"YulBlock","src":"1833:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"1890:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1899:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1902:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1892:6:25"},"nodeType":"YulFunctionCall","src":"1892:12:25"},"nodeType":"YulExpressionStatement","src":"1892:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1856:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1881:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1863:17:25"},"nodeType":"YulFunctionCall","src":"1863:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1853:2:25"},"nodeType":"YulFunctionCall","src":"1853:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1846:6:25"},"nodeType":"YulFunctionCall","src":"1846:43:25"},"nodeType":"YulIf","src":"1843:63:25"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1826:5:25","type":""}],"src":"1790:122:25"},{"body":{"nodeType":"YulBlock","src":"1970:87:25","statements":[{"nodeType":"YulAssignment","src":"1980:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2002:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1989:12:25"},"nodeType":"YulFunctionCall","src":"1989:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1980:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2045:5:25"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2018:26:25"},"nodeType":"YulFunctionCall","src":"2018:33:25"},"nodeType":"YulExpressionStatement","src":"2018:33:25"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1948:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"1956:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1964:5:25","type":""}],"src":"1918:139:25"},{"body":{"nodeType":"YulBlock","src":"2129:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"2175:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2177:77:25"},"nodeType":"YulFunctionCall","src":"2177:79:25"},"nodeType":"YulExpressionStatement","src":"2177:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2150:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2159:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2146:3:25"},"nodeType":"YulFunctionCall","src":"2146:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"2171:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2142:3:25"},"nodeType":"YulFunctionCall","src":"2142:32:25"},"nodeType":"YulIf","src":"2139:119:25"},{"nodeType":"YulBlock","src":"2268:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2283:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"2297:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2287:6:25","type":""}]},{"nodeType":"YulAssignment","src":"2312:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2347:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"2358:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2343:3:25"},"nodeType":"YulFunctionCall","src":"2343:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2367:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2322:20:25"},"nodeType":"YulFunctionCall","src":"2322:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2312:6:25"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2099:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2110:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2122:6:25","type":""}],"src":"2063:329:25"},{"body":{"nodeType":"YulBlock","src":"2580:371:25","statements":[{"nodeType":"YulAssignment","src":"2590:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2602:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2613:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2598:3:25"},"nodeType":"YulFunctionCall","src":"2598:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2590:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2671:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2684:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2695:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2680:3:25"},"nodeType":"YulFunctionCall","src":"2680:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2627:43:25"},"nodeType":"YulFunctionCall","src":"2627:71:25"},"nodeType":"YulExpressionStatement","src":"2627:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2752:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2765:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2776:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2761:3:25"},"nodeType":"YulFunctionCall","src":"2761:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2708:43:25"},"nodeType":"YulFunctionCall","src":"2708:72:25"},"nodeType":"YulExpressionStatement","src":"2708:72:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"2834:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2847:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2858:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2843:3:25"},"nodeType":"YulFunctionCall","src":"2843:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2790:43:25"},"nodeType":"YulFunctionCall","src":"2790:72:25"},"nodeType":"YulExpressionStatement","src":"2790:72:25"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"2916:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2929:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2940:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2925:3:25"},"nodeType":"YulFunctionCall","src":"2925:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2872:43:25"},"nodeType":"YulFunctionCall","src":"2872:72:25"},"nodeType":"YulExpressionStatement","src":"2872:72:25"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2528:9:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2540:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2548:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2556:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2564:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2575:4:25","type":""}],"src":"2398:553:25"},{"body":{"nodeType":"YulBlock","src":"2989:28:25","statements":[{"nodeType":"YulAssignment","src":"2999:12:25","value":{"name":"value","nodeType":"YulIdentifier","src":"3006:5:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2999:3:25"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2975:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2985:3:25","type":""}],"src":"2957:60:25"},{"body":{"nodeType":"YulBlock","src":"3083:82:25","statements":[{"nodeType":"YulAssignment","src":"3093:66:25","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3151:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3133:17:25"},"nodeType":"YulFunctionCall","src":"3133:24:25"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3124:8:25"},"nodeType":"YulFunctionCall","src":"3124:34:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3106:17:25"},"nodeType":"YulFunctionCall","src":"3106:53:25"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3093:9:25"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3063:5:25","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3073:9:25","type":""}],"src":"3023:142:25"},{"body":{"nodeType":"YulBlock","src":"3231:66:25","statements":[{"nodeType":"YulAssignment","src":"3241:50:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3285:5:25"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"3254:30:25"},"nodeType":"YulFunctionCall","src":"3254:37:25"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3241:9:25"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3211:5:25","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3221:9:25","type":""}],"src":"3171:126:25"},{"body":{"nodeType":"YulBlock","src":"3377:66:25","statements":[{"nodeType":"YulAssignment","src":"3387:50:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3431:5:25"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"3400:30:25"},"nodeType":"YulFunctionCall","src":"3400:37:25"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3387:9:25"}]}]},"name":"convert_t_contract$_IERC20_$531_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3357:5:25","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3367:9:25","type":""}],"src":"3303:140:25"},{"body":{"nodeType":"YulBlock","src":"3528:80:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3545:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3595:5:25"}],"functionName":{"name":"convert_t_contract$_IERC20_$531_to_t_address","nodeType":"YulIdentifier","src":"3550:44:25"},"nodeType":"YulFunctionCall","src":"3550:51:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3538:6:25"},"nodeType":"YulFunctionCall","src":"3538:64:25"},"nodeType":"YulExpressionStatement","src":"3538:64:25"}]},"name":"abi_encode_t_contract$_IERC20_$531_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3516:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3523:3:25","type":""}],"src":"3449:159:25"},{"body":{"nodeType":"YulBlock","src":"3726:138:25","statements":[{"nodeType":"YulAssignment","src":"3736:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3748:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3759:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3744:3:25"},"nodeType":"YulFunctionCall","src":"3744:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3736:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3830:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3843:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3854:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3839:3:25"},"nodeType":"YulFunctionCall","src":"3839:17:25"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$531_to_t_address_fromStack","nodeType":"YulIdentifier","src":"3772:57:25"},"nodeType":"YulFunctionCall","src":"3772:85:25"},"nodeType":"YulExpressionStatement","src":"3772:85:25"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$531__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3698:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3710:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3721:4:25","type":""}],"src":"3614:250:25"},{"body":{"nodeType":"YulBlock","src":"3913:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"3970:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3979:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3982:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3972:6:25"},"nodeType":"YulFunctionCall","src":"3972:12:25"},"nodeType":"YulExpressionStatement","src":"3972:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3936:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3961:5:25"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"3943:17:25"},"nodeType":"YulFunctionCall","src":"3943:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3933:2:25"},"nodeType":"YulFunctionCall","src":"3933:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3926:6:25"},"nodeType":"YulFunctionCall","src":"3926:43:25"},"nodeType":"YulIf","src":"3923:63:25"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3906:5:25","type":""}],"src":"3870:122:25"},{"body":{"nodeType":"YulBlock","src":"4050:87:25","statements":[{"nodeType":"YulAssignment","src":"4060:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4082:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4069:12:25"},"nodeType":"YulFunctionCall","src":"4069:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4060:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4125:5:25"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"4098:26:25"},"nodeType":"YulFunctionCall","src":"4098:33:25"},"nodeType":"YulExpressionStatement","src":"4098:33:25"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4028:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"4036:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4044:5:25","type":""}],"src":"3998:139:25"},{"body":{"nodeType":"YulBlock","src":"4209:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"4255:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4257:77:25"},"nodeType":"YulFunctionCall","src":"4257:79:25"},"nodeType":"YulExpressionStatement","src":"4257:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4230:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"4239:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4226:3:25"},"nodeType":"YulFunctionCall","src":"4226:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"4251:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4222:3:25"},"nodeType":"YulFunctionCall","src":"4222:32:25"},"nodeType":"YulIf","src":"4219:119:25"},{"nodeType":"YulBlock","src":"4348:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4363:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4377:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4367:6:25","type":""}]},{"nodeType":"YulAssignment","src":"4392:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4427:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"4438:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4423:3:25"},"nodeType":"YulFunctionCall","src":"4423:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4447:7:25"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"4402:20:25"},"nodeType":"YulFunctionCall","src":"4402:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4392:6:25"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4179:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4190:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4202:6:25","type":""}],"src":"4143:329:25"},{"body":{"nodeType":"YulBlock","src":"4520:48:25","statements":[{"nodeType":"YulAssignment","src":"4530:32:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4555:5:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4548:6:25"},"nodeType":"YulFunctionCall","src":"4548:13:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4541:6:25"},"nodeType":"YulFunctionCall","src":"4541:21:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4530:7:25"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4502:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4512:7:25","type":""}],"src":"4478:90:25"},{"body":{"nodeType":"YulBlock","src":"4633:50:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4650:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4670:5:25"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"4655:14:25"},"nodeType":"YulFunctionCall","src":"4655:21:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4643:6:25"},"nodeType":"YulFunctionCall","src":"4643:34:25"},"nodeType":"YulExpressionStatement","src":"4643:34:25"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4621:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4628:3:25","type":""}],"src":"4574:109:25"},{"body":{"nodeType":"YulBlock","src":"4781:118:25","statements":[{"nodeType":"YulAssignment","src":"4791:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4803:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4814:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4799:3:25"},"nodeType":"YulFunctionCall","src":"4799:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4791:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4865:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4878:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4889:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4874:3:25"},"nodeType":"YulFunctionCall","src":"4874:17:25"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"4827:37:25"},"nodeType":"YulFunctionCall","src":"4827:65:25"},"nodeType":"YulExpressionStatement","src":"4827:65:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4753:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4765:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4776:4:25","type":""}],"src":"4689:210:25"},{"body":{"nodeType":"YulBlock","src":"4964:40:25","statements":[{"nodeType":"YulAssignment","src":"4975:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4991:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4985:5:25"},"nodeType":"YulFunctionCall","src":"4985:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4975:6:25"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4947:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4957:6:25","type":""}],"src":"4905:99:25"},{"body":{"nodeType":"YulBlock","src":"5106:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5123:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"5128:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5116:6:25"},"nodeType":"YulFunctionCall","src":"5116:19:25"},"nodeType":"YulExpressionStatement","src":"5116:19:25"},{"nodeType":"YulAssignment","src":"5144:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5163:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"5168:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5159:3:25"},"nodeType":"YulFunctionCall","src":"5159:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5144:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5078:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"5083:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5094:11:25","type":""}],"src":"5010:169:25"},{"body":{"nodeType":"YulBlock","src":"5247:184:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5257:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5266:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5261:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"5326:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5351:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"5356:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5347:3:25"},"nodeType":"YulFunctionCall","src":"5347:11:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5370:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"5375:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5366:3:25"},"nodeType":"YulFunctionCall","src":"5366:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5360:5:25"},"nodeType":"YulFunctionCall","src":"5360:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5340:6:25"},"nodeType":"YulFunctionCall","src":"5340:39:25"},"nodeType":"YulExpressionStatement","src":"5340:39:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5287:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"5290:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5284:2:25"},"nodeType":"YulFunctionCall","src":"5284:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5298:19:25","statements":[{"nodeType":"YulAssignment","src":"5300:15:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5309:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"5312:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5305:3:25"},"nodeType":"YulFunctionCall","src":"5305:10:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5300:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"5280:3:25","statements":[]},"src":"5276:113:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5409:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"5414:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5405:3:25"},"nodeType":"YulFunctionCall","src":"5405:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"5423:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5398:6:25"},"nodeType":"YulFunctionCall","src":"5398:27:25"},"nodeType":"YulExpressionStatement","src":"5398:27:25"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5229:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"5234:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"5239:6:25","type":""}],"src":"5185:246:25"},{"body":{"nodeType":"YulBlock","src":"5485:54:25","statements":[{"nodeType":"YulAssignment","src":"5495:38:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5513:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"5520:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5509:3:25"},"nodeType":"YulFunctionCall","src":"5509:14:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5529:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5525:3:25"},"nodeType":"YulFunctionCall","src":"5525:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5505:3:25"},"nodeType":"YulFunctionCall","src":"5505:28:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5495:6:25"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5468:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5478:6:25","type":""}],"src":"5437:102:25"},{"body":{"nodeType":"YulBlock","src":"5637:285:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5647:53:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5694:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5661:32:25"},"nodeType":"YulFunctionCall","src":"5661:39:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5651:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5709:78:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5775:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"5780:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5716:58:25"},"nodeType":"YulFunctionCall","src":"5716:71:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5709:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5835:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"5842:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5831:3:25"},"nodeType":"YulFunctionCall","src":"5831:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"5849:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"5854:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5796:34:25"},"nodeType":"YulFunctionCall","src":"5796:65:25"},"nodeType":"YulExpressionStatement","src":"5796:65:25"},{"nodeType":"YulAssignment","src":"5870:46:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5881:3:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5908:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5886:21:25"},"nodeType":"YulFunctionCall","src":"5886:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5877:3:25"},"nodeType":"YulFunctionCall","src":"5877:39:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5870:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5618:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5625:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5633:3:25","type":""}],"src":"5545:377:25"},{"body":{"nodeType":"YulBlock","src":"6046:195:25","statements":[{"nodeType":"YulAssignment","src":"6056:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6068:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6079:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6064:3:25"},"nodeType":"YulFunctionCall","src":"6064:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6056:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6103:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6114:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6099:3:25"},"nodeType":"YulFunctionCall","src":"6099:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6122:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"6128:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6118:3:25"},"nodeType":"YulFunctionCall","src":"6118:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6092:6:25"},"nodeType":"YulFunctionCall","src":"6092:47:25"},"nodeType":"YulExpressionStatement","src":"6092:47:25"},{"nodeType":"YulAssignment","src":"6148:86:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6220:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"6229:4:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6156:63:25"},"nodeType":"YulFunctionCall","src":"6156:78:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6148:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6018:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6030:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6041:4:25","type":""}],"src":"5928:313:25"},{"body":{"nodeType":"YulBlock","src":"6287:76:25","statements":[{"body":{"nodeType":"YulBlock","src":"6341:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6350:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6353:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6343:6:25"},"nodeType":"YulFunctionCall","src":"6343:12:25"},"nodeType":"YulExpressionStatement","src":"6343:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6310:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6332:5:25"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6317:14:25"},"nodeType":"YulFunctionCall","src":"6317:21:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6307:2:25"},"nodeType":"YulFunctionCall","src":"6307:32:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6300:6:25"},"nodeType":"YulFunctionCall","src":"6300:40:25"},"nodeType":"YulIf","src":"6297:60:25"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6280:5:25","type":""}],"src":"6247:116:25"},{"body":{"nodeType":"YulBlock","src":"6418:84:25","statements":[{"nodeType":"YulAssignment","src":"6428:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6450:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6437:12:25"},"nodeType":"YulFunctionCall","src":"6437:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6428:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6490:5:25"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6466:23:25"},"nodeType":"YulFunctionCall","src":"6466:30:25"},"nodeType":"YulExpressionStatement","src":"6466:30:25"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6396:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"6404:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6412:5:25","type":""}],"src":"6369:133:25"},{"body":{"nodeType":"YulBlock","src":"6588:388:25","statements":[{"body":{"nodeType":"YulBlock","src":"6634:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6636:77:25"},"nodeType":"YulFunctionCall","src":"6636:79:25"},"nodeType":"YulExpressionStatement","src":"6636:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6609:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"6618:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6605:3:25"},"nodeType":"YulFunctionCall","src":"6605:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"6630:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6601:3:25"},"nodeType":"YulFunctionCall","src":"6601:32:25"},"nodeType":"YulIf","src":"6598:119:25"},{"nodeType":"YulBlock","src":"6727:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6742:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6756:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6746:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6771:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6806:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6817:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6802:3:25"},"nodeType":"YulFunctionCall","src":"6802:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6826:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6781:20:25"},"nodeType":"YulFunctionCall","src":"6781:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6771:6:25"}]}]},{"nodeType":"YulBlock","src":"6854:115:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6869:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6883:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6873:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6899:60:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6931:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6942:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6927:3:25"},"nodeType":"YulFunctionCall","src":"6927:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6951:7:25"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"6909:17:25"},"nodeType":"YulFunctionCall","src":"6909:50:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6899:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6550:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6561:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6573:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6581:6:25","type":""}],"src":"6508:468:25"},{"body":{"nodeType":"YulBlock","src":"7025:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"7082:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7091:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7094:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7084:6:25"},"nodeType":"YulFunctionCall","src":"7084:12:25"},"nodeType":"YulExpressionStatement","src":"7084:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7048:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7073:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7055:17:25"},"nodeType":"YulFunctionCall","src":"7055:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7045:2:25"},"nodeType":"YulFunctionCall","src":"7045:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7038:6:25"},"nodeType":"YulFunctionCall","src":"7038:43:25"},"nodeType":"YulIf","src":"7035:63:25"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7018:5:25","type":""}],"src":"6982:122:25"},{"body":{"nodeType":"YulBlock","src":"7162:87:25","statements":[{"nodeType":"YulAssignment","src":"7172:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7194:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7181:12:25"},"nodeType":"YulFunctionCall","src":"7181:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7172:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7237:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"7210:26:25"},"nodeType":"YulFunctionCall","src":"7210:33:25"},"nodeType":"YulExpressionStatement","src":"7210:33:25"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7140:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"7148:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7156:5:25","type":""}],"src":"7110:139:25"},{"body":{"nodeType":"YulBlock","src":"7321:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"7367:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7369:77:25"},"nodeType":"YulFunctionCall","src":"7369:79:25"},"nodeType":"YulExpressionStatement","src":"7369:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7342:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"7351:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7338:3:25"},"nodeType":"YulFunctionCall","src":"7338:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"7363:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7334:3:25"},"nodeType":"YulFunctionCall","src":"7334:32:25"},"nodeType":"YulIf","src":"7331:119:25"},{"nodeType":"YulBlock","src":"7460:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7475:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"7489:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7479:6:25","type":""}]},{"nodeType":"YulAssignment","src":"7504:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7539:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"7550:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7535:3:25"},"nodeType":"YulFunctionCall","src":"7535:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7559:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7514:20:25"},"nodeType":"YulFunctionCall","src":"7514:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7504:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7291:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7302:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7314:6:25","type":""}],"src":"7255:329:25"},{"body":{"nodeType":"YulBlock","src":"7653:80:25","statements":[{"nodeType":"YulAssignment","src":"7663:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7678:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7672:5:25"},"nodeType":"YulFunctionCall","src":"7672:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7663:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7721:5:25"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"7694:26:25"},"nodeType":"YulFunctionCall","src":"7694:33:25"},"nodeType":"YulExpressionStatement","src":"7694:33:25"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7631:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"7639:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7647:5:25","type":""}],"src":"7590:143:25"},{"body":{"nodeType":"YulBlock","src":"7816:274:25","statements":[{"body":{"nodeType":"YulBlock","src":"7862:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7864:77:25"},"nodeType":"YulFunctionCall","src":"7864:79:25"},"nodeType":"YulExpressionStatement","src":"7864:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7837:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"7846:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7833:3:25"},"nodeType":"YulFunctionCall","src":"7833:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"7858:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7829:3:25"},"nodeType":"YulFunctionCall","src":"7829:32:25"},"nodeType":"YulIf","src":"7826:119:25"},{"nodeType":"YulBlock","src":"7955:128:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7970:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"7984:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7974:6:25","type":""}]},{"nodeType":"YulAssignment","src":"7999:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8045:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"8056:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8041:3:25"},"nodeType":"YulFunctionCall","src":"8041:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8065:7:25"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"8009:31:25"},"nodeType":"YulFunctionCall","src":"8009:64:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7999:6:25"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7786:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7797:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7809:6:25","type":""}],"src":"7739:351:25"},{"body":{"nodeType":"YulBlock","src":"8124:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8141:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8144:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8134:6:25"},"nodeType":"YulFunctionCall","src":"8134:88:25"},"nodeType":"YulExpressionStatement","src":"8134:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8238:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8241:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8231:6:25"},"nodeType":"YulFunctionCall","src":"8231:15:25"},"nodeType":"YulExpressionStatement","src":"8231:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8262:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8265:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8255:6:25"},"nodeType":"YulFunctionCall","src":"8255:15:25"},"nodeType":"YulExpressionStatement","src":"8255:15:25"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8096:180:25"},{"body":{"nodeType":"YulBlock","src":"8325:190:25","statements":[{"nodeType":"YulAssignment","src":"8335:33:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8362:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8344:17:25"},"nodeType":"YulFunctionCall","src":"8344:24:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8335:5:25"}]},{"body":{"nodeType":"YulBlock","src":"8458:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8460:16:25"},"nodeType":"YulFunctionCall","src":"8460:18:25"},"nodeType":"YulExpressionStatement","src":"8460:18:25"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8383:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"8390:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8380:2:25"},"nodeType":"YulFunctionCall","src":"8380:77:25"},"nodeType":"YulIf","src":"8377:103:25"},{"nodeType":"YulAssignment","src":"8489:20:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8500:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"8507:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8496:3:25"},"nodeType":"YulFunctionCall","src":"8496:13:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8489:3:25"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8311:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"8321:3:25","type":""}],"src":"8282:233:25"},{"body":{"nodeType":"YulBlock","src":"8549:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8566:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8569:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8559:6:25"},"nodeType":"YulFunctionCall","src":"8559:88:25"},"nodeType":"YulExpressionStatement","src":"8559:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8663:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8666:4:25","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8656:6:25"},"nodeType":"YulFunctionCall","src":"8656:15:25"},"nodeType":"YulExpressionStatement","src":"8656:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8687:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8690:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8680:6:25"},"nodeType":"YulFunctionCall","src":"8680:15:25"},"nodeType":"YulExpressionStatement","src":"8680:15:25"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"8521:180:25"},{"body":{"nodeType":"YulBlock","src":"8735:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8752:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8755:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8745:6:25"},"nodeType":"YulFunctionCall","src":"8745:88:25"},"nodeType":"YulExpressionStatement","src":"8745:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8849:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8852:4:25","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8842:6:25"},"nodeType":"YulFunctionCall","src":"8842:15:25"},"nodeType":"YulExpressionStatement","src":"8842:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8873:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8876:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8866:6:25"},"nodeType":"YulFunctionCall","src":"8866:15:25"},"nodeType":"YulExpressionStatement","src":"8866:15:25"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"8707:180:25"},{"body":{"nodeType":"YulBlock","src":"8959:62:25","statements":[{"body":{"nodeType":"YulBlock","src":"8993:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"8995:16:25"},"nodeType":"YulFunctionCall","src":"8995:18:25"},"nodeType":"YulExpressionStatement","src":"8995:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8982:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"8989:1:25","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8979:2:25"},"nodeType":"YulFunctionCall","src":"8979:12:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8972:6:25"},"nodeType":"YulFunctionCall","src":"8972:20:25"},"nodeType":"YulIf","src":"8969:46:25"}]},"name":"validator_assert_t_enum$_StrategyChangeType_$7766","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8952:5:25","type":""}],"src":"8893:128:25"},{"body":{"nodeType":"YulBlock","src":"9095:89:25","statements":[{"nodeType":"YulAssignment","src":"9105:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"9116:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9105:7:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9172:5:25"}],"functionName":{"name":"validator_assert_t_enum$_StrategyChangeType_$7766","nodeType":"YulIdentifier","src":"9122:49:25"},"nodeType":"YulFunctionCall","src":"9122:56:25"},"nodeType":"YulExpressionStatement","src":"9122:56:25"}]},"name":"cleanup_t_enum$_StrategyChangeType_$7766","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9077:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9087:7:25","type":""}],"src":"9027:157:25"},{"body":{"nodeType":"YulBlock","src":"9271:76:25","statements":[{"nodeType":"YulAssignment","src":"9281:60:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9335:5:25"}],"functionName":{"name":"cleanup_t_enum$_StrategyChangeType_$7766","nodeType":"YulIdentifier","src":"9294:40:25"},"nodeType":"YulFunctionCall","src":"9294:47:25"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9281:9:25"}]}]},"name":"convert_t_enum$_StrategyChangeType_$7766_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9251:5:25","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9261:9:25","type":""}],"src":"9190:157:25"},{"body":{"nodeType":"YulBlock","src":"9439:87:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9456:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9513:5:25"}],"functionName":{"name":"convert_t_enum$_StrategyChangeType_$7766_to_t_uint8","nodeType":"YulIdentifier","src":"9461:51:25"},"nodeType":"YulFunctionCall","src":"9461:58:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9449:6:25"},"nodeType":"YulFunctionCall","src":"9449:71:25"},"nodeType":"YulExpressionStatement","src":"9449:71:25"}]},"name":"abi_encode_t_enum$_StrategyChangeType_$7766_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9427:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9434:3:25","type":""}],"src":"9353:173:25"},{"body":{"nodeType":"YulBlock","src":"9651:145:25","statements":[{"nodeType":"YulAssignment","src":"9661:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9673:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9684:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9669:3:25"},"nodeType":"YulFunctionCall","src":"9669:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9661:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9762:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9775:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9786:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9771:3:25"},"nodeType":"YulFunctionCall","src":"9771:17:25"}],"functionName":{"name":"abi_encode_t_enum$_StrategyChangeType_$7766_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"9697:64:25"},"nodeType":"YulFunctionCall","src":"9697:92:25"},"nodeType":"YulExpressionStatement","src":"9697:92:25"}]},"name":"abi_encode_tuple_t_enum$_StrategyChangeType_$7766__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9623:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9635:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9646:4:25","type":""}],"src":"9532:264:25"},{"body":{"nodeType":"YulBlock","src":"9847:149:25","statements":[{"nodeType":"YulAssignment","src":"9857:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9880:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9862:17:25"},"nodeType":"YulFunctionCall","src":"9862:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"9857:1:25"}]},{"nodeType":"YulAssignment","src":"9891:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9914:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9896:17:25"},"nodeType":"YulFunctionCall","src":"9896:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"9891:1:25"}]},{"nodeType":"YulAssignment","src":"9925:17:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9937:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"9940:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9933:3:25"},"nodeType":"YulFunctionCall","src":"9933:9:25"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"9925:4:25"}]},{"body":{"nodeType":"YulBlock","src":"9967:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9969:16:25"},"nodeType":"YulFunctionCall","src":"9969:18:25"},"nodeType":"YulExpressionStatement","src":"9969:18:25"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"9958:4:25"},{"name":"x","nodeType":"YulIdentifier","src":"9964:1:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9955:2:25"},"nodeType":"YulFunctionCall","src":"9955:11:25"},"nodeType":"YulIf","src":"9952:37:25"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9833:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"9836:1:25","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"9842:4:25","type":""}],"src":"9802:194:25"},{"body":{"nodeType":"YulBlock","src":"10055:32:25","statements":[{"nodeType":"YulAssignment","src":"10065:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"10076:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10065:7:25"}]}]},"name":"cleanup_t_rational_0_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10037:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10047:7:25","type":""}],"src":"10002:85:25"},{"body":{"nodeType":"YulBlock","src":"10161:90:25","statements":[{"nodeType":"YulAssignment","src":"10171:74:25","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10237:5:25"}],"functionName":{"name":"cleanup_t_rational_0_by_1","nodeType":"YulIdentifier","src":"10211:25:25"},"nodeType":"YulFunctionCall","src":"10211:32:25"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"10202:8:25"},"nodeType":"YulFunctionCall","src":"10202:42:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10184:17:25"},"nodeType":"YulFunctionCall","src":"10184:61:25"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10171:9:25"}]}]},"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10141:5:25","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10151:9:25","type":""}],"src":"10093:158:25"},{"body":{"nodeType":"YulBlock","src":"10330:74:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10347:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10391:5:25"}],"functionName":{"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulIdentifier","src":"10352:38:25"},"nodeType":"YulFunctionCall","src":"10352:45:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10340:6:25"},"nodeType":"YulFunctionCall","src":"10340:58:25"},"nodeType":"YulExpressionStatement","src":"10340:58:25"}]},"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10318:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10325:3:25","type":""}],"src":"10257:147:25"},{"body":{"nodeType":"YulBlock","src":"10688:577:25","statements":[{"nodeType":"YulAssignment","src":"10698:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10710:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10721:3:25","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10706:3:25"},"nodeType":"YulFunctionCall","src":"10706:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10698:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10787:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10800:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10811:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10796:3:25"},"nodeType":"YulFunctionCall","src":"10796:17:25"}],"functionName":{"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10735:51:25"},"nodeType":"YulFunctionCall","src":"10735:79:25"},"nodeType":"YulExpressionStatement","src":"10735:79:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10868:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10881:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10892:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10877:3:25"},"nodeType":"YulFunctionCall","src":"10877:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10824:43:25"},"nodeType":"YulFunctionCall","src":"10824:72:25"},"nodeType":"YulExpressionStatement","src":"10824:72:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10958:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10971:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10982:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10967:3:25"},"nodeType":"YulFunctionCall","src":"10967:18:25"}],"functionName":{"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10906:51:25"},"nodeType":"YulFunctionCall","src":"10906:80:25"},"nodeType":"YulExpressionStatement","src":"10906:80:25"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11048:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11061:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11072:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11057:3:25"},"nodeType":"YulFunctionCall","src":"11057:18:25"}],"functionName":{"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10996:51:25"},"nodeType":"YulFunctionCall","src":"10996:80:25"},"nodeType":"YulExpressionStatement","src":"10996:80:25"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"11138:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11151:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11162:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11147:3:25"},"nodeType":"YulFunctionCall","src":"11147:19:25"}],"functionName":{"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11086:51:25"},"nodeType":"YulFunctionCall","src":"11086:81:25"},"nodeType":"YulExpressionStatement","src":"11086:81:25"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"11229:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11242:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11253:3:25","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11238:3:25"},"nodeType":"YulFunctionCall","src":"11238:19:25"}],"functionName":{"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11177:51:25"},"nodeType":"YulFunctionCall","src":"11177:81:25"},"nodeType":"YulExpressionStatement","src":"11177:81:25"}]},"name":"abi_encode_tuple_t_rational_0_by_1_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_rational_0_by_1_t_rational_0_by_1__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10620:9:25","type":""},{"name":"value5","nodeType":"YulTypedName","src":"10632:6:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10640:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10648:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10656:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10664:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10672:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10683:4:25","type":""}],"src":"10410:855:25"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$531_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$531_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$531_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$531__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$531_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_StrategyChangeType_$7766(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_StrategyChangeType_$7766(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_StrategyChangeType_$7766(value)\n    }\n\n    function convert_t_enum$_StrategyChangeType_$7766_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_StrategyChangeType_$7766(value)\n    }\n\n    function abi_encode_t_enum$_StrategyChangeType_$7766_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_StrategyChangeType_$7766_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_StrategyChangeType_$7766__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_StrategyChangeType_$7766_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_rational_0_by_1_t_rational_0_by_1__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"7334":[{"length":32,"start":835},{"length":32,"start":1891}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x219 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x435DA5 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x3DCD12C EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x835A3FC EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x952864E EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xAD283D0 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x223E5479 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x2D632692 EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x36FBA084 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x39EBF823 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x3CD7B5AB EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x3F7B5E40 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x4800D97F EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x4CE1D38A EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x4CFE51DC EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x4D4BB197 EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0x4FB3CCC5 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0x5141EEBB EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x53A66132 EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0x5BF6B4FB EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0x652DA324 EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0x77E3B267 EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0x8AFCA8F0 EQ PUSH2 0x4D2 JUMPI DUP1 PUSH4 0x91986003 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0x99374642 EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0x9E34E348 EQ PUSH2 0x50E JUMPI DUP1 PUSH4 0x9F3988F3 EQ PUSH2 0x521 JUMPI DUP1 PUSH4 0xA98222C4 EQ PUSH2 0x548 JUMPI DUP1 PUSH4 0xAB5B4D49 EQ PUSH2 0x56F JUMPI DUP1 PUSH4 0xB3C187F2 EQ PUSH2 0x596 JUMPI DUP1 PUSH4 0xBBE4EB49 EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0xC065CA07 EQ PUSH2 0x5B6 JUMPI DUP1 PUSH4 0xC0993EEA EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0xC8D74B60 EQ PUSH2 0x604 JUMPI DUP1 PUSH4 0xC8DFFA95 EQ PUSH2 0x62B JUMPI DUP1 PUSH4 0xD4AE064F EQ PUSH2 0x634 JUMPI DUP1 PUSH4 0xECF70858 EQ PUSH2 0x65B JUMPI DUP1 PUSH4 0xF1DAEBA8 EQ PUSH2 0x664 JUMPI DUP1 PUSH4 0xF42C77AE EQ PUSH2 0x68B JUMPI DUP1 PUSH4 0xF5B944EB EQ PUSH2 0x69E JUMPI DUP1 PUSH4 0xF828F50B EQ PUSH2 0x6C5 JUMPI DUP1 PUSH4 0xFC0E74D1 EQ PUSH2 0x6CE JUMPI DUP1 PUSH4 0xFD967F47 EQ PUSH2 0x6E2 JUMPI DUP1 PUSH4 0xFEC61F06 EQ PUSH2 0x6EB JUMPI DUP1 PUSH4 0xFF1E7F08 EQ PUSH2 0x712 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x231 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH32 0x633076A97F32AE349B28772E7B1483F67A926F150CBC501D02BDBD77389325AB DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0xC4F JUMP JUMPDEST PUSH2 0x26E PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH32 0xC723F4DD6268E1C374639E36D629C765285EE7003913389D582C300F186DDE97 DUP2 JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x725 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26E PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH5 0xE8D4A51000 DUP2 JUMP JUMPDEST PUSH2 0x31D PUSH2 0x2F5 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0x26E PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH1 0xA DUP2 JUMP JUMPDEST PUSH2 0x365 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x26E PUSH32 0x69D1171AC0A63777A6733CDA21AEC9ED3D48A4FD11F273C934A691DEC5E5589C DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH32 0x862F91C9D89D6135B19873B921C90B702CB2E175C371B8430026B9577E691119 DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x231 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x426 PUSH2 0x411 CALLDATASIZE PUSH1 0x4 PUSH2 0xD3D JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0xD66 JUMP JUMPDEST PUSH2 0x26E PUSH32 0xEA672C1C09CD95C51AF9509F646F3615FF0071AAE8652BD821471EE9037FD72C DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH32 0xCD9F023A942EE35097EAD74B2505BEA9F2C5D47465DB92DD195CF7F01A41CFE1 DUP2 JUMP JUMPDEST PUSH2 0x4A5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x312E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST PUSH2 0x26E PUSH2 0x4C0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x231 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x4FC CALLDATASIZE PUSH1 0x4 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x231 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH32 0x6F430D649A8640E48FF9BFBC353B3F99ED630163857821B3B4075E3871DAFBF5 DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH32 0x2F0DBBE8C2C0170206C50EC0CAFA1C0DBD03E73E67C2A960178DF30A0A30EE2E DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH32 0x900D80DEF0427DAAC599092FCB16B21808EC68DD9A2E1EAE89D1E8DB21357375 DUP2 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x231 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x426 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH32 0x2A0E761830CC61F2707EA7BB138008BF9DDA7F7D34C77736D0A116604E95EA16 DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH32 0x152EBBA56B9738EE3D8BAEA1B76FA31DCDCD79B1929BFEA7D58EE12CFDF1A653 DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH32 0xA18EAEA71A088B547B8C932B48861853B3434D9A3240B94466C607E28B696595 DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH32 0x7CBB3CDF689B8EA3E9D265F66BC4E0A99069268217017D38D2A5A559ABC62719 DUP2 JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x699 CALLDATASIZE PUSH1 0x4 PUSH2 0xDF5 JUMP JUMPDEST PUSH2 0x92E JUMP JUMPDEST PUSH2 0x26E PUSH32 0xF206625BAD3D9112D5609B8D356E6FBD514CD1F69980D4CE2B3E6E68E1789ACE DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x426 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH32 0xD45F7CCFF42F059D4E47C3F027C444272257266F7E88B981E142F0AA38FBFD78 DUP2 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x720 CALLDATASIZE PUSH1 0x4 PUSH2 0xD3D JUMP JUMPDEST PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 PUSH2 0x743 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ADDRESS EQ JUMPDEST ISZERO PUSH2 0x761 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38D52E0F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7ED SWAP2 SWAP1 PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x814 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6448D6E9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x84B JUMPI PUSH1 0x40 MLOAD PUSH4 0xC976754D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE TIMESTAMP DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 DUP4 DUP6 ADD DUP2 DUP2 MSTORE PUSH1 0x60 DUP6 ADD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP4 MSTORE PUSH1 0x1 SWAP4 DUP5 SWAP1 MSTORE SWAP6 SWAP1 SWAP2 KECCAK256 SWAP4 MLOAD DUP5 SSTORE SWAP2 MLOAD SWAP1 DUP4 ADD SSTORE MLOAD PUSH1 0x2 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE SLOAD PUSH1 0xA DUP2 LT ISZERO PUSH2 0x8FA JUMPI DUP2 PUSH1 0x2 DUP3 PUSH2 0x8B9 DUP2 PUSH2 0xE74 JUMP JUMPDEST SWAP4 POP DUP2 SLOAD DUP2 LT PUSH2 0x8CB JUMPI PUSH2 0x8CB PUSH2 0xE8E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x922 SWAP2 SWAP1 PUSH2 0xEED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x966 JUMPI PUSH1 0x40 MLOAD PUSH4 0x631BC21 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x98E JUMPI POP DUP2 ISZERO JUMPDEST ISZERO PUSH2 0x9AC JUMPI PUSH1 0x40 MLOAD PUSH4 0x3546382F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x7 DUP1 SLOAD SWAP2 SWAP3 DUP4 SWAP3 PUSH2 0x9DC SWAP1 DUP5 SWAP1 PUSH2 0xEFB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7F2AD1D3BA35276F35EF140F83E3E0F17B23064FD710113D3F7A5AB30D267811 PUSH1 0x0 DUP4 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH2 0xA29 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE DUP4 DUP6 ADD DUP4 DUP2 MSTORE PUSH1 0x60 DUP1 DUP7 ADD DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP7 MSTORE PUSH1 0x1 SWAP5 DUP6 SWAP1 MSTORE SWAP7 SWAP1 SWAP5 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP1 MLOAD SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH1 0x2 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP3 MLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 SLOAD ISZERO PUSH2 0xB21 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xB1F JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAB7 JUMPI PUSH2 0xAB7 PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 POP DUP7 AND DUP2 EQ PUSH2 0xB0C JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xAEB JUMPI PUSH2 0xAEB PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST POP DUP1 PUSH2 0xB17 DUP2 PUSH2 0xE74 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA98 JUMP JUMPDEST POP JUMPDEST DUP1 MLOAD PUSH2 0xB34 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0xB95 JUMP JUMPDEST POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF7E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xB5D SWAP2 SWAP1 PUSH2 0xEED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xBEA JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xBEA JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xBB5 JUMP JUMPDEST POP PUSH2 0xBF6 SWAP3 SWAP2 POP PUSH2 0xBFA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xBF6 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC26 DUP3 PUSH2 0xC0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC35 DUP2 PUSH2 0xC1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xC26 DUP3 DUP5 PUSH2 0xC2C JUMP JUMPDEST DUP1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xC26 DUP3 DUP5 PUSH2 0xC49 JUMP JUMPDEST PUSH2 0xC66 DUP2 PUSH2 0xC1B JUMP JUMPDEST DUP2 EQ PUSH2 0xC71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xC26 DUP2 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC94 JUMPI PUSH2 0xC94 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCA0 DUP5 DUP5 PUSH2 0xC74 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0xCB6 DUP3 DUP8 PUSH2 0xC49 JUMP JUMPDEST PUSH2 0xCC3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xC49 JUMP JUMPDEST PUSH2 0xCD0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xC49 JUMP JUMPDEST PUSH2 0xCDD PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xC49 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC26 PUSH2 0xCFA PUSH2 0xCF7 DUP5 PUSH2 0xC0F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC26 DUP3 PUSH2 0xCE6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC26 DUP3 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0xC35 DUP2 PUSH2 0xD0A JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xC26 DUP3 DUP5 PUSH2 0xD15 JUMP JUMPDEST DUP1 PUSH2 0xC66 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xC26 DUP2 PUSH2 0xD2C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD52 JUMPI PUSH2 0xD52 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCA0 DUP5 DUP5 PUSH2 0xD32 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xC26 DUP3 DUP5 PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD8F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD77 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA2 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH2 0xDB9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xDDB DUP2 DUP5 PUSH2 0xD98 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0xC66 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xC26 DUP2 PUSH2 0xDE2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE0B JUMPI PUSH2 0xE0B PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE17 DUP6 DUP6 PUSH2 0xC74 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE28 DUP6 DUP3 DUP7 ADD PUSH2 0xDEA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0xC26 DUP2 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE52 JUMPI PUSH2 0xE52 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCA0 DUP5 DUP5 PUSH2 0xE32 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 SUB PUSH2 0xE87 JUMPI PUSH2 0xE87 PUSH2 0xE5E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0xC71 JUMPI PUSH2 0xC71 PUSH2 0xEA4 JUMP JUMPDEST DUP1 PUSH2 0xED4 DUP2 PUSH2 0xEBA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC26 DUP3 PUSH2 0xECA JUMP JUMPDEST PUSH2 0xC35 DUP2 PUSH2 0xED9 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xC26 DUP3 DUP5 PUSH2 0xEE4 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xC26 JUMPI PUSH2 0xC26 PUSH2 0xE5E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC26 PUSH2 0xCF7 DUP4 DUP2 JUMP JUMPDEST PUSH2 0xC35 DUP2 PUSH2 0xF0E JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD PUSH2 0xF31 DUP3 DUP10 PUSH2 0xF1A JUMP JUMPDEST PUSH2 0xF3E PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0xC49 JUMP JUMPDEST PUSH2 0xF4B PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0xF1A JUMP JUMPDEST PUSH2 0xF58 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0xF1A JUMP JUMPDEST PUSH2 0xF65 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0xF1A JUMP JUMPDEST PUSH2 0xF72 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0xF1A JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID 0xBC CREATE2 0x5F SGT PUSH18 0xEED7EDA89416C2984DA5475FCFF67E96FE8 0x5E JUMP 0xEE 0xD8 ADDMOD SSTORE SWAP11 MSTORE 0x22 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA7 0xB6 SWAP8 0x2B 0xCD DUP6 0xB0 0xB3 0xD2 0xBC DUP8 SWAP8 0x22 0x1F SIGNEXTEND 0xB4 0xAC 0xB9 0x4E 0xB4 SELFBALANCE 0xDC LOG1 0xDD 0xC9 0x5C 0xD8 PUSH30 0xA438F464736F6C6343000810003300000000000000000000000000000000 ","sourceMap":"251:2967:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2499:26:23;;;;;-1:-1:-1;;;;;2499:26:23;;;;;;;;;;:::i;:::-;;;;;;;;4198:74;;4242:30;4198:74;;;;;;;;;:::i;1751:31::-;;;;;;2850:34;;;;;;3954:80;;4001:33;3954:80;;748:963:22;;;;;;:::i;:::-;;:::i;:::-;;2954:35:23;;;;;;3427:31;;;;;;439:56;;482:13;439:56;;738:52;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1607:30::-;;;;;;272:38;;308:2;272:38;;633:29:22;;;;;;;;;;;;:::i;3864:84:23:-;;3913:35;3864:84;;3704:66;;3744:26;3704:66;;3464:138;;3507:95;3464:138;;1990:25;;;;;-1:-1:-1;;;;;1990:25:23;;;3051:34;;;;;;2392:41;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;4530:80::-;;4577:33;4530:80;;3622:76;;3667:31;3622:76;;535:44;;;;;;;;;;;;;;;-1:-1:-1;;;535:44:23;;;;;;;;;;;;:::i;3236:41::-;;;;;;:::i;:::-;;;;;;;;;;;;;;3151:31;;;;;;2153:34;;;;;-1:-1:-1;;;;;2153:34:23;;;2242:40;;;;;;:::i;:::-;;;;;;;;;;;;;;2067:33;;;;;-1:-1:-1;;;;;2067:33:23;;;4438:86;;4488:36;4438:86;;3776:82;;3824:34;3776:82;;4278:68;;4319:27;4278:68;;2631:32;;;;;-1:-1:-1;;;;;2631:32:23;;;952:27;;;;;;;;;4352:80;;4399:33;4352:80;;3283:138;;3326:95;3283:138;;4694:64;;4733:25;4694:64;;1456:30;;;;;;4040:82;;4088:34;4040:82;;1901:27;;;;;;4616:72;;4659:29;4616:72;;1717:1499:22;;;;;;:::i;:::-;;:::i;4128:64:23:-;;4167:25;4128:64;;1348:32;;;;;;2772:20;;;;;-1:-1:-1;;;2772:20:23;;;;;;345:39;;379:5;345:39;;4764:74;;4808:30;4764:74;;842:29;;;;;;:::i;:::-;;:::i;748:963:22:-;-1:-1:-1;;;;;822:25:22;;;;:57;;-1:-1:-1;;;;;;851:28:22;;874:4;851:28;822:57;818:108;;;902:13;;-1:-1:-1;;;902:13:22;;;;;;;;;;;818:108;981:5;-1:-1:-1;;;;;939:48:22;949:11;-1:-1:-1;;;;;939:28:22;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;939:48:22;;935:100;;1010:14;;-1:-1:-1;;;1010:14:22;;;;;;;;;;;935:100;-1:-1:-1;;;;;1048:23:22;;;;;;:10;:23;;;;;:34;:39;1044:100;;1110:23;;-1:-1:-1;;;1110:23:22;;;;;;;;;;;1044:100;1228:160;;;;;;;;1269:15;1228:160;;;;;;;;;;-1:-1:-1;1228:160:22;;;;;;;;;;;;-1:-1:-1;;;;;1202:23:22;;;;:10;:23;;;;;;;;:186;;;;;;;;;;;;;;;;;;;;;;;;;;1489:19;308:2:23;1522:30:22;;1518:109;;;1605:11;1568:12;1581:20;;;;:::i;:::-;;;1568:34;;;;;;;;:::i;:::-;;;;;;;;;:48;;;;;-1:-1:-1;;;;;1568:48:22;;;;;-1:-1:-1;;;;;1568:48:22;;;;;;1518:109;1666:11;-1:-1:-1;;;;;1650:54:22;-1:-1:-1;;;;;;;;;;;1679:24:22;1650:54;;;;;;:::i;:::-;;;;;;;;808:903;748:963;:::o;1717:1499::-;-1:-1:-1;;;;;1803:20:22;;;;;;:10;:20;;;;;:31;:36;;1799:92;;1862:18;;-1:-1:-1;;;1862:18:22;;;;;;;;;;;1799:92;-1:-1:-1;;;;;2002:20:22;;1972:12;2002:20;;;:10;:20;;;;;:32;;;:37;;;;:47;;;2044:5;2043:6;2002:47;1998:102;;;2072:17;;-1:-1:-1;;;2072:17:22;;;;;;;;;;;1998:102;-1:-1:-1;;;;;;2178:20:22;;;;;;:10;:20;;;;;:32;;;2256:15;:23;;2178:32;;;;2256:23;;2178:32;;2256:23;:::i;:::-;;;;;;;;2320:8;-1:-1:-1;;;;;2303:47:22;;2330:1;2333:4;2339:1;2342;2345;2348;2303:47;;;;;;;;;;;:::i;:::-;;;;;;;;2460:132;;;;;;;;-1:-1:-1;2460:132:22;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2437:20:22;;;;:10;:20;;;;;;;;:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2700:19;;:23;2696:356;;2744:6;2739:303;2760:12;:19;2756:23;;2739:303;;;2804:17;2824:12;2837:1;2824:15;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2824:15:22;;;;-1:-1:-1;2941:21:22;;;;2937:91;;3000:9;2986:8;2995:1;2986:11;;;;;;;;:::i;:::-;;;;;;:23;-1:-1:-1;;;;;2986:23:22;;;-1:-1:-1;;;;;2986:23:22;;;;;2937:91;-1:-1:-1;2781:3:22;;;;:::i;:::-;;;;2739:303;;;;2696:356;3117:23;;;;:12;;:23;;;;;:::i;:::-;;3172:8;-1:-1:-1;;;;;3156:53:22;-1:-1:-1;;;;;;;;;;;3182:26:22;3156:53;;;;;;:::i;:::-;;;;;;;;1789:1427;;1717:1499;;:::o;842:29:23:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;842:29:23;;-1:-1:-1;842:29:23;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;7:126:25;-1:-1:-1;;;;;73:54:25;;7:126::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;139:96;-1:-1:-1;;139:96:25:o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;496:2;481:18;;509:71;485:9;553:6;509:71;:::i;676:118::-;781:5;763:24;593:77;800:222;931:2;916:18;;944:71;920:9;988:6;944:71;:::i;1790:122::-;1863:24;1881:5;1863:24;:::i;:::-;1856:5;1853:35;1843:63;;1902:1;1899;1892:12;1843:63;1790:122;:::o;1918:139::-;1989:20;;2018:33;1989:20;2018:33;:::i;2063:329::-;2122:6;2171:2;2159:9;2150:7;2146:23;2142:32;2139:119;;;2177:79;251:2967:22;;;2177:79:25;2297:1;2322:53;2367:7;2347:9;2322:53;:::i;:::-;2312:63;2063:329;-1:-1:-1;;;;2063:329:25:o;2398:553::-;2613:3;2598:19;;2627:71;2602:9;2671:6;2627:71;:::i;:::-;2708:72;2776:2;2765:9;2761:18;2752:6;2708:72;:::i;:::-;2790;2858:2;2847:9;2843:18;2834:6;2790:72;:::i;:::-;2872;2940:2;2929:9;2925:18;2916:6;2872:72;:::i;:::-;2398:553;;;;;;;:::o;3023:142::-;3073:9;3106:53;3124:34;3133:24;3151:5;3133:24;:::i;:::-;659:5;593:77;3124:34;3106:53;:::i;3171:126::-;3221:9;3254:37;3285:5;3254:37;:::i;3303:140::-;3367:9;3400:37;3431:5;3400:37;:::i;3449:159::-;3550:51;3595:5;3550:51;:::i;3614:250::-;3759:2;3744:18;;3772:85;3748:9;3830:6;3772:85;:::i;3870:122::-;3961:5;3943:24;593:77;3998:139;4069:20;;4098:33;4069:20;4098:33;:::i;4143:329::-;4202:6;4251:2;4239:9;4230:7;4226:23;4222:32;4219:119;;;4257:79;251:2967:22;;;4257:79:25;4377:1;4402:53;4447:7;4427:9;4402:53;:::i;4574:109::-;4548:13;;4541:21;4655;4478:90;4689:210;4814:2;4799:18;;4827:65;4803:9;4865:6;4827:65;:::i;5185:246::-;5266:1;5276:113;5290:6;5287:1;5284:13;5276:113;;;5366:11;;;5360:18;5347:11;;;5340:39;5312:2;5305:10;5276:113;;;-1:-1:-1;;5423:1:25;5405:16;;5398:27;5185:246::o;5545:377::-;5633:3;5661:39;5694:5;4985:12;;4905:99;5661:39;5116:19;;;5168:4;5159:14;;5709:78;;5796:65;5854:6;5849:3;5842:4;5835:5;5831:16;5796:65;:::i;:::-;5529:2;5509:14;-1:-1:-1;;5505:28:25;5877:39;;;;;;-1:-1:-1;;5545:377:25:o;5928:313::-;6079:2;6092:47;;;6064:18;;6156:78;6064:18;6220:6;6156:78;:::i;:::-;6148:86;5928:313;-1:-1:-1;;;5928:313:25:o;6247:116::-;4548:13;;4541:21;6317;4478:90;6369:133;6437:20;;6466:30;6437:20;6466:30;:::i;6508:468::-;6573:6;6581;6630:2;6618:9;6609:7;6605:23;6601:32;6598:119;;;6636:79;251:2967:22;;;6636:79:25;6756:1;6781:53;6826:7;6806:9;6781:53;:::i;:::-;6771:63;;6727:117;6883:2;6909:50;6951:7;6942:6;6931:9;6927:22;6909:50;:::i;:::-;6899:60;;6854:115;6508:468;;;;;:::o;7590:143::-;7672:13;;7694:33;7672:13;7694:33;:::i;7739:351::-;7809:6;7858:2;7846:9;7837:7;7833:23;7829:32;7826:119;;;7864:79;251:2967:22;;;7864:79:25;7984:1;8009:64;8065:7;8045:9;8009:64;:::i;8096:180::-;-1:-1:-1;;;8141:1:25;8134:88;8241:4;8238:1;8231:15;8265:4;8262:1;8255:15;8282:233;8321:3;-1:-1:-1;;8383:5:25;8380:77;8377:103;;8460:18;;:::i;:::-;-1:-1:-1;8507:1:25;8496:13;;8282:233::o;8521:180::-;-1:-1:-1;;;8566:1:25;8559:88;8666:4;8663:1;8656:15;8690:4;8687:1;8680:15;8707:180;-1:-1:-1;;;8752:1:25;8745:88;8852:4;8849:1;8842:15;8876:4;8873:1;8866:15;8893:128;8989:1;8982:5;8979:12;8969:46;;8995:18;;:::i;9027:157::-;9116:5;9122:56;9116:5;9122:56;:::i;:::-;9027:157;;;:::o;9190:::-;9261:9;9294:47;9335:5;9294:47;:::i;9353:173::-;9461:58;9513:5;9461:58;:::i;9532:264::-;9684:2;9669:18;;9697:92;9673:9;9762:6;9697:92;:::i;9802:194::-;9933:9;;;9955:11;;;9952:37;;;9969:18;;:::i;10093:158::-;10151:9;10184:61;10202:42;10237:5;10202:42;593:77;10257:147;10352:45;10391:5;10352:45;:::i;10410:855::-;10721:3;10706:19;;10735:79;10710:9;10787:6;10735:79;:::i;:::-;10824:72;10892:2;10881:9;10877:18;10868:6;10824:72;:::i;:::-;10906:80;10982:2;10971:9;10967:18;10958:6;10906:80;:::i;:::-;10996;11072:2;11061:9;11057:18;11048:6;10996:80;:::i;:::-;11086:81;11162:3;11151:9;11147:19;11138:6;11086:81;:::i;:::-;11177;11253:3;11242:9;11238:19;11229:6;11177:81;:::i;:::-;10410:855;;;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"810200","executionCost":"infinite","totalCost":"infinite"},"external":{"ACCOUNTANT_MANAGER()":"690","ADD_STRATEGY_MANAGER()":"954","API_VERSION()":"infinite","ASSET()":"infinite","DEBT_MANAGER()":"998","DEBT_PURCHASER()":"888","DEPOSIT_LIMIT_MANAGER()":"866","DOMAIN_SEPARATOR()":"2504","DOMAIN_TYPE_HASH()":"976","EMERGENCY_MANAGER()":"1218","FORCE_REVOKE_MANAGER()":"668","MAX_BPS()":"1196","MAX_BPS_EXTENDED()":"426","MAX_DEBT_MANAGER()":"1086","MAX_QUEUE()":"492","MINIMUM_IDLE_MANAGER()":"338","PERMIT_TYPE_HASH()":"580","PROFIT_UNLOCK_MANAGER()":"1042","QUEUE_MANAGER()":"558","REPORTING_MANAGER()":"272","REVOKE_STRATEGY_MANAGER()":"844","ROLE_MANAGER()":"1130","WITHDRAW_LIMIT_MANAGER()":"536","accountant()":"infinite","addStrategy(address)":"infinite","defaultQueue(uint256)":"infinite","depositLimit()":"3164","depositLimitModule()":"infinite","fullProfitUnlockDate()":"2482","futureRoleManager()":"infinite","lastProfitUpdate()":"2856","minimumTotalIdle()":"2394","nonces(address)":"infinite","openRoles(bytes32)":"infinite","profitMaxUnlockTime()":"2416","profitUnlockingRate()":"2724","revokeStrategy(address,bool)":"infinite","roleManager()":"infinite","roles(address)":"infinite","shutdown()":"3306","strategies(address)":"infinite","totalDebtAmount()":"3120","totalIdleAmount()":"2570","totalSupplyAmount()":"3252","useDefaultQueue()":"3047","withdrawLimitModule()":"infinite"}},"methodIdentifiers":{"ACCOUNTANT_MANAGER()":"652da324","ADD_STRATEGY_MANAGER()":"c065ca07","API_VERSION()":"77e3b267","ASSET()":"4800d97f","DEBT_MANAGER()":"c8d74b60","DEBT_PURCHASER()":"ab5b4d49","DEPOSIT_LIMIT_MANAGER()":"a98222c4","DOMAIN_SEPARATOR()":"3644e515","DOMAIN_TYPE_HASH()":"c0993eea","EMERGENCY_MANAGER()":"fec61f06","FORCE_REVOKE_MANAGER()":"5bf6b4fb","MAX_BPS()":"fd967f47","MAX_BPS_EXTENDED()":"36fba084","MAX_DEBT_MANAGER()":"f1daeba8","MAX_QUEUE()":"3f7b5e40","MINIMUM_IDLE_MANAGER()":"0ad283d0","PERMIT_TYPE_HASH()":"4d4bb197","PROFIT_UNLOCK_MANAGER()":"d4ae064f","QUEUE_MANAGER()":"4cfe51dc","REPORTING_MANAGER()":"03dcd12c","REVOKE_STRATEGY_MANAGER()":"9f3988f3","ROLE_MANAGER()":"f5b944eb","WITHDRAW_LIMIT_MANAGER()":"4ce1d38a","accountant()":"4fb3ccc5","addStrategy(address)":"223e5479","defaultQueue(uint256)":"ff1e7f08","depositLimit()":"ecf70858","depositLimitModule()":"9e34e348","fullProfitUnlockDate()":"2d632692","futureRoleManager()":"b3c187f2","lastProfitUpdate()":"8afca8f0","minimumTotalIdle()":"0835a3fc","nonces(address)":"7ecebe00","openRoles(bytes32)":"53a66132","profitMaxUnlockTime()":"0952864e","profitUnlockingRate()":"5141eebb","revokeStrategy(address,bool)":"f42c77ae","roleManager()":"00435da5","roles(address)":"99374642","shutdown()":"fc0e74d1","strategies(address)":"39ebf823","totalDebtAmount()":"c8dffa95","totalIdleAmount()":"3cd7b5ab","totalSupplyAmount()":"f828f50b","useDefaultQueue()":"bbe4eb49","withdrawLimitModule()":"91986003"}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_asset\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InactiveStrategy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAsset\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyAlreadyActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyHasDebt\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DebtPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentDebt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDebt\",\"type\":\"uint256\"}],\"name\":\"DebtUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"RoleSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"enum RoleStatusChange\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"RoleStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Shutdown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum StrategyChangeType\",\"name\":\"changeType\",\"type\":\"uint8\"}],\"name\":\"StrategyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gain\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loss\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentDebt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolFees\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalFees\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalRefunds\",\"type\":\"uint256\"}],\"name\":\"StrategyReported\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"accountant\",\"type\":\"address\"}],\"name\":\"UpdateAccountant\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"newDefaultQueue\",\"type\":\"address[]\"}],\"name\":\"UpdateDefaultQueue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositLimit\",\"type\":\"uint256\"}],\"name\":\"UpdateDepositLimit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositLimitModule\",\"type\":\"address\"}],\"name\":\"UpdateDepositLimitModule\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumTotalIdle\",\"type\":\"uint256\"}],\"name\":\"UpdateMinimumTotalIdle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"profitMaxUnlockTime\",\"type\":\"uint256\"}],\"name\":\"UpdateProfitMaxUnlockTime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"roleManager\",\"type\":\"address\"}],\"name\":\"UpdateRoleManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"useDefaultQueue\",\"type\":\"bool\"}],\"name\":\"UpdateUseDefaultQueue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"withdrawLimitModule\",\"type\":\"address\"}],\"name\":\"UpdateWithdrawLimitModule\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDebt\",\"type\":\"uint256\"}],\"name\":\"UpdatedMaxDebtForStrategy\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACCOUNTANT_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ADD_STRATEGY_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"API_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ASSET\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEBT_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEBT_PURCHASER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEPOSIT_LIMIT_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EMERGENCY_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FORCE_REVOKE_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_BPS_EXTENDED\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_DEBT_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_QUEUE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_IDLE_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROFIT_UNLOCK_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"QUEUE_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REPORTING_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REVOKE_STRATEGY_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROLE_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAW_LIMIT_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accountant\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newStrategy\",\"type\":\"address\"}],\"name\":\"addStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"defaultQueue\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositLimitModule\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fullProfitUnlockDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"futureRoleManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastProfitUpdate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumTotalIdle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"openRoles\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"profitMaxUnlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"profitUnlockingRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"}],\"name\":\"revokeStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"roleManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"roles\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shutdown\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"strategies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"activation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastReport\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDebtAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalIdleAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupplyAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"useDefaultQueue\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawLimitModule\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"STRATEGY MANAGEMENT\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StrategyManager.sol\":\"StrategyManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/Interfaces/IStrategy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.16;\\n\\ninterface IStrategy {\\n    function redeem(uint256 shares, address receiver, address owner) external returns (uint256);\\n    function deposit(uint256 assets, address receiver) external returns (uint256);\\n    function asset() external view returns (address);\\n    function balanceOf(address owner) external view returns (uint256);\\n    function maxDeposit(address receiver) external view returns (uint256);\\n    function totalAssets() external view returns (uint256);\\n    function convertToAssets(uint256 shares) external view returns (uint256);\\n    function convertToShares(uint256 assets) external view returns (uint256);\\n    function previewWithdraw(uint256 assets) external view returns (uint256);\\n    function maxRedeem(address owner) external view returns (uint256);\\n}\",\"keccak256\":\"0x4a4ac422957ef074941cce14aa4a41619eec52ffffcf5cc2d5fbbd07b8875554\",\"license\":\"GPL-3.0\"},\"contracts/Interfaces/IStrategyManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.16;\\n\\ninterface IStrategyManager {\\n    function addStrategy(address newStrategy) external;\\n    function revokeStrategy(address strategy, bool force) external;\\n}\",\"keccak256\":\"0x2305ec7d9d517661a568a2d29552e00521fe62c77d98682101aba0013ceff319\",\"license\":\"GPL-3.0\"},\"contracts/Interfaces/IVaultEvents.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL 3.0\\n// Copyright Fathom 2023\\n\\npragma solidity ^0.8.16;\\n\\nimport \\\"../VaultStructs.sol\\\";\\n\\ninterface IVaultEvents {\\n    // STRATEGY EVENTS\\n    event StrategyChanged(address indexed strategy, StrategyChangeType changeType);\\n    event StrategyReported(\\n        address indexed strategy,\\n        uint256 gain,\\n        uint256 loss,\\n        uint256 currentDebt,\\n        uint256 protocolFees,\\n        uint256 totalFees,\\n        uint256 totalRefunds\\n    );\\n    // DEBT MANAGEMENT EVENTS\\n    event DebtUpdated(\\n        address indexed strategy,\\n        uint256 currentDebt,\\n        uint256 newDebt\\n    );\\n    // ROLE UPDATES\\n    event RoleSet(address indexed account, bytes32 role);\\n    event RoleStatusChanged(bytes32 indexed role, RoleStatusChange indexed status);\\n    event UpdateRoleManager(address indexed roleManager);\\n\\n    event UpdateAccountant(address indexed accountant);\\n    event UpdateDefaultQueue(address[] newDefaultQueue);\\n    event UpdateUseDefaultQueue(bool useDefaultQueue);\\n    event UpdatedMaxDebtForStrategy(\\n        address indexed sender,\\n        address indexed strategy,\\n        uint256 newDebt\\n    );\\n    event UpdateDepositLimit(uint256 depositLimit);\\n    event UpdateMinimumTotalIdle(uint256 minimumTotalIdle);\\n    event UpdateProfitMaxUnlockTime(uint256 profitMaxUnlockTime);\\n    event DebtPurchased(address indexed strategy, uint256 amount);\\n    event Shutdown();\\n\\n    // STORAGE MANAGEMENT EVENTS\\n    event UpdateDepositLimitModule(address indexed depositLimitModule);\\n    event UpdateWithdrawLimitModule(address indexed withdrawLimitModule);\\n}\",\"keccak256\":\"0x809fab69d54383c6137fea5d99022f5c3773701f9c7ae46235ab354aaf5d0702\",\"license\":\"AGPL 3.0\"},\"contracts/StrategyManager.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\npragma solidity ^0.8.16;\\n\\nimport \\\"./VaultStorage.sol\\\";\\nimport \\\"./Interfaces/IVaultEvents.sol\\\";\\nimport \\\"./Interfaces/IStrategyManager.sol\\\";\\nimport \\\"./Interfaces/IStrategy.sol\\\";\\n\\n/**\\n@title STRATEGY MANAGEMENT\\n*/\\n\\ncontract StrategyManager is VaultStorage, IVaultEvents, IStrategyManager {\\n    // solhint-disable not-rely-on-time\\n    // solhint-disable var-name-mixedcase\\n\\n    error ZeroAddress();\\n    error InactiveStrategy();\\n    error InvalidAsset();\\n    error StrategyAlreadyActive();\\n    error StrategyHasDebt();\\n\\n    // IMMUTABLE\\n    // Address of the underlying token used by the vault\\n    IERC20 public immutable ASSET;\\n\\n    constructor(\\n        IERC20 _asset\\n    ) {\\n        ASSET = _asset;\\n    }\\n\\n\\n    function addStrategy(address newStrategy) external override {\\n        if (newStrategy == address(0) || newStrategy == address(this)) {\\n            revert ZeroAddress();\\n        }\\n        if (IStrategy(newStrategy).asset() != address(ASSET)) {\\n            revert InvalidAsset();\\n        }\\n        if (strategies[newStrategy].activation != 0) {\\n            revert StrategyAlreadyActive();\\n        }\\n\\n        // Add the new strategy to the mapping.\\n        strategies[newStrategy] = StrategyParams({\\n            activation: block.timestamp,\\n            lastReport: block.timestamp,\\n            currentDebt: 0,\\n            maxDebt: 0\\n        });\\n\\n        // If the default queue has space, add the strategy.\\n        uint256 defaultQueueLength = defaultQueue.length;\\n        if (defaultQueueLength < MAX_QUEUE) {\\n            defaultQueue[defaultQueueLength++] = newStrategy;\\n        }\\n        \\n        emit StrategyChanged(newStrategy, StrategyChangeType.ADDED);\\n    }\\n\\n    function revokeStrategy(address strategy, bool force) external override {\\n        if (strategies[strategy].activation == 0) {\\n            revert InactiveStrategy();\\n        }\\n        \\n        // If force revoking a strategy, it will cause a loss.\\n        uint256 loss = 0;\\n        if (strategies[strategy].currentDebt != 0 && !force) {\\n            revert StrategyHasDebt();\\n        }\\n\\n        // Vault realizes the full loss of outstanding debt.\\n        loss = strategies[strategy].currentDebt;\\n        // Adjust total vault debt.\\n        totalDebtAmount -= loss;\\n        \\n        emit StrategyReported(strategy, 0, loss, 0, 0, 0, 0);\\n\\n        // Set strategy params all back to 0 (WARNING: it can be re-added).\\n        strategies[strategy] = StrategyParams({\\n            activation: 0,\\n            lastReport: 0,\\n            currentDebt: 0,\\n            maxDebt: 0\\n        });\\n\\n        // Remove strategy if it is in the default queue.\\n        address[] memory newQueue;\\n        if (defaultQueue.length > 0) {\\n            for (uint i = 0; i < defaultQueue.length; i++) {\\n                address _strategy = defaultQueue[i];\\n                // Add all strategies to the new queue besides the one revoked.\\n                if (_strategy != strategy) {\\n                    newQueue[i] = _strategy;\\n                }\\n            }\\n        }\\n\\n        // Set the default queue to our updated queue.\\n        defaultQueue = newQueue;\\n\\n        emit StrategyChanged(strategy, StrategyChangeType.REVOKED);\\n    }\\n}\\n    \",\"keccak256\":\"0x3bd6f5487f03a94985658acc1cf7b0ed0c9a448a05d13a1b30465ed4ae9fabb2\",\"license\":\"GNU AGPLv3\"},\"contracts/VaultStorage.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL 3.0\\n// Copyright Fathom 2023\\n\\npragma solidity ^0.8.16;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./VaultStructs.sol\\\";\\n\\ncontract VaultStorage {\\n    // CONSTANTS\\n    // The max length the withdrawal queue can be.\\n    uint256 public constant MAX_QUEUE = 10;\\n    // 100% in Basis Points.\\n    uint256 public constant MAX_BPS = 10000;\\n    // Extended for profit locking calculations.\\n    uint256 public constant MAX_BPS_EXTENDED = 1000000000000;\\n    // The version of this vault.\\n    string public constant API_VERSION = \\\"1.0.0\\\";\\n\\n    address internal strategyManager;\\n\\n    // STORAGE\\n    // HashMap that records all the strategies that are allowed to receive assets from the vault.\\n    mapping(address => StrategyParams) public strategies;\\n\\n    // The current default withdrawal queue.\\n    address[] public defaultQueue;\\n\\n    // Should the vault use the default_queue regardless whats passed in.\\n    bool public useDefaultQueue;\\n\\n    // ERC20 - amount of shares per account\\n    mapping(address => uint256) internal _balanceOf;\\n    // ERC20 - owner -> (spender -> amount)\\n    mapping(address => mapping(address => uint256)) internal _allowance;\\n\\n    // Total amount of shares that are currently minted including those locked.\\n    // NOTE: To get the ERC20 compliant version use totalSupply().\\n    uint256 public totalSupplyAmount;\\n\\n    // Total amount of assets that has been deposited in strategies.\\n    uint256 public totalDebtAmount;\\n    // Current assets held in the vault contract. Replacing balanceOf(this) to avoid price_per_share manipulation.\\n    uint256 public totalIdleAmount;\\n    // Minimum amount of assets that should be kept in the vault contract to allow for fast, cheap redeems.\\n    uint256 public minimumTotalIdle;\\n    // Maximum amount of tokens that the vault can accept. If totalAssets > deposit_limit, deposits will revert.\\n    uint256 public depositLimit;\\n    // Contract that charges fees and can give refunds.\\n    address public accountant;\\n    // Contract to control the deposit limit.\\n    address public depositLimitModule;\\n    // Contract to control the withdraw limit.\\n    address public withdrawLimitModule;\\n\\n    // HashMap mapping addresses to their roles\\n    mapping(address => bytes32) public roles;\\n    // HashMap mapping roles to their permissioned state. If false, the role is not open to the public.\\n    mapping(bytes32 => bool) public openRoles;\\n\\n    // Address that can add and remove roles to addresses.\\n    address public roleManager;\\n    // Temporary variable to store the address of the next role_manager until the role is accepted.\\n    address public futureRoleManager;\\n\\n    // State of the vault - if set to true, only withdrawals will be available. It can't be reverted.\\n    bool public shutdown;\\n    // The amount of time profits will unlock over.\\n    uint256 public profitMaxUnlockTime;\\n    // The timestamp of when the current unlocking period ends.\\n    uint256 public fullProfitUnlockDate;\\n    // The per second rate at which profit will unlock.\\n    uint256 public profitUnlockingRate;\\n    // Last timestamp of the most recent profitable report.\\n    uint256 public lastProfitUpdate;\\n\\n    // EIP-2612 permit() nonces and typehashes\\n    mapping(address => uint256) public nonces;\\n    bytes32 public constant DOMAIN_TYPE_HASH = keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\");\\n    bytes32 public DOMAIN_SEPARATOR;\\n    bytes32 public constant PERMIT_TYPE_HASH = keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\");\\n\\n    // Roles\\n    bytes32 public constant ACCOUNTANT_MANAGER = keccak256(\\\"ACCOUNTANT_MANAGER\\\");\\n    bytes32 public constant QUEUE_MANAGER = keccak256(\\\"QUEUE_MANAGER\\\");\\n    bytes32 public constant DEPOSIT_LIMIT_MANAGER = keccak256(\\\"DEPOSIT_LIMIT_MANAGER\\\");\\n    bytes32 public constant WITHDRAW_LIMIT_MANAGER = keccak256(\\\"WITHDRAW_LIMIT_MANAGER\\\");\\n    bytes32 public constant MINIMUM_IDLE_MANAGER = keccak256(\\\"MINIMUM_IDLE_MANAGER\\\");\\n    bytes32 public constant PROFIT_UNLOCK_MANAGER = keccak256(\\\"PROFIT_UNLOCK_MANAGER\\\");\\n    bytes32 public constant ROLE_MANAGER = keccak256(\\\"ROLE_MANAGER\\\");\\n    bytes32 public constant REPORTING_MANAGER = keccak256(\\\"REPORTING_MANAGER\\\");\\n    bytes32 public constant DEBT_PURCHASER = keccak256(\\\"DEBT_PURCHASER\\\");\\n    bytes32 public constant ADD_STRATEGY_MANAGER = keccak256(\\\"ADD_STRATEGY_MANAGER\\\");\\n    bytes32 public constant REVOKE_STRATEGY_MANAGER = keccak256(\\\"REVOKE_STRATEGY_MANAGER\\\");\\n    bytes32 public constant FORCE_REVOKE_MANAGER = keccak256(\\\"FORCE_REVOKE_MANAGER\\\");\\n    bytes32 public constant MAX_DEBT_MANAGER = keccak256(\\\"MAX_DEBT_MANAGER\\\");\\n    bytes32 public constant DEBT_MANAGER = keccak256(\\\"DEBT_MANAGER\\\");\\n    bytes32 public constant EMERGENCY_MANAGER = keccak256(\\\"EMERGENCY_MANAGER\\\");         \\n}\",\"keccak256\":\"0xa7029c463d9744c3cc4f9ae9c28c5586c90dc8b066f8a2fbf8624fc34add438c\",\"license\":\"AGPL 3.0\"},\"contracts/VaultStructs.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL 3.0\\n// Copyright Fathom 2023\\n\\npragma solidity ^0.8.16;\\n\\nstruct StrategyParams {\\n    uint256 activation;\\n    uint256 lastReport;\\n    uint256 currentDebt;\\n    uint256 maxDebt;\\n}\\n\\nstruct FeeAssessment {\\n    uint256 totalFees;\\n    uint256 totalRefunds;\\n    uint256 protocolFees;\\n    address protocolFeeRecipient;\\n}\\n\\nstruct ShareManagement {\\n    uint256 sharesToBurn;\\n    uint256 accountantFeesShares;\\n    uint256 protocolFeesShares;\\n}\\n\\nstruct WithdrawalState {\\n    uint256 requestedAssets;\\n    uint256 currTotalIdle;\\n    uint256 currTotalDebt;\\n    uint256 assetsNeeded;\\n    uint256 previousBalance;\\n    uint256 unrealisedLossesShare;\\n}\\n\\n// ENUMS\\nenum StrategyChangeType {\\n    ADDED, // Corresponds to the strategy being added.\\n    REVOKED // Corresponds to the strategy being revoked.\\n}\\n\\nenum RoleStatusChange {\\n    OPENED, // Corresponds to a role being opened.\\n    CLOSED // Corresponds to a role being closed.\\n}\\n\\nenum Rounding {\\n    ROUND_DOWN, // Corresponds to rounding down to the nearest whole number.\\n    ROUND_UP // Corresponds to rounding up to the nearest whole number.\\n}\",\"keccak256\":\"0x98a7128599e8f99c1be3515d79e4aff06cd0d604b6b10d13f87ffe1210330cc4\",\"license\":\"AGPL 3.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7573,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"strategyManager","offset":0,"slot":"0","type":"t_address"},{"astId":7578,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"strategies","offset":0,"slot":"1","type":"t_mapping(t_address,t_struct(StrategyParams)7734_storage)"},{"astId":7581,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"defaultQueue","offset":0,"slot":"2","type":"t_array(t_address)dyn_storage"},{"astId":7583,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"useDefaultQueue","offset":0,"slot":"3","type":"t_bool"},{"astId":7587,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"_balanceOf","offset":0,"slot":"4","type":"t_mapping(t_address,t_uint256)"},{"astId":7593,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"_allowance","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":7595,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"totalSupplyAmount","offset":0,"slot":"6","type":"t_uint256"},{"astId":7597,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"totalDebtAmount","offset":0,"slot":"7","type":"t_uint256"},{"astId":7599,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"totalIdleAmount","offset":0,"slot":"8","type":"t_uint256"},{"astId":7601,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"minimumTotalIdle","offset":0,"slot":"9","type":"t_uint256"},{"astId":7603,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"depositLimit","offset":0,"slot":"10","type":"t_uint256"},{"astId":7605,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"accountant","offset":0,"slot":"11","type":"t_address"},{"astId":7607,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"depositLimitModule","offset":0,"slot":"12","type":"t_address"},{"astId":7609,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"withdrawLimitModule","offset":0,"slot":"13","type":"t_address"},{"astId":7613,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"roles","offset":0,"slot":"14","type":"t_mapping(t_address,t_bytes32)"},{"astId":7617,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"openRoles","offset":0,"slot":"15","type":"t_mapping(t_bytes32,t_bool)"},{"astId":7619,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"roleManager","offset":0,"slot":"16","type":"t_address"},{"astId":7621,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"futureRoleManager","offset":0,"slot":"17","type":"t_address"},{"astId":7623,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"shutdown","offset":20,"slot":"17","type":"t_bool"},{"astId":7625,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"profitMaxUnlockTime","offset":0,"slot":"18","type":"t_uint256"},{"astId":7627,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"fullProfitUnlockDate","offset":0,"slot":"19","type":"t_uint256"},{"astId":7629,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"profitUnlockingRate","offset":0,"slot":"20","type":"t_uint256"},{"astId":7631,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"lastProfitUpdate","offset":0,"slot":"21","type":"t_uint256"},{"astId":7635,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"nonces","offset":0,"slot":"22","type":"t_mapping(t_address,t_uint256)"},{"astId":7642,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"DOMAIN_SEPARATOR","offset":0,"slot":"23","type":"t_bytes32"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bytes32)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(StrategyParams)7734_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct StrategyParams)","numberOfBytes":"32","value":"t_struct(StrategyParams)7734_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_bool)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => bool)","numberOfBytes":"32","value":"t_bool"},"t_struct(StrategyParams)7734_storage":{"encoding":"inplace","label":"struct StrategyParams","members":[{"astId":7727,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"activation","offset":0,"slot":"0","type":"t_uint256"},{"astId":7729,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"lastReport","offset":0,"slot":"1","type":"t_uint256"},{"astId":7731,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"currentDebt","offset":0,"slot":"2","type":"t_uint256"},{"astId":7733,"contract":"contracts/StrategyManager.sol:StrategyManager","label":"maxDebt","offset":0,"slot":"3","type":"t_uint256"}],"numberOfBytes":"128"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/VaultStorage.sol":{"VaultStorage":{"abi":[{"inputs":[],"name":"ACCOUNTANT_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ADD_STRATEGY_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"API_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEBT_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEBT_PURCHASER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEPOSIT_LIMIT_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_TYPE_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EMERGENCY_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FORCE_REVOKE_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_BPS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_BPS_EXTENDED","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_DEBT_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_QUEUE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINIMUM_IDLE_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERMIT_TYPE_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROFIT_UNLOCK_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"QUEUE_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REPORTING_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REVOKE_STRATEGY_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ROLE_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WITHDRAW_LIMIT_MANAGER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"accountant","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"defaultQueue","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"depositLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"depositLimitModule","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fullProfitUnlockDate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"futureRoleManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastProfitUpdate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minimumTotalIdle","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"openRoles","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"profitMaxUnlockTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"profitUnlockingRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"roleManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"roles","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"shutdown","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"strategies","outputs":[{"internalType":"uint256","name":"activation","type":"uint256"},{"internalType":"uint256","name":"lastReport","type":"uint256"},{"internalType":"uint256","name":"currentDebt","type":"uint256"},{"internalType":"uint256","name":"maxDebt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalDebtAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalIdleAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupplyAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"useDefaultQueue","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawLimitModule","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610886806100206000396000f3fe608060405234801561001057600080fd5b50600436106101f85760003560e01c8062435da5146101fd57806303dcd12c146102265780630835a3fc1461025a5780630952864e146102635780630ad283d01461026c5780632d632692146102935780633644e5151461029c57806336fba084146102a557806339ebf823146102b15780633cd7b5ab146102f75780633f7b5e40146103005780634ce1d38a146103085780634cfe51dc1461032f5780634d4bb197146103565780634fb3ccc51461037d5780635141eebb1461039057806353a66132146103995780635bf6b4fb146103c9578063652da324146103f057806377e3b267146104175780637ecebe00146104485780638afca8f014610468578063919860031461047157806399374642146104845780639e34e348146104a45780639f3988f3146104b7578063a98222c4146104de578063ab5b4d4914610505578063b3c187f21461052c578063bbe4eb491461053f578063c065ca071461054c578063c0993eea14610573578063c8d74b601461059a578063c8dffa95146105c1578063d4ae064f146105ca578063ecf70858146105f1578063f1daeba8146105fa578063f5b944eb14610621578063f828f50b14610648578063fc0e74d114610651578063fd967f4714610665578063fec61f061461066e578063ff1e7f0814610695575b600080fd5b601054610210906001600160a01b031681565b60405161021d91906106ef565b60405180910390f35b61024d7f633076a97f32ae349b28772e7b1483f67a926f150cbc501d02bdbd77389325ab81565b60405161021d9190610703565b61024d60095481565b61024d60125481565b61024d7fc723f4dd6268e1c374639e36d629c765285ee7003913389d582c300f186dde9781565b61024d60135481565b61024d60175481565b61024d64e8d4a5100081565b6102e76102bf366004610733565b6001602081905260009182526040909120805491810154600282015460039092015490919084565b60405161021d949392919061075c565b61024d60085481565b61024d600a81565b61024d7f69d1171ac0a63777a6733cda21aec9ed3d48a4fd11f273c934a691dec5e5589c81565b61024d7f862f91c9d89d6135b19873b921c90b702cb2e175c371b8430026b9577e69111981565b61024d7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b600b54610210906001600160a01b031681565b61024d60145481565b6103bc6103a73660046107ab565b600f6020526000908152604090205460ff1681565b60405161021d91906107d4565b61024d7fea672c1c09cd95c51af9509f646f3615ff0071aae8652bd821471ee9037fd72c81565b61024d7fcd9f023a942ee35097ead74b2505bea9f2c5d47465db92dd195cf7f01a41cfe181565b61043b604051806040016040528060058152602001640312e302e360dc1b81525081565b60405161021d9190610838565b61024d610456366004610733565b60166020526000908152604090205481565b61024d60155481565b600d54610210906001600160a01b031681565b61024d610492366004610733565b600e6020526000908152604090205481565b600c54610210906001600160a01b031681565b61024d7f6f430d649a8640e48ff9bfbc353b3f99ed630163857821b3b4075e3871dafbf581565b61024d7f2f0dbbe8c2c0170206c50ec0cafa1c0dbd03e73e67c2a960178df30a0a30ee2e81565b61024d7f900d80def0427daac599092fcb16b21808ec68dd9a2e1eae89d1e8db2135737581565b601154610210906001600160a01b031681565b6003546103bc9060ff1681565b61024d7f2a0e761830cc61f2707ea7bb138008bf9dda7f7d34c77736d0a116604e95ea1681565b61024d7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81565b61024d7f152ebba56b9738ee3d8baea1b76fa31dcdcd79b1929bfea7d58ee12cfdf1a65381565b61024d60075481565b61024d7fa18eaea71a088b547b8c932b48861853b3434d9a3240b94466c607e28b69659581565b61024d600a5481565b61024d7f7cbb3cdf689b8ea3e9d265f66bc4e0a99069268217017d38d2a5a559abc6271981565b61024d7ff206625bad3d9112d5609b8d356e6fbd514cd1f69980d4ce2b3e6e68e1789ace81565b61024d60065481565b6011546103bc90600160a01b900460ff1681565b61024d61271081565b61024d7fd45f7ccff42f059d4e47c3f027c444272257266f7e88b981e142f0aa38fbfd7881565b6102106106a33660046107ab565b600281815481106106b357600080fd5b6000918252602090912001546001600160a01b0316905081565b60006001600160a01b0382165b92915050565b6106e9816106cd565b82525050565b602081016106da82846106e0565b806106e9565b602081016106da82846106fd565b61071a816106cd565b811461072557600080fd5b50565b80356106da81610711565b60006020828403121561074857610748600080fd5b60006107548484610728565b949350505050565b6080810161076a82876106fd565b61077760208301866106fd565b61078460408301856106fd565b61079160608301846106fd565b95945050505050565b8061071a565b80356106da8161079a565b6000602082840312156107c0576107c0600080fd5b600061075484846107a0565b8015156106e9565b602081016106da82846107cc565b60005b838110156107fd5781810151838201526020016107e5565b50506000910152565b6000610810825190565b8084526020840193506108278185602086016107e2565b601f01601f19169290920192915050565b602080825281016108498184610806565b939250505056fea2646970667358221220bd9e88439ec35b7c07157a364bc5019ec4ac28715428aa84c7fd965b9869625564736f6c63430008100033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x886 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x435DA5 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x3DCD12C EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x835A3FC EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x952864E EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xAD283D0 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x2D632692 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x36FBA084 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x39EBF823 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x3CD7B5AB EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x3F7B5E40 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x4CE1D38A EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x4CFE51DC EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x4D4BB197 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x4FB3CCC5 EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0x5141EEBB EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x53A66132 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x5BF6B4FB EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0x652DA324 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0x77E3B267 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x8AFCA8F0 EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0x91986003 EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x99374642 EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0x9E34E348 EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0x9F3988F3 EQ PUSH2 0x4B7 JUMPI DUP1 PUSH4 0xA98222C4 EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0xAB5B4D49 EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0xB3C187F2 EQ PUSH2 0x52C JUMPI DUP1 PUSH4 0xBBE4EB49 EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0xC065CA07 EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0xC0993EEA EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0xC8D74B60 EQ PUSH2 0x59A JUMPI DUP1 PUSH4 0xC8DFFA95 EQ PUSH2 0x5C1 JUMPI DUP1 PUSH4 0xD4AE064F EQ PUSH2 0x5CA JUMPI DUP1 PUSH4 0xECF70858 EQ PUSH2 0x5F1 JUMPI DUP1 PUSH4 0xF1DAEBA8 EQ PUSH2 0x5FA JUMPI DUP1 PUSH4 0xF5B944EB EQ PUSH2 0x621 JUMPI DUP1 PUSH4 0xF828F50B EQ PUSH2 0x648 JUMPI DUP1 PUSH4 0xFC0E74D1 EQ PUSH2 0x651 JUMPI DUP1 PUSH4 0xFD967F47 EQ PUSH2 0x665 JUMPI DUP1 PUSH4 0xFEC61F06 EQ PUSH2 0x66E JUMPI DUP1 PUSH4 0xFF1E7F08 EQ PUSH2 0x695 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x210 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x6EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24D PUSH32 0x633076A97F32AE349B28772E7B1483F67A926F150CBC501D02BDBD77389325AB DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x703 JUMP JUMPDEST PUSH2 0x24D PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0xC723F4DD6268E1C374639E36D629C765285EE7003913389D582C300F186DDE97 DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH5 0xE8D4A51000 DUP2 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x733 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x75C JUMP JUMPDEST PUSH2 0x24D PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH1 0xA DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0x69D1171AC0A63777A6733CDA21AEC9ED3D48A4FD11F273C934A691DEC5E5589C DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0x862F91C9D89D6135B19873B921C90B702CB2E175C371B8430026B9577E691119 DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x210 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AB JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0x24D PUSH32 0xEA672C1C09CD95C51AF9509F646F3615FF0071AAE8652BD821471EE9037FD72C DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0xCD9F023A942EE35097EAD74B2505BEA9F2C5D47465DB92DD195CF7F01A41CFE1 DUP2 JUMP JUMPDEST PUSH2 0x43B PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x312E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x838 JUMP JUMPDEST PUSH2 0x24D PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x733 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x210 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH2 0x492 CALLDATASIZE PUSH1 0x4 PUSH2 0x733 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x210 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0x6F430D649A8640E48FF9BFBC353B3F99ED630163857821B3B4075E3871DAFBF5 DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0x2F0DBBE8C2C0170206C50EC0CAFA1C0DBD03E73E67C2A960178DF30A0A30EE2E DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0x900D80DEF0427DAAC599092FCB16B21808EC68DD9A2E1EAE89D1E8DB21357375 DUP2 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x210 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x3BC SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0x2A0E761830CC61F2707EA7BB138008BF9DDA7F7D34C77736D0A116604E95EA16 DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0x152EBBA56B9738EE3D8BAEA1B76FA31DCDCD79B1929BFEA7D58EE12CFDF1A653 DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0xA18EAEA71A088B547B8C932B48861853B3434D9A3240B94466C607E28B696595 DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0x7CBB3CDF689B8EA3E9D265F66BC4E0A99069268217017D38D2A5A559ABC62719 DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0xF206625BAD3D9112D5609B8D356E6FBD514CD1F69980D4CE2B3E6E68E1789ACE DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x3BC SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0xD45F7CCFF42F059D4E47C3F027C444272257266F7E88B981E142F0AA38FBFD78 DUP2 JUMP JUMPDEST PUSH2 0x210 PUSH2 0x6A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AB JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6E9 DUP2 PUSH2 0x6CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x6DA DUP3 DUP5 PUSH2 0x6E0 JUMP JUMPDEST DUP1 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x6DA DUP3 DUP5 PUSH2 0x6FD JUMP JUMPDEST PUSH2 0x71A DUP2 PUSH2 0x6CD JUMP JUMPDEST DUP2 EQ PUSH2 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x6DA DUP2 PUSH2 0x711 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH2 0x748 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x754 DUP5 DUP5 PUSH2 0x728 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x76A DUP3 DUP8 PUSH2 0x6FD JUMP JUMPDEST PUSH2 0x777 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x6FD JUMP JUMPDEST PUSH2 0x784 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x6FD JUMP JUMPDEST PUSH2 0x791 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x6FD JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x71A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x6DA DUP2 PUSH2 0x79A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7C0 JUMPI PUSH2 0x7C0 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x754 DUP5 DUP5 PUSH2 0x7A0 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x6DA DUP3 DUP5 PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7FD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7E5 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x810 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH2 0x827 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x849 DUP2 DUP5 PUSH2 0x806 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD SWAP15 DUP9 NUMBER SWAP15 0xC3 JUMPDEST PUSH29 0x7157A364BC5019EC4AC28715428AA84C7FD965B9869625564736F6C63 NUMBER STOP ADDMOD LT STOP CALLER ","sourceMap":"176:4674:23:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ACCOUNTANT_MANAGER_7652":{"entryPoint":null,"id":7652,"parameterSlots":0,"returnSlots":0},"@ADD_STRATEGY_MANAGER_7697":{"entryPoint":null,"id":7697,"parameterSlots":0,"returnSlots":0},"@API_VERSION_7571":{"entryPoint":null,"id":7571,"parameterSlots":0,"returnSlots":0},"@DEBT_MANAGER_7717":{"entryPoint":null,"id":7717,"parameterSlots":0,"returnSlots":0},"@DEBT_PURCHASER_7692":{"entryPoint":null,"id":7692,"parameterSlots":0,"returnSlots":0},"@DEPOSIT_LIMIT_MANAGER_7662":{"entryPoint":null,"id":7662,"parameterSlots":0,"returnSlots":0},"@DOMAIN_SEPARATOR_7642":{"entryPoint":null,"id":7642,"parameterSlots":0,"returnSlots":0},"@DOMAIN_TYPE_HASH_7640":{"entryPoint":null,"id":7640,"parameterSlots":0,"returnSlots":0},"@EMERGENCY_MANAGER_7722":{"entryPoint":null,"id":7722,"parameterSlots":0,"returnSlots":0},"@FORCE_REVOKE_MANAGER_7707":{"entryPoint":null,"id":7707,"parameterSlots":0,"returnSlots":0},"@MAX_BPS_7565":{"entryPoint":null,"id":7565,"parameterSlots":0,"returnSlots":0},"@MAX_BPS_EXTENDED_7568":{"entryPoint":null,"id":7568,"parameterSlots":0,"returnSlots":0},"@MAX_DEBT_MANAGER_7712":{"entryPoint":null,"id":7712,"parameterSlots":0,"returnSlots":0},"@MAX_QUEUE_7562":{"entryPoint":null,"id":7562,"parameterSlots":0,"returnSlots":0},"@MINIMUM_IDLE_MANAGER_7672":{"entryPoint":null,"id":7672,"parameterSlots":0,"returnSlots":0},"@PERMIT_TYPE_HASH_7647":{"entryPoint":null,"id":7647,"parameterSlots":0,"returnSlots":0},"@PROFIT_UNLOCK_MANAGER_7677":{"entryPoint":null,"id":7677,"parameterSlots":0,"returnSlots":0},"@QUEUE_MANAGER_7657":{"entryPoint":null,"id":7657,"parameterSlots":0,"returnSlots":0},"@REPORTING_MANAGER_7687":{"entryPoint":null,"id":7687,"parameterSlots":0,"returnSlots":0},"@REVOKE_STRATEGY_MANAGER_7702":{"entryPoint":null,"id":7702,"parameterSlots":0,"returnSlots":0},"@ROLE_MANAGER_7682":{"entryPoint":null,"id":7682,"parameterSlots":0,"returnSlots":0},"@WITHDRAW_LIMIT_MANAGER_7667":{"entryPoint":null,"id":7667,"parameterSlots":0,"returnSlots":0},"@accountant_7605":{"entryPoint":null,"id":7605,"parameterSlots":0,"returnSlots":0},"@defaultQueue_7581":{"entryPoint":null,"id":7581,"parameterSlots":0,"returnSlots":0},"@depositLimitModule_7607":{"entryPoint":null,"id":7607,"parameterSlots":0,"returnSlots":0},"@depositLimit_7603":{"entryPoint":null,"id":7603,"parameterSlots":0,"returnSlots":0},"@fullProfitUnlockDate_7627":{"entryPoint":null,"id":7627,"parameterSlots":0,"returnSlots":0},"@futureRoleManager_7621":{"entryPoint":null,"id":7621,"parameterSlots":0,"returnSlots":0},"@lastProfitUpdate_7631":{"entryPoint":null,"id":7631,"parameterSlots":0,"returnSlots":0},"@minimumTotalIdle_7601":{"entryPoint":null,"id":7601,"parameterSlots":0,"returnSlots":0},"@nonces_7635":{"entryPoint":null,"id":7635,"parameterSlots":0,"returnSlots":0},"@openRoles_7617":{"entryPoint":null,"id":7617,"parameterSlots":0,"returnSlots":0},"@profitMaxUnlockTime_7625":{"entryPoint":null,"id":7625,"parameterSlots":0,"returnSlots":0},"@profitUnlockingRate_7629":{"entryPoint":null,"id":7629,"parameterSlots":0,"returnSlots":0},"@roleManager_7619":{"entryPoint":null,"id":7619,"parameterSlots":0,"returnSlots":0},"@roles_7613":{"entryPoint":null,"id":7613,"parameterSlots":0,"returnSlots":0},"@shutdown_7623":{"entryPoint":null,"id":7623,"parameterSlots":0,"returnSlots":0},"@strategies_7578":{"entryPoint":null,"id":7578,"parameterSlots":0,"returnSlots":0},"@totalDebtAmount_7597":{"entryPoint":null,"id":7597,"parameterSlots":0,"returnSlots":0},"@totalIdleAmount_7599":{"entryPoint":null,"id":7599,"parameterSlots":0,"returnSlots":0},"@totalSupplyAmount_7595":{"entryPoint":null,"id":7595,"parameterSlots":0,"returnSlots":0},"@useDefaultQueue_7583":{"entryPoint":null,"id":7583,"parameterSlots":0,"returnSlots":0},"@withdrawLimitModule_7609":{"entryPoint":null,"id":7609,"parameterSlots":0,"returnSlots":0},"abi_decode_t_address":{"entryPoint":1832,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":1952,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1843,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":1963,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1760,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":1996,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":1789,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2054,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1775,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":2004,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":1795,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2104,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":1884,"id":null,"parameterSlots":5,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1741,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2018,"id":null,"parameterSlots":3,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":1809,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":1946,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5939:25","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:25","statements":[{"nodeType":"YulAssignment","src":"62:65:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:25"},"nodeType":"YulFunctionCall","src":"73:54:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:25"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:25","type":""}],"src":"7:126:25"},{"body":{"nodeType":"YulBlock","src":"184:51:25","statements":[{"nodeType":"YulAssignment","src":"194:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:25"},"nodeType":"YulFunctionCall","src":"205:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:25"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:25","type":""}],"src":"139:96:25"},{"body":{"nodeType":"YulBlock","src":"306:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:25"},"nodeType":"YulFunctionCall","src":"328:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:25"},"nodeType":"YulFunctionCall","src":"316:37:25"},"nodeType":"YulExpressionStatement","src":"316:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:25","type":""}],"src":"241:118:25"},{"body":{"nodeType":"YulBlock","src":"463:124:25","statements":[{"nodeType":"YulAssignment","src":"473:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:25"},"nodeType":"YulFunctionCall","src":"481:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:25"},"nodeType":"YulFunctionCall","src":"562:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:25"},"nodeType":"YulFunctionCall","src":"509:71:25"},"nodeType":"YulExpressionStatement","src":"509:71:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:25","type":""}],"src":"365:222:25"},{"body":{"nodeType":"YulBlock","src":"638:32:25","statements":[{"nodeType":"YulAssignment","src":"648:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"659:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"648:7:25"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"620:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"630:7:25","type":""}],"src":"593:77:25"},{"body":{"nodeType":"YulBlock","src":"741:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"758:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"781:5:25"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"763:17:25"},"nodeType":"YulFunctionCall","src":"763:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"751:6:25"},"nodeType":"YulFunctionCall","src":"751:37:25"},"nodeType":"YulExpressionStatement","src":"751:37:25"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"729:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"736:3:25","type":""}],"src":"676:118:25"},{"body":{"nodeType":"YulBlock","src":"898:124:25","statements":[{"nodeType":"YulAssignment","src":"908:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"920:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"931:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"916:3:25"},"nodeType":"YulFunctionCall","src":"916:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"908:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"988:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1001:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1012:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"997:3:25"},"nodeType":"YulFunctionCall","src":"997:17:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"944:43:25"},"nodeType":"YulFunctionCall","src":"944:71:25"},"nodeType":"YulExpressionStatement","src":"944:71:25"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"870:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"882:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"893:4:25","type":""}],"src":"800:222:25"},{"body":{"nodeType":"YulBlock","src":"1073:32:25","statements":[{"nodeType":"YulAssignment","src":"1083:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"1094:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1083:7:25"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1055:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1065:7:25","type":""}],"src":"1028:77:25"},{"body":{"nodeType":"YulBlock","src":"1176:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1193:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1216:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1198:17:25"},"nodeType":"YulFunctionCall","src":"1198:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1186:6:25"},"nodeType":"YulFunctionCall","src":"1186:37:25"},"nodeType":"YulExpressionStatement","src":"1186:37:25"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1164:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1171:3:25","type":""}],"src":"1111:118:25"},{"body":{"nodeType":"YulBlock","src":"1333:124:25","statements":[{"nodeType":"YulAssignment","src":"1343:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1355:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1366:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1351:3:25"},"nodeType":"YulFunctionCall","src":"1351:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1343:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1423:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1436:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1447:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1432:3:25"},"nodeType":"YulFunctionCall","src":"1432:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1379:43:25"},"nodeType":"YulFunctionCall","src":"1379:71:25"},"nodeType":"YulExpressionStatement","src":"1379:71:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1305:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1317:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1328:4:25","type":""}],"src":"1235:222:25"},{"body":{"nodeType":"YulBlock","src":"1503:35:25","statements":[{"nodeType":"YulAssignment","src":"1513:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1529:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1523:5:25"},"nodeType":"YulFunctionCall","src":"1523:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1513:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1496:6:25","type":""}],"src":"1463:75:25"},{"body":{"nodeType":"YulBlock","src":"1633:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1650:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1653:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1643:6:25"},"nodeType":"YulFunctionCall","src":"1643:12:25"},"nodeType":"YulExpressionStatement","src":"1643:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1544:117:25"},{"body":{"nodeType":"YulBlock","src":"1756:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1773:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1776:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1766:6:25"},"nodeType":"YulFunctionCall","src":"1766:12:25"},"nodeType":"YulExpressionStatement","src":"1766:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1667:117:25"},{"body":{"nodeType":"YulBlock","src":"1833:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"1890:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1899:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1902:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1892:6:25"},"nodeType":"YulFunctionCall","src":"1892:12:25"},"nodeType":"YulExpressionStatement","src":"1892:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1856:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1881:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1863:17:25"},"nodeType":"YulFunctionCall","src":"1863:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1853:2:25"},"nodeType":"YulFunctionCall","src":"1853:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1846:6:25"},"nodeType":"YulFunctionCall","src":"1846:43:25"},"nodeType":"YulIf","src":"1843:63:25"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1826:5:25","type":""}],"src":"1790:122:25"},{"body":{"nodeType":"YulBlock","src":"1970:87:25","statements":[{"nodeType":"YulAssignment","src":"1980:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2002:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1989:12:25"},"nodeType":"YulFunctionCall","src":"1989:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1980:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2045:5:25"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2018:26:25"},"nodeType":"YulFunctionCall","src":"2018:33:25"},"nodeType":"YulExpressionStatement","src":"2018:33:25"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1948:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"1956:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1964:5:25","type":""}],"src":"1918:139:25"},{"body":{"nodeType":"YulBlock","src":"2129:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"2175:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2177:77:25"},"nodeType":"YulFunctionCall","src":"2177:79:25"},"nodeType":"YulExpressionStatement","src":"2177:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2150:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2159:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2146:3:25"},"nodeType":"YulFunctionCall","src":"2146:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"2171:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2142:3:25"},"nodeType":"YulFunctionCall","src":"2142:32:25"},"nodeType":"YulIf","src":"2139:119:25"},{"nodeType":"YulBlock","src":"2268:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2283:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"2297:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2287:6:25","type":""}]},{"nodeType":"YulAssignment","src":"2312:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2347:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"2358:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2343:3:25"},"nodeType":"YulFunctionCall","src":"2343:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2367:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2322:20:25"},"nodeType":"YulFunctionCall","src":"2322:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2312:6:25"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2099:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2110:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2122:6:25","type":""}],"src":"2063:329:25"},{"body":{"nodeType":"YulBlock","src":"2580:371:25","statements":[{"nodeType":"YulAssignment","src":"2590:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2602:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2613:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2598:3:25"},"nodeType":"YulFunctionCall","src":"2598:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2590:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2671:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2684:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2695:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2680:3:25"},"nodeType":"YulFunctionCall","src":"2680:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2627:43:25"},"nodeType":"YulFunctionCall","src":"2627:71:25"},"nodeType":"YulExpressionStatement","src":"2627:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2752:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2765:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2776:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2761:3:25"},"nodeType":"YulFunctionCall","src":"2761:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2708:43:25"},"nodeType":"YulFunctionCall","src":"2708:72:25"},"nodeType":"YulExpressionStatement","src":"2708:72:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"2834:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2847:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2858:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2843:3:25"},"nodeType":"YulFunctionCall","src":"2843:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2790:43:25"},"nodeType":"YulFunctionCall","src":"2790:72:25"},"nodeType":"YulExpressionStatement","src":"2790:72:25"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"2916:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2929:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2940:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2925:3:25"},"nodeType":"YulFunctionCall","src":"2925:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2872:43:25"},"nodeType":"YulFunctionCall","src":"2872:72:25"},"nodeType":"YulExpressionStatement","src":"2872:72:25"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2528:9:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2540:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2548:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2556:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2564:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2575:4:25","type":""}],"src":"2398:553:25"},{"body":{"nodeType":"YulBlock","src":"3000:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"3057:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3066:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3069:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3059:6:25"},"nodeType":"YulFunctionCall","src":"3059:12:25"},"nodeType":"YulExpressionStatement","src":"3059:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3023:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3048:5:25"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"3030:17:25"},"nodeType":"YulFunctionCall","src":"3030:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3020:2:25"},"nodeType":"YulFunctionCall","src":"3020:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3013:6:25"},"nodeType":"YulFunctionCall","src":"3013:43:25"},"nodeType":"YulIf","src":"3010:63:25"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2993:5:25","type":""}],"src":"2957:122:25"},{"body":{"nodeType":"YulBlock","src":"3137:87:25","statements":[{"nodeType":"YulAssignment","src":"3147:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3169:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3156:12:25"},"nodeType":"YulFunctionCall","src":"3156:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3147:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3212:5:25"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"3185:26:25"},"nodeType":"YulFunctionCall","src":"3185:33:25"},"nodeType":"YulExpressionStatement","src":"3185:33:25"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3115:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"3123:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3131:5:25","type":""}],"src":"3085:139:25"},{"body":{"nodeType":"YulBlock","src":"3296:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"3342:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3344:77:25"},"nodeType":"YulFunctionCall","src":"3344:79:25"},"nodeType":"YulExpressionStatement","src":"3344:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3317:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"3326:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3313:3:25"},"nodeType":"YulFunctionCall","src":"3313:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"3338:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3309:3:25"},"nodeType":"YulFunctionCall","src":"3309:32:25"},"nodeType":"YulIf","src":"3306:119:25"},{"nodeType":"YulBlock","src":"3435:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"3450:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"3464:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3454:6:25","type":""}]},{"nodeType":"YulAssignment","src":"3479:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3514:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"3525:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3510:3:25"},"nodeType":"YulFunctionCall","src":"3510:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3534:7:25"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"3489:20:25"},"nodeType":"YulFunctionCall","src":"3489:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3479:6:25"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3266:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3277:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3289:6:25","type":""}],"src":"3230:329:25"},{"body":{"nodeType":"YulBlock","src":"3607:48:25","statements":[{"nodeType":"YulAssignment","src":"3617:32:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3642:5:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3635:6:25"},"nodeType":"YulFunctionCall","src":"3635:13:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3628:6:25"},"nodeType":"YulFunctionCall","src":"3628:21:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3617:7:25"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3589:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3599:7:25","type":""}],"src":"3565:90:25"},{"body":{"nodeType":"YulBlock","src":"3720:50:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3737:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3757:5:25"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3742:14:25"},"nodeType":"YulFunctionCall","src":"3742:21:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3730:6:25"},"nodeType":"YulFunctionCall","src":"3730:34:25"},"nodeType":"YulExpressionStatement","src":"3730:34:25"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3708:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3715:3:25","type":""}],"src":"3661:109:25"},{"body":{"nodeType":"YulBlock","src":"3868:118:25","statements":[{"nodeType":"YulAssignment","src":"3878:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3890:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3901:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3886:3:25"},"nodeType":"YulFunctionCall","src":"3886:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3878:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3952:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3965:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3976:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3961:3:25"},"nodeType":"YulFunctionCall","src":"3961:17:25"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3914:37:25"},"nodeType":"YulFunctionCall","src":"3914:65:25"},"nodeType":"YulExpressionStatement","src":"3914:65:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3840:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3852:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3863:4:25","type":""}],"src":"3776:210:25"},{"body":{"nodeType":"YulBlock","src":"4051:40:25","statements":[{"nodeType":"YulAssignment","src":"4062:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4078:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4072:5:25"},"nodeType":"YulFunctionCall","src":"4072:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4062:6:25"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4034:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4044:6:25","type":""}],"src":"3992:99:25"},{"body":{"nodeType":"YulBlock","src":"4193:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4210:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"4215:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4203:6:25"},"nodeType":"YulFunctionCall","src":"4203:19:25"},"nodeType":"YulExpressionStatement","src":"4203:19:25"},{"nodeType":"YulAssignment","src":"4231:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4250:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"4255:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4246:3:25"},"nodeType":"YulFunctionCall","src":"4246:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4231:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4165:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"4170:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4181:11:25","type":""}],"src":"4097:169:25"},{"body":{"nodeType":"YulBlock","src":"4334:184:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4344:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4353:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4348:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"4413:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4438:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"4443:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4434:3:25"},"nodeType":"YulFunctionCall","src":"4434:11:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4457:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"4462:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4453:3:25"},"nodeType":"YulFunctionCall","src":"4453:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4447:5:25"},"nodeType":"YulFunctionCall","src":"4447:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4427:6:25"},"nodeType":"YulFunctionCall","src":"4427:39:25"},"nodeType":"YulExpressionStatement","src":"4427:39:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4374:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"4377:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4371:2:25"},"nodeType":"YulFunctionCall","src":"4371:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4385:19:25","statements":[{"nodeType":"YulAssignment","src":"4387:15:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4396:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"4399:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4392:3:25"},"nodeType":"YulFunctionCall","src":"4392:10:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4387:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"4367:3:25","statements":[]},"src":"4363:113:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4496:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"4501:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4492:3:25"},"nodeType":"YulFunctionCall","src":"4492:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"4510:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4485:6:25"},"nodeType":"YulFunctionCall","src":"4485:27:25"},"nodeType":"YulExpressionStatement","src":"4485:27:25"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4316:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4321:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"4326:6:25","type":""}],"src":"4272:246:25"},{"body":{"nodeType":"YulBlock","src":"4572:54:25","statements":[{"nodeType":"YulAssignment","src":"4582:38:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4600:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"4607:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4596:3:25"},"nodeType":"YulFunctionCall","src":"4596:14:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4616:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4612:3:25"},"nodeType":"YulFunctionCall","src":"4612:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4592:3:25"},"nodeType":"YulFunctionCall","src":"4592:28:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4582:6:25"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4555:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4565:6:25","type":""}],"src":"4524:102:25"},{"body":{"nodeType":"YulBlock","src":"4724:285:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4734:53:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4781:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4748:32:25"},"nodeType":"YulFunctionCall","src":"4748:39:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4738:6:25","type":""}]},{"nodeType":"YulAssignment","src":"4796:78:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4862:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"4867:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4803:58:25"},"nodeType":"YulFunctionCall","src":"4803:71:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4796:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4922:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"4929:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4918:3:25"},"nodeType":"YulFunctionCall","src":"4918:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"4936:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"4941:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4883:34:25"},"nodeType":"YulFunctionCall","src":"4883:65:25"},"nodeType":"YulExpressionStatement","src":"4883:65:25"},{"nodeType":"YulAssignment","src":"4957:46:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4968:3:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4995:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4973:21:25"},"nodeType":"YulFunctionCall","src":"4973:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4964:3:25"},"nodeType":"YulFunctionCall","src":"4964:39:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4957:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4705:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4712:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4720:3:25","type":""}],"src":"4632:377:25"},{"body":{"nodeType":"YulBlock","src":"5133:195:25","statements":[{"nodeType":"YulAssignment","src":"5143:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5155:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5166:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5151:3:25"},"nodeType":"YulFunctionCall","src":"5151:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5143:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5190:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5201:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5186:3:25"},"nodeType":"YulFunctionCall","src":"5186:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5209:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"5215:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5205:3:25"},"nodeType":"YulFunctionCall","src":"5205:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5179:6:25"},"nodeType":"YulFunctionCall","src":"5179:47:25"},"nodeType":"YulExpressionStatement","src":"5179:47:25"},{"nodeType":"YulAssignment","src":"5235:86:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5307:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"5316:4:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5243:63:25"},"nodeType":"YulFunctionCall","src":"5243:78:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5235:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5105:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5117:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5128:4:25","type":""}],"src":"5015:313:25"},{"body":{"nodeType":"YulBlock","src":"5377:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"5434:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5443:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5446:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5436:6:25"},"nodeType":"YulFunctionCall","src":"5436:12:25"},"nodeType":"YulExpressionStatement","src":"5436:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5400:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5425:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5407:17:25"},"nodeType":"YulFunctionCall","src":"5407:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5397:2:25"},"nodeType":"YulFunctionCall","src":"5397:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5390:6:25"},"nodeType":"YulFunctionCall","src":"5390:43:25"},"nodeType":"YulIf","src":"5387:63:25"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5370:5:25","type":""}],"src":"5334:122:25"},{"body":{"nodeType":"YulBlock","src":"5514:87:25","statements":[{"nodeType":"YulAssignment","src":"5524:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5546:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5533:12:25"},"nodeType":"YulFunctionCall","src":"5533:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5524:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5589:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"5562:26:25"},"nodeType":"YulFunctionCall","src":"5562:33:25"},"nodeType":"YulExpressionStatement","src":"5562:33:25"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5492:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"5500:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5508:5:25","type":""}],"src":"5462:139:25"},{"body":{"nodeType":"YulBlock","src":"5673:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"5719:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5721:77:25"},"nodeType":"YulFunctionCall","src":"5721:79:25"},"nodeType":"YulExpressionStatement","src":"5721:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5694:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"5703:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5690:3:25"},"nodeType":"YulFunctionCall","src":"5690:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"5715:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5686:3:25"},"nodeType":"YulFunctionCall","src":"5686:32:25"},"nodeType":"YulIf","src":"5683:119:25"},{"nodeType":"YulBlock","src":"5812:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5827:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5841:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5831:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5856:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5891:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5902:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5887:3:25"},"nodeType":"YulFunctionCall","src":"5887:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5911:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5866:20:25"},"nodeType":"YulFunctionCall","src":"5866:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5856:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5643:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5654:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5666:6:25","type":""}],"src":"5607:329:25"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101f85760003560e01c8062435da5146101fd57806303dcd12c146102265780630835a3fc1461025a5780630952864e146102635780630ad283d01461026c5780632d632692146102935780633644e5151461029c57806336fba084146102a557806339ebf823146102b15780633cd7b5ab146102f75780633f7b5e40146103005780634ce1d38a146103085780634cfe51dc1461032f5780634d4bb197146103565780634fb3ccc51461037d5780635141eebb1461039057806353a66132146103995780635bf6b4fb146103c9578063652da324146103f057806377e3b267146104175780637ecebe00146104485780638afca8f014610468578063919860031461047157806399374642146104845780639e34e348146104a45780639f3988f3146104b7578063a98222c4146104de578063ab5b4d4914610505578063b3c187f21461052c578063bbe4eb491461053f578063c065ca071461054c578063c0993eea14610573578063c8d74b601461059a578063c8dffa95146105c1578063d4ae064f146105ca578063ecf70858146105f1578063f1daeba8146105fa578063f5b944eb14610621578063f828f50b14610648578063fc0e74d114610651578063fd967f4714610665578063fec61f061461066e578063ff1e7f0814610695575b600080fd5b601054610210906001600160a01b031681565b60405161021d91906106ef565b60405180910390f35b61024d7f633076a97f32ae349b28772e7b1483f67a926f150cbc501d02bdbd77389325ab81565b60405161021d9190610703565b61024d60095481565b61024d60125481565b61024d7fc723f4dd6268e1c374639e36d629c765285ee7003913389d582c300f186dde9781565b61024d60135481565b61024d60175481565b61024d64e8d4a5100081565b6102e76102bf366004610733565b6001602081905260009182526040909120805491810154600282015460039092015490919084565b60405161021d949392919061075c565b61024d60085481565b61024d600a81565b61024d7f69d1171ac0a63777a6733cda21aec9ed3d48a4fd11f273c934a691dec5e5589c81565b61024d7f862f91c9d89d6135b19873b921c90b702cb2e175c371b8430026b9577e69111981565b61024d7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b600b54610210906001600160a01b031681565b61024d60145481565b6103bc6103a73660046107ab565b600f6020526000908152604090205460ff1681565b60405161021d91906107d4565b61024d7fea672c1c09cd95c51af9509f646f3615ff0071aae8652bd821471ee9037fd72c81565b61024d7fcd9f023a942ee35097ead74b2505bea9f2c5d47465db92dd195cf7f01a41cfe181565b61043b604051806040016040528060058152602001640312e302e360dc1b81525081565b60405161021d9190610838565b61024d610456366004610733565b60166020526000908152604090205481565b61024d60155481565b600d54610210906001600160a01b031681565b61024d610492366004610733565b600e6020526000908152604090205481565b600c54610210906001600160a01b031681565b61024d7f6f430d649a8640e48ff9bfbc353b3f99ed630163857821b3b4075e3871dafbf581565b61024d7f2f0dbbe8c2c0170206c50ec0cafa1c0dbd03e73e67c2a960178df30a0a30ee2e81565b61024d7f900d80def0427daac599092fcb16b21808ec68dd9a2e1eae89d1e8db2135737581565b601154610210906001600160a01b031681565b6003546103bc9060ff1681565b61024d7f2a0e761830cc61f2707ea7bb138008bf9dda7f7d34c77736d0a116604e95ea1681565b61024d7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81565b61024d7f152ebba56b9738ee3d8baea1b76fa31dcdcd79b1929bfea7d58ee12cfdf1a65381565b61024d60075481565b61024d7fa18eaea71a088b547b8c932b48861853b3434d9a3240b94466c607e28b69659581565b61024d600a5481565b61024d7f7cbb3cdf689b8ea3e9d265f66bc4e0a99069268217017d38d2a5a559abc6271981565b61024d7ff206625bad3d9112d5609b8d356e6fbd514cd1f69980d4ce2b3e6e68e1789ace81565b61024d60065481565b6011546103bc90600160a01b900460ff1681565b61024d61271081565b61024d7fd45f7ccff42f059d4e47c3f027c444272257266f7e88b981e142f0aa38fbfd7881565b6102106106a33660046107ab565b600281815481106106b357600080fd5b6000918252602090912001546001600160a01b0316905081565b60006001600160a01b0382165b92915050565b6106e9816106cd565b82525050565b602081016106da82846106e0565b806106e9565b602081016106da82846106fd565b61071a816106cd565b811461072557600080fd5b50565b80356106da81610711565b60006020828403121561074857610748600080fd5b60006107548484610728565b949350505050565b6080810161076a82876106fd565b61077760208301866106fd565b61078460408301856106fd565b61079160608301846106fd565b95945050505050565b8061071a565b80356106da8161079a565b6000602082840312156107c0576107c0600080fd5b600061075484846107a0565b8015156106e9565b602081016106da82846107cc565b60005b838110156107fd5781810151838201526020016107e5565b50506000910152565b6000610810825190565b8084526020840193506108278185602086016107e2565b601f01601f19169290920192915050565b602080825281016108498184610806565b939250505056fea2646970667358221220bd9e88439ec35b7c07157a364bc5019ec4ac28715428aa84c7fd965b9869625564736f6c63430008100033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x435DA5 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x3DCD12C EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x835A3FC EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x952864E EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xAD283D0 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x2D632692 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x36FBA084 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x39EBF823 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x3CD7B5AB EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x3F7B5E40 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x4CE1D38A EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x4CFE51DC EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x4D4BB197 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x4FB3CCC5 EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0x5141EEBB EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x53A66132 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x5BF6B4FB EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0x652DA324 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0x77E3B267 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x8AFCA8F0 EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0x91986003 EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x99374642 EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0x9E34E348 EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0x9F3988F3 EQ PUSH2 0x4B7 JUMPI DUP1 PUSH4 0xA98222C4 EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0xAB5B4D49 EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0xB3C187F2 EQ PUSH2 0x52C JUMPI DUP1 PUSH4 0xBBE4EB49 EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0xC065CA07 EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0xC0993EEA EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0xC8D74B60 EQ PUSH2 0x59A JUMPI DUP1 PUSH4 0xC8DFFA95 EQ PUSH2 0x5C1 JUMPI DUP1 PUSH4 0xD4AE064F EQ PUSH2 0x5CA JUMPI DUP1 PUSH4 0xECF70858 EQ PUSH2 0x5F1 JUMPI DUP1 PUSH4 0xF1DAEBA8 EQ PUSH2 0x5FA JUMPI DUP1 PUSH4 0xF5B944EB EQ PUSH2 0x621 JUMPI DUP1 PUSH4 0xF828F50B EQ PUSH2 0x648 JUMPI DUP1 PUSH4 0xFC0E74D1 EQ PUSH2 0x651 JUMPI DUP1 PUSH4 0xFD967F47 EQ PUSH2 0x665 JUMPI DUP1 PUSH4 0xFEC61F06 EQ PUSH2 0x66E JUMPI DUP1 PUSH4 0xFF1E7F08 EQ PUSH2 0x695 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x210 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x6EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24D PUSH32 0x633076A97F32AE349B28772E7B1483F67A926F150CBC501D02BDBD77389325AB DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x703 JUMP JUMPDEST PUSH2 0x24D PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0xC723F4DD6268E1C374639E36D629C765285EE7003913389D582C300F186DDE97 DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH5 0xE8D4A51000 DUP2 JUMP JUMPDEST PUSH2 0x2E7 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x733 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x75C JUMP JUMPDEST PUSH2 0x24D PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH1 0xA DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0x69D1171AC0A63777A6733CDA21AEC9ED3D48A4FD11F273C934A691DEC5E5589C DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0x862F91C9D89D6135B19873B921C90B702CB2E175C371B8430026B9577E691119 DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x210 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x3A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AB JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0x24D PUSH32 0xEA672C1C09CD95C51AF9509F646F3615FF0071AAE8652BD821471EE9037FD72C DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0xCD9F023A942EE35097EAD74B2505BEA9F2C5D47465DB92DD195CF7F01A41CFE1 DUP2 JUMP JUMPDEST PUSH2 0x43B PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x312E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x838 JUMP JUMPDEST PUSH2 0x24D PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x733 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x210 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH2 0x492 CALLDATASIZE PUSH1 0x4 PUSH2 0x733 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x210 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0x6F430D649A8640E48FF9BFBC353B3F99ED630163857821B3B4075E3871DAFBF5 DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0x2F0DBBE8C2C0170206C50EC0CAFA1C0DBD03E73E67C2A960178DF30A0A30EE2E DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0x900D80DEF0427DAAC599092FCB16B21808EC68DD9A2E1EAE89D1E8DB21357375 DUP2 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x210 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x3BC SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0x2A0E761830CC61F2707EA7BB138008BF9DDA7F7D34C77736D0A116604E95EA16 DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0x152EBBA56B9738EE3D8BAEA1B76FA31DCDCD79B1929BFEA7D58EE12CFDF1A653 DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0xA18EAEA71A088B547B8C932B48861853B3434D9A3240B94466C607E28B696595 DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0x7CBB3CDF689B8EA3E9D265F66BC4E0A99069268217017D38D2A5A559ABC62719 DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0xF206625BAD3D9112D5609B8D356E6FBD514CD1F69980D4CE2B3E6E68E1789ACE DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x3BC SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH32 0xD45F7CCFF42F059D4E47C3F027C444272257266F7E88B981E142F0AA38FBFD78 DUP2 JUMP JUMPDEST PUSH2 0x210 PUSH2 0x6A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AB JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6E9 DUP2 PUSH2 0x6CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x6DA DUP3 DUP5 PUSH2 0x6E0 JUMP JUMPDEST DUP1 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x6DA DUP3 DUP5 PUSH2 0x6FD JUMP JUMPDEST PUSH2 0x71A DUP2 PUSH2 0x6CD JUMP JUMPDEST DUP2 EQ PUSH2 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x6DA DUP2 PUSH2 0x711 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH2 0x748 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x754 DUP5 DUP5 PUSH2 0x728 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x76A DUP3 DUP8 PUSH2 0x6FD JUMP JUMPDEST PUSH2 0x777 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x6FD JUMP JUMPDEST PUSH2 0x784 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x6FD JUMP JUMPDEST PUSH2 0x791 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x6FD JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x71A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x6DA DUP2 PUSH2 0x79A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7C0 JUMPI PUSH2 0x7C0 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x754 DUP5 DUP5 PUSH2 0x7A0 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x6DA DUP3 DUP5 PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7FD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7E5 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x810 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH2 0x827 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x849 DUP2 DUP5 PUSH2 0x806 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD SWAP15 DUP9 NUMBER SWAP15 0xC3 JUMPDEST PUSH29 0x7157A364BC5019EC4AC28715428AA84C7FD965B9869625564736F6C63 NUMBER STOP ADDMOD LT STOP CALLER ","sourceMap":"176:4674:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2499:26;;;;;-1:-1:-1;;;;;2499:26:23;;;;;;;;;;:::i;:::-;;;;;;;;4198:74;;4242:30;4198:74;;;;;;;;;:::i;1751:31::-;;;;;;2850:34;;;;;;3954:80;;4001:33;3954:80;;2954:35;;;;;;3427:31;;;;;;439:56;;482:13;439:56;;738:52;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1607:30::-;;;;;;272:38;;308:2;272:38;;3864:84;;3913:35;3864:84;;3704:66;;3744:26;3704:66;;3464:138;;3507:95;3464:138;;1990:25;;;;;-1:-1:-1;;;;;1990:25:23;;;3051:34;;;;;;2392:41;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;4530:80::-;;4577:33;4530:80;;3622:76;;3667:31;3622:76;;535:44;;;;;;;;;;;;;;;-1:-1:-1;;;535:44:23;;;;;;;;;;;;:::i;3236:41::-;;;;;;:::i;:::-;;;;;;;;;;;;;;3151:31;;;;;;2153:34;;;;;-1:-1:-1;;;;;2153:34:23;;;2242:40;;;;;;:::i;:::-;;;;;;;;;;;;;;2067:33;;;;;-1:-1:-1;;;;;2067:33:23;;;4438:86;;4488:36;4438:86;;3776:82;;3824:34;3776:82;;4278:68;;4319:27;4278:68;;2631:32;;;;;-1:-1:-1;;;;;2631:32:23;;;952:27;;;;;;;;;4352:80;;4399:33;4352:80;;3283:138;;3326:95;3283:138;;4694:64;;4733:25;4694:64;;1456:30;;;;;;4040:82;;4088:34;4040:82;;1901:27;;;;;;4616:72;;4659:29;4616:72;;4128:64;;4167:25;4128:64;;1348:32;;;;;;2772:20;;;;;-1:-1:-1;;;2772:20:23;;;;;;345:39;;379:5;345:39;;4764:74;;4808:30;4764:74;;842:29;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;842:29:23;;-1:-1:-1;842:29:23;:::o;139:96:25:-;176:7;-1:-1:-1;;;;;73:54:25;;205:24;194:35;139:96;-1:-1:-1;;139:96:25:o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;496:2;481:18;;509:71;485:9;553:6;509:71;:::i;676:118::-;781:5;763:24;593:77;800:222;931:2;916:18;;944:71;920:9;988:6;944:71;:::i;1790:122::-;1863:24;1881:5;1863:24;:::i;:::-;1856:5;1853:35;1843:63;;1902:1;1899;1892:12;1843:63;1790:122;:::o;1918:139::-;1989:20;;2018:33;1989:20;2018:33;:::i;2063:329::-;2122:6;2171:2;2159:9;2150:7;2146:23;2142:32;2139:119;;;2177:79;176:4674:23;;;2177:79:25;2297:1;2322:53;2367:7;2347:9;2322:53;:::i;:::-;2312:63;2063:329;-1:-1:-1;;;;2063:329:25:o;2398:553::-;2613:3;2598:19;;2627:71;2602:9;2671:6;2627:71;:::i;:::-;2708:72;2776:2;2765:9;2761:18;2752:6;2708:72;:::i;:::-;2790;2858:2;2847:9;2843:18;2834:6;2790:72;:::i;:::-;2872;2940:2;2929:9;2925:18;2916:6;2872:72;:::i;:::-;2398:553;;;;;;;:::o;2957:122::-;3048:5;3030:24;593:77;3085:139;3156:20;;3185:33;3156:20;3185:33;:::i;3230:329::-;3289:6;3338:2;3326:9;3317:7;3313:23;3309:32;3306:119;;;3344:79;176:4674:23;;;3344:79:25;3464:1;3489:53;3534:7;3514:9;3489:53;:::i;3661:109::-;3635:13;;3628:21;3742;3565:90;3776:210;3901:2;3886:18;;3914:65;3890:9;3952:6;3914:65;:::i;4272:246::-;4353:1;4363:113;4377:6;4374:1;4371:13;4363:113;;;4453:11;;;4447:18;4434:11;;;4427:39;4399:2;4392:10;4363:113;;;-1:-1:-1;;4510:1:25;4492:16;;4485:27;4272:246::o;4632:377::-;4720:3;4748:39;4781:5;4072:12;;3992:99;4748:39;4203:19;;;4255:4;4246:14;;4796:78;;4883:65;4941:6;4936:3;4929:4;4922:5;4918:16;4883:65;:::i;:::-;4616:2;4596:14;-1:-1:-1;;4592:28:25;4964:39;;;;;;-1:-1:-1;;4632:377:25:o;5015:313::-;5166:2;5179:47;;;5151:18;;5243:78;5151:18;5307:6;5243:78;:::i;:::-;5235:86;5015:313;-1:-1:-1;;;5015:313:25:o"},"gasEstimates":{"creation":{"codeDepositCost":"436400","executionCost":"474","totalCost":"436874"},"external":{"ACCOUNTANT_MANAGER()":"646","ADD_STRATEGY_MANAGER()":"910","API_VERSION()":"infinite","DEBT_MANAGER()":"954","DEBT_PURCHASER()":"844","DEPOSIT_LIMIT_MANAGER()":"822","DOMAIN_SEPARATOR()":"2482","DOMAIN_TYPE_HASH()":"932","EMERGENCY_MANAGER()":"1152","FORCE_REVOKE_MANAGER()":"624","MAX_BPS()":"1130","MAX_BPS_EXTENDED()":"404","MAX_DEBT_MANAGER()":"1042","MAX_QUEUE()":"470","MINIMUM_IDLE_MANAGER()":"338","PERMIT_TYPE_HASH()":"536","PROFIT_UNLOCK_MANAGER()":"998","QUEUE_MANAGER()":"514","REPORTING_MANAGER()":"272","REVOKE_STRATEGY_MANAGER()":"800","ROLE_MANAGER()":"1064","WITHDRAW_LIMIT_MANAGER()":"492","accountant()":"infinite","defaultQueue(uint256)":"infinite","depositLimit()":"3120","depositLimitModule()":"infinite","fullProfitUnlockDate()":"2460","futureRoleManager()":"infinite","lastProfitUpdate()":"2812","minimumTotalIdle()":"2394","nonces(address)":"infinite","openRoles(bytes32)":"infinite","profitMaxUnlockTime()":"2416","profitUnlockingRate()":"2680","roleManager()":"infinite","roles(address)":"infinite","shutdown()":"3240","strategies(address)":"infinite","totalDebtAmount()":"3076","totalIdleAmount()":"2548","totalSupplyAmount()":"3186","useDefaultQueue()":"3003","withdrawLimitModule()":"infinite"}},"methodIdentifiers":{"ACCOUNTANT_MANAGER()":"652da324","ADD_STRATEGY_MANAGER()":"c065ca07","API_VERSION()":"77e3b267","DEBT_MANAGER()":"c8d74b60","DEBT_PURCHASER()":"ab5b4d49","DEPOSIT_LIMIT_MANAGER()":"a98222c4","DOMAIN_SEPARATOR()":"3644e515","DOMAIN_TYPE_HASH()":"c0993eea","EMERGENCY_MANAGER()":"fec61f06","FORCE_REVOKE_MANAGER()":"5bf6b4fb","MAX_BPS()":"fd967f47","MAX_BPS_EXTENDED()":"36fba084","MAX_DEBT_MANAGER()":"f1daeba8","MAX_QUEUE()":"3f7b5e40","MINIMUM_IDLE_MANAGER()":"0ad283d0","PERMIT_TYPE_HASH()":"4d4bb197","PROFIT_UNLOCK_MANAGER()":"d4ae064f","QUEUE_MANAGER()":"4cfe51dc","REPORTING_MANAGER()":"03dcd12c","REVOKE_STRATEGY_MANAGER()":"9f3988f3","ROLE_MANAGER()":"f5b944eb","WITHDRAW_LIMIT_MANAGER()":"4ce1d38a","accountant()":"4fb3ccc5","defaultQueue(uint256)":"ff1e7f08","depositLimit()":"ecf70858","depositLimitModule()":"9e34e348","fullProfitUnlockDate()":"2d632692","futureRoleManager()":"b3c187f2","lastProfitUpdate()":"8afca8f0","minimumTotalIdle()":"0835a3fc","nonces(address)":"7ecebe00","openRoles(bytes32)":"53a66132","profitMaxUnlockTime()":"0952864e","profitUnlockingRate()":"5141eebb","roleManager()":"00435da5","roles(address)":"99374642","shutdown()":"fc0e74d1","strategies(address)":"39ebf823","totalDebtAmount()":"c8dffa95","totalIdleAmount()":"3cd7b5ab","totalSupplyAmount()":"f828f50b","useDefaultQueue()":"bbe4eb49","withdrawLimitModule()":"91986003"}},"metadata":"{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ACCOUNTANT_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ADD_STRATEGY_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"API_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEBT_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEBT_PURCHASER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEPOSIT_LIMIT_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EMERGENCY_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FORCE_REVOKE_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_BPS_EXTENDED\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_DEBT_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_QUEUE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_IDLE_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROFIT_UNLOCK_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"QUEUE_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REPORTING_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REVOKE_STRATEGY_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROLE_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAW_LIMIT_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accountant\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"defaultQueue\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositLimitModule\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fullProfitUnlockDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"futureRoleManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastProfitUpdate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumTotalIdle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"openRoles\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"profitMaxUnlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"profitUnlockingRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"roleManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"roles\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shutdown\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"strategies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"activation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastReport\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDebtAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalIdleAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupplyAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"useDefaultQueue\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawLimitModule\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VaultStorage.sol\":\"VaultStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":10},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/VaultStorage.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL 3.0\\n// Copyright Fathom 2023\\n\\npragma solidity ^0.8.16;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./VaultStructs.sol\\\";\\n\\ncontract VaultStorage {\\n    // CONSTANTS\\n    // The max length the withdrawal queue can be.\\n    uint256 public constant MAX_QUEUE = 10;\\n    // 100% in Basis Points.\\n    uint256 public constant MAX_BPS = 10000;\\n    // Extended for profit locking calculations.\\n    uint256 public constant MAX_BPS_EXTENDED = 1000000000000;\\n    // The version of this vault.\\n    string public constant API_VERSION = \\\"1.0.0\\\";\\n\\n    address internal strategyManager;\\n\\n    // STORAGE\\n    // HashMap that records all the strategies that are allowed to receive assets from the vault.\\n    mapping(address => StrategyParams) public strategies;\\n\\n    // The current default withdrawal queue.\\n    address[] public defaultQueue;\\n\\n    // Should the vault use the default_queue regardless whats passed in.\\n    bool public useDefaultQueue;\\n\\n    // ERC20 - amount of shares per account\\n    mapping(address => uint256) internal _balanceOf;\\n    // ERC20 - owner -> (spender -> amount)\\n    mapping(address => mapping(address => uint256)) internal _allowance;\\n\\n    // Total amount of shares that are currently minted including those locked.\\n    // NOTE: To get the ERC20 compliant version use totalSupply().\\n    uint256 public totalSupplyAmount;\\n\\n    // Total amount of assets that has been deposited in strategies.\\n    uint256 public totalDebtAmount;\\n    // Current assets held in the vault contract. Replacing balanceOf(this) to avoid price_per_share manipulation.\\n    uint256 public totalIdleAmount;\\n    // Minimum amount of assets that should be kept in the vault contract to allow for fast, cheap redeems.\\n    uint256 public minimumTotalIdle;\\n    // Maximum amount of tokens that the vault can accept. If totalAssets > deposit_limit, deposits will revert.\\n    uint256 public depositLimit;\\n    // Contract that charges fees and can give refunds.\\n    address public accountant;\\n    // Contract to control the deposit limit.\\n    address public depositLimitModule;\\n    // Contract to control the withdraw limit.\\n    address public withdrawLimitModule;\\n\\n    // HashMap mapping addresses to their roles\\n    mapping(address => bytes32) public roles;\\n    // HashMap mapping roles to their permissioned state. If false, the role is not open to the public.\\n    mapping(bytes32 => bool) public openRoles;\\n\\n    // Address that can add and remove roles to addresses.\\n    address public roleManager;\\n    // Temporary variable to store the address of the next role_manager until the role is accepted.\\n    address public futureRoleManager;\\n\\n    // State of the vault - if set to true, only withdrawals will be available. It can't be reverted.\\n    bool public shutdown;\\n    // The amount of time profits will unlock over.\\n    uint256 public profitMaxUnlockTime;\\n    // The timestamp of when the current unlocking period ends.\\n    uint256 public fullProfitUnlockDate;\\n    // The per second rate at which profit will unlock.\\n    uint256 public profitUnlockingRate;\\n    // Last timestamp of the most recent profitable report.\\n    uint256 public lastProfitUpdate;\\n\\n    // EIP-2612 permit() nonces and typehashes\\n    mapping(address => uint256) public nonces;\\n    bytes32 public constant DOMAIN_TYPE_HASH = keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\");\\n    bytes32 public DOMAIN_SEPARATOR;\\n    bytes32 public constant PERMIT_TYPE_HASH = keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\");\\n\\n    // Roles\\n    bytes32 public constant ACCOUNTANT_MANAGER = keccak256(\\\"ACCOUNTANT_MANAGER\\\");\\n    bytes32 public constant QUEUE_MANAGER = keccak256(\\\"QUEUE_MANAGER\\\");\\n    bytes32 public constant DEPOSIT_LIMIT_MANAGER = keccak256(\\\"DEPOSIT_LIMIT_MANAGER\\\");\\n    bytes32 public constant WITHDRAW_LIMIT_MANAGER = keccak256(\\\"WITHDRAW_LIMIT_MANAGER\\\");\\n    bytes32 public constant MINIMUM_IDLE_MANAGER = keccak256(\\\"MINIMUM_IDLE_MANAGER\\\");\\n    bytes32 public constant PROFIT_UNLOCK_MANAGER = keccak256(\\\"PROFIT_UNLOCK_MANAGER\\\");\\n    bytes32 public constant ROLE_MANAGER = keccak256(\\\"ROLE_MANAGER\\\");\\n    bytes32 public constant REPORTING_MANAGER = keccak256(\\\"REPORTING_MANAGER\\\");\\n    bytes32 public constant DEBT_PURCHASER = keccak256(\\\"DEBT_PURCHASER\\\");\\n    bytes32 public constant ADD_STRATEGY_MANAGER = keccak256(\\\"ADD_STRATEGY_MANAGER\\\");\\n    bytes32 public constant REVOKE_STRATEGY_MANAGER = keccak256(\\\"REVOKE_STRATEGY_MANAGER\\\");\\n    bytes32 public constant FORCE_REVOKE_MANAGER = keccak256(\\\"FORCE_REVOKE_MANAGER\\\");\\n    bytes32 public constant MAX_DEBT_MANAGER = keccak256(\\\"MAX_DEBT_MANAGER\\\");\\n    bytes32 public constant DEBT_MANAGER = keccak256(\\\"DEBT_MANAGER\\\");\\n    bytes32 public constant EMERGENCY_MANAGER = keccak256(\\\"EMERGENCY_MANAGER\\\");         \\n}\",\"keccak256\":\"0xa7029c463d9744c3cc4f9ae9c28c5586c90dc8b066f8a2fbf8624fc34add438c\",\"license\":\"AGPL 3.0\"},\"contracts/VaultStructs.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL 3.0\\n// Copyright Fathom 2023\\n\\npragma solidity ^0.8.16;\\n\\nstruct StrategyParams {\\n    uint256 activation;\\n    uint256 lastReport;\\n    uint256 currentDebt;\\n    uint256 maxDebt;\\n}\\n\\nstruct FeeAssessment {\\n    uint256 totalFees;\\n    uint256 totalRefunds;\\n    uint256 protocolFees;\\n    address protocolFeeRecipient;\\n}\\n\\nstruct ShareManagement {\\n    uint256 sharesToBurn;\\n    uint256 accountantFeesShares;\\n    uint256 protocolFeesShares;\\n}\\n\\nstruct WithdrawalState {\\n    uint256 requestedAssets;\\n    uint256 currTotalIdle;\\n    uint256 currTotalDebt;\\n    uint256 assetsNeeded;\\n    uint256 previousBalance;\\n    uint256 unrealisedLossesShare;\\n}\\n\\n// ENUMS\\nenum StrategyChangeType {\\n    ADDED, // Corresponds to the strategy being added.\\n    REVOKED // Corresponds to the strategy being revoked.\\n}\\n\\nenum RoleStatusChange {\\n    OPENED, // Corresponds to a role being opened.\\n    CLOSED // Corresponds to a role being closed.\\n}\\n\\nenum Rounding {\\n    ROUND_DOWN, // Corresponds to rounding down to the nearest whole number.\\n    ROUND_UP // Corresponds to rounding up to the nearest whole number.\\n}\",\"keccak256\":\"0x98a7128599e8f99c1be3515d79e4aff06cd0d604b6b10d13f87ffe1210330cc4\",\"license\":\"AGPL 3.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7573,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"strategyManager","offset":0,"slot":"0","type":"t_address"},{"astId":7578,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"strategies","offset":0,"slot":"1","type":"t_mapping(t_address,t_struct(StrategyParams)7734_storage)"},{"astId":7581,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"defaultQueue","offset":0,"slot":"2","type":"t_array(t_address)dyn_storage"},{"astId":7583,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"useDefaultQueue","offset":0,"slot":"3","type":"t_bool"},{"astId":7587,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"_balanceOf","offset":0,"slot":"4","type":"t_mapping(t_address,t_uint256)"},{"astId":7593,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"_allowance","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":7595,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"totalSupplyAmount","offset":0,"slot":"6","type":"t_uint256"},{"astId":7597,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"totalDebtAmount","offset":0,"slot":"7","type":"t_uint256"},{"astId":7599,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"totalIdleAmount","offset":0,"slot":"8","type":"t_uint256"},{"astId":7601,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"minimumTotalIdle","offset":0,"slot":"9","type":"t_uint256"},{"astId":7603,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"depositLimit","offset":0,"slot":"10","type":"t_uint256"},{"astId":7605,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"accountant","offset":0,"slot":"11","type":"t_address"},{"astId":7607,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"depositLimitModule","offset":0,"slot":"12","type":"t_address"},{"astId":7609,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"withdrawLimitModule","offset":0,"slot":"13","type":"t_address"},{"astId":7613,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"roles","offset":0,"slot":"14","type":"t_mapping(t_address,t_bytes32)"},{"astId":7617,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"openRoles","offset":0,"slot":"15","type":"t_mapping(t_bytes32,t_bool)"},{"astId":7619,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"roleManager","offset":0,"slot":"16","type":"t_address"},{"astId":7621,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"futureRoleManager","offset":0,"slot":"17","type":"t_address"},{"astId":7623,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"shutdown","offset":20,"slot":"17","type":"t_bool"},{"astId":7625,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"profitMaxUnlockTime","offset":0,"slot":"18","type":"t_uint256"},{"astId":7627,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"fullProfitUnlockDate","offset":0,"slot":"19","type":"t_uint256"},{"astId":7629,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"profitUnlockingRate","offset":0,"slot":"20","type":"t_uint256"},{"astId":7631,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"lastProfitUpdate","offset":0,"slot":"21","type":"t_uint256"},{"astId":7635,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"nonces","offset":0,"slot":"22","type":"t_mapping(t_address,t_uint256)"},{"astId":7642,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"DOMAIN_SEPARATOR","offset":0,"slot":"23","type":"t_bytes32"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bytes32)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(StrategyParams)7734_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct StrategyParams)","numberOfBytes":"32","value":"t_struct(StrategyParams)7734_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_bool)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => bool)","numberOfBytes":"32","value":"t_bool"},"t_struct(StrategyParams)7734_storage":{"encoding":"inplace","label":"struct StrategyParams","members":[{"astId":7727,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"activation","offset":0,"slot":"0","type":"t_uint256"},{"astId":7729,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"lastReport","offset":0,"slot":"1","type":"t_uint256"},{"astId":7731,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"currentDebt","offset":0,"slot":"2","type":"t_uint256"},{"astId":7733,"contract":"contracts/VaultStorage.sol:VaultStorage","label":"maxDebt","offset":0,"slot":"3","type":"t_uint256"}],"numberOfBytes":"128"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}